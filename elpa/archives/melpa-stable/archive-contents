(1
 (0blayout . [(1 0 2) nil "Layout grouping with ease" tar ((:url . "https://github.com/etu/0blayout-mode") (:commit . "b8bb44b5336965b5519b9a826a0f46f8ee31c471") (:revdesc . "1.0.2-0-gb8bb44b53369") (:keywords "convenience" "window-management"))])
 (2bit . [(1 0) ((emacs (24 3))) "Library for reading data from 2bit files" tar ((:url . "https://github.com/davep/2bit.el") (:commit . "1ce390483cf55a039a8bdad28d294ce068f31e75") (:revdesc . "1ce390483cf5") (:keywords "files" "data") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (a . [(1 0 0) ((emacs (25))) "Associative data structure functions" tar ((:url . "https://github.com/plexus/a.el") (:commit . "9ad2d18252b729174fe22ed0b2b7670c88f60c31") (:revdesc . "9ad2d18252b7") (:keywords "lisp") (:authors ("Arne Brasseur" . "arne@arnebrasseur.net")) (:maintainers ("Arne Brasseur" . "arne@arnebrasseur.net")) (:maintainer "Arne Brasseur" . "arne@arnebrasseur.net"))])
 (aa-edit-mode . [(0 0 2) ((emacs (24 3)) (navi2ch (2 0 0))) "Major mode for editing AA(S_JIS Art) and .mlt file" tar ((:url . "https://github.com/zonuexe/aa-edit-mode") (:commit . "2e56f3b627f0f19fbfce4968180b4d736f7afb5d") (:revdesc . "2e56f3b627f0") (:keywords "wp" "text" "shiftjis" "mlt" "yaruo") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (aas . [(1 1) ((emacs (26 3))) "Snippet expansions mid-typing" tar ((:url . "https://github.com/ymarco/auto-activating-snippets") (:commit . "5d83f76823bc0b86d5270277b57a627f3af427a1") (:revdesc . "5d83f76823bc") (:keywords "abbrev" "tools") (:authors ("Yoav Marco" . "yoavm448@gmail.com")) (:maintainers ("Yoav Marco" . "yoavm448@gmail.com")) (:maintainer "Yoav Marco" . "yoavm448@gmail.com"))])
 (abc-mode . [(20220713 1359) nil "Major mode for editing abc music files" tar ((:url . "https://github.com/mkjunker/abc-mode") (:commit . "45193b67508861cf77da7e76b71711855c002caa") (:revdesc . "45193b675088") (:keywords "local" "docs") (:authors ("Matthew K. Junker" . "junker@alum.mit.edu")) (:maintainers ("Matthew K. Junker" . "junker@alum.mit.edu")) (:maintainer "Matthew K. Junker" . "junker@alum.mit.edu"))])
 (abl-mode . [(0 9 4) nil "Python TDD minor mode" tar ((:url . "https://github.com/afroisalreadyinu/abl-mode") (:commit . "e918290b279112c367787ac704398d66759e5298") (:revdesc . "e918290b2791") (:authors ("Ulas Tuerkmen" . "ulas.tuerkmenatgmaildotcom")) (:maintainers ("Ulas Tuerkmen" . "ulas.tuerkmenatgmaildotcom")) (:maintainer "Ulas Tuerkmen" . "ulas.tuerkmenatgmaildotcom"))])
 (abridge-diff . [(0 1) nil "[No description available]" tar ((:url . "https://github.com/jdtsmith/abridge-diff") (:commit . "449f0d688f3ee44e53f3c9b62595022c5aad8cc7") (:revdesc . "449f0d688f3e"))])
 (abs-mode . [(1 7) ((emacs (26 1)) (erlang (2 8)) (maude-mode (0 3)) (flymake (1 0)) (yasnippet (0 14 0))) "Major mode for the modeling language Abs" tar ((:url . "https://github.com/abstools/abs-mode") (:commit . "0132032d9317861e63bea865746124accab9db83") (:revdesc . "v1.7-0-g0132032d9317") (:keywords "languages") (:authors ("Rudi Schlatte" . "rudi@constantly.at")) (:maintainers ("Rudi Schlatte" . "rudi@constantly.at")) (:maintainer "Rudi Schlatte" . "rudi@constantly.at"))])
 (abyss-theme . [(0 7) ((emacs (24))) "A dark theme with contrasting colours" tar ((:url . "https://github.com/mgrbyte/emacs-abyss-theme") (:commit . "18791c6e8d9cc2b4815c9f08627a2e94fc0eeb14") (:revdesc . "0.7-0-g18791c6e8d9c") (:keywords "theme" "dark" "contrasting colours") (:authors ("Matt Russell" . "matt@mgrbyte.co.uk")) (:maintainers ("Matt Russell" . "matt@mgrbyte.co.uk")) (:maintainer "Matt Russell" . "matt@mgrbyte.co.uk"))])
 (ac-alchemist . [(0 1) ((auto-complete (1 5 0)) (alchemist (1 3 1)) (cl-lib (0 5))) "Auto-complete source for alchemist" tar ((:url . "https://github.com/emacsorphanage/ac-alchemist") (:commit . "31114f3e1e7cc1e101d0b81819d7876d8861df92") (:revdesc . "31114f3e1e7c") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (ac-capf . [(0 1) ((auto-complete (1 4)) (cl-lib (0 5))) "Auto-complete source with completion-at-point" tar ((:url . "https://github.com/emacsorphanage/ac-capf") (:commit . "17571dba0a8f98111f2ab758e9bea285b263781b") (:revdesc . "17571dba0a8f") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (ac-clang . [(2 1 3) ((emacs (24)) (cl-lib (0 5)) (auto-complete (1 4 0)) (pos-tip (0 4 6)) (yasnippet (0 8 0))) "Auto Completion source by libclang for GNU Emacs" tar ((:url . "https://github.com/yaruopooner/ac-clang") (:commit . "3294b968eb1a8317049190940193f9da47c085ef") (:revdesc . "v2.1.3-0-g3294b968eb1a") (:keywords "completion" "convenience" "intellisense"))])
 (ac-dcd . [(0 6) ((auto-complete (1 3 1)) (flycheck-dmd-dub (0 7))) "Auto Completion source for dcd for GNU Emacs" tar ((:url . "https://github.com/atilaneves/ac-dcd") (:commit . "d378d33c7bedc6c108eda7f674bd0aa1d8664857") (:revdesc . "V0.6-0-gd378d33c7bed") (:keywords "languages") (:authors (nil . "atila.neves@gmail.com")) (:maintainers (nil . "atila.neves@gmail.com")) (:maintainer nil . "atila.neves@gmail.com"))])
 (ac-emacs-eclim . [(0 4) ((eclim (0 3)) (auto-complete (1 5))) "Auto-complete source for eclim" tar ((:url . "https://github.com/emacs-eclim/emacs-eclim") (:commit . "8203fbf8544e65324a948a67718f7a16ba2d52e6") (:revdesc . "8203fbf8544e"))])
 (ac-emoji . [(0 2) ((auto-complete (1 5 0)) (cl-lib (0 5))) "Auto-complete source of Emoji" tar ((:url . "https://github.com/emacsorphanage/ac-emoji") (:commit . "53677f754929ead403ccde64b714ebb6b8fc808e") (:revdesc . "53677f754929") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (ac-etags . [(0 6) ((auto-complete (1 4))) "Etags/ctags completion source for auto-complete" tar ((:url . "https://github.com/emacsorphanage/ac-etags") (:commit . "8cd188b2e4908285ba8178bbd18a555edd7282e8") (:revdesc . "8cd188b2e490") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (ac-geiser . [(0 1) ((geiser (0 5)) (auto-complete (1 4))) "Auto-complete backend for geiser" tar ((:url . "https://github.com/xiaohanyu/ac-geiser") (:commit . "0e2e36532336f27e3dc3b01fff55ad1a4329817d") (:revdesc . "v0.1-0-g0e2e36532336") (:authors ("Xiao Hanyu" . "xiaohanyu1988@gmail.com")) (:maintainers ("Xiao Hanyu" . "xiaohanyu1988@gmail.com")) (:maintainer "Xiao Hanyu" . "xiaohanyu1988@gmail.com"))])
 (ac-haskell-process . [(0 7) ((auto-complete (1 4)) (haskell-mode (13))) "Haskell auto-complete source which uses the current haskell process" tar ((:url . "https://github.com/purcell/ac-haskell-process") (:commit . "0362d4323511107ec70e7165cb612f3ab01b712f") (:revdesc . "0362d4323511") (:keywords "languages") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (ac-helm . [(2 1) ((helm (20130328)) (auto-complete (1 4 0)) (popup (0 5 0))) "Auto Complete with Helm" tar ((:url . "https://github.com/yasuyk/ac-helm") (:commit . "f2110576b0eb35850a7f638c1a991a9fa0c8da3a") (:revdesc . "2.1-0-gf2110576b0eb") (:keywords "completion" "convenience" "helm") (:authors ("rubikitch" . "rubikitch@ruby-lang.org") ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainers ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainer "Yasuyuki Oka" . "yasuyk@gmail.com"))])
 (ac-html . [(0 31) ((auto-complete (1 4)) (web-completion-data (0 1))) "Auto complete source for html tags and attributes" tar ((:url . "https://github.com/victorteokw/ac-html") (:commit . "415a78c3b84855b0c0411832d21a0fb63239b184") (:revdesc . "415a78c3b848") (:keywords "html" "auto-complete" "rails" "ruby") (:authors ("Zhang Kai Yu" . "yeannylam@gmail.com")) (:maintainers ("Zhang Kai Yu" . "yeannylam@gmail.com")) (:maintainer "Zhang Kai Yu" . "yeannylam@gmail.com"))])
 (ac-html-bootstrap . [(0 9 3) ((web-completion-data (0 1))) "Auto complete bootstrap3/fontawesome classes for `ac-html' and `company-web'" tar ((:url . "https://github.com/osv/ac-html-bootstrap") (:commit . "591e1e996c820da218ea1eee0a500c556769f128") (:revdesc . "591e1e996c82") (:keywords "html" "auto-complete" "bootstrap" "cssx") (:authors ("Olexandr Sydorchuk" . "olexandr.syd@gmail.com")) (:maintainers ("Olexandr Sydorchuk" . "olexandr.syd@gmail.com")) (:maintainer "Olexandr Sydorchuk" . "olexandr.syd@gmail.com"))])
 (ac-html-csswatcher . [(0 1 7) ((web-completion-data (0 1))) "Css/less class/id completion with `ac-html' or `company-web'" tar ((:url . "https://github.com/osv/ac-html-csswatcher") (:commit . "dadc3c595cf1708291096c03987f1981f3cabc6b") (:revdesc . "dadc3c595cf1") (:keywords "html" "css" "less" "auto-complete") (:authors ("Olexandr Sydorchuck" . "olexandr.syd@gmail.com")) (:maintainers ("Olexandr Sydorchuck" . "olexandr.syd@gmail.com")) (:maintainer "Olexandr Sydorchuck" . "olexandr.syd@gmail.com"))])
 (ac-inf-ruby . [(0 4) ((inf-ruby (2 3 2)) (auto-complete (1 4))) "Enable auto-complete in inf-ruby sessions" tar ((:url . "https://github.com/purcell/ac-inf-ruby") (:commit . "3e22b66d3d3e2712a0fe783b5cdd0583a0d4c318") (:revdesc . "3e22b66d3d3e") (:keywords "languages" "tools") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (ac-ispell . [(0 7) ((auto-complete (1 4)) (cl-lib (0 5))) "Ispell completion source for auto-complete" tar ((:url . "https://github.com/emacsorphanage/ac-ispell") (:commit . "a8c84f7f0b96dc091abc51b1698f24e9c994e6aa") (:revdesc . "a8c84f7f0b96") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (ac-mozc . [(0 0 4) ((cl-lib (0 5)) (auto-complete (1 4)) (mozc (0))) "Auto-complete sources for Japanese input using Mozc" tar ((:url . "https://github.com/igjit/ac-mozc") (:commit . "4c6c8be4701010d9362184437c0f783e0335c631") (:revdesc . "4c6c8be47010") (:authors ("igjit" . "igjit1@gmail.com")) (:maintainers ("igjit" . "igjit1@gmail.com")) (:maintainer "igjit" . "igjit1@gmail.com"))])
 (ac-octave . [(0 7) ((auto-complete (1 4 0))) "An auto-complete source for Octave" tar ((:url . "https://github.com/coldnew/ac-octave") (:commit . "6d09b94a86f43de84c60e9a699b5e1be61c0f138") (:revdesc . "6d09b94a86f4") (:keywords "octave" "auto-complete" "completion") (:authors ("coldnew" . "coldnew.tw@gmail.com")) (:maintainers ("coldnew" . "coldnew.tw@gmail.com")) (:maintainer "coldnew" . "coldnew.tw@gmail.com"))])
 (ac-php . [(2 7 0) ((ac-php-core (2 0)) (auto-complete (1 4 0)) (yasnippet (0 8 0))) "Auto Completion source for PHP" tar ((:url . "https://github.com/xcwen/ac-php") (:commit . "a69ae4a12e40900619b4e5a1613fd449aef649c3") (:revdesc . "a69ae4a12e40") (:keywords "completion" "convenience" "intellisense") (:authors ("jim" . "xcwenn@qq.com")))])
 (ac-php-core . [(2 7 0) ((emacs (24 4)) (dash (1)) (php-mode (1)) (s (1)) (f (0 17 0)) (popup (0 5 0)) (xcscope (1 0))) "The core library of the ac-php" tar ((:url . "https://github.com/xcwen/ac-php") (:commit . "a69ae4a12e40900619b4e5a1613fd449aef649c3") (:revdesc . "a69ae4a12e40") (:keywords "completion" "convenience" "intellisense") (:authors ("jim" . "xcwenn@qq.com") ("Serghei Iakovlev" . "sadhooklay@gmail.com")))])
 (ac-racer . [(0 2) ((emacs (24 3)) (auto-complete (1 5 0)) (racer (0 0 2))) "Auto-complete source of racer" tar ((:url . "https://github.com/emacsorphanage/ac-racer") (:commit . "4408c2d652dec0432e20c05e001db8222d778c6b") (:revdesc . "4408c2d652de") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (ac-rtags . [(3 23) ((auto-complete (1 4 0)) (rtags (2 10))) "Auto-complete back-end for RTags" tar ((:url . "https://github.com/Andersbakken/rtags") (:commit . "7169ed577d676690a3c6f0025b54e8477d80eacf") (:revdesc . "v3.23-0-g7169ed577d67") (:authors ("Jan Erik Hanssen" . "jhanssen@gmail.com") ("Anders Bakken" . "agbakken@gmail.com")) (:maintainers ("Jan Erik Hanssen" . "jhanssen@gmail.com") ("Anders Bakken" . "agbakken@gmail.com")) (:maintainer "Jan Erik Hanssen" . "jhanssen@gmail.com"))])
 (ac-slime . [(0 8) ((auto-complete (1 4)) (slime (2 9)) (cl-lib (0 5))) "An auto-complete source using slime completions" tar ((:url . "https://github.com/purcell/ac-slime") (:commit . "df6c4e88b5ba2d15d47a651ecf7edc0986624112") (:revdesc . "df6c4e88b5ba") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (ace-flyspell . [(0 1 3) ((avy (0 4 0))) "Jump to and correct spelling errors using `ace-jump-mode' and flyspell" tar ((:url . "https://github.com/cute-jumper/ace-flyspell") (:commit . "044d38fb8eb390ef1f51cf92cfe5c4ffd103044c") (:revdesc . "044d38fb8eb3") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (ace-isearch . [(1 0 1) ((emacs (24))) "A seamless bridge between isearch, ace-jump-mode, avy, helm-swoop and swiper" tar ((:url . "https://github.com/tam17aki/ace-isearch") (:commit . "7defe3517f2be444a1479c0a18859d78da4919a5") (:revdesc . "7defe3517f2b"))])
 (ace-jump-buffer . [(0 4 1) ((avy (0 4 0)) (dash (2 4 0))) "Fast buffer switching extension to `avy'" tar ((:url . "https://github.com/waymondo/ace-jump-buffer") (:commit . "02797c22c10a817dbbdfbd8fddceeba6c4f0499a") (:revdesc . "02797c22c10a") (:authors ("Justin Talbott" . "justin@waymondo.com")) (:maintainers ("Justin Talbott" . "justin@waymondo.com")) (:maintainer "Justin Talbott" . "justin@waymondo.com"))])
 (ace-jump-helm-line . [(0 5 0) ((avy (0 4 0)) (helm (1 6 3))) "Ace-jump to a candidate in helm window" tar ((:url . "https://github.com/cute-jumper/ace-jump-helm-line") (:commit . "8779050e4794279946892b6a156d0086554a9c9e") (:revdesc . "8779050e4794") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (ace-jump-mode . [(2 0) nil "A quick cursor location minor mode for emacs" tar ((:url . "https://github.com/winterTTr/ace-jump-mode") (:commit . "a62a6867811cd739dd98a5e00a2d2e17edfb5b71") (:revdesc . "a62a6867811c") (:keywords "motion" "location" "cursor") (:authors ("winterTTr" . "winterTTr@gmail.com")) (:maintainers ("winterTTr" . "winterTTr@gmail.com")) (:maintainer "winterTTr" . "winterTTr@gmail.com"))])
 (ace-jump-zap . [(0 1 2) ((ace-jump-mode (1 0)) (dash (2 10 0))) "Character zapping, `ace-jump-mode` style" tar ((:url . "https://github.com/waymondo/ace-jump-zap") (:commit . "1a9bf779d8f9225ede9ec482b840942bb58111df") (:revdesc . "1a9bf779d8f9") (:keywords "convenience" "tools" "extensions") (:authors ("justin talbott" . "justin@waymondo.com")) (:maintainers ("justin talbott" . "justin@waymondo.com")) (:maintainer "justin talbott" . "justin@waymondo.com"))])
 (ace-link . [(0 5 0) ((avy (0 4 0))) "Quickly follow links" tar ((:url . "https://github.com/abo-abo/ace-link") (:commit . "7b9bc8d916b60a501c32b63ce81f315486ad44e9") (:revdesc . "7b9bc8d916b6") (:keywords "convenience" "links" "avy") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com"))])
 (ace-pinyin . [(0 2 5) ((ace-jump-mode (2 0)) (avy (0 2 0)) (pinyinlib (0 1 0))) "Jump to Chinese characters using ace-jump-mode or avy" tar ((:url . "https://github.com/cute-jumper/ace-pinyin") (:commit . "c444d8d6861dafd06dd41e694dc9db32652e3b7c") (:revdesc . "c444d8d6861d") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (ace-popup-menu . [(0 2 1) ((emacs (24 3)) (avy-menu (0 1))) "Replace GUI popup menu with something more efficient" tar ((:url . "https://github.com/mrkkrp/ace-popup-menu") (:commit . "e7cc8bace9dda5c9fbe545c6fbd41c12679c3d7d") (:revdesc . "e7cc8bace9dd") (:keywords "convenience" "popup" "menu") (:authors ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainers ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainer "Mark Karpov" . "markkarpov92@gmail.com"))])
 (ace-window . [(0 10 0) ((avy (0 5 0))) "Quickly switch windows" tar ((:url . "https://github.com/abo-abo/ace-window") (:commit . "7003c88cd9cad58dc35c7cd13ebc61c355fb5be7") (:revdesc . "7003c88cd9ca") (:keywords "window" "location") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com"))])
 (acme-theme . [(1 0 0) nil "A color theme for Emacs based on Acme & Sam from Plan 9" tar ((:url . "https://github.com/ianyepan/acme-emacs-theme") (:commit . "680b2022445861e3e9030a96d9fe587188d778c8") (:revdesc . "680b20224458"))])
 (act-mode . [(1 1) ((emacs (26 1))) "Major mode for the ACT programming language" tar ((:url . "https://github.com/rafaelcn/act") (:commit . "90d7d626691591b24d83596149bc89fd51ba39b4") (:revdesc . "1.1-0-g90d7d6266915"))])
 (actionscript-mode . [(7 2 2) nil "A simple mode for editing Actionscript 3 files" tar ((:url . "https://github.com/austinhaas/actionscript-mode") (:commit . "fddd7220342d29e7eca734f6b798b7a2849717a5") (:revdesc . "fddd7220342d") (:keywords "language" "modes"))])
 (activity-watch-mode . [(1 5 0) ((emacs (25)) (request (0)) (json (0)) (cl-lib (0))) "Automatic time tracking extension" tar ((:url . "https://github.com/pauldub/activity-watch-mode") (:commit . "0189963cb60a0efdbb1cfd17641c06d16a74a974") (:revdesc . "0189963cb60a") (:keywords "calendar" "comm") (:authors ("Gabor Torok" . "gabor@20y.hu") ("Alan Hamlett" . "alan@wakatime.com")) (:maintainers ("Paul d'Hubert" . "paul.dhubert@ya.ru")) (:maintainer "Paul d'Hubert" . "paul.dhubert@ya.ru"))])
 (adafruit-wisdom . [(0 3 0) ((emacs (25)) (request (0 3 1))) "Get/display adafruit.com quotes" tar ((:url . "https://github.com/gonewest818/adafruit-wisdom.el") (:commit . "50414eaac3dbeb67a1329833b912d26b164873eb") (:revdesc . "50414eaac3db") (:keywords "games") (:authors ("Neil Okamoto" . "neil.okamoto+melpa@gmail.com")) (:maintainers ("Neil Okamoto" . "neil.okamoto+melpa@gmail.com")) (:maintainer "Neil Okamoto" . "neil.okamoto+melpa@gmail.com"))])
 (add-hooks . [(3 1 1) nil "Functions for setting multiple hooks" tar ((:url . "https://github.com/nickserv/add-hooks") (:commit . "a1043b7cdb1ea98055a2c99f8d37584a553ca362") (:revdesc . "a1043b7cdb1e") (:keywords "lisp") (:authors ("Nick McCurdy" . "nick@nickmccurdy.com")) (:maintainers ("Nick McCurdy" . "nick@nickmccurdy.com")) (:maintainer "Nick McCurdy" . "nick@nickmccurdy.com"))])
 (add-node-modules-path . [(1 3 1) ((s (1 12 0))) "Add node_modules to your exec-path" tar ((:url . "https://github.com/codesuki/add-node-modules-path") (:commit . "63f047fd84b825876152743f66de7ee6f9ed203b") (:revdesc . "63f047fd84b8") (:keywords "javascript" "node" "node_modules" "eslint") (:authors ("Neri Marschik" . "marschik_neri@cyberagent.co.jp")) (:maintainers ("Neri Marschik" . "marschik_neri@cyberagent.co.jp")) (:maintainer "Neri Marschik" . "marschik_neri@cyberagent.co.jp"))])
 (addressbook-bookmark . [(1 0) ((emacs (24))) "An address book based on Standard Emacs bookmarks" tar ((:url . "https://github.com/thierryvolpiatto/addressbook-bookmark") (:commit . "ad3c73369b804a48803fdfdf2ab613e6220260de") (:revdesc . "v1.0-0-gad3c73369b80") (:authors ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainers ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainer "Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))])
 (ado-mode . [(16 1 4) ((emacs (24 1))) "Major mode for editing Stata-related files" tar ((:url . "https://github.com/louabill/ado-mode") (:commit . "29d56532c7ab6f680c596add31fd80cd79186e89") (:revdesc . "16.1.4-0-g29d56532c7ab") (:keywords "tools" "languages" "files" "convenience" "stata" "mata" "ado") (:authors ("Bill Rising" . "brising@alum.mit.edu")) (:maintainers ("Bill Rising" . "brising@alum.mit.edu")) (:maintainer "Bill Rising" . "brising@alum.mit.edu"))])
 (adoc-mode . [(0 7 0) ((emacs (26))) "A major-mode for editing AsciiDoc files" tar ((:url . "https://github.com/bbatsov/adoc-mode") (:commit . "66b9adc97d8702de47140092cbae3a2f5563a297") (:revdesc . "66b9adc97d87") (:keywords "docs" "wp") (:authors ("Florian Kaufmann" . "sensorflo@gmail.com")) (:maintainers ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.dev"))])
 (adwaita-dark-theme . [(1 3 0) ((emacs (27 1))) "A dark color scheme inspired by Adwaita" tar ((:url . "https://gitlab.com/jessieh/adwaita-dark-theme") (:commit . "0907961986a582ded514d54a8bfdf691f7bfaf86") (:revdesc . "0907961986a5") (:keywords "mode-line" "faces") (:authors ("Jessie Hildebrandt" . "jessieh.net")) (:maintainers ("Jessie Hildebrandt" . "jessieh.net")) (:maintainer "Jessie Hildebrandt" . "jessieh.net"))])
 (aes . [(1 0) nil "Implementation of AES" tar ((:url . "https://github.com/Sauermann/emacs-aes") (:commit . "b834673297a3468eeebb1b72d7c4736ffe6094ce") (:revdesc . "b834673297a3") (:keywords "data" "tools") (:authors ("Markus Sauermann" . "emacs-aes@sauermann-consulting.de")) (:maintainers ("Markus Sauermann" . "emacs-aes@sauermann-consulting.de")) (:maintainer "Markus Sauermann" . "emacs-aes@sauermann-consulting.de"))])
 (affe . [(0 8) ((emacs (27 1)) (consult (1 0))) "Asynchronous Fuzzy Finder for Emacs" tar ((:url . "https://github.com/minad/affe") (:commit . "caec8551df2ce09868af5147ef33c065f81ff4b5") (:revdesc . "caec8551df2c") (:keywords "matching" "files" "completion") (:authors ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainers ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de"))])
 (afterglow . [(0 2 1) ((emacs (26 1))) "Temporary Highlighting after Function Calls" tar ((:url . "https://github.com/ernstvanderlinden/emacs-afterglow") (:commit . "8254dc5d4fdfec63e1b5b2d59af0771d2c5a5474") (:revdesc . "v0.2.1-0-g8254dc5d4fdf") (:keywords "highlight" "line" "convenience" "evil") (:authors ("Ernest M. van der Linden" . "hello@ernestoz.com")) (:maintainers ("Ernest M. van der Linden" . "hello@ernestoz.com")) (:maintainer "Ernest M. van der Linden" . "hello@ernestoz.com"))])
 (ag . [(0 48) ((dash (2 8 0)) (s (1 9 0)) (cl-lib (0 5))) "A front-end for ag ('the silver searcher'), the C ack replacement" tar ((:url . "https://github.com/Wilfred/ag.el") (:commit . "bd81d68466e44301505629454dfc689b6c17d94b") (:revdesc . "0.48-0-gbd81d68466e4") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (age . [(0 1 5) ((emacs (28 1))) "The Age Encryption Library" tar ((:url . "https://github.com/anticomputer/age.el") (:commit . "890c467ebc27538507c54a03afd2f7260630d7f5") (:revdesc . "890c467ebc27") (:keywords "data") (:authors ("Daiki Ueno" . "ueno@unixuser.org") ("Bas Alberts" . "bas@anti.computer")) (:maintainers ("Bas Alberts" . "bas@anti.computer")) (:maintainer "Bas Alberts" . "bas@anti.computer"))])
 (agenix . [(1 2) ((emacs (27 1))) "Decrypt and encrypt agenix secrets" tar ((:url . "https://github.com/t4ccer/agenix.el") (:commit . "c3afc8d109dc19bfe2f97ce47184ca748dbe4816") (:revdesc . "v1.2-0-gc3afc8d109dc") (:authors ("Tomasz Maciosowski" . "t4ccer@gmail.com")) (:maintainers ("Tomasz Maciosowski" . "t4ccer@gmail.com")) (:maintainer "Tomasz Maciosowski" . "t4ccer@gmail.com"))])
 (aggressive-indent . [(1 10 0) ((emacs (24 3))) "Minor mode to aggressively keep your code always indented" tar ((:url . "https://github.com/Malabarba/aggressive-indent-mode") (:commit . "cb416faf61c46977c06cf9d99525b04dc109a33c") (:revdesc . "cb416faf61c4") (:keywords "indent" "lisp" "maint" "tools") (:authors ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainers ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com"))])
 (ahk-mode . [(1 5 6) ((emacs (24 3))) "Major mode for editing AHK (AutoHotkey and AutoHotkey_L)" tar ((:url . "https://github.com/punassuming/ahk-mode") (:commit . "bf3205efe7b7a40f3c8978f68f14ea3a939cffa8") (:revdesc . "bf3205efe7b7") (:keywords "ahk" "autohotkey" "hotkey" "keyboard shortcut" "automation"))])
 (ahungry-theme . [(1 10 0) ((emacs (24))) "Ahungry color theme for Emacs.  Make sure to (load-theme 'ahungry)" tar ((:url . "https://github.com/ahungry/color-theme-ahungry") (:commit . "45bf75f17752c8e8dd4c8a4531c0aa419cdccb84") (:revdesc . "45bf75f17752") (:keywords "ahungry" "palette" "color" "theme" "emacs" "color-theme" "deftheme") (:authors ("Matthew Carter" . "m@ahungry.com")) (:maintainers ("Matthew Carter" . "m@ahungry.com")) (:maintainer "Matthew Carter" . "m@ahungry.com"))])
 (aiken-mode . [(1 0 2) ((emacs (26 1))) "Major mode for Aiken" tar ((:url . "https://github.com/aiken-lang/aiken-mode") (:commit . "1af54e4df02eb52cf62034acbe1c6dd54776d843") (:revdesc . "1.0.2-0-g1af54e4df02e") (:keywords "languages" "aiken") (:authors ("Sebastian Nagel" . "sebastian.nagel@ncoding.at")) (:maintainers ("Sebastian Nagel" . "sebastian.nagel@ncoding.at")) (:maintainer "Sebastian Nagel" . "sebastian.nagel@ncoding.at"))])
 (aio . [(1 0) ((emacs (26 1))) "Async/await for Emacs Lisp" tar ((:url . "https://github.com/skeeto/emacs-aio") (:commit . "077722896e649e7a33dcafbc4585686a29423979") (:revdesc . "1.0-0-g077722896e64") (:authors ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainers ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainer "Christopher Wellons" . "wellons@nullprogram.com"))])
 (airline-themes . [(1 8) ((powerline (2 3))) "Vim-airline themes for emacs powerline" tar ((:url . "https://github.com/AnthonyDiGirolamo/airline-themes") (:commit . "5ea031bcbdf665afea7e47e519a49e2c33978833") (:revdesc . "5ea031bcbdf6") (:keywords "evil" "mode-line" "powerline" "airline" "themes") (:authors ("Anthony DiGirolamo" . "anthony.digirolamo@gmail.com")) (:maintainers ("Anthony DiGirolamo" . "anthony.digirolamo@gmail.com")) (:maintainer "Anthony DiGirolamo" . "anthony.digirolamo@gmail.com"))])
 (alan-mode . [(1 0 0) ((flycheck (32)) (emacs (25 1))) "Major mode for editing M-industries Alan files" tar ((:url . "https://github.com/alan-platform/AlanForEmacs") (:commit . "0089e7c874c6d35e55be6ecd479ada2b97688a1f") (:revdesc . "0089e7c874c6") (:keywords "alan" "languages") (:authors ("Paul van Dam" . "pvandam@m-industries.com")) (:maintainers ("Paul van Dam" . "pvandam@m-industries.com")) (:maintainer "Paul van Dam" . "pvandam@m-industries.com"))])
 (alarm-clock . [(1 0 4) ((emacs (24 4))) "Alarm Clock" tar ((:url . "https://github.com/wlemuel/alarm-clock") (:commit . "3e43ca49804afb06477dbf7ff3d6e9824522be4b") (:revdesc . "3e43ca49804a") (:keywords "calendar" "tools" "convenience") (:authors ("Steve Lemuel" . "wlemuel@hotmail.com")) (:maintainers ("Steve Lemuel" . "wlemuel@hotmail.com")) (:maintainer "Steve Lemuel" . "wlemuel@hotmail.com"))])
 (alchemist . [(1 8 2) ((elixir-mode (2 2 5)) (dash (2 11 0)) (emacs (24 4)) (company (0 8 0)) (pkg-info (0 4))) "Elixir tooling integration into Emacs" tar ((:url . "https://github.com/tonini/alchemist.el") (:commit . "34caeed1bd231c7dfa8d2b9aa5c5de2b2a059601") (:revdesc . "34caeed1bd23") (:keywords "languages" "elixir" "elixirc" "mix" "hex" "alchemist") (:authors ("Samuel Tonini" . "tonini.samuel@gmail.com")) (:maintainers ("Samuel Tonini" . "tonini.samuel@gmail.com")) (:maintainer "Samuel Tonini" . "tonini.samuel@gmail.com"))])
 (alda-mode . [(0 2 0) ((emacs (24 0))) "A simple major mode for the musical programming language Alda" tar ((:url . "https://gitlab.com/jgkamat/alda-mode") (:commit . "97c20b1fd9ad3f138e1100e3a837d05108c4c564") (:revdesc . "0.2.0-0-g97c20b1fd9ad") (:keywords "alda" "highlight") (:authors ("Jay Kamat" . "github@jgkamat.33mail.com")) (:maintainers ("Jay Kamat" . "github@jgkamat.33mail.com")) (:maintainer "Jay Kamat" . "github@jgkamat.33mail.com"))])
 (alect-themes . [(0 10) ((emacs (24 0))) "Configurable light, dark and black themes for Emacs 24 or later" tar ((:url . "https://github.com/alezost/alect-themes") (:commit . "89560047934c236d05ea6b911c0c63702a8e06f3") (:revdesc . "89560047934c") (:keywords "color" "theme") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (alectryon . [(1 4 0) ((flycheck (31)) (emacs (25 1))) "Toggle between Coq and reStructuredText" tar ((:url . "https://github.com/cpitclaudel/alectryon") (:commit . "bddc1dc5757bd6ef308f21ed70811281a2ad5298") (:revdesc . "v1.4.0-0-gbddc1dc5757b") (:keywords "convenience" "languages" "tools") (:authors ("Clément Pit-Claudel" . "clement.pitclaudel@live.com")) (:maintainers ("Clément Pit-Claudel" . "clement.pitclaudel@live.com")) (:maintainer "Clément Pit-Claudel" . "clement.pitclaudel@live.com"))])
 (alert . [(1 3) ((gntp (0 1)) (log4e (0 3 0)) (cl-lib (0 5))) "Growl-style notification system for Emacs" tar ((:url . "https://github.com/jwiegley/alert") (:commit . "9f329be87820474925f29b52a1131084c8ea95b9") (:revdesc . "v1.3-0-g9f329be87820") (:keywords "notification" "emacs" "message") (:authors ("John Wiegley" . "jwiegley@gmail.com")) (:maintainers ("John Wiegley" . "jwiegley@gmail.com")) (:maintainer "John Wiegley" . "jwiegley@gmail.com"))])
 (alert-toast . [(1 0 0) ((emacs (25 1)) (alert (1 2)) (f (0 20 0)) (s (1 12 0))) "Windows 10 toast notifications" tar ((:url . "https://github.com/gkowzan/alert-toast") (:commit . "96c88c93c1084de681700f655223142ee0eb944a") (:revdesc . "96c88c93c108") (:authors ("Grzegorz Kowzan" . "grzegorz@kowzan.eu")) (:maintainers ("Grzegorz Kowzan" . "grzegorz@kowzan.eu")) (:maintainer "Grzegorz Kowzan" . "grzegorz@kowzan.eu"))])
 (all-the-icons . [(5 0 0) ((emacs (24 3))) "A library for inserting Developer icons" tar ((:url . "https://github.com/domtronn/all-the-icons.el") (:commit . "facbde4a7be292bf9490932cbe403b443273f45d") (:revdesc . "facbde4a7be2") (:keywords "convenient" "lisp") (:authors ("Dominic Charlesworth" . "dgc336@gmail.com")) (:maintainers ("Dominic Charlesworth" . "dgc336@gmail.com")) (:maintainer "Dominic Charlesworth" . "dgc336@gmail.com"))])
 (all-the-icons-completion . [(1 0) ((emacs (26 1)) (all-the-icons (5 0))) "Add icons to completion candidates" tar ((:url . "https://github.com/iyefrat/all-the-icons-completion") (:commit . "8eb3e410d63f5d0657b41829e7898793e81f31c0") (:revdesc . "8eb3e410d63f") (:keywords "convenient" "lisp") (:authors ("Itai Y. Efrat" . "https://github.com/iyefrat")) (:maintainers ("Itai Y. Efrat" . "itai3397@gmail.com")) (:maintainer "Itai Y. Efrat" . "itai3397@gmail.com"))])
 (all-the-icons-dired . [(2 0) ((emacs (24 4)) (all-the-icons (2 2 0))) "Shows icons for each file in dired mode" tar ((:url . "https://github.com/wyuenho/all-the-icons-dired") (:commit . "a758766878b6e8b9eaaf41d68599a2df99e37f48") (:revdesc . "a758766878b6") (:keywords "files" "icons" "dired") (:maintainers ("Jimmy Yuen Ho Wong" . "wyuenho@gmail.com")) (:maintainer "Jimmy Yuen Ho Wong" . "wyuenho@gmail.com"))])
 (all-the-icons-ibuffer . [(1 3 0) ((emacs (24 4)) (all-the-icons (2 2 0))) "Display icons for all buffers in ibuffer" tar ((:url . "https://github.com/seagle0128/all-the-icons-ibuffer") (:commit . "767b52186c1d9ef52f087f34a48af39c31e45b73") (:revdesc . "767b52186c1d") (:keywords "convenience" "icons" "ibuffer") (:authors ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainers ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainer "Vincent Zhang" . "seagle0128@gmail.com"))])
 (all-the-icons-ivy . [(0 5 0) ((emacs (24 4)) (all-the-icons (2 4 0)) (ivy (0 8 0))) "Shows icons while using ivy and counsel" tar ((:url . "https://github.com/asok/all-the-icons-ivy") (:commit . "b768b83716100701a5cda9c071da2bcac34bd6a4") (:revdesc . "b768b8371610") (:keywords "faces"))])
 (all-the-icons-ivy-rich . [(1 9 0) ((emacs (25 1)) (ivy-rich (0 1 0)) (all-the-icons (2 2 0))) "Better experience with icons for ivy" tar ((:url . "https://github.com/seagle0128/all-the-icons-ivy-rich") (:commit . "1bae2c95e5bf865af55d219d50baf4ee9ce5e7c6") (:revdesc . "1bae2c95e5bf") (:keywords "convenience" "icons" "ivy") (:authors ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainers ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainer "Vincent Zhang" . "seagle0128@gmail.com"))])
 (alsamixer . [(0 2 1) nil "Functions to call out to amixer" tar ((:url . "https://github.com/remvee/alsamixer-el") (:commit . "1bdb99e433acd38685f05408562746cfbf2bc820") (:revdesc . "0.2.1-0-g1bdb99e433ac") (:keywords "convenience"))])
 (alt-codes . [(0 0 5) ((emacs (24 4))) "Insert alt codes using meta key" tar ((:url . "https://github.com/jcs-elpa/alt-codes") (:commit . "b36c2b2bccc628da1579016381d5c3195c9e12b2") (:revdesc . "b36c2b2bccc6") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (amd-mode . [(2 8) ((emacs (25)) (projectile (20161008 47)) (s (1 9 0)) (f (0 16 2)) (seq (2 16)) (makey (0 3)) (js2-mode (20140114)) (js2-refactor (0 6 1))) "Minor mode for handling JavaScript AMD module requirements" tar ((:url . "https://github.com/NicolasPetton/amd-mode.el") (:commit . "977b53e28b3141408fff4814be8b67ee23650cac") (:revdesc . "2.8-0-g977b53e28b31") (:keywords "javascript" "amd" "projectile") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:maintainers ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com"))])
 (ameba . [(0 1 0) ((emacs (24 4))) "An Emacs interface to [Ameba](https://github.com/veelenga/ameba)" tar ((:url . "https://github.com/crystal-ameba/ameba.el") (:commit . "ca5faaa0d5115dc2c301e06e062e653a7b9cb927") (:revdesc . "ca5faaa0d511") (:keywords "convenience"))])
 (amx . [(3 4) ((emacs (24 4)) (s (0))) "Alternative M-x with extra features" tar ((:url . "https://github.com/DarwinAwardWinner/amx") (:commit . "37f9c7ae55eb0331b27200fb745206fc58ceffc0") (:revdesc . "37f9c7ae55eb") (:keywords "convenience" "usability" "completion") (:authors ("Ryan C. Thompson" . "rct@thompsonclan.org") ("Cornelius Mika" . "cornelius.mika@gmail.com")) (:maintainers ("Ryan C. Thompson" . "rct@thompsonclan.org")) (:maintainer "Ryan C. Thompson" . "rct@thompsonclan.org"))])
 (anaconda-mode . [(0 1 16) ((emacs (25 1)) (pythonic (0 1 0)) (dash (2 6 0)) (s (1 9)) (f (0 16 2))) "Code navigation, documentation lookup and completion for Python" tar ((:url . "https://github.com/pythonic-emacs/anaconda-mode") (:commit . "92a6295622df7fae563d6b599e2dc8640e940ddf") (:revdesc . "92a6295622df") (:keywords "convenience" "anaconda") (:authors ("Artem Malyshev" . "proofit404@gmail.com")) (:maintainers ("Artem Malyshev" . "proofit404@gmail.com")) (:maintainer "Artem Malyshev" . "proofit404@gmail.com"))])
 (anakondo . [(0 2) ((emacs (26 3)) (projectile (2 1 0))) "Adds clj-kondo based Clojure[Script] editing facilities" tar ((:url . "https://github.com/didibus/anakondo") (:commit . "b9ea996c651c43722a5e577f61b5f823f222d864") (:revdesc . "b9ea996c651c") (:keywords "clojure" "clojurescript" "cljc" "clj-kondo" "completion" "languages" "tools") (:authors ("Didier A." . "didibus@users.noreply.github.com")) (:maintainers ("Didier A." . "didibus@users.noreply.github.com")) (:maintainer "Didier A." . "didibus@users.noreply.github.com"))])
 (anaphora . [(1 0 4) nil "Anaphoric macros providing implicit temp variables" tar ((:url . "https://github.com/rolandwalker/anaphora") (:commit . "3b2da3f759b244975852e79721c4a2dbad3905cf") (:revdesc . "v1.0.4-0-g3b2da3f759b2") (:keywords "extensions") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (android-mode . [(0 5 2) nil "Minor mode for Android application development" tar ((:url . "https://github.com/remvee/android-mode") (:commit . "d5332e339a1f5e30559a53feffb8442ca79265d6") (:revdesc . "0.5.2-0-gd5332e339a1f") (:keywords "tools" "processes"))])
 (angular-snippets . [(0 2 3) ((s (1 4 0)) (dash (1 2 0))) "Yasnippets for AngularJS" tar ((:url . "https://github.com/magnars/angular-snippets.el") (:commit . "8f737c2cf5fce758a7a3833ebad2952b5398568d") (:revdesc . "0.2.3-0-g8f737c2cf5fc") (:keywords "snippets") (:authors ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (anki-mode . [(0 1) ((emacs (24)) (dash (2 12 0)) (markdown-mode (2 2)) (s (1 11 0)) (request (0 3 0))) "TODO" tar ((:url . "https://github.com/davidshepherd7/anki-mode") (:commit . "06dd1bd49b7a2b43cf9b744dd5caf67809f39d74") (:revdesc . "06dd1bd49b7a") (:keywords "todo") (:authors ("David Shepherd" . "davidshepherd7@gmail.com")) (:maintainers ("David Shepherd" . "davidshepherd7@gmail.com")) (:maintainer "David Shepherd" . "davidshepherd7@gmail.com"))])
 (annalist . [(1 0 1) ((emacs (24 4)) (cl-lib (0 5))) "Record and display information such as keybindings" tar ((:url . "https://github.com/noctuid/annalist.el") (:commit . "08df07e4530953a2c0b1aa553adcab37b7b614b0") (:revdesc . "1.0.1-0-g08df07e45309") (:keywords "convenience" "tools" "keybindings" "org") (:authors ("Fox Kiester" . "noct@posteo.net")) (:maintainers ("Fox Kiester" . "noct@posteo.net")) (:maintainer "Fox Kiester" . "noct@posteo.net"))])
 (annotate . [(1 4 3) nil "Annotate files without changing them" tar ((:url . "https://github.com/bastibe/annotate.el") (:commit . "b9c908f24c2119d99cd93c86a0920223ef0568e9") (:revdesc . "b9c908f24c21"))])
 (annotation . [(2 7 0 1) nil "Functions for annotating text with faces and help bubbles" tar ((:url . "https://github.com/agda/agda") (:commit . "a6fc20c27ae953149b53a8997ba4a1c8b17d628a") (:revdesc . "v2.7.0.1-0-ga6fc20c27ae9"))])
 (annoying-arrows-mode . [(0 1 0) nil "Ring the bell if using arrows too much" tar ((:url . "https://github.com/magnars/annoying-arrows-mode.el") (:commit . "fe59f3fd464e7a87cc43fb8a1f135b3bdf8a2fb3") (:revdesc . "0.1.0-0-gfe59f3fd464e") (:authors ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (ansi . [(0 4 1) ((s (1 6 1)) (dash (1 5 0))) "Turn string into ansi strings" tar ((:url . "https://github.com/rejeep/ansi.el") (:commit . "a042c5954453bab9a74177e2b78ad17a824caebc") (:revdesc . "a042c5954453") (:keywords "color" "ansi") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (ansible . [(0 4 0) ((s (1 9 0)) (f (0 16 2)) (emacs (25 1))) "Ansible minor mode" tar ((:url . "https://gitlab.com/emacs-ansible/emacs-ansible") (:commit . "a005c70be00de6b8d45b51807fe1e049dd945fb3") (:revdesc . "a005c70be00d") (:authors (nil . "k1lowxb[at]gmail[dot]com") (nil . "k1low[at]101000lab[dot]org")) (:maintainers (nil . "k1lowxb[at]gmail[dot]com") (nil . "k1low[at]101000lab[dot]org")) (:maintainer nil . "k1lowxb[at]gmail[dot]com"))])
 (ansible-doc . [(0 4) ((emacs (24 3))) "Ansible documentation Minor Mode" tar ((:url . "https://github.com/emacsorphanage/ansible-doc") (:commit . "bc8128a85a79b14f4a121105d87a5eddc33975ad") (:revdesc . "0.4-0-gbc8128a85a79") (:keywords "tools" "help") (:authors ("Sebastian Wiesner" . "swiesner@lunaryorn")) (:maintainers ("Sebastian Wiesner" . "swiesner@lunaryorn")) (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn"))])
 (ansible-vault . [(0 5 2) ((emacs (24 3))) "Minor mode for editing ansible vault files" tar ((:url . "https://github.com/zellio/ansible-vault-mode") (:commit . "9b3d82ee49d484a494f2d88927b37fcd6245d51e") (:revdesc . "v0.5.2-0-g9b3d82ee49d4") (:keywords "ansible" "ansible-vault" "tools") (:maintainers ("Zachary Elliott" . "contact@zell.io")) (:maintainer "Zachary Elliott" . "contact@zell.io"))])
 (ansilove . [(2 0 0) ((emacs (26 1))) "Display buffers as PNG images using ansilove" tar ((:url . "https://gitlab.com/xgqt/emacs-ansilove") (:commit . "785f0bad0c73069e6c41ca543c29675785b614a8") (:revdesc . "2.0.0-0-g785f0bad0c73") (:keywords "multimedia") (:authors ("Maciej Barć" . "xgqt@riseup.net")) (:maintainers ("Maciej Barć" . "xgqt@riseup.net")) (:maintainer "Maciej Barć" . "xgqt@riseup.net"))])
 (anti-zenburn-theme . [(2 5 1) nil "Low-contrast Zenburn-inverted theme" tar ((:url . "https://github.com/m00natic/anti-zenburn-theme") (:commit . "c80cc51bb1aaf11dd53b9d08e01d61bc9b32622f") (:revdesc . "c80cc51bb1aa") (:authors ("Andrey Kotlarski" . "m00naticus@gmail.com")) (:maintainers ("Andrey Kotlarski" . "m00naticus@gmail.com")) (:maintainer "Andrey Kotlarski" . "m00naticus@gmail.com"))])
 (anyins . [(0 1 1) nil "Insert content at multiple places from shell command or kill-ring" tar ((:url . "https://github.com/antham/anyins") (:commit . "1ff4673ca197c9bf64c65f718573bf7d478fc562") (:revdesc . "1ff4673ca197") (:keywords "insert" "rectangular") (:authors ("Anthony HAMON" . "hamon.anth@gmail.com")) (:maintainers ("Anthony HAMON" . "hamon.anth@gmail.com")) (:maintainer "Anthony HAMON" . "hamon.anth@gmail.com"))])
 (anzu . [(0 67) ((emacs (25 1))) "Show number of matches in mode-line while searching" tar ((:url . "https://github.com/emacsorphanage/anzu") (:commit . "be015183090dbe8fe5f9eeb26ddf469af3ee360c") (:revdesc . "be015183090d") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("LemonBreezes" . "look@strawberrytea.xyz")) (:maintainer "LemonBreezes" . "look@strawberrytea.xyz"))])
 (apache-mode . [(2 2 0) nil "Major mode for editing Apache httpd configuration files" tar ((:url . "https://github.com/emacs-php/apache-mode") (:commit . "354f9302a8d805ac80d846adcd1cef10830b3d51") (:revdesc . "354f9302a8d8") (:keywords "languages" "faces") (:authors ("Karl Chen" . "quarl@nospam.quarl.org")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (apdl-mode . [(20 5 0) ((emacs (25 1))) "Major mode for the APDL programming language" tar ((:url . "https://github.com/dieter-wilhelm/apdl-mode") (:commit . "ee5f546f6659b9ca3c6895a1959087531b4a016a") (:revdesc . "20.5.0-0-gee5f546f6659") (:keywords "languages" "convenience" "tools" "ansys" "apdl") (:authors ("H. Dieter Wilhelm" . "dieter@duenenhof-wilhelm.de")))])
 (apheleia . [(4 3) ((emacs (27))) "Reformat buffer stably" tar ((:url . "https://github.com/radian-software/apheleia") (:commit . "543f6d651d11322f26665f017f051fbcfc21ceb0") (:revdesc . "543f6d651d11") (:keywords "tools") (:authors ("Radian LLC" . "contact+apheleia@radian.codes")) (:maintainers ("Radian LLC" . "contact+apheleia@radian.codes")) (:maintainer "Radian LLC" . "contact+apheleia@radian.codes"))])
 (apib-mode . [(0 8) ((markdown-mode (2 1))) "Major mode for API Blueprint files" tar ((:url . "https://github.com/w-vi/apib-mode") (:commit . "c6dd05201f6eb9295736d8668a79a7510d11159e") (:revdesc . "c6dd05201f6e") (:keywords "tools" "api-blueprint") (:authors ("Vilibald Wanča" . "vilibald@wvi.cz")) (:maintainers ("Vilibald Wanča" . "vilibald@wvi.cz")) (:maintainer "Vilibald Wanča" . "vilibald@wvi.cz"))])
 (apiwrap . [(0 5) ((emacs (25))) "Api-wrapping macros" tar ((:url . "https://github.com/vermiculus/apiwrap.el") (:commit . "e4c9c57d6620a788ec8a715ff1bb50542edea3a6") (:revdesc . "0.5-0-ge4c9c57d6620") (:keywords "tools" "maint" "convenience") (:authors ("Sean Allred" . "code@seanallred.com")) (:maintainers ("Sean Allred" . "code@seanallred.com")) (:maintainer "Sean Allred" . "code@seanallred.com"))])
 (apples-mode . [(0 0 2) nil "Major mode for editing and executing AppleScript code" tar ((:url . "https://github.com/tequilasunset/apples-mode") (:commit . "fac47b6255e79a373c5d5e1abe66ea5d74588e9f") (:revdesc . "fac47b6255e7") (:keywords "applescript" "languages") (:authors ("tequilasunset" . "tequilasunset.mac@gmail.com")) (:maintainers ("tequilasunset" . "tequilasunset.mac@gmail.com")) (:maintainer "tequilasunset" . "tequilasunset.mac@gmail.com"))])
 (applescript-mode . [(0 1) nil "Major mode for editing AppleScript source" tar ((:url . "https://github.com/emacsorphanage/applescript-mode") (:commit . "42b3db3838821f240e05752de4337359d25d8c04") (:revdesc . "42b3db383882") (:keywords "languages" "tools") (:authors ("sakito" . "sakito@users.sourceforge.jp")) (:maintainers ("sakito" . "sakito@users.sourceforge.jp")) (:maintainer "sakito" . "sakito@users.sourceforge.jp"))])
 (apropospriate-theme . [(0 2 0) nil "A colorful, low-contrast, light & dark theme set for Emacs with a fun name" tar ((:url . "https://github.com/waymondo/apropospriate-theme") (:commit . "17ec6fc0f43f7c0bcb970e2b71b8674891a464c7") (:revdesc . "17ec6fc0f43f"))])
 (archive-rpm . [(0 1) ((emacs (24 4))) "RPM and CPIO support for archive-mode" tar ((:url . "https://github.com/nbarrientos/archive-rpm") (:commit . "59f83caebbd2f92fd634f6968e6d17b50ffa3dc7") (:revdesc . "59f83caebbd2") (:keywords "files") (:authors ("Magnus Henoch" . "magnus.henoch@gmail.com")) (:maintainers ("Magnus Henoch" . "magnus.henoch@gmail.com")) (:maintainer "Magnus Henoch" . "magnus.henoch@gmail.com"))])
 (arscript-mode . [(0 1 0) ((emacs (25 1))) "Major mode for editing arscript files" tar ((:url . "https://github.com/captainflasmr/arscript-mode") (:commit . "b325cae3b8ec5c528a42044f225d31e2bbaabde6") (:revdesc . "b325cae3b8ec") (:keywords "convenience") (:authors ("James Dyer" . "captainflasmr@gmail.com")) (:maintainers ("James Dyer" . "captainflasmr@gmail.com")) (:maintainer "James Dyer" . "captainflasmr@gmail.com"))])
 (artbollocks-mode . [(1 1 2) nil "Improve your writing (especially about art)" tar ((:url . "https://github.com/sachac/artbollocks-mode") (:commit . "583c7048a1b09cd79554423d5115f5ddd129d190") (:revdesc . "583c7048a1b0") (:authors ("Rob Myers" . "rob@robmyers.org") ("Sacha Chua" . "sacha@sachachua.com")) (:maintainers ("Rob Myers" . "rob@robmyers.org") ("Sacha Chua" . "sacha@sachachua.com")) (:maintainer "Rob Myers" . "rob@robmyers.org"))])
 (arview . [(1 2) nil "Extract and view archives in the temporary directory" tar ((:url . "https://github.com/afainer/arview") (:commit . "5437b4221b64b238c273a651d4792c577dba6d45") (:revdesc . "5437b4221b64") (:keywords "files") (:authors ("Andrey Fainer" . "fandrey@gmx.com")) (:maintainers ("Andrey Fainer" . "fandrey@gmx.com")) (:maintainer "Andrey Fainer" . "fandrey@gmx.com"))])
 (arxiv-mode . [(0 4 0) ((emacs (27 1)) (hydra (0))) "Read and search for articles on arXiv.org" tar ((:url . "https://github.com/fizban007/arxiv-mode") (:commit . "f629ec64f8bbac0cadb472c6741f8f33d49e9160") (:revdesc . "f629ec64f8bb") (:keywords "bib" "convenience" "hypermedia") (:authors ("Alex Chen" . "fizban007@gmail.com") ("Simon Lin" . "n.sibetz@gmail.com")) (:maintainers ("Alex Chen" . "fizban007@gmail.com") ("Simon Lin" . "n.sibetz@gmail.com")) (:maintainer "Alex Chen" . "fizban007@gmail.com"))])
 (asilea . [(0 2 1) ((emacs (24)) (cl-lib (0 5))) "Find best compiler options using simulated annealing" tar ((:url . "https://github.com/Fanael/asilea") (:commit . "2aab1cc63b64ef08d12e84fd7ba5c94065f6039f") (:revdesc . "2aab1cc63b64") (:authors ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Fanael Linithien" . "fanael4@gmail.com"))])
 (asm-blox . [(0 4 1) ((emacs (26 1)) (yaml (0 5 1))) "Programming game involving WAT" tar ((:url . "https://github.com/zkry/asm-blox") (:commit . "5517efb1e186139197a2d348b7339a72dd379af8") (:revdesc . "5517efb1e186") (:keywords "games"))])
 (assess . [(0 6) ((emacs (24 4)) (m-buffer (0 15))) "Test support functions" tar ((:url . "https://github.com/phillord/assess") (:commit . "5bac045b273623772b6a2d820997d50f7ab4e466") (:revdesc . "5bac045b2736") (:authors ("Phillip Lord" . "phillip.lord@russet.org.uk")) (:maintainers ("Phillip Lord" . "phillip.lord@russet.org.uk")) (:maintainer "Phillip Lord" . "phillip.lord@russet.org.uk"))])
 (astro-ts-mode . [(2 0 1) ((emacs (29))) "Major mode for editing Astro templates" tar ((:url . "https://github.com/Sorixelle/astro-ts-mode") (:commit . "78e7e942011839bd4f4de0a1d8460f5879ba4ca5") (:revdesc . "v2.0.1-0-g78e7e9420118") (:keywords "languages") (:authors ("Ruby Iris Juric" . "ruby@srxl.me")) (:maintainers ("Ruby Iris Juric" . "ruby@srxl.me")) (:maintainer "Ruby Iris Juric" . "ruby@srxl.me"))])
 (async . [(1 9 9) ((emacs (24 4))) "Asynchronous processing in Emacs" tar ((:url . "https://github.com/jwiegley/emacs-async") (:commit . "f317b0c9c3e60a959f45d035ed5e31a78f1263ac") (:revdesc . "v1.9.9-0-gf317b0c9c3e6") (:keywords "async") (:authors ("John Wiegley" . "jwiegley@gmail.com")) (:maintainers ("Thierry Volpiatto" . "thievol@posteo.net")) (:maintainer "Thierry Volpiatto" . "thievol@posteo.net"))])
 (async-await . [(1 1) ((emacs (25 1)) (promise (1 1)) (iter2 (0 9 10))) "Async/Await" tar ((:url . "https://github.com/chuntaro/emacs-async-await") (:commit . "deef2bb343463f5196545f1dd8c2a32d0cb3b146") (:revdesc . "1.1-0-gdeef2bb34346") (:keywords "async" "await" "convenience") (:authors ("chuntaro" . "chuntaro@sakura-games.jp")) (:maintainers ("chuntaro" . "chuntaro@sakura-games.jp")) (:maintainer "chuntaro" . "chuntaro@sakura-games.jp"))])
 (asyncloop . [(1 1) ((emacs (28))) "Non-blocking series of functions" tar ((:url . "https://github.com/meedstrom/asyncloop") (:commit . "8bc72f51c52c108ece0655625dedc10b9fe1cb8d") (:revdesc . "8bc72f51c52c") (:keywords "tools") (:authors ("Martin Edström" . "meedstrom91@gmail.com")) (:maintainers ("Martin Edström" . "meedstrom91@gmail.com")) (:maintainer "Martin Edström" . "meedstrom91@gmail.com"))])
 (atcoder-tools . [(0 4 0) ((emacs (26)) (f (0 20)) (s (1 12))) "An atcoder-tools client" tar ((:url . "https://github.com/sei40kr/emacs-atcoder-tools") (:commit . "780fabbe5b3c890b3ae764e26b188603be294daa") (:revdesc . "780fabbe5b3c") (:keywords "extensions" "tools") (:authors ("Seong Yong-ju" . "sei40kr@gmail.com")) (:maintainers ("Seong Yong-ju" . "sei40kr@gmail.com")) (:maintainer "Seong Yong-ju" . "sei40kr@gmail.com"))])
 (atl-long-lines . [(0 2 0) ((emacs (24 3))) "Turn off truncate-lines when the line is long" tar ((:url . "https://github.com/jcs-legacy/atl-long-lines") (:commit . "4d340ee74e1aa37a7204acddb8826684b57337c5") (:revdesc . "4d340ee74e1a") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (atl-markup . [(0 1 5) ((emacs (24 3))) "Automatically truncate lines for markup languages" tar ((:url . "https://github.com/jcs-legacy/atl-markup") (:commit . "876d8a31d5e233d5234231f1428f8edb013e30eb") (:revdesc . "876d8a31d5e2") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (atom-one-dark-theme . [(0 4 0) nil "Atom One Dark color theme" tar ((:url . "https://github.com/jonathanchu/atom-one-dark-theme") (:commit . "c2ae343971f8cda7f5b5392552ce9281f52e53de") (:revdesc . "0.4.0-0-gc2ae343971f8") (:authors ("Jonathan Chu" . "me@jonathanchu.is")) (:maintainers ("Jonathan Chu" . "me@jonathanchu.is")) (:maintainer "Jonathan Chu" . "me@jonathanchu.is"))])
 (atomic-chrome . [(2 0 0) ((emacs (24 3)) (let-alist (1 0 4)) (websocket (1 4))) "Edit Chrome text area with Emacs using Atomic Chrome" tar ((:url . "https://github.com/alpha22jp/atomic-chrome") (:commit . "38ce9127285e1ff45f0f39b9da36a682103bdb96") (:revdesc . "38ce9127285e") (:keywords "chrome" "edit" "textarea") (:authors ("alpha22jp" . "alpha22jp@gmail.com")) (:maintainers ("alpha22jp" . "alpha22jp@gmail.com")) (:maintainer "alpha22jp" . "alpha22jp@gmail.com"))])
 (attrap . [(1 1) ((dash (2 12 0)) (emacs (25 1)) (f (0 19 0)) (flycheck (0 30)) (s (1 11 0))) "ATtempt To Repair At Point" tar ((:url . "https://github.com/jyp/attrap") (:commit . "4cf3e4a16255997e7c3c39682a72866a0a37dd4b") (:revdesc . "4cf3e4a16255") (:keywords "programming" "tools") (:authors ("Jean-Philippe Bernardy" . "jeanphilippe.bernardy@gmail.com")) (:maintainers ("Jean-Philippe Bernardy" . "jeanphilippe.bernardy@gmail.com")) (:maintainer "Jean-Philippe Bernardy" . "jeanphilippe.bernardy@gmail.com"))])
 (auctex-cluttex . [(0 3 0) ((emacs (24 4)) (auctex (13 1))) "ClutTeX support for AUCTeX" tar ((:url . "https://github.com/tsuu32/auctex-cluttex") (:commit . "1a940892dcbe3e4874d2d60db92de1cb34a1b773") (:revdesc . "1a940892dcbe") (:keywords "tex") (:authors ("Masahiro Nakamura" . "tsuucat@icloud.com")) (:maintainers ("Masahiro Nakamura" . "tsuucat@icloud.com")) (:maintainer "Masahiro Nakamura" . "tsuucat@icloud.com"))])
 (auctex-latexmk . [(1 0 2 1) ((auctex (11 87))) "Add LatexMk support to AUCTeX" tar ((:url . "https://github.com/emacsmirror/auctex-latexmk") (:commit . "b00a95e6b34c94987fda5a57c20cfe2f064b1c7a") (:revdesc . "b00a95e6b34c") (:keywords "tex") (:authors ("Tomoya Tanjo" . "ttanjo@gmail.com")) (:maintainers ("Tomoya Tanjo" . "ttanjo@gmail.com")) (:maintainer "Tomoya Tanjo" . "ttanjo@gmail.com"))])
 (aurel . [(0 9) ((emacs (24 3)) (bui (1 1 0)) (dash (2 11 0))) "Search, get info, vote for and download AUR packages" tar ((:url . "https://github.com/alezost/aurel") (:commit . "fc7ad208f43f8525f84a18941c9b55f956df8961") (:revdesc . "fc7ad208f43f") (:keywords "tools") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (aurora-config-mode . [(0 0 2) nil "Major mode for Apache Aurora configuration files" tar ((:url . "https://github.com/bdd/aurora-config-mode.el") (:commit . "0a7ca7987c3a0824e25470389c7d25c337a81593") (:revdesc . "v0.0.2-0-g0a7ca7987c3a") (:keywords "languages" "configuration") (:authors ("Berk D. Demir" . "bdd@mindcast.org")) (:maintainers ("Berk D. Demir" . "bdd@mindcast.org")) (:maintainer "Berk D. Demir" . "bdd@mindcast.org"))])
 (auth-source-gopass . [(0 0 3) ((emacs (24 4))) "Gopass integration for auth-source" tar ((:url . "https://github.com/triplem/auth-source-gopass") (:commit . "6f7f0cc0d682f66d11f7fac4fa5c1e79904232da") (:revdesc . "v0.0.3-0-g6f7f0cc0d682") (:authors ("Markus M. May" . "mmay@javafreedom.org")) (:maintainers ("Markus M. May" . "mmay@javafreedom.org")) (:maintainer "Markus M. May" . "mmay@javafreedom.org"))])
 (auth-source-keytar . [(0 1 3) ((emacs (24 4)) (keytar (0 1 2)) (s (1 12 0))) "Integrate auth-source with keytar" tar ((:url . "https://github.com/emacs-grammarly/auth-source-keytar") (:commit . "6edf8ec86d74f1e9853da23052291cc28d2df8bc") (:revdesc . "6edf8ec86d74") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (auth-source-kwallet . [(0 0 1) ((emacs (24 4))) "KWallet integration for auth-source" tar ((:url . "https://github.com/vaartis/auth-source-kwallet") (:commit . "1309cfcd00264a2bb8e0d1b435d4d03e3e02f314") (:revdesc . "1309cfcd0026") (:authors ("Ekaterina Vaartis" . "vaartis@kotobank.ch")) (:maintainers ("Ekaterina Vaartis" . "vaartis@kotobank.ch")) (:maintainer "Ekaterina Vaartis" . "vaartis@kotobank.ch"))])
 (auth-source-xoauth2 . [(1 0) ((emacs (26 1))) "Integrate auth-source with XOAUTH2" tar ((:url . "https://github.com/ccrusius/auth-source-xoauth2") (:commit . "5e646a32c9ba31a015a09fce1ad711b85717119a") (:revdesc . "v1.0-0-g5e646a32c9ba") (:authors ("Cesar Crusius" . "ccrusius@google.com")) (:maintainers ("Cesar Crusius" . "ccrusius@google.com")) (:maintainer "Cesar Crusius" . "ccrusius@google.com"))])
 (auto-compile . [(2 0 3) ((emacs (26 1))) "Automatically compile Emacs Lisp libraries" tar ((:url . "https://github.com/emacscollective/auto-compile") (:commit . "5cc4e97443727554357f6c57614f12ca87419627") (:revdesc . "v2.0.3-0-g5cc4e9744372") (:keywords "compile" "convenience" "lisp") (:authors ("Jonas Bernoulli" . "emacs.auto-compile@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.auto-compile@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.auto-compile@jonas.bernoulli.dev"))])
 (auto-complete . [(1 5 1) ((popup (0 5 0)) (cl-lib (0 5))) "Auto Completion for GNU Emacs" tar ((:url . "https://github.com/auto-complete/auto-complete") (:commit . "0655b7f1e6c0f8475adc55f2b86404a877f26a77") (:revdesc . "v1.5.1-0-g0655b7f1e6c0") (:keywords "completion" "convenience") (:authors ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com")) (:maintainers ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com")) (:maintainer "Tomohiro Matsuyama" . "m2ym.pub@gmail.com"))])
 (auto-complete-clang-async . [(0 5) nil "Auto Completion source for clang for GNU Emacs" tar ((:url . "https://github.com/Golevka/emacs-clang-complete-async") (:commit . "a5114e3477793ccb9420acc5cd6a1cb26be65964") (:revdesc . "v0.5-0-ga5114e347779") (:keywords "completion" "convenience"))])
 (auto-complete-exuberant-ctags . [(0 0 7) ((auto-complete (1 4 0))) "Exuberant ctags auto-complete.el source" tar ((:url . "https://github.com/k1LoW/auto-complete-exuberant-ctags") (:commit . "ff6121ff8b71beb5aa606d28fd389c484ed49765") (:revdesc . "ff6121ff8b71") (:keywords "anto-complete" "exuberant ctags") (:authors ("Kenichirou Oyama" . "k1lowxb@gmail.com")) (:maintainers ("Kenichirou Oyama" . "k1lowxb@gmail.com")) (:maintainer "Kenichirou Oyama" . "k1lowxb@gmail.com"))])
 (auto-complete-nxml . [(0 5 0) ((auto-complete (1 4))) "Do completion by auto-complete.el on nXML-mode" tar ((:url . "https://github.com/aki2o/auto-complete-nxml") (:commit . "ac7b09a23e45f9bd02affb31847263de4180163a") (:revdesc . "ac7b09a23e45") (:keywords "completion" "html" "xml") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (auto-complete-pcmp . [(0 0 2) ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 1))) "Provide auto-complete sources using pcomplete results" tar ((:url . "https://github.com/aki2o/auto-complete-pcmp") (:commit . "2595d3dab1ef3549271ca922f212928e9d830eec") (:revdesc . "2595d3dab1ef") (:keywords "completion") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (auto-complete-sage . [(0 0 5) ((auto-complete (1 5 0)) (sage-shell-mode (0 0 8))) "An auto-complete source for sage-shell-mode" tar ((:url . "https://github.com/sagemath/auto-complete-sage") (:commit . "a61a4e58b14134712e0737280281c0b10e56da93") (:revdesc . "a61a4e58b141") (:keywords "sage" "math" "auto-complete") (:authors ("Sho Takemori" . "stakemorii@gmail.com")) (:maintainers ("Sho Takemori" . "stakemorii@gmail.com")) (:maintainer "Sho Takemori" . "stakemorii@gmail.com"))])
 (auto-dark . [(0 13 2) ((emacs (24 4))) "Automatically sets the dark-mode theme based on macOS/Linux/Windows status" tar ((:url . "https://github.com/LionyxML/auto-dark-emacs") (:commit . "117e20cddf171bcc288dac32907eb5d856951268") (:revdesc . "117e20cddf17") (:keywords "macos" "windows" "linux" "themes" "tools" "faces") (:authors ("Tim Harper" . "timcharperatgmaildotcom") ("Vincent Zhang" . "seagle0128@gmail.com") ("Jonathan Arnett" . "jonathan.arnett@protonmail.com") ("Greg Pfeil" . "greg@technomadic.org")) (:maintainers ("Tim Harper" . "timcharperatgmaildotcom") ("Vincent Zhang" . "seagle0128@gmail.com") ("Jonathan Arnett" . "jonathan.arnett@protonmail.com") ("Greg Pfeil" . "greg@technomadic.org")) (:maintainer "Tim Harper" . "timcharperatgmaildotcom"))])
 (auto-dictionary . [(1 1) nil "Automatic dictionary switcher for flyspell" tar ((:url . "https://github.com/nschum/auto-dictionary-mode") (:commit . "0e3567a81f7bb0ad53ed9f20c7d3d1ac40c26ad1") (:revdesc . "1.1-0-g0e3567a81f7b") (:keywords "wp") (:authors ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainers ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainer "Nikolaj Schumacher" . "bugs*nschumde"))])
 (auto-highlight-symbol . [(1 61) ((emacs (26 1)) (ht (2 3))) "Automatic highlighting current symbol minor mode" tar ((:url . "https://github.com/elp-revive/auto-highlight-symbol") (:commit . "ca285d84e4a22514adaff2f0ba39657e296f4fff") (:revdesc . "ca285d84e4a2") (:keywords "highlight" "face" "match" "convenience") (:authors ("Mitsuo Saito" . "arch320@NOSPAM.gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (auto-indent-mode . [(0 126) nil "Auto indent Minor mode" tar ((:url . "https://github.com/mattfidler/auto-indent-mode.el") (:commit . "ad7032ee058a74405d04d775b0b384351536bc53") (:revdesc . "v0.126-0-gad7032ee058a") (:keywords "auto" "indentation"))])
 (auto-minor-mode . [(20180527 1) ((emacs (24 4))) "Enable minor modes by file name and contents" tar ((:url . "https://github.com/joewreschnig/auto-minor-mode") (:commit . "c62f4e04c7b73835c399f0348bea0ade2720bcbb") (:revdesc . "c62f4e04c7b7") (:keywords "convenience") (:authors ("Joe Wreschnig" . "joe.wreschnig@gmail.com")) (:maintainers ("Joe Wreschnig" . "joe.wreschnig@gmail.com")) (:maintainer "Joe Wreschnig" . "joe.wreschnig@gmail.com"))])
 (auto-package-update . [(1 6 1) ((emacs (24 4)) (dash (2 1 0))) "Automatically update Emacs packages" tar ((:url . "https://github.com/rranelli/auto-package-update.el") (:commit . "cdef79f9fc6f8347fdd05664978fb9a948ea0410") (:revdesc . "cdef79f9fc6f") (:keywords "package" "update"))])
 (auto-rename-tag . [(0 3 5) ((emacs (24 4))) "Automatically rename paired HTML/XML tag" tar ((:url . "https://github.com/emacs-vs/auto-rename-tag") (:commit . "88c5236280ff8212ff5c74f3e2e654c1a288dbf2") (:revdesc . "88c5236280ff") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (auto-shell-command . [(1 0 2) ((deferred (20130312)) (popwin (20130329))) "Run the shell command asynchronously that you specified when you save the file" tar ((:url . "https://github.com/ongaeshi/auto-shell-command") (:commit . "59d4abce779a3ce3e920592bf5696b54b2e192c7") (:revdesc . "59d4abce779a") (:keywords "shell" "save" "async" "deferred" "auto"))])
 (auto-sort-mode . [(0 1 4) ((emacs (24 1))) "Automatically sort lines between two delimiters" tar ((:url . "https://github.com/rweir/auto-sort-mode") (:commit . "3ffa4e2a76a6dda949fdfd200f623a17c4796559") (:revdesc . "0.1.4-0-g3ffa4e2a76a6") (:keywords "sorting" "sort" "matching" "tools") (:authors ("Rob Weir" . "rweir@ertius.org")) (:maintainers ("Rob Weir" . "rweir@ertius.org")) (:maintainer "Rob Weir" . "rweir@ertius.org"))])
 (auto-sudoedit . [(1 1 0) ((emacs (26 1)) (f (0 19 0))) "Auto sudo edit by tramp" tar ((:url . "https://github.com/ncaq/auto-sudoedit") (:commit . "738fd22452f00fa05daf200f997cb5db2531a211") (:revdesc . "738fd22452f0") (:authors ("ncaq" . "ncaq@ncaq.net")) (:maintainers ("ncaq" . "ncaq@ncaq.net")) (:maintainer "ncaq" . "ncaq@ncaq.net"))])
 (auto-virtualenv . [(2 2 0) ((cl-lib (0 5))) "Automatically activate Python virtualenvs based on project directory" tar ((:url . "https://github.com/marcwebbie/auto-virtualenv") (:commit . "1f8efba02ef455aaa9cb84ab179949810e20213a") (:revdesc . "v2.2.0-0-g1f8efba02ef4") (:keywords "python" "virtualenv" "environment" "tools" "projects") (:authors ("Marcwebbie" . "marcwebbie@gmail.com")) (:maintainers ("Marcwebbie" . "marcwebbie@gmail.com")) (:maintainer "Marcwebbie" . "marcwebbie@gmail.com"))])
 (auto-yasnippet . [(0 3 0) ((yasnippet (0 8 0))) "Quickly create disposable yasnippets" tar ((:url . "https://github.com/abo-abo/auto-yasnippet") (:commit . "5cc54edbe03c0061bf69883a3e39d3bb16019e0f") (:revdesc . "5cc54edbe03c") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com"))])
 (autobuild . [(2 0) ((emacs (26 1)) (selcand (0 0 1))) "Define and execute build rules and compilation pipelines" tar ((:url . "https://github.com/erjoalgo/autobuild") (:commit . "151edbe52e7bea02155e7381450956c571648077") (:revdesc . "v2.0-0-g151edbe52e7b") (:keywords "compile" "build" "pipeline" "autobuild" "extensions" "processes" "tools") (:maintainers ("concat \"erjoalgo\" \"@\" \"gmail\" \".com\"" . "")) (:maintainer "concat \"erjoalgo\" \"@\" \"gmail\" \".com\"" . ""))])
 (autodisass-java-bytecode . [(1 3) nil "Automatically disassemble Java bytecode" tar ((:url . "https://github.com/gbalats/autodisass-java-bytecode") (:commit . "3d61dbe266133c950b39e880f78d142751c7dc4c") (:revdesc . "3d61dbe26613") (:keywords "convenience" "data" "files") (:authors ("George Balatsouras" . "gbalatsgmailcom")) (:maintainers ("George Balatsouras" . "gbalatsgmailcom")) (:maintainer "George Balatsouras" . "gbalatsgmailcom"))])
 (autodisass-llvm-bitcode . [(1 1) nil "Automatically disassemble LLVM bitcode" tar ((:url . "https://github.com/gbalats/autodisass-llvm-bitcode") (:commit . "14bb1bfe2be3b04d6e0c87a7a9d1e88ce15506d0") (:revdesc . "14bb1bfe2be3") (:keywords "convenience" "data" "files") (:authors ("George Balatsouras" . "gbalatsgmailcom")) (:maintainers ("George Balatsouras" . "gbalatsgmailcom")) (:maintainer "George Balatsouras" . "gbalatsgmailcom"))])
 (autothemer . [(0 2 17) ((dash (2 10 0)) (emacs (26 1))) "Conveniently define themes" tar ((:url . "https://github.com/jasonm23/autothemer") (:commit . "d4bd4427f541b7a0803a9ef849cc935c0f86df17") (:revdesc . "d4bd4427f541") (:maintainers ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainer "Jason Milkins" . "jasonm23@gmail.com"))])
 (avy . [(0 5 0) ((emacs (24 1)) (cl-lib (0 5))) "Jump to arbitrary positions in visible text and select text quickly" tar ((:url . "https://github.com/abo-abo/avy") (:commit . "f2cf43b5372a6e2a7c101496c47caaf03338de36") (:revdesc . "f2cf43b5372a") (:keywords "point" "location") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com"))])
 (avy-embark-collect . [(1 1) ((emacs (25 1)) (embark (0 9)) (avy (0 5))) "Use avy to jump to Embark Collect entries" tar ((:url . "https://github.com/oantolin/embark") (:commit . "195add1f1ccd1059472c9df7334c97c4d155425e") (:revdesc . "195add1f1ccd") (:keywords "convenience") (:authors ("Omar Antolín Camarena" . "omar@matem.unam.mx")) (:maintainers ("Omar Antolín Camarena" . "omar@matem.unam.mx")) (:maintainer "Omar Antolín Camarena" . "omar@matem.unam.mx"))])
 (avy-menu . [(0 1 1) ((emacs (24 3)) (avy (0 3 0))) "Library providing avy-powered popup menu" tar ((:url . "https://github.com/mrkkrp/avy-menu") (:commit . "71b71e64900d0637e17013781042e086e9bf56e7") (:revdesc . "71b71e64900d") (:keywords "popup" "menu") (:authors ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainers ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainer "Mark Karpov" . "markkarpov92@gmail.com"))])
 (avy-migemo . [(0 3 2) ((emacs (24 4)) (avy (0 4 0)) (migemo (1 9))) "Avy with migemo" tar ((:url . "https://github.com/momomo5717/avy-migemo") (:commit . "ce87777bea76c45be5f185e9fe356a8efe5c2d16") (:revdesc . "0.3.2-0-gce87777bea76") (:keywords "avy" "migemo"))])
 (avy-zap . [(0 1 4) ((avy (0 2 0))) "Zap to char using `avy'" tar ((:url . "https://github.com/cute-jumper/avy-zap") (:commit . "67fed60d0dfe9087ca4fe3332f4a78e775b8d239") (:revdesc . "67fed60d0dfe") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (babashka . [(1 0 8) ((emacs (27 1)) (parseedn (1 1 0))) "Babashka Tasks Interface" tar ((:url . "https://github.com/licht1stein/babashka.el") (:commit . "4ea9d7febf3e9d301c91231ba2833f3417ba9059") (:revdesc . "4ea9d7febf3e") (:authors ("Mykhaylo Bilyanskyy" . "mb@m1k.pw")) (:maintainers ("Mykhaylo Bilyanskyy" . "mb@m1k.pw")) (:maintainer "Mykhaylo Bilyanskyy" . "mb@m1k.pw"))])
 (babel . [(1 7) nil "Interface to web translation services such as Babelfish" tar ((:url . "https://github.com/juergenhoetzel/babel") (:commit . "a6028ec6780f22b5b15c4458d968f7b49be3974b") (:revdesc . "a6028ec6780f") (:keywords "translation" "web") (:authors ("Juergen Hoetzel" . "juergen@hoetzel.info") ("Eric Marsden" . "emarsden@laas.fr")) (:maintainers ("Juergen Hoetzel" . "juergen@hoetzel.info") ("Eric Marsden" . "emarsden@laas.fr")) (:maintainer "Juergen Hoetzel" . "juergen@hoetzel.info"))])
 (back-button . [(0 6 6) ((nav-flash (1 0 0)) (smartrep (0 0 3)) (ucs-utils (0 7 2)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Visual navigation through mark rings" tar ((:url . "https://github.com/rolandwalker/back-button") (:commit . "c7b50a3e087a8dc5588d7292379cd387a1afff87") (:revdesc . "v0.6.6-0-gc7b50a3e087a") (:keywords "convenience" "navigation" "interface") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (backline . [(1 0 2) ((emacs (26 1)) (compat (30 0 0 0)) (outline-minor-faces (1 0 2))) "Preserve appearance of outline headings" tar ((:url . "https://github.com/tarsius/backline") (:commit . "9c791fb9a4a2e4a09443ec8b0da8f1f10890c0c6") (:revdesc . "v1.0.2-0-g9c791fb9a4a2") (:keywords "outlines") (:authors ("Jonas Bernoulli" . "emacs.backline@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.backline@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.backline@jonas.bernoulli.dev"))])
 (badwolf-theme . [(1 2) ((emacs (24))) "Bad Wolf color theme" tar ((:url . "https://github.com/bkruczyk/badwolf-emacs") (:commit . "24a557f92a702f632901a5b7bee59945a0a8cde9") (:revdesc . "1.2-0-g24a557f92a70") (:keywords "themes") (:authors ("bkruczyk" . "bartlomiej.kruczyk@gmail.com")) (:maintainers ("bkruczyk" . "bartlomiej.kruczyk@gmail.com")) (:maintainer "bkruczyk" . "bartlomiej.kruczyk@gmail.com"))])
 (banner-comment . [(2 7) ((emacs (24 4))) "For producing banner comments" tar ((:url . "https://github.com/WJCFerguson/banner-comment") (:commit . "ac52f6b24e590787a385c08cc3751d6f2ddca815") (:revdesc . "ac52f6b24e59") (:keywords "convenience") (:authors ("James Ferguson" . "james@faff.org")) (:maintainers ("James Ferguson" . "james@faff.org")) (:maintainer "James Ferguson" . "james@faff.org"))])
 (base16-theme . [(3 2) nil "Collection of themes built on combinations of 16 base colors" tar ((:url . "https://github.com/tinted-theming/base16-emacs") (:commit . "a01e1fe184dbcd5d0c7ed706ae144eb9299cd417") (:revdesc . "a01e1fe184db") (:authors ("Kaleb Elwert" . "belak@coded.io")) (:maintainers ("Kaleb Elwert" . "belak@coded.io")) (:maintainer "Kaleb Elwert" . "belak@coded.io"))])
 (base32 . [(1 1) ((emacs (27 1))) "Base32 support" tar ((:url . "https://gitlab.com/fledermaus/totp.el") (:commit . "927257e97a602b6979a75028e8417bf1499582d4") (:revdesc . "927257e97a60") (:keywords "tools") (:authors ("Vivek Das Mohapatra" . "vivek@etla.org")) (:maintainers ("Vivek Das Mohapatra" . "vivek@etla.org")) (:maintainer "Vivek Das Mohapatra" . "vivek@etla.org"))])
 (bash-completion . [(3 1 1) ((emacs (25 3))) "Bash completion for the shell buffer" tar ((:url . "https://github.com/szermatt/emacs-bash-completion") (:commit . "a021468eec8ff8cacb74a9ea595d3587186e29ea") (:revdesc . "a021468eec8f") (:keywords "convenience" "unix") (:authors ("Stephane Zermatten" . "szermatt@gmx.net")) (:maintainers ("Stephane Zermatten" . "szermatt@gmail.com")) (:maintainer "Stephane Zermatten" . "szermatt@gmail.com"))])
 (basic-ide . [(0 0 3) ((emacs (25)) (basic-mode (0 4 2)) (company (0 9 12)) (flycheck (0 22)) (dash (2 12 0)) (f (0 17 0))) "BASIC IDE c64" tar ((:url . "https://gitlab.com/sasanidas/emacs-c64-basic-ide") (:commit . "5bfd5f91b9f91e46158e0419c6bb5c350e7684a1") (:revdesc . "5bfd5f91b9f9") (:keywords "languages" "basic") (:authors ("Fermin MF" . "fmfs@posteo.net")) (:maintainers ("Fermin MF" . "fmfs@posteo.net")) (:maintainer "Fermin MF" . "fmfs@posteo.net"))])
 (basic-mode . [(1 2 1) ((seq (2 20)) (emacs (25 1))) "Major mode for editing BASIC code" tar ((:url . "https://github.com/dykstrom/basic-mode") (:commit . "1dc1a635d6d80668c8a583b974205e49ff0fc3ce") (:revdesc . "1.2.1-0-g1dc1a635d6d8") (:keywords "basic" "languages"))])
 (battery-notifier . [(0 2 2) ((alert (1 3))) "Notify when battery capacity is low" tar ((:url . "https://github.com/jasonmj/battery-notifier") (:commit . "ae2043db954e131d9de7347ab1a6107fd07e8893") (:revdesc . "ae2043db954e") (:keywords "hardware" "battery") (:authors ("Jason Johnson" . "(jason@fullsteamlabs.com)")) (:maintainers ("Jason Johnson" . "(jason@fullsteamlabs.com)")) (:maintainer "Jason Johnson" . "(jason@fullsteamlabs.com)"))])
 (bbcode-mode . [(2 3 0) ((emacs (24)) (cl-lib (0 5))) "Major mode for phpBB posts (BBCode markup)" tar ((:url . "https://github.com/lassik/emacs-bbcode-mode") (:commit . "e16619c80ea21154b4a4ccc2e13d0077e97c9caf") (:revdesc . "e16619c80ea2") (:keywords "bbcode" "languages") (:authors ("Eric James Michael Ritz" . "lobbyjones@gmail.com")) (:maintainers ("Lassi Kortela" . "lassi@lassi.io")) (:maintainer "Lassi Kortela" . "lassi@lassi.io"))])
 (bbdb . [(3 2) ((emacs (24))) "Core of BBDB" tar ((:url . "https://git.savannah.nongnu.org/git/bbdb.git") (:commit . "f18720ff5cd963a0bf6fc0e41293e50c0172b8ae") (:revdesc . "v3.2-0-gf18720ff5cd9"))])
 (bbdb- . [(0 0 2) ((bbdb (20140123 1541)) (log4e (0 2 0)) (yaxception (0 1))) "Provide interface for more easily search/choice than BBDB" tar ((:url . "https://github.com/aki2o/bbdb-") (:commit . "2839e84c894de2513af41053e80a277a1b483d22") (:revdesc . "2839e84c894d") (:keywords "bbdb" "news" "mail") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (bbdb-vcard . [(0 3) nil "VCard import/export for BBDB" tar ((:url . "https://github.com/tohojo/bbdb-vcard") (:commit . "9e11fafef1a94bc6395bd1eeacd00f94848ac560") (:revdesc . "0.3-0-g9e11fafef1a9") (:keywords "data" "calendar" "mail" "news") (:authors ("Bert Burgemeister" . "trebbu@googlemail.com")) (:maintainers ("Bert Burgemeister" . "trebbu@googlemail.com")) (:maintainer "Bert Burgemeister" . "trebbu@googlemail.com"))])
 (bbdb2erc . [(0 1 5) ((bbdb (3 0))) "Make bbdb show if pal is online with ERC, click i to chat" tar ((:url . "https://github.com/unhammer/bbdb2erc") (:commit . "40b89e961762af3e7ade3a1844a9fbcd4084ac65") (:revdesc . "v.0.1.5-0-g40b89e961762") (:keywords "irc" "contacts" "chat" "client" "internet") (:authors ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainers ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainer "Kevin Brubeck Unhammer" . "unhammer@fsfe.org"))])
 (beacon . [(1 3 4) ((seq (2 14))) "Highlight the cursor whenever the window scrolls" tar ((:url . "https://github.com/Malabarba/beacon") (:commit . "729338b02a0e331a4faf475da9f54771a3470106") (:revdesc . "729338b02a0e") (:keywords "convenience") (:authors ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainers ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com"))])
 (beeminder . [(1 2 0) ((emacs (24 3)) (seq (2 16)) (org (7))) "Emacs interface for Beeminder" tar ((:url . "https://github.com/Sodaware/beeminder.el") (:commit . "161d9c94c594614a01cb08219693d9e000af4f69") (:revdesc . "161d9c94c594") (:keywords "tools" "beeminder") (:authors ("Phil Newton" . "phil@sodaware.net")) (:maintainers ("Phil Newton" . "phil@sodaware.net")) (:maintainer "Phil Newton" . "phil@sodaware.net"))])
 (beginend . [(2 4 0) ((emacs (25 3))) "Redefine M-< and M-> for some modes" tar ((:url . "https://github.com/DamienCassou/beginend") (:commit . "61f1eb22718fcd9796b47a98702d161ff323a532") (:revdesc . "v2.4.0-0-g61f1eb22718f"))])
 (benchmark-init . [(1 2) ((emacs (24 3))) "Benchmarks for require and load calls" tar ((:url . "https://github.com/dholm/benchmark-init-el") (:commit . "2b34432d79fa0aae8abc3db72db1cb79a28c00b2") (:revdesc . "2b34432d79fa") (:keywords "convenience" "benchmark") (:maintainers ("David Holm" . "dholmster@gmail.com")) (:maintainer "David Holm" . "dholmster@gmail.com"))])
 (benchstat . [(1 0 0) nil "Proper benchmarking made simple" tar ((:url . "https://github.com/quasilyte/benchstat.el") (:commit . "b39a97f3072c2d3c1d3f86790b9e134d05b8d7e6") (:revdesc . "v1.0.0-0-gb39a97f3072c") (:keywords "lisp") (:authors ("Iskander Sharipov" . "quasilyte@gmail.com")) (:maintainers ("Iskander Sharipov" . "quasilyte@gmail.com")) (:maintainer "Iskander Sharipov" . "quasilyte@gmail.com"))])
 (better-scroll . [(0 1 4) ((emacs (24 3))) "Improve user experience when scrolling window" tar ((:url . "https://github.com/jcs-elpa/better-scroll") (:commit . "eaa8dae6f048fcff773f3cca2e3113c52ad0463f") (:revdesc . "eaa8dae6f048") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (better-shell . [(1 2 1) ((emacs (24 4))) "Better shell management" tar ((:url . "https://github.com/killdash9/better-shell") (:commit . "70c787b981caeef8c5f8012b170eb7b9f167cd13") (:revdesc . "70c787b981ca") (:keywords "convenience") (:authors ("Russell Black" . "(killdash9@github)")) (:maintainers ("Russell Black" . "(killdash9@github)")) (:maintainer "Russell Black" . "(killdash9@github)"))])
 (bibclean-format . [(0 0 2) ((emacs (24 3)) (reformatter (0 3))) "Reformat BibTeX and Scribe using bibclean" tar ((:url . "https://github.com/peterwvj/bibclean-format") (:commit . "b4003950a925d1c659bc359ab5e88e4441775d77") (:revdesc . "b4003950a925") (:keywords "languages") (:authors ("Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com")) (:maintainers ("Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com")) (:maintainer "Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com"))])
 (biblio . [(0 3) ((emacs (24 3)) (biblio-core (0 2))) "Browse and import bibliographic references from CrossRef, arXiv, DBLP, HAL, Dissemin, and doi.org" tar ((:url . "https://github.com/cpitclaudel/biblio.el") (:commit . "ee52f6cda82ea6fbc3b400e7b12132595cc0374c") (:revdesc . "0.3-0-gee52f6cda82e") (:keywords "bib" "tex" "convenience" "hypermedia") (:authors ("Clément Pit-Claudel" . "clement.pitclaudel@live.com")) (:maintainers ("Clément Pit-Claudel" . "clement.pitclaudel@live.com")) (:maintainer "Clément Pit-Claudel" . "clement.pitclaudel@live.com"))])
 (biblio-core . [(0 3) ((emacs (24 3)) (let-alist (1 0 4)) (seq (1 11)) (dash (2 12 1))) "A framework for looking up and displaying bibliographic entries" tar ((:url . "https://github.com/cpitclaudel/biblio.el") (:commit . "ee52f6cda82ea6fbc3b400e7b12132595cc0374c") (:revdesc . "0.3-0-gee52f6cda82e") (:keywords "bib" "tex" "convenience" "hypermedia") (:authors ("Clément Pit-Claudel" . "clement.pitclaudel@live.com")) (:maintainers ("Clément Pit-Claudel" . "clement.pitclaudel@live.com")) (:maintainer "Clément Pit-Claudel" . "clement.pitclaudel@live.com"))])
 (bibtex-completion . [(2 0 0) ((parsebib (1 0)) (s (1 9 0)) (dash (2 6 0)) (f (0 16 2)) (cl-lib (0 5))) "A BibTeX backend for completion frameworks" tar ((:url . "https://github.com/tmalsburg/helm-bibtex") (:commit . "d6a98ac6f28d2a6a05e203115211c98333d40aca") (:revdesc . "d6a98ac6f28d") (:authors ("Titus von der Malsburg" . "malsburg@posteo.de") ("Justin Burkett" . "justin@burkett.cc")) (:maintainers ("Titus von der Malsburg" . "malsburg@posteo.de")) (:maintainer "Titus von der Malsburg" . "malsburg@posteo.de"))])
 (bicycle . [(1 0 0) ((emacs (26 1)) (compat (30 0 0 0))) "Cycle outline and code visibility" tar ((:url . "https://github.com/tarsius/bicycle") (:commit . "04c3e44eb10303b81c47c1d333df1fa23a224963") (:revdesc . "v1.0.0-0-g04c3e44eb103") (:keywords "outlines") (:authors ("Jonas Bernoulli" . "emacs.bicycle@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.bicycle@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.bicycle@jonas.bernoulli.dev"))])
 (bifocal . [(0 0 6) ((emacs (24 4))) "Split-screen scrolling for comint-mode buffers" tar ((:url . "https://github.com/riscy/bifocal-mode") (:commit . "773a6dde790c4a240e643a9071e4c7bce09d40de") (:revdesc . "773a6dde790c") (:keywords "frames" "processes"))])
 (binclock . [(1 11) ((cl-lib (0 5))) "Display the current time using a binary clock" tar ((:url . "https://github.com/davep/binclock.el") (:commit . "b964e437311e5406a31c0ec7038b3bf1fd02b876") (:revdesc . "b964e437311e") (:keywords "games" "time" "display") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (bind . [(0 9 1) ((emacs (25 1))) "Bind commands to keys" tar ((:url . "https://github.com/repelliuss/bind") (:commit . "2a9b8c4eb0b58c0058da1387811edc8436da49c4") (:revdesc . "2a9b8c4eb0b5") (:authors ("repelliuss" . "https://github.com/repelliuss")) (:maintainers ("repelliuss" . "repelliuss@gmail.com")) (:maintainer "repelliuss" . "repelliuss@gmail.com"))])
 (bind-chord . [(2 4 4) ((emacs (24 3)) (bind-key (1 0)) (key-chord (0 6))) "Key-chord binding helper for use-package-chords" tar ((:url . "https://github.com/jwiegley/use-package") (:commit . "9090080b15486c3e337be254226efe7e5fde4c99") (:revdesc . "2.4.4-0-g9090080b1548") (:keywords "convenience" "tools" "extensions") (:authors ("Justin Talbott" . "justin@waymondo.com")) (:maintainers ("Justin Talbott" . "justin@waymondo.com")) (:maintainer "Justin Talbott" . "justin@waymondo.com"))])
 (bind-map . [(1 1 1) ((emacs (24 3))) "Bind personal keymaps in multiple locations" tar ((:url . "https://github.com/justbur/emacs-bind-map") (:commit . "bf4181e3a41463684adfffc6c5c305b30480e30f") (:revdesc . "bf4181e3a414") (:authors ("Justin Burkett" . "justin@burkett.cc")) (:maintainers ("Justin Burkett" . "justin@burkett.cc")) (:maintainer "Justin Burkett" . "justin@burkett.cc"))])
 (binder . [(0 4 4) ((emacs (24 4)) (seq (2 20))) "Global minor mode to facilitate multi-file writing projects" tar ((:url . "https://github.com/rnkn/binder") (:commit . "f02d6951b778adfa210dd94f177d2608277c94f4") (:revdesc . "v0.4.4-0-gf02d6951b778") (:keywords "files" "outlines" "wp" "text") (:authors ("Paul W. Rankin" . "pwr@bydasein.com")) (:maintainers ("Paul W. Rankin" . "pwr@bydasein.com")) (:maintainer "Paul W. Rankin" . "pwr@bydasein.com"))])
 (bing-dict . [(0 2 4) nil "Minimalists' English-Chinese Bing dictionary" tar ((:url . "https://github.com/cute-jumper/bing-dict.el") (:commit . "52718ae3a3abfa5e5457239ee7ddf8f0c23a79a7") (:revdesc . "52718ae3a3ab") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (binky . [(2 1 0) ((emacs (29 1)) (dash (2 19 1))) "Jump between points like a rabbit" tar ((:url . "https://github.com/liuyinz/binky.el") (:commit . "f2fe74321f87dfe46421a7a7aaaec30b7f831059") (:revdesc . "f2fe74321f87") (:keywords "convenience") (:authors ("liuyinz" . "liuyinz95@gmail.com")) (:maintainers ("liuyinz" . "liuyinz95@gmail.com")) (:maintainer "liuyinz" . "liuyinz95@gmail.com"))])
 (biomejs-format . [(0 1 1) ((emacs (24 1))) "Minor mode to format JS code with Biome on file save" tar ((:url . "https://github.com/yadex205/emacs-biomejs-format") (:commit . "cbfb8aac8bfab6fd893f1ccb4eb9efa29b1b3214") (:revdesc . "v0.1.1-0-gcbfb8aac8bfa") (:keywords "convenience" "wp" "edit" "js") (:maintainers ("Kanon Kakuno" . "yadex205@yadex205.com")) (:maintainer "Kanon Kakuno" . "yadex205@yadex205.com"))])
 (birds-of-paradise-plus-theme . [(0 1 1) nil "A brown/orange light-on-dark theme for Emacs 24 (deftheme)" tar ((:url . "https://github.com/jimeh/birds-of-paradise-plus-theme.el") (:commit . "ba2c4443388a73f2c5e2de0c24d3106676aeb6fa") (:revdesc . "v0.1.1-0-gba2c4443388a") (:keywords "themes") (:authors ("Jim Myhrberg" . "contact@jimeh.me")) (:maintainers ("Jim Myhrberg" . "contact@jimeh.me")) (:maintainer "Jim Myhrberg" . "contact@jimeh.me"))])
 (bison-mode . [(0 3) nil "Major mode for editing bison, yacc and lex files" tar ((:url . "https://github.com/Wilfred/bison-mode") (:commit . "1193903e36adf6770b673c3936ac0fbdac609b95") (:revdesc . "1193903e36ad") (:keywords "bison-mode" "yacc-mode") (:authors ("Eric Beuscher" . "beuscher@eecs.tulane.edu")) (:maintainers ("Eric Beuscher" . "beuscher@eecs.tulane.edu")) (:maintainer "Eric Beuscher" . "beuscher@eecs.tulane.edu"))])
 (bitpack . [(1 0 1) ((emacs (24 3))) "Bit packing functions" tar ((:url . "https://github.com/skeeto/bitpack") (:commit . "f368f9fdfc500a1dfa21560830076a4faa3207b5") (:revdesc . "f368f9fdfc50") (:keywords "c" "comm") (:authors ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainers ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainer "Christopher Wellons" . "wellons@nullprogram.com"))])
 (blackboard-theme . [(1 0) ((emacs (24))) "TextMate Blackboard Theme" tar ((:url . "https://github.com/don9z/blackboard-theme") (:commit . "d8b984f2541bb86eb4363a2b4c94631e49843d4a") (:revdesc . "d8b984f2541b"))])
 (blacken . [(0 2 0) ((emacs (25 2))) "Reformat python buffers using the \"black\" formatter" tar ((:url . "https://github.com/pythonic-emacs/blacken") (:commit . "563c744f545552cb92e8e84d5be4e2cdbabc93ca") (:revdesc . "563c744f5455") (:authors ("Artem Malyshev" . "proofit404@gmail.com")) (:maintainers ("Artem Malyshev" . "proofit404@gmail.com")) (:maintainer "Artem Malyshev" . "proofit404@gmail.com"))])
 (blackjack . [(1 0 3) ((emacs (26 2))) "The game of Blackjack" tar ((:commit . "d8c8d81093254f977778c55f8dc281a96b77d05d") (:authors ("Greg Donald" . "gdonald@gmail.com")) (:maintainers ("Greg Donald" . "gdonald@gmail.com")) (:maintainer "Greg Donald" . "gdonald@gmail.com") (:keywords "card" "game" "games" "blackjack" "21") (:url . "https://github.com/gdonald/blackjack-el"))])
 (blackout . [(1 0) ((emacs (26))) "Better mode lighter overriding" tar ((:url . "https://github.com/radian-software/blackout") (:commit . "87822abd1ed46411368ef91752a7f51c0ef2aee0") (:revdesc . "87822abd1ed4") (:keywords "extensions") (:authors ("Radon Rosborough" . "radon.neon@gmail.com")) (:maintainers ("Radon Rosborough" . "radon.neon@gmail.com")) (:maintainer "Radon Rosborough" . "radon.neon@gmail.com"))])
 (blamer . [(0 9 4) ((emacs (27 1)) (posframe (1 1 7)) (async (1 9 8))) "Show git blame info about current line" tar ((:url . "https://github.com/Artawower/blamer.el") (:commit . "8a79c1f370f7c5f041c980e0b727960462c192ba") (:revdesc . "8a79c1f370f7") (:authors ("Artur Yaroshenko" . "artawower@protonmail.com")) (:maintainers ("Artur Yaroshenko" . "artawower@protonmail.com")) (:maintainer "Artur Yaroshenko" . "artawower@protonmail.com"))])
 (blitzmax-mode . [(1 0 0) ((emacs (24 1))) "A major mode for editing BlitzMax source code" tar ((:url . "https://github.com/Sodaware/blitzmax-mode") (:commit . "d772deff2464d48d018bbe43b1e4b3745a4ac886") (:revdesc . "d772deff2464") (:keywords "languages" "blitzmax"))])
 (blox . [(0 3 0) ((emacs (25 1))) "Interaction with Roblox tooling" tar ((:url . "https://github.com/kennethloeffler/blox") (:commit . "f27e79d6da65d8877ebb4e84a40350b61c3f0362") (:revdesc . "f27e79d6da65") (:keywords "roblox" "rojo" "tools") (:authors ("Kenneth Loeffler" . "kenneth.loeffler@outlook.com")) (:maintainers ("Kenneth Loeffler" . "kenneth.loeffler@outlook.com")) (:maintainer "Kenneth Loeffler" . "kenneth.loeffler@outlook.com"))])
 (bluesound . [(0 2) ((emacs (26 1))) "Play, pause, resume music on a Bluesound player" tar ((:url . "https://git.sr.ht/~rwv/bluesound-el") (:commit . "416b9825db5feea326388ca1bec2614046522006") (:revdesc . "0.2-0-g416b9825db5f") (:keywords "convenience" "multimedia"))])
 (bm . [(202309) nil "Visible bookmarks in buffer" tar ((:url . "https://github.com/joodland/bm") (:commit . "62fd17d27d5f16a92bccc9ce2ad3868c01413985") (:revdesc . "62fd17d27d5f") (:keywords "bookmark" "highlight" "faces" "persistent") (:authors ("Jo Odland" . "jo.odlandgmail.com")) (:maintainers ("Jo Odland" . "jo.odlandgmail.com")) (:maintainer "Jo Odland" . "jo.odlandgmail.com"))])
 (bnf-mode . [(0 4 5) ((cl-lib (0 5)) (emacs (24 3))) "Major mode for editing BNF grammars" tar ((:url . "https://github.com/sergeyklay/bnf-mode") (:commit . "a4fe013fc945d8396930bc6d0dcc1cf9d7102f41") (:revdesc . "0.4.5-0-ga4fe013fc945") (:keywords "languages") (:authors ("Serghei Iakovlev" . "egrep@protonmail.ch")) (:maintainers ("Serghei Iakovlev" . "egrep@protonmail.ch")) (:maintainer "Serghei Iakovlev" . "egrep@protonmail.ch"))])
 (bnfc . [(0 4) ((emacs (24 3))) "Define context-free grammars for the BNFC tool" tar ((:url . "https://github.com/jmitchell/bnfc-mode") (:commit . "1b58df1dd0cb9b81900632fb2843a03b94f56fdb") (:revdesc . "1b58df1dd0cb") (:keywords "languages" "tools") (:authors ("Jacob Mitchell" . "jmitchell@member.fsf.org")) (:maintainers ("Jacob Mitchell" . "jmitchell@member.fsf.org")) (:maintainer "Jacob Mitchell" . "jmitchell@member.fsf.org"))])
 (bog . [(1 3 3) ((cl-lib (0 5))) "Extensions for research notes in Org mode" tar ((:url . "https://github.com/kyleam/bog") (:commit . "6bea27368b0010e04fb7c7894064251940eb21b0") (:revdesc . "v1.3.3-0-g6bea27368b00") (:keywords "bib" "outlines") (:authors ("Kyle Meyer" . "kyle@kyleam.com")) (:maintainers ("Kyle Meyer" . "kyle@kyleam.com")) (:maintainer "Kyle Meyer" . "kyle@kyleam.com"))])
 (bongo . [(1 1) ((cl-lib (0 5)) (emacs (24 1))) "Play music with Emacs" tar ((:url . "https://github.com/dbrock/bongo") (:commit . "9afbf269d33cd3196962423a2c261824611cffe4") (:revdesc . "9afbf269d33c"))])
 (bookmark-view . [(0 2) ((emacs (26))) "Bookmark views" tar ((:url . "https://github.com/minad/bookmark-view") (:commit . "06e41de8ed7050e70627203c93b6132fec7e88d8") (:revdesc . "06e41de8ed70"))])
 (bool-flip . [(1 0 1) ((emacs (24 3))) "Flip the boolean under the point" tar ((:url . "https://github.com/michaeljb/bool-flip") (:commit . "0f7cc9b387429239fb929896511727d4e49a795b") (:revdesc . "0f7cc9b38742") (:keywords "boolean" "convenience" "usability") (:authors ("Michael Brandt" . "michaelbrandt5@gmail.com")) (:maintainers ("Michael Brandt" . "michaelbrandt5@gmail.com")) (:maintainer "Michael Brandt" . "michaelbrandt5@gmail.com"))])
 (boon . [(1 3) ((emacs (26 1)) (dash (2 12 0)) (expand-region (0 10 0)) (multiple-cursors (1 3 0))) "Ergonomic Command Mode for Emacs" tar ((:url . "https://github.com/jyp/boon") (:commit . "ded55a290065e39856266e74fb6eb92795c0c214") (:revdesc . "ded55a290065"))])
 (borg . [(4 1 2) ((emacs (27 1)) (epkg (4 0 2)) (magit (4 1 2))) "Assimilate Emacs packages as Git submodules" tar ((:url . "https://github.com/emacscollective/borg") (:commit . "497e1c02555852ee92d1c0ec70839e9ed93a02b8") (:revdesc . "v4.1.2-0-g497e1c025558") (:keywords "tools") (:authors ("Jonas Bernoulli" . "emacs.borg@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.borg@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.borg@jonas.bernoulli.dev"))])
 (boxes . [(2 3 1) ((emacs (24 3))) "ASCII boxes unlimited!" tar ((:url . "https://github.com/ascii-boxes/boxes") (:commit . "bae35281d0f814c704ef4a174a5f734541e1f457") (:revdesc . "bae35281d0f8") (:keywords "extensions") (:authors ("Jason L. Shiffer" . "jshiffer@zerotao.com")) (:maintainers ("Jason L. Shiffer" . "jshiffer@zerotao.com")) (:maintainer "Jason L. Shiffer" . "jshiffer@zerotao.com"))])
 (boxquote . [(2 3) ((cl-lib (0 5))) "Quote text with a semi-box" tar ((:url . "https://github.com/davep/boxquote.el") (:commit . "fe676396fa7e4372e01bf2c3d9a62e8d53615d46") (:revdesc . "fe676396fa7e") (:keywords "quoting") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (brazilian-holidays . [(2 1 3) ((emacs (26))) "Brazilian holidays" tar ((:url . "https://github.com/jadler/brazilian-holidays") (:commit . "eaf7684da40c2ad1162cee07f3ffd4c1881f7cf6") (:revdesc . "2.1.3-0-geaf7684da40c") (:keywords "calendar" "holidays" "brazilian") (:authors ("Jaguaraquem A. Reinaldo" . "jaguar.adler@gmail.com")) (:maintainers ("Jaguaraquem A. Reinaldo" . "jaguar.adler@gmail.com")) (:maintainer "Jaguaraquem A. Reinaldo" . "jaguar.adler@gmail.com"))])
 (brf . [(2 0) ((fringe-helper (0 1 1)) (emacs (24 3))) "Brf-mode provides features from the legendary editor Brief" tar ((:url . "https://bitbucket.org/MikeWoolley/brf-mode") (:commit . "495d69e5c615a27d928592e0c6c8184e869a23f2") (:revdesc . "v2.00-0-g495d69e5c615") (:keywords "brief" "crisp" "emulations") (:authors ("Mike Woolley" . "mike@bulsara.com")) (:maintainers ("Mike Woolley" . "mike@bulsara.com")) (:maintainer "Mike Woolley" . "mike@bulsara.com"))])
 (brightscript-mode . [(1 1 0) ((emacs (26 3))) "Major mode for editing Brightscript files" tar ((:url . "https://github.com/viseztrance/brightscript-mode") (:commit . "025d6f5a70752c62a28d4f86c053a283b3898a49") (:revdesc . "025d6f5a7075") (:keywords "languages") (:authors ("Daniel Mircea" . "daniel@viseztrance.com")) (:maintainers (nil . "daniel@viseztrance.com")) (:maintainer nil . "daniel@viseztrance.com"))])
 (browse-at-remote . [(0 14 0) ((f (0 17 2)) (s (1 9 0)) (cl-lib (0 5))) "Open github/gitlab/bitbucket/stash/gist/phab/sourcehut page from Emacs" tar ((:url . "https://github.com/rmuslimov/browse-at-remote") (:commit . "771a3079e27f397d2f5a9470b945980fa68ee048") (:revdesc . "0.14.0-0-g771a3079e27f") (:keywords "github" "gitlab" "bitbucket" "gist" "stash" "phabricator" "sourcehut" "pagure") (:authors ("Rustem Muslimov" . "r.muslimov@gmail.com")) (:maintainers ("Rustem Muslimov" . "r.muslimov@gmail.com")) (:maintainer "Rustem Muslimov" . "r.muslimov@gmail.com"))])
 (browse-kill-ring . [(2 0 0) nil "Interactively insert items from kill-ring" tar ((:url . "https://github.com/browse-kill-ring/browse-kill-ring") (:commit . "2a7acf98c348c4f405a6b2ab216224ca14915be8") (:revdesc . "2.0.0-0-g2a7acf98c348") (:keywords "convenience") (:authors ("Colin Walters" . "walters@verbum.org")) (:maintainers ("browse-kill-ring" . "browse-kill-ring@tonotdo.com")) (:maintainer "browse-kill-ring" . "browse-kill-ring@tonotdo.com"))])
 (browse-url-dwim . [(0 6 8) ((string-utils (0 3 2))) "Context-sensitive external browse URL or Internet search" tar ((:url . "https://github.com/rolandwalker/browse-url-dwim") (:commit . "11f1c53126619c7ef1bb5f5d6914ce0b3cce0e30") (:revdesc . "v0.6.8-0-g11f1c5312661") (:keywords "hypermedia") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (bshell . [(1 0) ((emacs (26)) (buffer-manage (1 1))) "Manage and track multiple inferior shells" tar ((:url . "https://github.com/plandes/bshell") (:commit . "57f3409168ec9649508e3ee30d0d2de8f81b960e") (:revdesc . "v1.0-0-g57f3409168ec") (:keywords "unix" "interactive" "shell" "management"))])
 (buffer-flip . [(3 0) nil "Cycle through buffers like Alt-Tab in Windows" tar ((:url . "https://github.com/killdash9/buffer-flip.el") (:commit . "5b85c1cfd37b60c7419e1d4bf8931ea04c0db743") (:revdesc . "5b85c1cfd37b") (:keywords "convenience") (:authors ("Russell Black" . "(killdash9@github)")) (:maintainers ("Russell Black" . "(killdash9@github)")) (:maintainer "Russell Black" . "(killdash9@github)"))])
 (buffer-manage . [(1 1) ((emacs (26 1)) (choice-program (0 13)) (dash (2 17 0))) "Manage buffers" tar ((:url . "https://github.com/plandes/buffer-manage") (:commit . "819bbfd9ae2f028361f484bc3b60d751623a2df5") (:revdesc . "v1.1-0-g819bbfd9ae2f") (:keywords "internal" "maint"))])
 (buffer-move . [(0 6 2) nil "[No description available]" tar ((:url . "https://github.com/lukhas/buffer-move") (:commit . "9bf3ff940011c7af3fdd172fa3ea2511c7a8a190") (:revdesc . "9bf3ff940011") (:keywords "lisp" "convenience"))])
 (buffer-ring . [(0 3 4) ((emacs (25 1)) (dynaring (0 3)) (s (1 12 0)) (ht (2 0))) "Rings and tori for buffer navigation" tar ((:url . "https://github.com/countvajhula/buffer-ring") (:commit . "177d67238c4d126a0270585e21c0f03ae750ca2a") (:revdesc . "0.3.4-0-g177d67238c4d") (:authors ("Mike Mattie" . "codermattie@gmail.com") ("Sid Kasivajhula" . "sid@countvajhula.com")) (:maintainers ("Sid Kasivajhula" . "sid@countvajhula.com")) (:maintainer "Sid Kasivajhula" . "sid@countvajhula.com"))])
 (buffer-sets . [(3 7 2) ((cl-lib (0 5))) "Sets of Buffers for Buffer Management" tar ((:url . "https://git.sr.ht/~swflint/buffer-sets") (:commit . "cdc66804b8a1ec7ddf94d99c7f24b801148b64df") (:revdesc . "3.7.2-0-gcdc66804b8a1") (:keywords "buffer-management") (:authors ("Samuel W. Flint" . "swflint@flintfam.org")) (:maintainers ("Samuel W. Flint" . "swflint@flintfam.org")) (:maintainer "Samuel W. Flint" . "swflint@flintfam.org"))])
 (buffer-terminator . [(1 1 0) ((emacs (24 4))) "Safely Terminate/Kill Buffers Automatically" tar ((:url . "https://github.com/jamescherti/buffer-terminator.el") (:commit . "8ea821806e58d9e5b7818c3ad2f5bcb51aa1a7ab") (:revdesc . "1.1.0-0-g8ea821806e58") (:keywords "convenience"))])
 (buffer-utils . [(0 1 0) nil "Buffer-manipulation utility functions" tar ((:url . "https://github.com/rolandwalker/buffer-utils") (:commit . "b4d325543e25518d725a2122b49cd72a0d6a079a") (:revdesc . "v0.1.0-0-gb4d325543e25") (:keywords "extensions") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (buffer-watcher . [(0 1) ((f (0 16 2))) "Makes it easy to run shell scripts per filetype/directory when a buffer is saved" tar ((:url . "https://github.com/NicolasPetton/buffer-watcher") (:commit . "353d76882c65d44341b6f28bd86279dda00c3440") (:revdesc . "0.1-0-g353d76882c65") (:authors ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainers ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainer "Nicolas Petton" . "nicolas@petton.fr"))])
 (buffer-wrap . [(0 1 5) ((emacs (24 4))) "Wrap the beginning and the end of buffer" tar ((:url . "https://github.com/jcs-elpa/buffer-wrap") (:commit . "2b12ed29cbcd733ad21d91475d1fcbd4092c604e") (:revdesc . "2b12ed29cbcd") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (bufler . [(0 3) ((emacs (26 3)) (dash (2 18)) (f (0 17)) (pretty-hydra (0 2 2)) (magit-section (0 1)) (map (2 1))) "Group buffers into workspaces with programmable rules" tar ((:url . "https://github.com/alphapapa/bufler.el") (:commit . "3a6176d0e074bb00ea8b3fef4f7e03957a3ea058") (:revdesc . "v0.3-0-g3a6176d0e074") (:keywords "convenience") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (bufshow . [(0 1 0) nil "[No description available]" tar ((:url . "https://github.com/pjones/bufshow") (:commit . "d8424e412d63dcc721c64fbd2ddd2420a03b4e8b") (:revdesc . "d8424e412d63") (:authors ("Peter Jones" . "pjones@pmade.com")) (:maintainers ("Peter Jones" . "pjones@pmade.com")) (:maintainer "Peter Jones" . "pjones@pmade.com"))])
 (bug-reference-github . [(1 0 0) nil "Set `bug-reference-url-format' in Github repos" tar ((:url . "https://github.com/arnested/bug-reference-github") (:commit . "f570a0532bfb44f095b42cf68ab1f69799101137") (:revdesc . "v1.0.0-0-gf570a0532bfb") (:keywords "programming" "tools") (:authors ("Arne Jørgensen" . "arne@arnested.dk")) (:maintainers ("Arne Jørgensen" . "arne@arnested.dk")) (:maintainer "Arne Jørgensen" . "arne@arnested.dk"))])
 (bui . [(1 2 1) ((emacs (24 3)) (dash (2 11 0))) "Buffer interface library" tar ((:url . "https://github.com/alezost/bui.el") (:commit . "9162c24b75799857d54838d961c60776ffcd657e") (:revdesc . "9162c24b7579") (:keywords "tools") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (build-farm . [(0 2 2) ((emacs (24 4)) (bui (1 2 1)) (magit-popup (2 1 0))) "Interface for Nix and Guix build farms (Hydra and Cuirass)" tar ((:url . "https://github.com/alezost/build-farm.el") (:commit . "5c268a3c235ace0d79ef1ec82c440120317e06f5") (:revdesc . "5c268a3c235a") (:keywords "tools") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (build-status . [(0 0 2) ((cl-lib (0 5))) "Mode line build status indicator" tar ((:url . "https://github.com/sshaw/build-status") (:commit . "c29a0146c5d0be274f5e17921e01698f572c23a1") (:revdesc . "c29a0146c5d0") (:keywords "mode-line" "ci" "circleci" "travis-ci") (:authors ("Skye Shaw" . "skye.shaw@gmail.com")) (:maintainers ("Skye Shaw" . "skye.shaw@gmail.com")) (:maintainer "Skye Shaw" . "skye.shaw@gmail.com"))])
 (bundler . [(1 1 0) ((inf-ruby (2 1))) "Interact with Bundler from Emacs" tar ((:url . "https://github.com/endofunky/bundler.el") (:commit . "4cb4fafe092d587cc9e58ff61cf900fb7f409adf") (:revdesc . "4cb4fafe092d") (:keywords "bundler" "ruby") (:authors ("Tobias Svensson" . "tob@tobiassvensson.co.uk")) (:maintainers ("Tobias Svensson" . "tob@tobiassvensson.co.uk")) (:maintainer "Tobias Svensson" . "tob@tobiassvensson.co.uk"))])
 (burly . [(0 3) ((emacs (27 1)) (map (2 1))) "Save and restore frame/window configurations with buffers" tar ((:url . "https://github.com/alphapapa/burly.el") (:commit . "3397eb2599bf76de1b96563e5a9201550e33a810") (:revdesc . "v0.3-0-g3397eb2599bf") (:keywords "convenience") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (bury-successful-compilation . [(0 1 2) nil "Bury the *compilation* buffer after successful compilation" tar ((:url . "https://github.com/EricCrosson/bury-successful-compilation") (:commit . "064817b44a431476305099301311def0a2d9d543") (:revdesc . "064817b44a43") (:keywords "compilation") (:authors ("Eric Crosson" . "esc@ericcrosson.com")) (:maintainers ("Eric Crosson" . "esc@ericcrosson.com")) (:maintainer "Eric Crosson" . "esc@ericcrosson.com"))])
 (butler . [(0 2 6) ((deferred (0 3 2)) (json (1 2)) (emacs (24))) "Emacs client for Jenkins" tar ((:url . "https://github.com/AshtonKem/Butler") (:commit . "454cb9d3980b9ac555f3f77e4e48056de07f051b") (:revdesc . "454cb9d3980b") (:keywords "jenkins" "hudson" "ci") (:authors ("Ashton Kemerling" . "ashtonkemerling@gmail.com")) (:maintainers ("Ashton Kemerling" . "ashtonkemerling@gmail.com")) (:maintainer "Ashton Kemerling" . "ashtonkemerling@gmail.com"))])
 (buttercup . [(1 36) ((emacs (24 4))) "Behavior-Driven Emacs Lisp Testing" tar ((:url . "https://github.com/jorgenschaefer/emacs-buttercup") (:commit . "bf01a33f8bc2d3664121d3b20f7496e67ce55e6a") (:revdesc . "v1.36-0-gbf01a33f8bc2") (:authors ("Jorgen Schaefer" . "contact@jorgenschaefer.de")) (:maintainers ("Ola Nilsson" . "ola.nilsson@gmail.com")) (:maintainer "Ola Nilsson" . "ola.nilsson@gmail.com"))])
 (buttercup-junit . [(1 1 2) ((emacs (24 4)) (buttercup (1 15))) "JUnit reporting for Buttercup" tar ((:url . "https://bitbucket.org/olanilsson/buttercup-junit") (:commit . "877daa33fc3fc23f2a3d633e28650c04534458b5") (:revdesc . "v1.1.2-0-g877daa33fc3f") (:keywords "tools" "test" "unittest" "buttercup" "ci") (:authors ("Ola Nilsson" . "ola.nilsson@gmail.com")) (:maintainers ("Ola Nilsson" . "ola.nilsson@gmail.com")) (:maintainer "Ola Nilsson" . "ola.nilsson@gmail.com"))])
 (button-lock . [(1 0 2) nil "Clickable text defined by regular expression" tar ((:url . "https://github.com/rolandwalker/button-lock") (:commit . "cd0bf4a3c2f224d851e6ed8a54a6e80c129b225f") (:revdesc . "v1.0.2-0-gcd0bf4a3c2f2") (:keywords "mouse" "button" "hypermedia" "extensions") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (buttons . [(0 0 3) ((emacs (24 1)) (cl-lib (0 3))) "Define and visualize hierarchies of keymaps" tar ((:url . "https://github.com/erjoalgo/emacs-buttons") (:commit . "ae97996cc52bf0523f5b6626db14987c3b56b3e2") (:revdesc . "0.0.3-0-gae97996cc52b") (:keywords "lisp" "extensions" "convenience" "tools") (:maintainers ("concat \"erjoalgo\" \"@\" \"gmail\" \".com\"" . "")) (:maintainer "concat \"erjoalgo\" \"@\" \"gmail\" \".com\"" . ""))])
 (ca65-mode . [(0 3 3) ((emacs (26 1))) "Major mode for ca65 assembly files" tar ((:url . "https://github.com/wendelscardua/ca65-mode") (:commit . "590d90cc0e1c1864dd7ce03df99b741ba866d52a") (:revdesc . "590d90cc0e1c") (:keywords "languages" "assembly" "ca65" "6502") (:authors ("Wendel Scardua" . "wendel@scardua.net")) (:maintainers ("Wendel Scardua" . "wendel@scardua.net")) (:maintainer "Wendel Scardua" . "wendel@scardua.net"))])
 (cacoo . [(2 1 2) ((concurrent (0 3 1))) "Minor mode for Cacoo : http://cacoo.com" tar ((:url . "https://github.com/kiwanami/emacs-cacoo") (:commit . "c2e6a8830144810cd4e51de3646cb8200bcebbc6") (:revdesc . "c2e6a8830144") (:keywords "convenience" "diagram") (:authors ("SAKURAI Masashi" . "m.sakuraiatmarkkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatmarkkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatmarkkiwanami.net"))])
 (caddyfile-mode . [(0 2) ((emacs (24 3))) "Major mode for Caddy configuration files" tar ((:url . "https://github.com/Schnouki/caddyfile-mode") (:commit . "b0371063adc18d3cbd6dd673ea4fe39d27825d1b") (:revdesc . "v0.2-0-gb0371063adc1") (:keywords "languages") (:authors ("Thomas Jost" . "schnouki@schnouki.net")) (:maintainers ("Thomas Jost" . "schnouki@schnouki.net")) (:maintainer "Thomas Jost" . "schnouki@schnouki.net"))])
 (cake-inflector . [(1 1 1) ((s (1 9 0))) "Lazy porting CakePHP infrector.php to el" tar ((:url . "https://github.com/k1LoW/emacs-cake-inflector") (:commit . "40bf11890842ba305954528694e1c39a8b73737b") (:revdesc . "40bf11890842") (:authors (nil . "k1low[at]101000lab[dot]org")) (:maintainers (nil . "k1low[at]101000lab[dot]org")) (:maintainer nil . "k1low[at]101000lab[dot]org"))])
 (calendar-norway . [(0 9 5) nil "Norwegian calendar" tar ((:url . "https://github.com/unhammer/calendar-norway.el") (:commit . "4dd8c38ef30ad45931c8ae7bcdfd720c3fcffffc") (:revdesc . "0.9.5-0-g4dd8c38ef30a") (:keywords "calendar" "norwegian" "localization") (:authors ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainers ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainer "Kevin Brubeck Unhammer" . "unhammer@fsfe.org"))])
 (calfw . [(1 6) nil "Calendar view framework on Emacs" tar ((:url . "https://github.com/kiwanami/emacs-calfw") (:commit . "c538d3746449b4f0e16b16aad3073d4f7379d805") (:revdesc . "c538d3746449") (:keywords "calendar") (:authors ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatkiwanami.net"))])
 (calfw-cal . [(1 6) nil "Calendar view for emacs diary" tar ((:url . "https://github.com/kiwanami/emacs-calfw") (:commit . "c538d3746449b4f0e16b16aad3073d4f7379d805") (:revdesc . "c538d3746449") (:keywords "calendar") (:authors ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatkiwanami.net"))])
 (calfw-howm . [(1 6) nil "Calendar view for howm" tar ((:url . "https://github.com/kiwanami/emacs-calfw") (:commit . "c538d3746449b4f0e16b16aad3073d4f7379d805") (:revdesc . "c538d3746449") (:keywords "calendar") (:authors ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatkiwanami.net"))])
 (calfw-ical . [(1 6) nil "Calendar view for ical format" tar ((:url . "https://github.com/kiwanami/emacs-calfw") (:commit . "c538d3746449b4f0e16b16aad3073d4f7379d805") (:revdesc . "c538d3746449") (:keywords "calendar") (:authors ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatkiwanami.net"))])
 (calfw-org . [(1 6) nil "Calendar view for org-agenda" tar ((:url . "https://github.com/kiwanami/emacs-calfw") (:commit . "c538d3746449b4f0e16b16aad3073d4f7379d805") (:revdesc . "c538d3746449") (:keywords "calendar" "org") (:authors ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatkiwanami.net"))])
 (calibredb . [(2 13 0) ((emacs (25 1)) (org (9 3)) (transient (0 1 0)) (s (1 12 0)) (dash (2 17 0)) (request (0 3 3)) (esxml (0 3 7))) "Yet another calibre client" tar ((:url . "https://github.com/chenyanming/calibredb.el") (:commit . "a12746cdd2605eba0ff88706473a04492dec84a2") (:revdesc . "a12746cdd260") (:keywords "tools") (:authors ("Damon Chan" . "elecming@gmail.com")) (:maintainers ("Damon Chan" . "elecming@gmail.com")) (:maintainer "Damon Chan" . "elecming@gmail.com"))])
 (call-graph . [(0 1 0) ((emacs (25 1)) (cl-lib (0 6 1)) (hierarchy (0 7 0)) (tree-mode (1 0 0)) (ivy (0 10 0))) "Library to generate call graph for cpp functions" tar ((:commit . "0bbe292b1b9c7ba1d8a65ed5e475f6a53f5f9f27") (:authors ("Huming Chen" . "chenhuming@gmail.com")) (:maintainers ("Huming Chen" . "chenhuming@gmail.com")) (:maintainer "Huming Chen" . "chenhuming@gmail.com") (:keywords "programming" "convenience") (:url . "https://github.com/beacoder/call-graph"))])
 (camcorder . [(1 0) ((emacs (24)) (names (20150000)) (cl-lib (0 5))) "Record screencasts in gif or other formats" tar ((:url . "https://github.com/Malabarba/camcorder.el") (:commit . "b11ca61491a27681bb3131b72b51c105fd996bed") (:revdesc . "b11ca61491a2") (:keywords "multimedia" "screencast") (:authors ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainers ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainer "Artur Malabarba" . "bruce.connor.am@gmail.com"))])
 (caml . [(4 9) ((emacs (24 3))) "Caml mode for GNU Emacs" tar ((:url . "https://github.com/ocaml/caml-mode") (:commit . "2905a436e956c5bba16c4633a6e4c4fceefa6535") (:revdesc . "2905a436e956") (:keywords "ocaml") (:authors ("Jacques Garrigue" . "garrigue@kurims.kyoto-u.ac.jp") ("Ian T Zimmerman" . "itz@rahul.net") ("Damien Doligez" . "damien.doligez@inria.fr")) (:maintainers ("Christophe Troestler" . "Christophe.Troestler@umons.ac.be")) (:maintainer "Christophe Troestler" . "Christophe.Troestler@umons.ac.be"))])
 (cangjie . [(0 7 4) ((emacs (24 4)) (s (1 12 0)) (dash (2 14 1)) (f (0 2 0))) "Retrieve cangjie code for han characters" tar ((:url . "https://github.com/kisaragi-hiu/cangjie.el") (:commit . "b34a28dd06bd95a16b655f1917227925975314bc") (:revdesc . "b34a28dd06bd") (:keywords "convenience" "writing"))])
 (cape . [(1 7) ((emacs (27 1)) (compat (30))) "Completion At Point Extensions" tar ((:url . "https://github.com/minad/cape") (:commit . "9110956a5155d5e3c460160fa1b4dac59322c229") (:revdesc . "9110956a5155") (:keywords "abbrev" "convenience" "matching" "completion" "text") (:authors ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainers ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de"))])
 (capnp-mode . [(1 0 2) nil "Major mode for editing Capn' Proto Files" tar ((:url . "https://github.com/capnproto/capnproto") (:commit . "1a0e12c0a3ba1f0dbbad45ddfef555166e0a14fc") (:revdesc . "1a0e12c0a3ba") (:authors ("Brian Taylor" . "el.wubo@gmail.com")) (:maintainers ("Brian Taylor" . "el.wubo@gmail.com")) (:maintainer "Brian Taylor" . "el.wubo@gmail.com"))])
 (cargo . [(0 4 1) ((emacs (24 3)) (rust-mode (0 2 0))) "Emacs Minor Mode for Cargo, Rust's Package Manager" tar ((:url . "https://github.com/kwrooijen/cargo.el") (:commit . "b0487f95a7de7a1d6f03cdd05220f633977d65a2") (:revdesc . "b0487f95a7de") (:keywords "tools") (:authors ("Kevin W. van Rooijen" . "kevin.van.rooijen@attichacker.com")) (:maintainers ("Kevin W. van Rooijen" . "kevin.van.rooijen@attichacker.com")) (:maintainer "Kevin W. van Rooijen" . "kevin.van.rooijen@attichacker.com"))])
 (cargo-mode . [(0 0 7) ((emacs (25 1))) "Cargo Major Mode. Cargo is the Rust package manager" tar ((:url . "https://github.com/ayrat555/cargo-mode") (:commit . "1b97dec6fc5f8ff3a531f8d6dd33fbcc4ae1ba27") (:revdesc . "1b97dec6fc5f") (:keywords "tools") (:authors ("Ayrat Badykov" . "ayratin555@gmail.com")) (:maintainers ("Ayrat Badykov" . "ayratin555@gmail.com")) (:maintainer "Ayrat Badykov" . "ayratin555@gmail.com"))])
 (caseformat . [(0 1 0) ((emacs (24)) (cl-lib (0 5)) (dash (2 12 1)) (s (1 10 0))) "Format based letter case converter" tar ((:url . "https://github.com/HKey/caseformat") (:commit . "72707c9f0f0819b4e2aa45876432a293aa07f814") (:revdesc . "72707c9f0f08") (:keywords "convenience") (:authors ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainers ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainer "Hiroki YAMAKAWA" . "s06139@gmail.com"))])
 (cask-mode . [(0 1) ((emacs (24 3))) "Major mode for editing Cask files" tar ((:url . "https://github.com/Wilfred/cask-mode") (:commit . "5203b1beac4dd2ee07a6e993bc86719f5f35dbbf") (:revdesc . "5203b1beac4d") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (cask-package-toolset . [(0 9 2) ((emacs (24)) (cl-lib (0 3)) (s (1 6 1)) (dash (1 8 0)) (f (0 10 0)) (commander (0 2 0)) (ansi (0 1 0)) (shut-up (0 1 0))) "Toolsettize your package" tar ((:url . "https://github.com/AdrieanKhisbe/cask-package-toolset.el") (:commit . "2c74cd827e88c7f8360581a841e45f0b794510e7") (:revdesc . "2c74cd827e88") (:keywords "convenience" "tools") (:authors ("Adrien Becchis" . "adriean.khisbe@live.fr")) (:maintainers ("Adrien Becchis" . "adriean.khisbe@live.fr")) (:maintainer "Adrien Becchis" . "adriean.khisbe@live.fr"))])
 (caskxy . [(0 0 5) ((log4e (0 2 0)) (yaxception (0 1))) "Control Cask in Emacs" tar ((:url . "https://github.com/aki2o/caskxy") (:commit . "279f3ab79bd77fe69cb3148a79896b9bf118a9b3") (:revdesc . "279f3ab79bd7") (:keywords "convenience") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (casual . [(2 2 5) ((emacs (29 1)) (transient (0 6 0))) "Transient user interfaces for various modes" tar ((:url . "https://github.com/kickingvegas/casual") (:commit . "b352ed7efe98cbb6d3e9a6a03dee302d0f6bfaf5") (:revdesc . "b352ed7efe98") (:keywords "tools" "wp") (:authors ("Charles Choi" . "kickingvegas@gmail.com")) (:maintainers ("Charles Choi" . "kickingvegas@gmail.com")) (:maintainer "Charles Choi" . "kickingvegas@gmail.com"))])
 (casual-avy . [(2 0 0) ((emacs (29 1)) (avy (0 5 0)) (casual (2 0 0))) "Transient UI for Avy" tar ((:url . "https://github.com/kickingvegas/casual-avy") (:commit . "7e8f7703f4ab4886f27241664aa5e1510103f74e") (:revdesc . "7e8f7703f4ab") (:keywords "tools") (:authors ("Charles Choi" . "kickingvegas@gmail.com")) (:maintainers ("Charles Choi" . "kickingvegas@gmail.com")) (:maintainer "Charles Choi" . "kickingvegas@gmail.com"))])
 (casual-suite . [(2 0 0) ((emacs (29 1)) (casual (2 0 0)) (casual-avy (2 0 0)) (casual-symbol-overlay (2 0 0))) "A suite of opinionated Transient UIs" tar ((:url . "https://github.com/kickingvegas/casual-suite") (:commit . "c590e78d756bc6b3d43ab5cf8618e41b2a5bc88b") (:revdesc . "c590e78d756b") (:keywords "tools") (:authors ("Charles Choi" . "kickingvegas@gmail.com")) (:maintainers ("Charles Choi" . "kickingvegas@gmail.com")) (:maintainer "Charles Choi" . "kickingvegas@gmail.com"))])
 (casual-symbol-overlay . [(2 0 0) ((emacs (29 1)) (casual (2 0 0)) (symbol-overlay (4 2))) "Transient UI for Symbol Overlay" tar ((:url . "https://github.com/kickingvegas/casual-symbol-overlay") (:commit . "1453e7486dd0921f0319f21dd8c8b603e4eb7300") (:revdesc . "1453e7486dd0") (:keywords "tools") (:authors ("Charles Choi" . "kickingvegas@gmail.com")) (:maintainers ("Charles Choi" . "kickingvegas@gmail.com")) (:maintainer "Charles Choi" . "kickingvegas@gmail.com"))])
 (catmacs . [(0 1 1) nil "Simple CAT interface for Yaesu FT991A" tar ((:url . "https://bitbucket.org/pymaximus/catmacs") (:commit . "c6e8277bd2aab3f5fbf10d419111110f3b33564f") (:revdesc . "0.1.1-0-gc6e8277bd2aa") (:keywords "catmacs" "radio" "control" "cat" "yaesu" "ft991a") (:authors ("Frank Singleton" . "b17flyboy@gmail.com")) (:maintainers ("Frank Singleton" . "b17flyboy@gmail.com")) (:maintainer "Frank Singleton" . "b17flyboy@gmail.com"))])
 (catppuccin-theme . [(0 1 0) ((emacs (25 1))) "Catppuccin Theme" tar ((:url . "https://github.com/catppuccin/emacs") (:commit . "f36765cbbd4129aabb22250a87e90a1387bd5dc7") (:revdesc . "V0.1.0-0-gf36765cbbd41") (:maintainers ("pspiagicw" . "pspiagicw@gmail.com")) (:maintainer "pspiagicw" . "pspiagicw@gmail.com"))])
 (cbm . [(0 6) ((cl-lib (0 5))) "Switch to similar buffers" tar ((:url . "https://github.com/akermu/cbm.el") (:commit . "5b41c936ba9f6d170309a85ffebc9939c1050b31") (:revdesc . "5b41c936ba9f") (:keywords "buffers") (:authors ("Lukas Fürmetz" . "fuermetz@mailbox.org")) (:maintainers ("Lukas Fürmetz" . "fuermetz@mailbox.org")) (:maintainer "Lukas Fürmetz" . "fuermetz@mailbox.org"))])
 (cdlatex . [(4 7) nil "Fast input methods for LaTeX environments and math" tar ((:url . "https://github.com/cdominik/cdlatex") (:commit . "b7183c2200392b6d85fca69390f4a65fac7a7b19") (:revdesc . "b7183c220039") (:keywords "tex") (:authors ("Carsten Dominik" . "carsten.dominik@gmail.com")) (:maintainers ("Carsten Dominik" . "carsten.dominik@gmail.com")) (:maintainer "Carsten Dominik" . "carsten.dominik@gmail.com"))])
 (cdnjs . [(0 2 1) ((dash (2 13 0)) (deferred (0 4)) (f (0 17 2)) (pkg-info (0 5))) "A front end for http://cdnjs.com" tar ((:url . "https://github.com/yasuyk/cdnjs.el") (:commit . "ce19880d3ec3d81e6c665d0b1dfea99cc7a3f908") (:revdesc . "ce19880d3ec3") (:keywords "tools") (:authors ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainers ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainer "Yasuyuki Oka" . "yasuyk@gmail.com"))])
 (celery . [(0 0 3) ((emacs (24)) (dash-functional (2 11 0)) (s (1 9 0)) (deferred (0 3 2))) "A minor mode to draw stats from celery and more?" tar ((:url . "https://github.com/ardumont/emacs-celery") (:commit . "163ebede3f6a7f59202ff319675b0873dd1de365") (:revdesc . "163ebede3f6a") (:keywords "celery" "convenience") (:authors ("ardumont" . "eniotna.t@gmail.com")) (:maintainers ("ardumont" . "eniotna.t@gmail.com")) (:maintainer "ardumont" . "eniotna.t@gmail.com"))])
 (centaur-tabs . [(3 2) ((emacs (24 4)) (powerline (2 4)) (cl-lib (0 5))) "Aesthetic, modern looking customizable tabs plugin" tar ((:url . "https://github.com/ema2159/centaur-tabs") (:commit . "eac6522bb9c19c525770822d9f14b4d0ff07324c") (:revdesc . "eac6522bb9c1") (:authors ("Emmanuel Bustos" . "ema2159@gmail.com")) (:maintainers ("Emmanuel Bustos" . "ema2159@gmail.com")) (:maintainer "Emmanuel Bustos" . "ema2159@gmail.com"))])
 (cerbere . [(0 1 0) ((s (1 9 0)) (f (0 16 0)) (go-mode (20140409)) (pkg-info (0 5))) "Unit testing in Emacs for several programming languages" tar ((:url . "https://github.com/nlamirault/cerbere") (:commit . "11de1e7ec5126083ae697f5a9993facdb9895f9d") (:revdesc . "0.1.0-0-g11de1e7ec512") (:keywords "python" "go" "php" "tests" "tdd") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (cern-ldap . [(0 0 5) ((emacs (27 1))) "Library to interact with CERN's LDAP servers" tar ((:url . "https://git.sr.ht/~nbarrientos/cern-ldap.el") (:commit . "70b5275f0e7b8e15a3def48281f364a32c55afce") (:revdesc . "70b5275f0e7b") (:keywords "tools" "convenience") (:authors ("Nacho Barrientos" . "nacho.barrientos@cern.ch")) (:maintainers ("Nacho Barrientos" . "nacho.barrientos@cern.ch")) (:maintainer "Nacho Barrientos" . "nacho.barrientos@cern.ch"))])
 (cern-root-mode . [(0 1 5) ((emacs (26 1))) "Major-mode for running C++ code with ROOT" tar ((:url . "https://github.com/jaypmorgan/cern-root-mode") (:commit . "2c9c6ea100d9be31733f2f2c4ea8bcda85600254") (:revdesc . "2c9c6ea100d9") (:keywords "languages" "tools") (:authors ("Jay Morgan" . "jay@morganwastaken.com")) (:maintainers ("Jay Morgan" . "jay@morganwastaken.com")) (:maintainer "Jay Morgan" . "jay@morganwastaken.com"))])
 (ceylon-mode . [(0 2) ((emacs (24))) "Major mode for editing Ceylon source code" tar ((:url . "https://github.com/lucaswerkmeister/ceylon-mode") (:commit . "00f790b3ed5ec48e2461e20a4d466ba45c634e13") (:revdesc . "0.2-0-g00f790b3ed5e") (:keywords "languages" "ceylon") (:authors ("Lucas Werkmeister" . "mail@lucaswerkmeister.de")) (:maintainers ("Lucas Werkmeister" . "mail@lucaswerkmeister.de")) (:maintainer "Lucas Werkmeister" . "mail@lucaswerkmeister.de"))])
 (cfn-mode . [(1 0 5) ((emacs (26 0)) (f (0 20 0)) (s (1 12 0)) (yaml-mode (0 0 13))) "AWS cloudformation mode" tar ((:url . "https://gitlab.com/worr/cfn-mode") (:commit . "ac122af751ba9903599c6eb9c3e9e12a375e19d0") (:revdesc . "cfn-mode/v1.0.5-0-gac122af751ba") (:keywords "convenience" "languages" "tools") (:authors ("William Orr" . "will@worrbase.com")) (:maintainers ("William Orr" . "will@worrbase.com")) (:maintainer "William Orr" . "will@worrbase.com"))])
 (cframe . [(1 0) ((emacs (26)) (buffer-manage (0 11)) (dash (2 17 0))) "Customize a frame and fast switch size and positions" tar ((:url . "https://github.com/plandes/cframe") (:commit . "d0f8b36cce8a9f2e1caa373e8c336c16d092c2ad") (:revdesc . "v1.0-0-gd0f8b36cce8a") (:keywords "frames"))])
 (cfrs . [(1 6 0) ((emacs (26 1)) (dash (2 11 0)) (s (1 10 0)) (posframe (0 6 0))) "Child-frame based read-string" tar ((:url . "https://github.com/Alexander-Miller/cfrs") (:commit . "f3a21f237b2a54e6b9f8a420a9da42b4f0a63121") (:revdesc . "f3a21f237b2a") (:authors ("Alexander Miller" . "alexanderm@web.de")) (:maintainers ("Alexander Miller" . "alexanderm@web.de")) (:maintainer "Alexander Miller" . "alexanderm@web.de"))])
 (cg . [(1 4 6) ((emacs (26 1))) "Major mode for editing Constraint Grammar files" tar ((:url . "https://github.com/GrammarSoft/cg3") (:commit . "c22f5572c0946b0d21f4d489308ea0ce9f305ea0") (:revdesc . "c22f5572c094") (:keywords "languages") (:authors ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainers ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainer "Kevin Brubeck Unhammer" . "unhammer@fsfe.org"))])
 (champagne . [(0 3 2) ((emacs (28 1)) (posframe (1 4 2))) "Graphical countdowns" tar ((:url . "https://github.com/positron-solutions/champagne") (:commit . "42ef0451e4abe800f047583c4c3b04e51b29d5ee") (:revdesc . "42ef0451e4ab") (:keywords "games") (:authors ("Psionic K" . "contact@positron.solutions")) (:maintainers ("Psionic K" . "contact@positron.solutions")) (:maintainer "Psionic K" . "contact@positron.solutions"))])
 (char-menu . [(0 1 1) ((emacs (24 3)) (avy-menu (0 1))) "Create your own menu for fast insertion of arbitrary symbols" tar ((:url . "https://github.com/mrkkrp/char-menu") (:commit . "f4d8bf8fa6787e2aaca2ccda5223646541d7a4b2") (:revdesc . "f4d8bf8fa678") (:keywords "convenience" "editing") (:authors ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainers ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainer "Mark Karpov" . "markkarpov92@gmail.com"))])
 (charmap . [(0 0 1) nil "Unicode table for Emacs" tar ((:url . "https://github.com/lateau/charmap") (:commit . "165193d91ef96f563ae8366ed4c1a2df5a4eaed2") (:revdesc . "165193d91ef9") (:keywords "unicode" "character" "ucs") (:authors ("Daehyub Kim" . "lateau@gmail.com")) (:maintainers ("Daehyub Kim" . "lateau@gmail.com")) (:maintainer "Daehyub Kim" . "lateau@gmail.com"))])
 (chatgpt-shell . [(2 8 3) ((emacs (28 1)) (shell-maker (0 74 1))) "A multi-LLM shell (ChatGPT, Claude, Gemini, Kagi, Ollama, Perplexity) + editing integrations" tar ((:url . "https://github.com/xenodium/chatgpt-shell") (:commit . "4a998e5735086beb46d73945149c9a4d0d91f77c") (:revdesc . "4a998e573508"))])
 (chatwork . [(0 3) nil "ChatWork client for Emacs" tar ((:url . "https://github.com/ataka/chatwork") (:commit . "fea231d479f06bf40dbfcf45de143eecc9ed744c") (:revdesc . "0.3-0-gfea231d479f0") (:keywords "web") (:authors ("Masayuki Ataka" . "masayuki.ataka@gmail.com")) (:maintainers ("Masayuki Ataka" . "masayuki.ataka@gmail.com")) (:maintainer "Masayuki Ataka" . "masayuki.ataka@gmail.com"))])
 (cheat-sh . [(1 8) ((emacs (25 1))) "Interact with cheat.sh" tar ((:url . "https://github.com/davep/cheat-sh.el") (:commit . "bd970d7c576b8720d63a1e7fd88ea8a943f2160b") (:revdesc . "bd970d7c576b") (:keywords "docs" "help") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (checkbox . [(0 2 1) ((emacs (24)) (cl-lib (0 5))) "Quick manipulation of textual checkboxes" tar ((:url . "https://github.com/camdez/checkbox.el") (:commit . "2afc2011fa35ccfa0ce9ef46cb1896911fa340d1") (:revdesc . "2afc2011fa35") (:keywords "convenience") (:authors ("Cameron Desautels" . "camdez@gmail.com")) (:maintainers ("Cameron Desautels" . "camdez@gmail.com")) (:maintainer "Cameron Desautels" . "camdez@gmail.com"))])
 (chee . [(0 3 0) ((dash (2 12 1)) (s (1 10 0)) (f (0 18 2))) "Interface to chee using dired and image-dired" tar ((:url . "https://github.com/eikek/chee") (:commit . "beeaa5bb2ce92f1a745440c7ff7468e5f6524701") (:revdesc . "release/0.3.0-0-gbeeaa5bb2ce9"))])
 (chezmoi . [(0 0 1) ((emacs (26 1))) "A package for interacting with chezmoi" tar ((:url . "https://github.com/tuh8888/chezmoi.el") (:commit . "d493925f93d5e0badb04a5331bbc8741b0cb04ca") (:revdesc . "d493925f93d5") (:keywords "vc"))])
 (chinese-word-at-point . [(0 2 3) ((cl-lib (0 5))) "Add `chinese-word' thing to `thing-at-point'" tar ((:url . "https://github.com/xuchunyang/chinese-word-at-point.el") (:commit . "36a03cce32fe059d2b581cb2e029715c0be81074") (:revdesc . "36a03cce32fe") (:keywords "convenience" "chinese") (:authors ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainers ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainer "Chunyang Xu" . "xuchunyang56@gmail.com"))])
 (choice-program . [(0 14) ((emacs (26)) (dash (2 17 0))) "Parameter based program" tar ((:url . "https://github.com/plandes/choice-program") (:commit . "90df8d118c20d5d05ee97daf81012dc39759be92") (:revdesc . "v0.14-0-g90df8d118c20") (:keywords "execution" "processes" "unix" "lisp"))])
 (chordpro-mode . [(2 3 0) ((emacs (29 1)) (compat (29 1 4 1))) "Major mode for ChordPro lead sheet file format" tar ((:url . "https://git.sr.ht/~breatheoutbreathein/chordpro-mode.el") (:commit . "1cff95d5974d1fb13c4e3e76176270a1342ea176") (:revdesc . "2.3.0-0-g1cff95d5974d") (:keywords "convenience") (:authors ("Howard Ding" . "hading2@gmail.com")) (:maintainers ("Howard Ding" . "hading2@gmail.com")) (:maintainer "Howard Ding" . "hading2@gmail.com"))])
 (chroma . [(1 1 0) ((emacs (24 1))) "Color manipulation library" tar ((:url . "https://github.com/galdor/chroma") (:commit . "ace854e577a126f830443de89f617e5ff4b4cfce") (:revdesc . "v1.1.0-0-gace854e577a1") (:authors ("Nicolas Martyanoff" . "nicolas@n16f.net")) (:maintainers ("Nicolas Martyanoff" . "nicolas@n16f.net")) (:maintainer "Nicolas Martyanoff" . "nicolas@n16f.net"))])
 (chronometrist . [(0 10 0) ((emacs (27 1)) (dash (2 16 0)) (seq (2 20)) (ts (0 2))) "Friendly and powerful personal time tracker and analyzer" tar ((:url . "https://codeberg.org/contrapunctus/chronometrist") (:commit . "2c1274147475b552716de7cecd7a9fd46e578e46") (:revdesc . "2c1274147475") (:keywords "calendar") (:authors ("contrapunctus" . "xmpp:contrapunctus@jabjab.de")) (:maintainers ("contrapunctus" . "xmpp:contrapunctus@jabjab.de")) (:maintainer "contrapunctus" . "xmpp:contrapunctus@jabjab.de"))])
 (chronometrist-key-values . [(0 10 0) ((chronometrist (0 7 0))) "Add key-values to Chronometrist data" tar ((:url . "https://codeberg.org/contrapunctus/chronometrist") (:commit . "2c1274147475b552716de7cecd7a9fd46e578e46") (:revdesc . "2c1274147475") (:keywords "calendar") (:authors ("contrapunctus" . "xmpp:contrapunctus@jabjab.de")) (:maintainers ("contrapunctus" . "xmpp:contrapunctus@jabjab.de")) (:maintainer "contrapunctus" . "xmpp:contrapunctus@jabjab.de"))])
 (chronometrist-spark . [(0 10 0) ((emacs (25 1)) (chronometrist (0 7 0)) (spark (0 1))) "Show sparklines in Chronometrist buffers" tar ((:url . "https://codeberg.org/contrapunctus/chronometrist") (:commit . "2c1274147475b552716de7cecd7a9fd46e578e46") (:revdesc . "2c1274147475") (:keywords "calendar") (:authors ("contrapunctus" . "xmpp:contrapunctus@jabjab.de")) (:maintainers ("contrapunctus" . "xmpp:contrapunctus@jabjab.de")) (:maintainer "contrapunctus" . "xmpp:contrapunctus@jabjab.de"))])
 (cider . [(1 16 1) ((emacs (26)) (clojure-mode (5 19)) (parseedn (1 2 1)) (queue (0 2)) (spinner (1 7)) (seq (2 22)) (sesman (0 3 2)) (transient (0 4 1))) "Clojure Interactive Development Environment that Rocks" tar ((:url . "https://github.com/clojure-emacs/cider") (:commit . "588c5790f0c09f5c09076885e11a73eaef70c262") (:revdesc . "588c5790f0c0") (:keywords "languages" "clojure" "cider") (:authors ("Tim King" . "kingtim@gmail.com") ("Phil Hagelberg" . "technomancy@gmail.com") ("Bozhidar Batsov" . "bozhidar@batsov.dev") ("Artur Malabarba" . "bruce.connor.am@gmail.com") ("Hugo Duncan" . "hugo@hugoduncan.org") ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.dev"))])
 (cider-eval-sexp-fu . [(1 2) ((emacs (24)) (eval-sexp-fu (0 5 0))) "Briefly highlights an evaluated sexp" tar ((:url . "https://github.com/clojure-emacs/cider-eval-sexp-fu") (:commit . "7fd229f1441356866aedba611fd0cf4e89b50921") (:revdesc . "7fd229f14413") (:keywords "languages" "clojure" "cider") (:authors ("Sylvain Benner" . "sylvain.benner@gmail.com")) (:maintainers ("Sylvain Benner" . "sylvain.benner@gmail.com")) (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com"))])
 (cider-hydra . [(0 1 0) ((cider (0 18 0)) (hydra (0 13 0))) "Hydras for CIDER" tar ((:url . "https://github.com/clojure-emacs/cider-hydra") (:commit . "5956c3909cd9beae11f64973e4f0d830cea7860d") (:revdesc . "5956c3909cd9") (:keywords "convenience" "tools") (:authors ("Tianxiang Xiong" . "tianxiang.xiong@gmail.com")) (:maintainers ("Tianxiang Xiong" . "tianxiang.xiong@gmail.com")) (:maintainer "Tianxiang Xiong" . "tianxiang.xiong@gmail.com"))])
 (cil-mode . [(0 4) nil "Common Intermediate Language mode" tar ((:url . "https://github.com/ForNeVeR/cil-mode") (:commit . "a78a88ca9a66a82f069329a96e34b67478ae2d9b") (:revdesc . "a78a88ca9a66") (:keywords "languages") (:authors ("Friedrich von Never" . "friedrich@fornever.me")) (:maintainers ("Friedrich von Never" . "friedrich@fornever.me")) (:maintainer "Friedrich von Never" . "friedrich@fornever.me"))])
 (cilk-mode . [(0 3 1) ((emacs (25 1)) (flycheck (32 -4))) "Minor mode for Cilk code editing" tar ((:url . "https://github.com/ailiop/cilk-mode") (:commit . "d5ba732a5a313a97a96085943cd7840b8e2d9c7c") (:revdesc . "0.3.1-0-gd5ba732a5a31") (:keywords "c" "convenience" "faces" "languages") (:authors ("Alexandros-Stavros Iliopoulos" . "https://github.com/ailiop")) (:maintainers ("Alexandros-Stavros Iliopoulos" . "1577182+ailiop@users.noreply.github.com")) (:maintainer "Alexandros-Stavros Iliopoulos" . "1577182+ailiop@users.noreply.github.com"))])
 (circadian . [(1 0 0) ((emacs (27 2))) "Theme-switching based on daytime" tar ((:url . "https://github.com/guidoschmidt/circadian.el") (:commit . "76464419f69e9758bc5a76b2420c9648ddf93dba") (:revdesc . "1.0.0-0-g76464419f69e") (:keywords "themes") (:maintainers ("Guido Schmidt" . "git@guidoschmidt.cc")) (:maintainer "Guido Schmidt" . "git@guidoschmidt.cc"))])
 (circe . [(2 13) ((emacs (25 1)) (cl-lib (0 5))) "Client for IRC in Emacs" tar ((:url . "https://github.com/emacs-circe/circe") (:commit . "6f33a481af6bce68f55b9e25d5c14c1ed46fa9d9") (:revdesc . "6f33a481af6b") (:keywords "irc" "chat" "comm") (:authors ("Jorgen Schaefer" . "forcer@forcix.cx")) (:maintainers ("Jorgen Schaefer" . "forcer@forcix.cx")) (:maintainer "Jorgen Schaefer" . "forcer@forcix.cx"))])
 (circe-notifications . [(1 0) ((emacs (24 4)) (circe (2 3)) (alert (1 2))) "Add desktop notifications to Circe" tar ((:url . "https://github.com/eqyiel/circe-notifications") (:commit . "80c44441ecd3ae04ae63760aa20afa837c1ed05b") (:revdesc . "80c44441ecd3") (:authors ("Ruben Maher" . "r@rkm.id.au")) (:maintainers ("Ruben Maher" . "r@rkm.id.au")) (:maintainer "Ruben Maher" . "r@rkm.id.au"))])
 (citar . [(1 4 0) ((emacs (27 1)) (parsebib (4 2)) (org (9 5)) (citeproc (0 9))) "Citation-related commands for org, latex, markdown" tar ((:url . "https://github.com/emacs-citar/citar") (:commit . "e21bf22b29d8ca40649517bb7dc503765f240282") (:revdesc . "v1.4.0-0-ge21bf22b29d8") (:authors ("Bruce D'Arcus" . "https://github.com/bdarcus")) (:maintainers ("Bruce D'Arcus" . "https://github.com/bdarcus")) (:maintainer "Bruce D'Arcus" . "https://github.com/bdarcus"))])
 (citar-denote . [(2 2 1) ((emacs (28 1)) (citar (1 4)) (denote (2 0)) (dash (2 19 1))) "Minor mode integrating Citar and Denote" tar ((:url . "https://github.com/pprevos/citar-denote") (:commit . "4586e030445ff40a4939fe0ecc1aae667825052d") (:revdesc . "4586e030445f") (:authors ("Peter Prevos" . "peter@prevos.net")) (:maintainers ("Peter Prevos" . "peter@prevos.net")) (:maintainer "Peter Prevos" . "peter@prevos.net"))])
 (citar-embark . [(1 4 0) ((emacs (27 1)) (embark (0 17)) (citar (0 9 7))) "Citar/Embark integration" tar ((:url . "https://github.com/emacs-citar/citar") (:commit . "e21bf22b29d8ca40649517bb7dc503765f240282") (:revdesc . "v1.4.0-0-ge21bf22b29d8") (:keywords "bib" "extensions") (:authors ("Bruce D'Arcus" . "bdarcus@gmail.com")) (:maintainers ("Bruce D'Arcus" . "bdarcus@gmail.com")) (:maintainer "Bruce D'Arcus" . "bdarcus@gmail.com"))])
 (citar-org-roam . [(0 5 1) ((emacs (27 1)) (org-roam (2 2)) (citar (1 2 0))) "Citar/org-roam integration" tar ((:url . "https://github.com/emacs-citar/citar-org-roam") (:commit . "761eed66782fdbb6d65749098caa42ba43e8441d") (:revdesc . "761eed66782f") (:authors ("Bruce D'Arcus" . "bdarcus@gmail.com")) (:maintainers ("Bruce D'Arcus" . "bdarcus@gmail.com")) (:maintainer "Bruce D'Arcus" . "bdarcus@gmail.com"))])
 (citeproc . [(0 9 4) ((emacs (26)) (dash (2 13 0)) (s (1 12 0)) (f (0 18 0)) (queue (0 2)) (string-inflection (1 0)) (org (9)) (parsebib (2 4)) (compat (28 1))) "A CSL 1.0.2 Citation Processor" tar ((:url . "https://github.com/andras-simonyi/citeproc-el") (:commit . "9fe5f28b274eda5212fe1936c1b58184b63cca6d") (:revdesc . "9fe5f28b274e") (:keywords "bib") (:authors ("András Simonyi" . "andras.simonyi@gmail.com")) (:maintainers ("András Simonyi" . "andras.simonyi@gmail.com")) (:maintainer "András Simonyi" . "andras.simonyi@gmail.com"))])
 (citeproc-org . [(0 2 4) ((emacs (25 1)) (dash (2 12 0)) (org (9)) (f (0 18 0)) (citeproc (0 1)) (org-ref (1 1 1))) "Render org-mode references in CSL styles" tar ((:url . "https://github.com/andras-simonyi/citeproc-org") (:commit . "a35655c55bbdc3f8c0571c8a8f14a33f9eac330b") (:revdesc . "a35655c55bbd") (:keywords "org-ref" "org-mode" "cite" "bib") (:authors ("András Simonyi" . "andras.simonyi@gmail.com")) (:maintainers ("András Simonyi" . "andras.simonyi@gmail.com")) (:maintainer "András Simonyi" . "andras.simonyi@gmail.com"))])
 (citre . [(0 4 1) ((emacs (26 1))) "Superior code reading & auto-completion tool with pluggable backends" tar ((:url . "https://github.com/universal-ctags/citre") (:commit . "7c9c77276cc7dfcb77640df7d589eaac3198cfee") (:revdesc . "7c9c77276cc7") (:keywords "convenience" "tools") (:authors ("Hao Wang" . "amaikinono@gmail.com")) (:maintainers ("Hao Wang" . "amaikinono@gmail.com")) (:maintainer "Hao Wang" . "amaikinono@gmail.com"))])
 (cl-format . [(1 2 1) nil "CL format routine" tar ((:url . "https://gitlab.com/akater/elisp-cl-format") (:commit . "42b662d27eefa458c1a39bea1836d6ada740b863") (:revdesc . "1.2.1-0-g42b662d27eef") (:keywords "extensions") (:authors ("Andreas Politz" . "politza@fh-trier.de")) (:maintainers ("akater" . "nuclearspace@gmail.com")) (:maintainer "akater" . "nuclearspace@gmail.com"))])
 (cl-libify . [(0 2) ((emacs (25))) "Update elisp code to use cl-lib instead of cl" tar ((:url . "https://github.com/purcell/cl-libify") (:commit . "f7df5d868ada173bc81860ef81ece359f13ae4e4") (:revdesc . "f7df5d868ada") (:keywords "lisp") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (clang-capf . [(1 2 3) ((emacs (24 4))) "Completion-at-point backend for c/c++ using clang" tar ((:url . "https://git.sr.ht/~pkal/clang-capf") (:commit . "147be0e908f09ab2346443d48457f9624a404019") (:revdesc . "147be0e908f0") (:keywords "c" "abbrev" "convenience") (:authors ("Philip K." . "philipk[at]posteo[dot]net")) (:maintainers ("Philip K." . "philipk[at]posteo[dot]net")) (:maintainer "Philip K." . "philipk[at]posteo[dot]net"))])
 (click-mode . [(0 0 4) ((emacs (24))) "Major mode for the Click Modular Router Project" tar ((:url . "https://github.com/bmalehorn/click-mode") (:commit . "c074e7b5b0a88434d0d3411f18884d1f6e288b33") (:revdesc . "c074e7b5b0a8") (:keywords "click" "router") (:authors ("Brian Malehorn" . "bmalehorn@gmail.com")) (:maintainers ("Brian Malehorn" . "bmalehorn@gmail.com")) (:maintainer "Brian Malehorn" . "bmalehorn@gmail.com"))])
 (clingo-mode . [(0 4 0) ((emacs (24 3))) "A major mode for editing Answer Set Programs" tar ((:url . "https://github.com/llaisdy/clingo-mode") (:commit . "9773d4e22acd9ddf6f159ee5634212f4ab4575ea") (:revdesc . "0.4.0-0-g9773d4e22acd") (:keywords "asp" "clingo" "answer set programs" "potassco" "major mode" "languages") (:authors ("Ivan Uemlianin" . "ivan@llaisdy.com")) (:maintainers ("Ivan Uemlianin" . "ivan@llaisdy.com")) (:maintainer "Ivan Uemlianin" . "ivan@llaisdy.com"))])
 (clipetty . [(0 1) ((emacs (25 1))) "Send every kill from a TTY frame to the system clipboard" tar ((:url . "https://github.com/spudlyo/clipetty") (:commit . "8430e1c01ae701fb85bb12703fe59a0f04fd0a6f") (:revdesc . "8430e1c01ae7") (:keywords "terminals" "convenience") (:authors ("Mike Hamrick" . "mikeh@muppetlabs.com")) (:maintainers ("Mike Hamrick" . "mikeh@muppetlabs.com")) (:maintainer "Mike Hamrick" . "mikeh@muppetlabs.com"))])
 (cliphist . [(0 6 3) ((emacs (25 1))) "Paste from clipboard managers" tar ((:url . "https://github.com/redguardtoo/cliphist") (:commit . "d02b97a2aa0da13711d9a6f845649115de8ac11b") (:revdesc . "d02b97a2aa0d") (:keywords "clipboard" "manager" "history") (:authors ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainers ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainer "Chen Bin" . "chenbinDOTshATgmailDOTcom"))])
 (clips-mode . [(0 7) nil "Major mode for editing CLIPS code and REPL" tar ((:url . "https://github.com/clips-mode/clips-mode") (:commit . "a3ab4a3e958d54a16544ec38fe6338f27df20817") (:revdesc . "v0.7-0-ga3ab4a3e958d") (:keywords "clips") (:authors ("David E. Young" . "david.young@fnc.fujitsu.com") ("Andrey Kotlarski" . "m00naticus@gmail.com") ("Grant Rettke" . "grettke@acm.org")) (:maintainers ("Grant Rettke" . "grettke@acm.org")) (:maintainer "Grant Rettke" . "grettke@acm.org"))])
 (clj-refactor . [(3 12 0) ((emacs (26 1)) (seq (2 19)) (yasnippet (0 6 1)) (paredit (24)) (multiple-cursors (1 2 2)) (clojure-mode (5 18 0)) (cider (1 11 1)) (parseedn (1 2 0)) (inflections (2 6)) (hydra (0 13 2))) "A collection of commands for refactoring Clojure code" tar ((:url . "https://github.com/clojure-emacs/clj-refactor.el") (:commit . "dc1bbc8cdaa723bdbb6669ea7d280625c370755d") (:revdesc . "v3.12.0-0-gdc1bbc8cdaa7") (:keywords "convenience" "clojure" "cider") (:authors ("Magnar Sveen" . "magnars@gmail.com") ("Lars Andersen" . "expez@expez.com") ("Benedek Fazekas" . "benedek.fazekas@gmail.com") ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com") ("Lars Andersen" . "expez@expez.com") ("Benedek Fazekas" . "benedek.fazekas@gmail.com") ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (cljr-helm . [(0 11) ((clj-refactor (0 13 0)) (helm-core (1 7 7)) (cl-lib (0 5))) "Wraps clojure refactor commands with helm" tar ((:url . "https://github.com/philjackson/cljr-helm") (:commit . "f2fc7b698a56e4a44d5dfbc6a55d77a93c0fa9a4") (:revdesc . "f2fc7b698a56") (:keywords "helm" "clojure" "refactor") (:authors ("Phil Jackson" . "phil@shellarchive.co.uk")) (:maintainers ("Phil Jackson" . "phil@shellarchive.co.uk")) (:maintainer "Phil Jackson" . "phil@shellarchive.co.uk"))])
 (clocker . [(0 0 11) ((projectile (0 11 0)) (dash (2 10))) "Note taker and clock-in enforcer" tar ((:url . "https://github.com/roman/clocker.el") (:commit . "4a4831ed4e42e18976edd16b844cb16cb78f3c17") (:revdesc . "4a4831ed4e42") (:keywords "org") (:authors ("Roman Gonzalez" . "romanandreg@gmail.com")) (:maintainers ("Roman Gonzalez" . "romanandreg@gmail.com")) (:maintainer "Roman Gonzalez" . "romanandreg@gmail.com"))])
 (clockodo . [(0 8 0) ((emacs (26 1)) (request (0 3 2)) (ts (0 2 2)) (org (8))) "A small integration for the clockodo api" tar ((:url . "https://github.com/santifa/clockodo-el") (:commit . "6329aaebc4373edaa4cd1d046582a4cc36db4888") (:revdesc . "6329aaebc437") (:keywords "tools" "clockodo") (:authors ("Henrik Jürges" . "juerges.henrik@gmail.com")) (:maintainers ("Henrik Jürges" . "juerges.henrik@gmail.com")) (:maintainer "Henrik Jürges" . "juerges.henrik@gmail.com"))])
 (clojure-essential-ref . [(0 1 1) ((emacs (24)) (cider (0 24 0))) "Cider-doc to \"Clojure, The Essential Reference\"" tar ((:url . "https://github.com/p3r7/clojure-essential-ref") (:commit . "e05d61b96f6469a93f52015b7ad5deadf616139e") (:revdesc . "e05d61b96f64"))])
 (clojure-essential-ref-nov . [(0 1 1) ((emacs (24)) (dash (2 16 0)) (nov (0 3 1)) (clojure-essential-ref (0 1 0))) "Cider-doc to \"Clojure, The Essential Reference\" (EPUB)" tar ((:url . "https://github.com/p3r7/clojure-essential-ref") (:commit . "e05d61b96f6469a93f52015b7ad5deadf616139e") (:revdesc . "e05d61b96f64"))])
 (clojure-mode . [(5 19 0) ((emacs (25 1))) "Major mode for Clojure code" tar ((:url . "https://github.com/clojure-emacs/clojure-mode") (:commit . "4afdd3539036bbd6b1c01b2e00559676c4d40085") (:revdesc . "v5.19.0-0-g4afdd3539036") (:keywords "languages" "clojure" "clojurescript" "lisp") (:maintainers ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.dev"))])
 (clojure-mode-extra-font-locking . [(5 19 0) ((clojure-mode (3 0))) "Extra font-locking for Clojure mode" tar ((:url . "https://github.com/clojure-emacs/clojure-mode") (:commit . "4afdd3539036bbd6b1c01b2e00559676c4d40085") (:revdesc . "v5.19.0-0-g4afdd3539036") (:keywords "languages" "lisp") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainers ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.dev"))])
 (clojure-quick-repls . [(0 1 0) ((cider (0 8 1)) (dash (2 9 0))) "Quickly create Clojure and ClojureScript repls for a project" tar ((:url . "https://github.com/symfrog/clojure-quick-repls") (:commit . "90f82e294cfdfb65231adc456177580cd69bfc00") (:revdesc . "90f82e294cfd") (:keywords "languages" "clojure" "cider" "clojurescript"))])
 (clojure-snippets . [(1 0 1) ((yasnippet (0 8 0))) "Yasnippets for clojure" tar ((:url . "https://github.com/mpenet/clojure-snippets") (:commit . "83785faa607884308a42b81f160854f2cecfd098") (:revdesc . "83785faa6078") (:keywords "snippets") (:authors ("Max Penet" . "m@qbits.cc")) (:maintainers ("Max Penet" . "m@qbits.cc")) (:maintainer "Max Penet" . "m@qbits.cc"))])
 (clojure-ts-mode . [(0 2 2) ((emacs (29 1))) "Major mode for Clojure code" tar ((:url . "https://github.com/clojure-emacs/clojure-ts-mode") (:commit . "a923aa83a61751a588ed3afc133d45898995762e") (:revdesc . "a923aa83a617") (:keywords "languages" "clojure" "clojurescript" "lisp") (:maintainers ("Danny Freeman" . "danny@dfreeman.email")) (:maintainer "Danny Freeman" . "danny@dfreeman.email"))])
 (clomacs . [(0 0 5) ((emacs (24 3)) (cider (0 22 1)) (s (1 12 0)) (simple-httpd (1 4 6))) "Simplifies Emacs Lisp interaction with Clojure" tar ((:url . "https://github.com/clojure-emacs/clomacs") (:commit . "ada167954911bf1631ea73537b4b496f35f99a73") (:revdesc . "v0.0.5-0-gada167954911") (:keywords "clojure" "interaction") (:authors ("Kostafey" . "kostafey@gmail.com")) (:maintainers ("Kostafey" . "kostafey@gmail.com")) (:maintainer "Kostafey" . "kostafey@gmail.com"))])
 (closql . [(2 1 0) ((emacs (26 1)) (compat (30 0 0 0)) (emacsql (4 1 0))) "Store EIEIO objects using EmacSQL" tar ((:url . "https://github.com/magit/closql") (:commit . "b1522c4bcb3a30eba0b49513c6d61dd7817baf1a") (:revdesc . "v2.1.0-0-gb1522c4bcb3a") (:keywords "extensions") (:authors ("Jonas Bernoulli" . "emacs.closql@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.closql@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.closql@jonas.bernoulli.dev"))])
 (clues-theme . [(1 0 1) ((emacs (24 0))) "An Emacs 24 theme which may well be fully awesome.." tar ((:url . "https://github.com/emacsfodder/emacs-clues-theme") (:commit . "abd61f2b7f3e98de58ca26e6d1230e70c6406cc7") (:revdesc . "abd61f2b7f3e") (:authors ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainers ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainer "Jason Milkins" . "jasonm23@gmail.com"))])
 (cm-mode . [(1 9) ((emacs (25 1)) (cl-lib (0 5))) "Minor mode for CriticMarkup" tar ((:url . "https://github.com/joostkremers/criticmarkup-emacs") (:commit . "5c2decacdd1a48c9e4ed2ce2289622aa5915ea24") (:revdesc . "5c2decacdd1a") (:keywords "text" "markdown") (:authors ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainers ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainer "Joost Kremers" . "joostkremers@fastmail.fm"))])
 (cmake-font-lock . [(0 1 13) ((cmake-mode (0 0))) "Advanced, type aware, highlight support for CMake" tar ((:url . "https://github.com/Lindydancer/cmake-font-lock") (:commit . "a6038e916bcca807ae695f7d7e5c300c3f38f415") (:revdesc . "a6038e916bcc") (:keywords "faces" "languages"))])
 (cmake-ide . [(0 5) ((emacs (24 1)) (cl-lib (0 5)) (seq (1 11)) (levenshtein (0))) "Calls CMake to find out include paths and other compiler flags" tar ((:url . "https://github.com/atilaneves/cmake-ide") (:commit . "a2e476ad42e61075cae9beb35fb83e3c1bf8619e") (:revdesc . "V0.5-0-ga2e476ad42e6") (:keywords "languages") (:authors ("Atila Neves" . "atila.neves@gmail.com")) (:maintainers ("Atila Neves" . "atila.neves@gmail.com")) (:maintainer "Atila Neves" . "atila.neves@gmail.com"))])
 (cmake-mode . [(3 31 2) ((emacs (24 1))) "Major-mode for editing CMake sources" tar ((:url . "https://gitlab.kitware.com/cmake/cmake.git") (:commit . "793c5f11f6863284ec1561970bee816037e40b91") (:revdesc . "v3.31.2-0-g793c5f11f686"))])
 (cmake-project . [(0 7) nil "Integrates CMake build process with Emacs" tar ((:url . "https://github.com/alamaison/emacs-cmake-project") (:commit . "ec61f687772cccdb699f64ebe1e8dc8ba83f790f") (:revdesc . "ec61f687772c") (:keywords "c" "cmake" "languages" "tools") (:authors ("Alexander Lamaison" . "alexander.lamaison@gmail")) (:maintainers ("Alexander Lamaison" . "alexander.lamaison@gmail")) (:maintainer "Alexander Lamaison" . "alexander.lamaison@gmail"))])
 (cnfonts . [(1 1 1) ((emacs (24))) "A simple Chinese fonts config tool" tar ((:url . "https://github.com/tumashu/cnfonts") (:commit . "5115f53366bd6118dce3673ddec5ff428534ce67") (:revdesc . "5115f53366bd") (:keywords "convenience" "chinese" "font") (:authors ("Feng Shu" . "tumashu@163.com")) (:maintainers ("Feng Shu" . "tumashu@163.com")) (:maintainer "Feng Shu" . "tumashu@163.com"))])
 (code-review . [(0 0 7) ((emacs (25 1)) (closql (1 2 0)) (magit (3 0 0)) (a (1 0 0)) (ghub (3 5 1)) (uuidgen (1 2)) (deferred (0 5 1)) (markdown-mode (2 4)) (forge (0 3 0)) (emojify (1 2))) "Perform code review from Github, Gitlab, and Bitbucket Cloud" tar ((:url . "https://github.com/wandersoncferreira/code-review") (:commit . "9cf84cd867d27433e0c8097f0d33cb3ade64f5ca") (:revdesc . "9cf84cd867d2") (:keywords "git" "tools" "vc") (:authors ("Wanderson Ferreira" . "https://github.com/wandersoncferreira")) (:maintainers ("Wanderson Ferreira" . "wand@hey.com")) (:maintainer "Wanderson Ferreira" . "wand@hey.com"))])
 (code-stats . [(0 1) ((emacs (25)) (request (0 3 0))) "Code::Stats plugin" tar ((:url . "https://github.com/xuchunyang/code-stats-emacs") (:commit . "20d60ded0743f01206c3c2e92ab73788def9adcb") (:revdesc . "20d60ded0743") (:authors ("Xu Chunyang" . "mail@xuchunyang.me")) (:maintainers ("Xu Chunyang" . "mail@xuchunyang.me")) (:maintainer "Xu Chunyang" . "mail@xuchunyang.me"))])
 (codespaces . [(0 1) ((emacs (28 1))) "Connect to GitHub Codespaces via TRAMP" tar ((:url . "https://github.com/patrickt/codespaces.el") (:commit . "c4757e73e845895e8368fe621fa2bb2bd5a6d49c") (:revdesc . "c4757e73e845") (:keywords "comm") (:authors ("Patrick Thomson" . "patrickt@github.com")) (:maintainers ("Patrick Thomson" . "patrickt@github.com")) (:maintainer "Patrick Thomson" . "patrickt@github.com"))])
 (codic . [(0 3) ((emacs (24)) (cl-lib (0 5))) "Search Codic (codic.jp) naming dictionaries" tar ((:url . "https://github.com/emacsorphanage/codic") (:commit . "52bbb6997ef4ab9fb7fea43bbfff7f04671aa557") (:revdesc . "52bbb6997ef4") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (coercion . [(0 1 0) ((emacs (29 1))) "Naming convention style switch" tar ((:url . "https://github.com/liuyinz/coercion.el") (:commit . "72c65d4586a31c8b8e8915efcd675f3d7326a212") (:revdesc . "72c65d4586a3") (:keywords "convenience" "editing") (:authors ("liuyinz" . "liuyinz95@gmail.com")) (:maintainers ("liuyinz" . "liuyinz95@gmail.com")) (:maintainer "liuyinz" . "liuyinz95@gmail.com"))])
 (coffee-mode . [(0 6 3) ((emacs (24 1)) (cl-lib (0 5))) "Major mode for CoffeeScript code" tar ((:url . "https://github.com/defunkt/coffee-mode") (:commit . "adfb7ae73d6ee2ef790c780dd3c967e62930e94a") (:revdesc . "adfb7ae73d6e") (:keywords "coffeescript" "major" "mode") (:authors ("Chris Wanstrath" . "chris@ozmm.org")) (:maintainers ("Chris Wanstrath" . "chris@ozmm.org")) (:maintainer "Chris Wanstrath" . "chris@ozmm.org"))])
 (color-identifiers-mode . [(1 0 0) ((dash (2 5 0)) (emacs (24))) "Color identifiers based on their names" tar ((:url . "https://github.com/ankurdave/color-identifiers-mode") (:commit . "536151410dbb198b328dc62b829d9692cec0b1bd") (:revdesc . "536151410dbb") (:keywords "faces" "languages") (:authors ("Ankur Dave" . "ankurdave@gmail.com")) (:maintainers ("Ankur Dave" . "ankurdave@gmail.com")) (:maintainer "Ankur Dave" . "ankurdave@gmail.com"))])
 (color-theme-modern . [(0 0 3) ((emacs (24))) "Reimplement colortheme with Emacs 24 theme framework" tar ((:url . "https://github.com/emacs-jp/replace-colorthemes") (:commit . "4f7da6f955f7c584c5dfab2dc170f9a3debd80f8") (:revdesc . "4f7da6f955f7") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (color-theme-sanityinc-solarized . [(2 29) nil "A version of Ethan Schoonover's Solarized themes" tar ((:url . "https://github.com/purcell/color-theme-sanityinc-solarized") (:commit . "554e941131d009c0a5d7129ed96796182b4cc590") (:revdesc . "554e941131d0") (:keywords "themes") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (color-theme-sanityinc-tomorrow . [(1 17) nil "A version of Chris Kempson's various Tomorrow themes" tar ((:url . "https://github.com/purcell/color-theme-sanityinc-tomorrow") (:commit . "81d8990085960824f700520d08027e6aca58feaa") (:revdesc . "81d899008596") (:keywords "themes") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (colorless-themes . [(0 2) ((emacs (24 1))) "A macro to generate mostly colorless themes" tar ((:url . "https://git.sr.ht/~lthms/colorless-themes.el") (:commit . "8e539097185704444a5dd5545924de92c11ba767") (:revdesc . "0.2-0-g8e5390971857") (:keywords "faces themes" "faces") (:authors ("Thomas Letan" . "contact@thomasletan.fr")) (:maintainers ("Thomas Letan" . "contact@thomasletan.fr")) (:maintainer "Thomas Letan" . "contact@thomasletan.fr"))])
 (colormaps . [(0 1 2) ((emacs (25))) "Hex colormaps" tar ((:url . "https://github.com/lepisma/colormaps.el") (:commit . "3a88961ba66b09a49ea5aa92b2b8776b2c92d68c") (:revdesc . "3a88961ba66b") (:keywords "tools") (:authors ("Abhinav Tushar" . "lepisma@fastmail.com")) (:maintainers ("Abhinav Tushar" . "lepisma@fastmail.com")) (:maintainer "Abhinav Tushar" . "lepisma@fastmail.com"))])
 (com-css-sort . [(0 0 7) ((emacs (25 1)) (s (1 12 0))) "Common way of sorting the CSS attributes" tar ((:url . "https://github.com/jcs-elpa/com-css-sort") (:commit . "61244e12594f117ffac047454311212604399d52") (:revdesc . "61244e12594f") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (comb . [(0 2 0) ((emacs (25 1))) "Interactive grep tool for manual static analysis" tar ((:url . "https://github.com/cyrus-and/comb") (:commit . "8a68d313bf429763eb8aa78ece00230a668f2a1f") (:revdesc . "8a68d313bf42") (:keywords "matching") (:authors ("Andrea Cardaci" . "cyrus.and@gmail.com")) (:maintainers ("Andrea Cardaci" . "cyrus.and@gmail.com")) (:maintainer "Andrea Cardaci" . "cyrus.and@gmail.com"))])
 (comint-hyperlink . [(0 1 6) ((emacs (24 3))) "Create hyperlinks in comint for SGR URL control sequences" tar ((:url . "https://github.com/matthewbauer/comint-hyperlink") (:commit . "a7878825788ff6b9d6b8a5adf0214a028bad895e") (:revdesc . "a7878825788f") (:keywords "comint" "shell" "processes" "hypermedia" "terminals") (:authors ("Matthew Bauer" . "mjbauer95@gmail.com")) (:maintainers ("Matthew Bauer" . "mjbauer95@gmail.com")) (:maintainer "Matthew Bauer" . "mjbauer95@gmail.com"))])
 (commander . [(0 7 0) ((s (1 6 0)) (dash (2 0 0)) (cl-lib (0 3)) (f (0 6 1))) "Emacs command line parser" tar ((:url . "https://github.com/rejeep/commander.el") (:commit . "2c8a57b9c619e29ccbe2d5a85921b9c689e95bf9") (:revdesc . "2c8a57b9c619") (:keywords "cli" "argv") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (comment-dwim-2 . [(1 3 1) ((emacs (24 4))) "An all-in-one comment command to rule them all" tar ((:url . "https://github.com/remyferre/comment-dwim-2") (:commit . "69415caa1a381063d3e794912dfe88f672854ab0") (:revdesc . "69415caa1a38") (:keywords "convenience") (:authors ("Rémy Ferré" . "dev@remyferre.net")) (:maintainers ("Rémy Ferré" . "dev@remyferre.net")) (:maintainer "Rémy Ferré" . "dev@remyferre.net"))])
 (comment-tags . [(0 1) ((emacs (24 5)) (pkg-info (0 4))) "Highlight and navigate comment tags like TODO, FIXME, etc" tar ((:url . "https://github.com/vincekd/comment-tags") (:commit . "293a30026d7750f6657d6c2e6d6428abf1d7db5a") (:revdesc . "v0.1-0-g293a30026d77") (:keywords "convenience" "comments" "tags") (:authors ("Vincent Dumas" . "vincekd@gmail.com")) (:maintainers ("Vincent Dumas" . "vincekd@gmail.com")) (:maintainer "Vincent Dumas" . "vincekd@gmail.com"))])
 (commentary-theme . [(0 5) ((emacs (24))) "A minimal theme with contrasting comments" tar ((:url . "https://github.com/pzel/commentary-theme") (:commit . "31e3724631d20fe5854cf522443a31fc12245ce3") (:revdesc . "31e3724631d2"))])
 (commenter . [(0 5 2) ((emacs (24 4)) (let-alist (1 0 4))) "Multiline-comment support package" tar ((:url . "https://github.com/yuutayamada/commenter") (:commit . "6d1885419434ba779270c6fda0e30d390bb074bd") (:revdesc . "6d1885419434") (:keywords "comment") (:authors ("Yuta Yamada" . "cokesboy\"at\"gmail.com")) (:maintainers ("Yuta Yamada" . "cokesboy\"at\"gmail.com")) (:maintainer "Yuta Yamada" . "cokesboy\"at\"gmail.com"))])
 (common-lisp-snippets . [(0 1 2) ((yasnippet (0 8 0))) "Yasnippets for Common Lisp" tar ((:url . "https://github.com/mrkkrp/common-lisp-snippets") (:commit . "fc5c2683952328927a6d1c1f2694b85ddf7e9053") (:revdesc . "fc5c26839523") (:keywords "snippets") (:authors ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainers ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainer "Mark Karpov" . "markkarpov92@gmail.com"))])
 (communinfo . [(0 1 2) ((emacs (30))) "Community maintained Info-url-alist" tar ((:url . "https://codeberg.org/mekeor/communinfo") (:commit . "2e1481c2441725f1938d8b11848e954906d118b8") (:revdesc . "2e1481c24417") (:keywords "docs") (:authors ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainers ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainer "Mekeor Melire" . "mekeor@posteo.de"))])
 (company . [(1 0 2) ((emacs (25 1))) "Modular text completion framework" tar ((:url . "https://github.com/company-mode/company-mode") (:commit . "393940f76aec1f2500441d4e0b97f783acbb536b") (:revdesc . "393940f76aec") (:keywords "abbrev" "convenience" "matching") (:maintainers ("Dmitry Gutov" . "dmitry@gutov.dev")) (:maintainer "Dmitry Gutov" . "dmitry@gutov.dev"))])
 (company-anaconda . [(0 2 0) ((company (0 8 0)) (anaconda-mode (0 1 1)) (cl-lib (0 5 0)) (dash (2 6 0)) (s (1 9))) "Anaconda backend for company-mode" tar ((:url . "https://github.com/pythonic-emacs/company-anaconda") (:commit . "182a8fdabc01630f255beeb2708728c0cd5c6316") (:revdesc . "182a8fdabc01") (:authors ("Artem Malyshev" . "proofit404@gmail.com")) (:maintainers ("Artem Malyshev" . "proofit404@gmail.com")) (:maintainer "Artem Malyshev" . "proofit404@gmail.com"))])
 (company-ansible . [(0 8 0) ((emacs (24 4)) (company (0 8 12))) "A company back-end for ansible" tar ((:url . "https://github.com/krzysztof-magosa/company-ansible") (:commit . "2ea0be24f003dc64a30412df76298152be29103c") (:revdesc . "2ea0be24f003") (:keywords "ansible") (:authors ("Krzysztof Magosa" . "krzysztof@magosa.pl")) (:maintainers ("Krzysztof Magosa" . "krzysztof@magosa.pl")) (:maintainer "Krzysztof Magosa" . "krzysztof@magosa.pl"))])
 (company-cabal . [(0 2 1) ((cl-lib (0 5)) (company (0 8 0)) (emacs (24))) "Company-mode cabal backend" tar ((:url . "https://github.com/iquiw/company-cabal") (:commit . "f458de88cad16ed48a605e8347e56433e73dcef8") (:revdesc . "f458de88cad1") (:authors ("Iku Iwasa" . "iku.iwasa@gmail.com")) (:maintainers ("Iku Iwasa" . "iku.iwasa@gmail.com")) (:maintainer "Iku Iwasa" . "iku.iwasa@gmail.com"))])
 (company-coq . [(1 0 1) ((company-math (1 1)) (company (0 8 12)) (yasnippet (0 11 0)) (dash (2 12 1)) (cl-lib (0 5))) "A collection of extensions for Proof General's Coq mode" tar ((:url . "https://github.com/cpitclaudel/company-coq") (:commit . "a4e0625725e4f54d202e746bb41b8bc14c14ddef") (:revdesc . "1.0.1-0-ga4e0625725e4") (:keywords "convenience" "languages") (:authors ("Clément Pit-Claudel" . "clement.pitclaudel@live.com")) (:maintainers ("Clément Pit-Claudel" . "clement.pitclaudel@live.com")) (:maintainer "Clément Pit-Claudel" . "clement.pitclaudel@live.com"))])
 (company-ctags . [(0 1 1) ((emacs (27 1)) (company (0 9 0))) "Fastest company-mode completion backend for ctags" tar ((:url . "https://github.com/redguardtoo/company-ctags") (:commit . "2e079a634afa5687bdb004e3883ac0671a222401") (:revdesc . "2e079a634afa") (:keywords "convenience") (:authors ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainers ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainer "Chen Bin" . "chenbin.sh@gmail.com"))])
 (company-dict . [(1 2 8) ((emacs (24 4)) (company (0 8 12)) (parent-mode (2 3))) "A backend that emulates ac-source-dictionary" tar ((:url . "https://github.com/hlissner/emacs-company-dict") (:commit . "cd7b8394f6014c57897f65d335d6b2bd65dab1f4") (:revdesc . "cd7b8394f601") (:keywords "company" "dictionary" "ac-source-dictionary") (:authors ("Henrik Lissner" . "http://github/hlissner")) (:maintainers ("Henrik Lissner" . "henrik@lissner.net")) (:maintainer "Henrik Lissner" . "henrik@lissner.net"))])
 (company-eask . [(0 1 0) ((emacs (26 1)) (company (0 8 0)) (eask (0 1 0))) "Company backend for Eask-file" tar ((:url . "https://github.com/emacs-eask/company-eask") (:commit . "27f0a46259427df6a29f352b9bf1079812c3f7bf") (:revdesc . "27f0a4625942") (:keywords "convenience") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (company-emacs-eclim . [(0 4) ((eclim (0 3)) (company (0 7)) (cl-lib (0 5))) "Company-mode backend for eclim" tar ((:url . "https://github.com/emacs-eclim/emacs-eclim") (:commit . "8203fbf8544e65324a948a67718f7a16ba2d52e6") (:revdesc . "8203fbf8544e"))])
 (company-emoji . [(3 0 0) ((cl-lib (0 5)) (company (0 8 0))) "Company-mode backend for emoji" tar ((:url . "https://codeberg.org/egirl/company-emoji") (:commit . "0b4371d8668712e71236e0f174bdd6d03c04aede") (:revdesc . "3.0.0-0-g0b4371d86687") (:keywords "emoji" "company") (:authors ("Alex Dunn" . "git@garbage.world")) (:maintainers ("Alex Dunn" . "git@garbage.world")) (:maintainer "Alex Dunn" . "git@garbage.world"))])
 (company-emojify . [(0 1 0) ((emacs (26 1)) (company (0 8 0)) (emojify (1 2 1)) (ht (2 0))) "Company completion for Emojify" tar ((:url . "https://github.com/jcs-elpa/company-emojify") (:commit . "015dc2cee7c9713794efd44d398a12eb62a94185") (:revdesc . "015dc2cee7c9") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (company-erlang . [(0 1 1) ((emacs (24 4)) (ivy-erlang-complete (0 1)) (company (0 9 2))) "Company backend based on ivy-erlang-complete" tar ((:url . "https://github.com/s-kostyaev/company-erlang") (:commit . "bc0524a16f17b66c7397690e4ca0e004f09ea6c5") (:revdesc . "bc0524a16f17") (:keywords "tools") (:authors ("Sergey Kostyaev" . "feo.me@ya.ru")) (:maintainers ("Sergey Kostyaev" . "feo.me@ya.ru")) (:maintainer "Sergey Kostyaev" . "feo.me@ya.ru"))])
 (company-fuzzy . [(1 4 0) ((emacs (26 1)) (company (0 8 12)) (s (1 12 0)) (ht (2 0))) "Fuzzy matching for `company-mode'" tar ((:url . "https://github.com/jcs-elpa/company-fuzzy") (:commit . "3aeb0bdcc15e969964b73e695aca8e0df60e3a1a") (:revdesc . "3aeb0bdcc15e") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (company-irony . [(1 1 1) ((emacs (24 1)) (company (0 8 0)) (irony (1 1 0)) (cl-lib (0 5))) "Company-mode completion back-end for irony-mode" tar ((:url . "https://github.com/Sarcasm/company-irony") (:commit . "9ca8f35ef268c0b0cffd49efa687685b373f09fe") (:revdesc . "v1.1.1-0-g9ca8f35ef268") (:keywords "convenience") (:authors ("Guillaume Papin" . "guillaume.papin@epitech.eu")) (:maintainers ("Guillaume Papin" . "guillaume.papin@epitech.eu")) (:maintainer "Guillaume Papin" . "guillaume.papin@epitech.eu"))])
 (company-irony-c-headers . [(1 0 0) ((cl-lib (0 5)) (company (0 9 0)) (irony (0 2 0))) "Company mode backend for C/C++ header files with Irony" tar ((:url . "https://github.com/hotpxl/company-irony-c-headers") (:commit . "ba304fe7eebdff90bbc7dea063b45b82638427fa") (:revdesc . "v1.0.0-0-gba304fe7eebd") (:keywords "c" "company") (:authors ("Yutian Li" . "hotpxless@gmail.com")) (:maintainers ("Yutian Li" . "hotpxless@gmail.com")) (:maintainer "Yutian Li" . "hotpxless@gmail.com"))])
 (company-jedi . [(0 4) ((emacs (24)) (cl-lib (0 5)) (company (0 8 11)) (jedi-core (0 2 7))) "Company-mode completion back-end for Python JEDI" tar ((:url . "https://github.com/emacsorphanage/company-jedi") (:commit . "ad49407451c7f28fe137f9c8f3a7fc89e8693a1b") (:revdesc . "ad49407451c7") (:authors ("Boy" . "boyw165@gmail.com")) (:maintainers ("Boy" . "boyw165@gmail.com")) (:maintainer "Boy" . "boyw165@gmail.com"))])
 (company-manually . [(0 1 0) ((emacs (24 3)) (company (0 9 0)) (ivy (0 13 0))) "A company backend that lets you manually build candidates" tar ((:url . "https://github.com/yanghaoxie/company-manually") (:commit . "b922318da821fc3cf1d3155f21d543ea8470c881") (:revdesc . "b922318da821") (:keywords "convenience" "company-mode" "manually build candidates") (:maintainers ("Yanghao Xie" . "yhaoxie@gmail.com")) (:maintainer "Yanghao Xie" . "yhaoxie@gmail.com"))])
 (company-math . [(1 5 1) ((company (0 8 0)) (math-symbol-lists (1 3))) "Completion backends for unicode math symbols and latex tags" tar ((:url . "https://github.com/vspinu/company-math") (:commit . "3eb006874e309ff4076d947fcbd61bb6806aa508") (:revdesc . "3eb006874e30") (:keywords "unicode" "symbols" "completion") (:authors ("Vitalie Spinu" . "spinuvit@gmail.com")) (:maintainers ("Vitalie Spinu" . "spinuvit@gmail.com")) (:maintainer "Vitalie Spinu" . "spinuvit@gmail.com"))])
 (company-maxima . [(0 8 1) ((emacs (25 1)) (maxima (0 6 1)) (seq (2 20)) (company (0 9 13))) "Maxima company integration" tar ((:url . "https://gitlab.com/sasanidas/maxima") (:commit . "1334f44725bd80a265de858d652f3fde4ae401fa") (:revdesc . "1334f44725bd") (:keywords "languages" "tools" "convenience") (:maintainers ("Fermin Munoz" . "fmfs@posteo.net")) (:maintainer "Fermin Munoz" . "fmfs@posteo.net"))])
 (company-ngram . [(0 8 0) ((cl-lib (0 5)) (company (0 8 0))) "N-gram based completion" tar ((:url . "https://github.com/kshramt/company-ngram") (:commit . "d15182df3eac72b29772802759b77c9eafef5066") (:revdesc . "d15182df3eac"))])
 (company-nixos-options . [(0 0 1) ((company (0 8 0)) (nixos-options (0 0 1)) (cl-lib (0 5 0))) "Company Backend for nixos-options" tar ((:url . "https://github.com/nix-community/nix-emacs") (:commit . "5fc8fa29bea9dd8e9c822af92f9bc6ddc223635f") (:revdesc . "5fc8fa29bea9") (:keywords "unix") (:authors ("Diego Berrocal" . "cestdiego@gmail.com") ("Travis B. Hartwell" . "nafai@travishartwell.net")) (:maintainers ("Diego Berrocal" . "cestdiego@gmail.com") ("Travis B. Hartwell" . "nafai@travishartwell.net")) (:maintainer "Diego Berrocal" . "cestdiego@gmail.com"))])
 (company-php . [(2 7 0) ((cl-lib (0 5)) (ac-php-core (2 0)) (company (0 9))) "A company back-end for PHP" tar ((:url . "https://github.com/xcwen/ac-php") (:commit . "a69ae4a12e40900619b4e5a1613fd449aef649c3") (:revdesc . "a69ae4a12e40") (:keywords "completion" "convenience" "intellisense") (:authors ("jim" . "xcwenn@qq.com")))])
 (company-phpactor . [(0 1 0) ((emacs (24 3)) (cl-lib (0 5)) (company (0 9 6))) "Company-mode backend for Phpactor" tar ((:url . "https://github.com/emacs-php/phpactor.el") (:commit . "61e4eab638168b7034eef0f11e35a89223fa7687") (:revdesc . "61e4eab63816") (:keywords "tools" "php") (:authors ("Martin Tang" . "martin.tang365@gmail.com")) (:maintainers ("Martin Tang" . "martin.tang365@gmail.com")) (:maintainer "Martin Tang" . "martin.tang365@gmail.com"))])
 (company-plisp . [(0 0 1) ((emacs (25)) (s (1 2 0)) (company (0 8 12)) (dash (2 12 0)) (cl-lib (0 5))) "Company mode backend for PicoLisp language" tar ((:url . "https://gitlab.com/sasanidas/company-plisp") (:commit . "0e6941e1832faafb2176238339667edd482acd95") (:revdesc . "0e6941e1832f") (:keywords "company" "plisp" "convenience" "auto-completion") (:authors ("Fermin MF" . "fmfs@posteo.net")) (:maintainers ("Fermin MF" . "fmfs@posteo.net")) (:maintainer "Fermin MF" . "fmfs@posteo.net"))])
 (company-posframe . [(0 7 0) ((emacs (26 0)) (company (0 9 0)) (posframe (0 9 0))) "Use a posframe as company candidate menu" tar ((:url . "https://github.com/tumashu/company-posframe") (:commit . "18d6641bba72cba3c00018cee737ea8b454f64a8") (:revdesc . "18d6641bba72") (:keywords "abbrev" "convenience" "matching") (:authors ("Lars Andersen" . "expez@expez.com")) (:maintainers ("Feng Shu" . "tumashu@163.com")) (:maintainer "Feng Shu" . "tumashu@163.com"))])
 (company-prescient . [(6 3 1) ((emacs (25 1)) (prescient (6 1 0)) (company (0 9 6))) "Prescient.el + Company" tar ((:url . "https://github.com/radian-software/prescient.el") (:commit . "2b8a8b41228bddb2e11eb1c200e98a9edd04797c") (:revdesc . "2b8a8b41228b") (:keywords "extensions") (:authors ("Radian LLC" . "contact+prescient@radian.codes")) (:maintainers ("Radian LLC" . "contact+prescient@radian.codes")) (:maintainer "Radian LLC" . "contact+prescient@radian.codes"))])
 (company-quickhelp . [(2 3 0) ((emacs (24 4)) (company (0 8 9)) (pos-tip (0 4 6))) "Popup documentation for completion candidates" tar ((:url . "https://github.com/company-mode/company-quickhelp") (:commit . "b2953c725654650677e3d66eaeec666826d5f65f") (:revdesc . "2.3.0-0-gb2953c725654") (:keywords "company" "popup" "documentation" "quickhelp") (:authors ("Lars Andersen" . "expez@expez.com")) (:maintainers ("Lars Andersen" . "expez@expez.com")) (:maintainer "Lars Andersen" . "expez@expez.com"))])
 (company-quickhelp-terminal . [(0 1 1) ((emacs (24 4)) (company-quickhelp (2 2 0)) (popup (0 5 3))) "Terminal support for `company-quickhelp'" tar ((:url . "https://github.com/jcs-legacy/company-quickhelp-terminal") (:commit . "c2e077e8d32610f80a506c410ab51a4ba747a47f") (:revdesc . "c2e077e8d326") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (company-restclient . [(0 3 0) ((cl-lib (0 5)) (company (0 8 0)) (emacs (24)) (know-your-http-well (0 2 0)) (restclient (0 0 0))) "Company-mode completion back-end for restclient-mode" tar ((:url . "https://github.com/iquiw/company-restclient") (:commit . "e5a3ec54edb44776738c13e13e34c85b3085277b") (:revdesc . "e5a3ec54edb4") (:authors ("Iku Iwasa" . "iku.iwasa@gmail.com")) (:maintainers ("Iku Iwasa" . "iku.iwasa@gmail.com")) (:maintainer "Iku Iwasa" . "iku.iwasa@gmail.com"))])
 (company-rtags . [(3 23) ((emacs (24 3)) (company (0 8 1)) (rtags (2 10))) "RTags back-end for company" tar ((:url . "https://github.com/Andersbakken/rtags") (:commit . "7169ed577d676690a3c6f0025b54e8477d80eacf") (:revdesc . "v3.23-0-g7169ed577d67") (:authors ("Jan Erik Hanssen" . "jhanssen@gmail.com") ("Anders Bakken" . "agbakken@gmail.com")) (:maintainers ("Jan Erik Hanssen" . "jhanssen@gmail.com") ("Anders Bakken" . "agbakken@gmail.com")) (:maintainer "Jan Erik Hanssen" . "jhanssen@gmail.com"))])
 (company-shell . [(1 3 1) ((emacs (24 4)) (company (0 8 12)) (dash (2 12 0)) (cl-lib (0 5))) "Company mode backend for shell functions" tar ((:url . "https://github.com/Alexander-Miller/company-shell") (:commit . "5f959a63a6e66eb0cbdac3168cad523a62cc2ccd") (:revdesc . "5f959a63a6e6") (:keywords "company" "shell" "auto-completion") (:authors ("Alexander Miller" . "alexanderm@web.de")) (:maintainers ("Alexander Miller" . "alexanderm@web.de")) (:maintainer "Alexander Miller" . "alexanderm@web.de"))])
 (company-solidity . [(0 1 10) ((company (0 9 0)) (cl-lib (0 5 0)) (solidity-mode (0 1 9))) "Company-mode back-end for solidity-mode" tar ((:url . "https://github.com/ethereum/emacs-solidity") (:commit . "93412f211fad7dfc3b02aa226856fc52b6a15c22") (:revdesc . "93412f211fad") (:keywords "solidity" "completion" "company") (:authors ("Samuel Smolkin" . "sam@future-precedent.org")) (:maintainers ("Samuel Smolkin" . "sam@future-precedent.org")) (:maintainer "Samuel Smolkin" . "sam@future-precedent.org"))])
 (company-sourcekit . [(0 2 0) ((emacs (24 3)) (company (0 8 12)) (dash (2 12 1)) (dash-functional (1 2 0)) (sourcekit (0 2 0))) "Company-mode completion backend for SourceKit" tar ((:url . "https://github.com/nathankot/company-sourcekit") (:commit . "8ba62ac25bf533b7f148f333bcb5c1db799f749b") (:revdesc . "8ba62ac25bf5") (:keywords "abbrev") (:authors ("Nathan Kot" . "nk@nathankot.com")) (:maintainers ("Nathan Kot" . "nk@nathankot.com")) (:maintainer "Nathan Kot" . "nk@nathankot.com"))])
 (company-stan . [(10 2 0) ((emacs (24 3)) (company (0 9 10)) (stan-mode (10 1 0))) "A company-mode completion backend for stan" tar ((:url . "https://github.com/stan-dev/stan-mode") (:commit . "2dd330604563d143031fc8ffd516266217aa1f9b") (:revdesc . "2dd330604563") (:keywords "languages") (:authors ("Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu")) (:maintainers ("Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu")) (:maintainer "Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu"))])
 (company-statistics . [(0 2 2) ((emacs (24 3)) (company (0 8 5))) "Sort candidates using completion history" tar ((:url . "https://github.com/company-mode/company-statistics") (:commit . "906d8137224c1a5bd1dc913940e0d32ffecf5523") (:revdesc . "0.2.2-0-g906d8137224c") (:keywords "abbrev" "convenience" "matching") (:authors ("Ingo Lohmar" . "i.lohmar@gmail.com")) (:maintainers ("Ingo Lohmar" . "i.lohmar@gmail.com")) (:maintainer "Ingo Lohmar" . "i.lohmar@gmail.com"))])
 (company-terraform . [(1 3) ((emacs (24 4)) (company (0 8 12)) (terraform-mode (0 6))) "A company backend for terraform" tar ((:url . "https://github.com/rafalcieslak/emacs-company-terraform") (:commit . "2d11a21fee2f298e48968e479ddcaeda4d736e12") (:revdesc . "2d11a21fee2f") (:keywords "abbrev" "convenience" "terraform" "company") (:authors ("Rafał Cieślak" . "rafalcieslak256@gmail.com")) (:maintainers ("Rafał Cieślak" . "rafalcieslak256@gmail.com")) (:maintainer "Rafał Cieślak" . "rafalcieslak256@gmail.com"))])
 (company-web . [(2 1) ((company (0 8 0)) (dash (2 8 0)) (cl-lib (0 5 0)) (web-completion-data (0 1 0))) "Company version of ac-html, complete for web,html,emmet,jade,slim modes" tar ((:url . "https://github.com/osv/company-web") (:commit . "f0cc9187c9c34f72ad71f5649a69c74f996bae9a") (:revdesc . "f0cc9187c9c3") (:keywords "html" "company") (:authors ("Olexandr Sydorchuk" . "olexandr.syd@gmail.com")) (:maintainers ("Olexandr Sydorchuk" . "olexandr.syd@gmail.com")) (:maintainer "Olexandr Sydorchuk" . "olexandr.syd@gmail.com"))])
 (company-wordfreq . [(0 1 2) ((emacs (27 1)) (company (0 9))) "Company backend for human language texts" tar ((:url . "https://github.com/johannes-mueller/company-wordfreq.el") (:commit . "83569cf346c2320ef22f6a858e3424f771c4324e") (:revdesc . "83569cf346c2") (:keywords "company" "convenience" "matching") (:authors ("Johannes Mueller" . "github@johannes-mueller.org")) (:maintainers ("Johannes Mueller" . "github@johannes-mueller.org")) (:maintainer "Johannes Mueller" . "github@johannes-mueller.org"))])
 (company-ycmd . [(1 2) ((ycmd (1 2)) (company (0 9 3)) (deferred (0 5 1)) (s (1 11 0)) (dash (2 13 0)) (let-alist (1 0 5)) (f (0 19 0))) "Company-mode backend for ycmd" tar ((:url . "https://github.com/abingham/emacs-ycmd") (:commit . "d042a673b4d717c3ca9d641f120bfe16c994c740") (:revdesc . "d042a673b4d7"))])
 (competitive-programming-snippets . [(1 1 4) ((emacs (26)) (yasnippet (0 8 0))) "Competitive Programming snippets for Yasnippet" tar ((:url . "https://github.com/sei40kr/competitive-programming-snippets") (:commit . "b0245fcbabf035d89b80150add5d6a47859ab555") (:revdesc . "b0245fcbabf0") (:keywords "tools") (:authors ("Seong Yong-ju" . "sei40kr@gmail.com")) (:maintainers ("Seong Yong-ju" . "sei40kr@gmail.com")) (:maintainer "Seong Yong-ju" . "sei40kr@gmail.com"))])
 (compile-angel . [(1 0 4) ((emacs (26 1))) "Automatically Compile Elisp files (auto-compile alternative)" tar ((:url . "https://github.com/jamescherti/compile-angel.el") (:commit . "67a12504ebf2cc43a6846a3e05b6e5c2e179db2f") (:revdesc . "1.0.4-0-g67a12504ebf2") (:keywords "convenience"))])
 (compile-multi . [(0 6) ((emacs (28 1))) "A multi target interface to compile" tar ((:url . "https://github.com/mohkale/compile-multi") (:commit . "94b2f267d1e424cf523643a3c9841c83f0a86368") (:revdesc . "94b2f267d1e4") (:keywords "tools" "compile" "build") (:authors ("mohsin kaleem" . "mohkale@kisara.moe")) (:maintainers ("mohsin kaleem" . "mohkale@kisara.moe")) (:maintainer "mohsin kaleem" . "mohkale@kisara.moe"))])
 (compile-multi-all-the-icons . [(0 6) ((emacs (28 0)) (all-the-icons-completion (0 0 1))) "Affixate `compile-multi' with icons" tar ((:url . "https://github.com/mohkale/compile-multi") (:commit . "94b2f267d1e424cf523643a3c9841c83f0a86368") (:revdesc . "94b2f267d1e4") (:keywords "tools" "compile" "build") (:authors ("mohsin kaleem" . "mohkale@kisara.moe")) (:maintainers ("mohsin kaleem" . "mohkale@kisara.moe")) (:maintainer "mohsin kaleem" . "mohkale@kisara.moe"))])
 (compile-multi-embark . [(0 6) ((emacs (28 1)) (compile-multi (0 4)) (embark (0 22 1))) "Integration for `compile-multi' and `embark'" tar ((:url . "https://github.com/mohkale/compile-multi") (:commit . "94b2f267d1e424cf523643a3c9841c83f0a86368") (:revdesc . "94b2f267d1e4") (:keywords "project" "convenience") (:authors ("Mohsin Kaleem" . "mohkale@kisara.moe")) (:maintainers ("Mohsin Kaleem" . "mohkale@kisara.moe")) (:maintainer "Mohsin Kaleem" . "mohkale@kisara.moe"))])
 (compile-multi-nerd-icons . [(0 6) ((emacs (28 0)) (nerd-icons-completion (0 0 1))) "Affixate `compile-multi' with nerd icons" tar ((:commit . "94b2f267d1e424cf523643a3c9841c83f0a86368") (:authors ("mohsin kaleem" . "mohkale@kisara.moe")) (:maintainers ("mohsin kaleem" . "mohkale@kisara.moe")) (:maintainer "mohsin kaleem" . "mohkale@kisara.moe") (:keywords "tools" "compile" "build") (:url . "https://github.com/mohkale/compile-multi"))])
 (compiler-explorer . [(0 6 0) ((emacs (27 1)) (plz (0 9)) (eldoc (1 15 0)) (map (3 3 1)) (seq (2 23))) "Compiler explorer client (godbolt.org)" tar ((:url . "https://github.com/mkcms/compiler-explorer.el") (:commit . "b8e7c34757c6b77aec948c143d8c89df08d4b7e8") (:revdesc . "v0.6.0-0-gb8e7c34757c6") (:keywords "c" "tools") (:authors ("Michał Krzywkowski" . "k.michal@zoho.com")) (:maintainers ("Michał Krzywkowski" . "k.michal@zoho.com")) (:maintainer "Michał Krzywkowski" . "k.michal@zoho.com"))])
 (composable . [(0 0 1) ((emacs (24 4))) "Composable editing" tar ((:url . "https://github.com/paldepind/composable.el") (:commit . "4739b6a730498e7526d06222810c3ccf3723d509") (:revdesc . "4739b6a73049") (:keywords "lisp") (:authors ("Simon Friis Vindum" . "simon@vindum.io")) (:maintainers ("Simon Friis Vindum" . "simon@vindum.io")) (:maintainer "Simon Friis Vindum" . "simon@vindum.io"))])
 (composer . [(0 2 0) ((emacs (24 3)) (s (1 9 0)) (f (0 17)) (seq (1 9)) (php-runtime (0 1 0))) "Interface to PHP Composer" tar ((:url . "https://github.com/emacs-php/composer.el") (:commit . "db65d874d762f70558449a01bdac5361bf067c15") (:revdesc . "db65d874d762") (:keywords "tools" "php" "dependency" "manager") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (concurrent . [(0 5 1) ((emacs (24 3)) (deferred (0 5 0))) "Concurrent utility functions for emacs lisp" tar ((:url . "https://github.com/kiwanami/emacs-deferred") (:commit . "d012a1ab50edcc2c44e3e49006f054dbff47cb6c") (:revdesc . "d012a1ab50ed") (:keywords "deferred" "async" "concurrent") (:authors ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatkiwanami.net"))])
 (conda . [(0 0 12) ((emacs (25 1)) (pythonic (0 1 0)) (dash (2 13 0)) (s (1 11 0)) (f (0 18 2))) "Work with your conda environments" tar ((:url . "https://github.com/necaris/conda.el") (:commit . "e4154db0dbfb7faf46b645eddfaad9326e4ea18d") (:revdesc . "e4154db0dbfb") (:keywords "languages" "local" "tools" "python" "environment" "conda") (:authors ("Rami Chowdhury" . "rami.chowdhury@gmail.com")) (:maintainers ("Rami Chowdhury" . "rami.chowdhury@gmail.com")) (:maintainer "Rami Chowdhury" . "rami.chowdhury@gmail.com"))])
 (conkeror-minor-mode . [(1 6 2) nil "Mode for editing conkeror javascript files" tar ((:url . "https://github.com/Malabarba/conkeror-minor-mode") (:commit . "476e81c27b056e21c192391fe674a2bf875466b0") (:revdesc . "476e81c27b05") (:keywords "programming" "tools") (:authors ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainers ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainer "Artur Malabarba" . "bruce.connor.am@gmail.com"))])
 (conllu-mode . [(0 5 0) ((emacs (25)) (cl-lib (0 5)) (flycheck (30)) (hydra (0 13 0)) (s (1 0))) "Editing mode for CoNLL-U files" tar ((:url . "https://github.com/odanoburu/conllu-mode") (:commit . "d1b5b682e0a481ab74caed20bbca6177edb83080") (:revdesc . "d1b5b682e0a4") (:keywords "extensions") (:authors ("bruno cuconato" . "bcclaro+emacs@gmail.com")) (:maintainers ("bruno cuconato" . "bcclaro+emacs@gmail.com")) (:maintainer "bruno cuconato" . "bcclaro+emacs@gmail.com"))])
 (connection . [(1 11) nil "TCP-based client connection" tar ((:url . "https://github.com/myrkr/dictionary-el") (:commit . "c9cad101100975e88873636bfd426b7a19304ebd") (:revdesc . "c9cad1011009") (:keywords "network") (:authors ("Torsten Hilbrich" . "torsten.hilbrich@gmx.net")) (:maintainers ("Torsten Hilbrich" . "torsten.hilbrich@gmx.net")) (:maintainer "Torsten Hilbrich" . "torsten.hilbrich@gmx.net"))])
 (conner . [(0 4) ((emacs (29 1))) "Define and run project specific commands" tar ((:url . "https://github.com/tralph3/conner") (:commit . "05de24bdac7c424d88eabd7cd0307f9b8bcc2aa3") (:revdesc . "05de24bdac7c") (:keywords "tools"))])
 (consult . [(1 8) ((emacs (27 1)) (compat (30))) "Consulting completing-read" tar ((:url . "https://github.com/minad/consult") (:commit . "4889458dccf842ab6223099f8a73ff8b147e9459") (:revdesc . "4889458dccf8") (:keywords "matching" "files" "completion") (:maintainers ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de"))])
 (consult-ag . [(0 2 0) ((emacs (27 1)) (consult (0 32))) "The silver searcher integration using Consult" tar ((:url . "https://github.com/yadex205/consult-ag") (:commit . "25d7a2a8fafbaa956610023e4ca17389294773fd") (:revdesc . "25d7a2a8fafb") (:authors ("Kanon Kakuno" . "yadex205@outlook.jp")) (:maintainers ("Kanon Kakuno" . "yadex205@outlook.jp")) (:maintainer "Kanon Kakuno" . "yadex205@outlook.jp"))])
 (consult-codesearch . [(0 3) ((emacs (27 1)) (consult (0 20))) "Consult interface for codesearch" tar ((:url . "https://github.com/youngker/consult-codesearch.el") (:commit . "51df545bb57b468058245950322ae15f6c3a0ce2") (:revdesc . "51df545bb57b") (:keywords "tools") (:authors ("Youngjoo Lee" . "youngker@gmail.com")) (:maintainers ("Youngjoo Lee" . "youngker@gmail.com")) (:maintainer "Youngjoo Lee" . "youngker@gmail.com"))])
 (consult-compile-multi . [(0 6) ((emacs (28 1)) (compile-multi (0 4)) (consult (0 34))) "Consulting read support for `compile-multi'" tar ((:url . "https://github.com/mohkale/compile-multi") (:commit . "94b2f267d1e424cf523643a3c9841c83f0a86368") (:revdesc . "94b2f267d1e4") (:keywords "tools" "compile" "build") (:authors ("mohsin kaleem" . "mohkale@kisara.moe")) (:maintainers ("mohsin kaleem" . "mohkale@kisara.moe")) (:maintainer "mohsin kaleem" . "mohkale@kisara.moe"))])
 (consult-dir . [(0 1) ((emacs (26 1)) (consult (0 9)) (project (0 6 0))) "Insert paths into the minibuffer prompt" tar ((:url . "https://github.com/karthink/consult-dir") (:commit . "08f543ae6acbfc1ffe579ba1d00a5414012d5c0b") (:revdesc . "08f543ae6acb") (:keywords "convenience") (:maintainers ("Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com")) (:maintainer "Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com"))])
 (consult-eglot . [(0 3 0) ((emacs (27 1)) (eglot (1 7)) (consult (0 31)) (project (0 3 0))) "A consulting-read interface for eglot" tar ((:url . "https://github.com/mohkale/consult-eglot") (:commit . "64262e72452f8fe6dd49d31bcdd4bd577b7d682d") (:revdesc . "64262e72452f") (:keywords "tools" "completion" "lsp") (:authors ("mohsin kaleem" . "mohkale@kisara.moe")))])
 (consult-flycheck . [(1 0) ((emacs (27 1)) (consult (1 0)) (flycheck (32))) "Provides the command `consult-flycheck'" tar ((:url . "https://github.com/minad/consult-flycheck") (:commit . "0662839aa5db429130f5ffd15c14d4a980b2e694") (:revdesc . "0662839aa5db") (:keywords "languages" "tools" "completion") (:maintainers ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de"))])
 (consult-gh . [(1 0) ((emacs (29 1)) (consult (1 0))) "Consulting GitHub Client" tar ((:url . "https://github.com/armindarvish/consult-gh") (:commit . "077c076f1623fd8f2b93f6eb6f8c79ea58662783") (:revdesc . "077c076f1623") (:keywords "convenience" "matching" "tools" "vc"))])
 (consult-gh-embark . [(1 0) ((emacs (29 1)) (consult (1 0)) (consult-gh (1 0))) "Embark Actions for consult-gh" tar ((:url . "https://github.com/armindarvish/consult-gh") (:commit . "077c076f1623fd8f2b93f6eb6f8c79ea58662783") (:revdesc . "077c076f1623") (:keywords "matching" "git" "repositories" "forges" "completion"))])
 (consult-gh-forge . [(1 0) ((emacs (29 1)) (consult (1 0)) (forge (0 3 3)) (consult-gh (1 0))) "Magit/Forge Integration for consult-gh" tar ((:url . "https://github.com/armindarvish/consult-gh") (:commit . "077c076f1623fd8f2b93f6eb6f8c79ea58662783") (:revdesc . "077c076f1623") (:keywords "matching" "git" "repositories" "forges" "completion"))])
 (consult-ghq . [(0 0 5) ((emacs (26 1)) (consult (0 8))) "Ghq interface using consult" tar ((:url . "https://github.com/tomoya/consult-ghq") (:commit . "65a99980fb313d473376542cb87464a8a44ff25e") (:revdesc . "65a99980fb31") (:keywords "convenience" "usability" "consult" "ghq") (:authors ("Tomoya Otake" . "tomoya.ton@gmail.com")) (:maintainers ("Tomoya Otake" . "tomoya.ton@gmail.com")) (:maintainer "Tomoya Otake" . "tomoya.ton@gmail.com"))])
 (consult-hatena-bookmark . [(0 3 1) ((emacs (27 1)) (consult (0 9)) (async-await (1 1))) "Consult commands for the Hatena Bookmark" tar ((:url . "https://github.com/Nyoho/consult-hatena-bookmark") (:commit . "b85484b11705ebd896878d3ac7fdb12bc8c9637a") (:revdesc . "b85484b11705"))])
 (consult-lsp . [(1 1) ((emacs (27 1)) (lsp-mode (5 0)) (consult (0 16)) (f (0 20 0))) "LSP-mode Consult integration" tar ((:url . "https://github.com/gagbo/consult-lsp") (:commit . "c2ec2c509396780b6180473411764ac93b27d64f") (:revdesc . "1.1-0-gc2ec2c509396") (:keywords "tools" "completion" "lsp"))])
 (consult-notmuch . [(0 8 1) ((emacs (26 1)) (consult (0 9)) (notmuch (0 31))) "Notmuch search using consult" tar ((:url . "https://codeberg.org/jao/consult-notmuch") (:commit . "d0d4129d45ccceddaeeaa3631eb42d5dd09a758b") (:revdesc . "d0d4129d45cc") (:keywords "mail") (:authors ("Jose A Ortega Ruiz" . "jao@gnu.org")))])
 (consult-project-extra . [(0 1) ((emacs (27 1)) (consult (0 15))) "Consult integration for project.el" tar ((:url . "https://github.com/Qkessler/consult-project-extra") (:commit . "fee931a63317bcc183c34a84b758db561db3f2dd") (:revdesc . "fee931a63317") (:keywords "convenience" "project" "management"))])
 (consult-recoll . [(0 8 1) ((emacs (26 1)) (consult (0 19))) "Recoll queries using consult" tar ((:url . "https://codeberg.org/jao/consult-recoll") (:commit . "ba68d052d9479aeaa5dda15a57a2c070df7d9bca") (:revdesc . "ba68d052d947") (:keywords "docs" "convenience") (:authors ("Jose A Ortega Ruiz" . "jao@gnu.org")) (:maintainers ("Jose A Ortega Ruiz" . "jao@gnu.org")) (:maintainer "Jose A Ortega Ruiz" . "jao@gnu.org"))])
 (consult-tex . [(0 3 0) ((emacs (28 2)) (consult (0 35))) "Consult powered completion for tex" tar ((:url . "https://gitlab.com/titus.pinta/consult-tex") (:commit . "675755e106f9e64e2c1fd3cf05a43275c09497da") (:revdesc . "675755e106f9") (:keywords "consult" "tex" "latex") (:maintainers ("Titus Pinta" . "titus.pinta@gmail.com")) (:maintainer "Titus Pinta" . "titus.pinta@gmail.com"))])
 (consult-todo . [(0 4 1) ((emacs (27 1)) (consult (0 35)) (hl-todo (3 1 2))) "Search hl-todo keywords in consult" tar ((:url . "https://github.com/liuyinz/consult-todo") (:commit . "84f3c9876a285f733d75053076a97cc30f7d8eb9") (:revdesc . "84f3c9876a28") (:authors ("liuyinz" . "liuyinz@gmail.com")) (:maintainers ("liuyinz" . "liuyinz@gmail.com")) (:maintainer "liuyinz" . "liuyinz@gmail.com"))])
 (context-transient . [(1 0 1) ((emacs (29 1))) "Context specific transients" tar ((:url . "https://github.com/licht1stein/context-transient.el") (:commit . "4461c3a5b8654cb1dacea404f78951172437804f") (:revdesc . "4461c3a5b865") (:authors ("Mykhaylo Bilyanskyy" . "mb@m1k.pw")) (:maintainers ("Mykhaylo Bilyanskyy" . "mb@m1k.pw")) (:maintainer "Mykhaylo Bilyanskyy" . "mb@m1k.pw"))])
 (contextual . [(1 0 1) ((emacs (24)) (dash (2 12 1)) (cl-lib (0 5))) "Contextual profile management system" tar ((:url . "https://github.com/outergod/contextual") (:commit . "8134a2d8034c624f4fdbbb0b3893de12f4257909") (:revdesc . "1.0.1-0-g8134a2d8034c") (:keywords "convenience" "tools") (:authors ("Alexander Kahl" . "alex@lshift.de")) (:maintainers ("Alexander Kahl" . "alex@lshift.de")) (:maintainer "Alexander Kahl" . "alex@lshift.de"))])
 (contextual-menubar . [(1 0 0) nil "Display the menubar only on a graphical display" tar ((:url . "https://github.com/aaronjensen/contextual-menubar") (:commit . "cc2e7c952b59401188b81d84be81dead9d0da3db") (:revdesc . "1.0.0-0-gcc2e7c952b59") (:authors ("Aaron Jensen" . "aaronjensen@gmail.com")) (:maintainers ("Aaron Jensen" . "aaronjensen@gmail.com")) (:maintainer "Aaron Jensen" . "aaronjensen@gmail.com"))])
 (conventional-changelog . [(1 1 0) ((emacs (27)) (transient (0 3 6))) "Conventional Changelog Generator" tar ((:url . "https://github.com/liuyinz/emacs-conventional-changelog") (:commit . "9db9dcfdff2ff8cf6a88e938646cb26ce0f61774") (:revdesc . "v1.1.0-0-g9db9dcfdff2f") (:keywords "tools") (:authors ("liuyinz" . "liuyinz95@gmail.com")) (:maintainers ("liuyinz" . "liuyinz95@gmail.com")) (:maintainer "liuyinz" . "liuyinz95@gmail.com"))])
 (copilot-chat . [(1 2 0) ((request (0 3 2)) (markdown-mode (2 6)) (emacs (27 1)) (chatgpt-shell (1 6 1))) "Copilot chat interface" tar ((:url . "https://github.com/chep/copilot-chat.el") (:commit . "e8235960cc568bf2026e8c4206b4e43a7a9b9c02") (:revdesc . "e8235960cc56") (:keywords "convenience" "tools") (:authors ("cedric.chepied" . "cedric.chepied@gmail.com")) (:maintainers ("cedric.chepied" . "cedric.chepied@gmail.com")) (:maintainer "cedric.chepied" . "cedric.chepied@gmail.com"))])
 (copy-as-format . [(0 0 9) ((cl-lib (0 5))) "Copy buffer locations as GitHub/Slack/JIRA etc... formatted code" tar ((:url . "https://github.com/sshaw/copy-as-format") (:commit . "b9f6f725ca9701c5a02bfb479573fdfcce2e1e30") (:revdesc . "b9f6f725ca97") (:keywords "github" "slack" "jira" "telegram" "gitlab" "bitbucket" "org-mode" "pod" "rst" "asciidoc" "whatsapp" "tools" "convenience") (:authors ("Skye Shaw" . "skye.shaw@gmail.com")) (:maintainers ("Skye Shaw" . "skye.shaw@gmail.com")) (:maintainer "Skye Shaw" . "skye.shaw@gmail.com"))])
 (copy-file-on-save . [(0 1 0) ((emacs (24 3)) (compat (29))) "Copy file on save, automatic deployment it" tar ((:url . "https://github.com/emacs-php/emacs-auto-deployment") (:commit . "370b1586feb2690d3c72185bd4f17c31ce03673a") (:revdesc . "370b1586feb2") (:keywords "files" "comm" "deploy") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (copyit . [(0 1 0) ((emacs (24 3)) (s (1 9 0))) "Copy it, yank anything!" tar ((:url . "https://github.com/zonuexe/emacs-copyit") (:commit . "c4f2c28e5b6270e8e3364341619f1154bb4e682e") (:revdesc . "c4f2c28e5b62") (:keywords "convenience" "yank" "clipboard") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (copyit-pandoc . [(0 1 0) ((emacs (24 3)) (copyit (0 1 0)) (pandoc (0 0 1))) "Copy it, yank anything!" tar ((:url . "https://github.com/zonuexe/emacs-copyit") (:commit . "c4f2c28e5b6270e8e3364341619f1154bb4e682e") (:revdesc . "c4f2c28e5b62") (:keywords "convenience" "yank" "clipboard") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (corfu . [(1 5) ((emacs (27 1)) (compat (30))) "COmpletion in Region FUnction" tar ((:url . "https://github.com/minad/corfu") (:commit . "5e3a959766d2313651c5db3beedd937bfc27b57a") (:revdesc . "5e3a959766d2") (:keywords "abbrev" "convenience" "matching" "completion" "text") (:authors ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainers ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de"))])
 (corfu-candidate-overlay . [(1 3) ((emacs (28 1)) (corfu (0 36))) "Show first candidate in an overlay while typing" tar ((:url . "https://code.bsdgeek.org/adam/corfu-candidate-overlay") (:commit . "0674824cb87881b86e9f20ae3ef1daba0e1a7b68") (:revdesc . "0674824cb878") (:authors ("Adam Kruszewski" . "adam@kruszewski.name")) (:maintainers ("Adam Kruszewski" . "adam@kruszewski.name")) (:maintainer "Adam Kruszewski" . "adam@kruszewski.name"))])
 (corfu-prescient . [(6 3 1) ((emacs (27 1)) (prescient (6 1 0)) (corfu (1 1))) "Prescient.el + Corfu" tar ((:url . "https://github.com/radian-software/prescient.el") (:commit . "2b8a8b41228bddb2e11eb1c200e98a9edd04797c") (:revdesc . "2b8a8b41228b") (:keywords "extensions") (:authors ("Radian LLC" . "contact+prescient@radian.codes")) (:maintainers ("Radian LLC" . "contact+prescient@radian.codes")) (:maintainer "Radian LLC" . "contact+prescient@radian.codes"))])
 (corral . [(0 3) nil "Quickly surround text with delimiters" tar ((:url . "https://github.com/nivekuil/corral") (:commit . "e7ab6aa118e46b93d4933d1364bc273f57cd6911") (:revdesc . "e7ab6aa118e4") (:authors ("Kevin Liu" . "mail@nivekuil.com")) (:maintainers ("Kevin Liu" . "mail@nivekuil.com")) (:maintainer "Kevin Liu" . "mail@nivekuil.com"))])
 (cort . [(7 1 0) ((emacs (24 4)) (ansi (0 4))) "Simplify extended unit test framework" tar ((:url . "https://github.com/conao3/cort.el") (:commit . "a2d5ac5639e43dd73b5dbfa5bd011b7760b126fd") (:revdesc . "a2d5ac5639e4") (:keywords "test" "lisp") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (counsel . [(0 14 2) ((emacs (24 5)) (ivy (0 14 2)) (swiper (0 14 2))) "Various completion functions using Ivy" tar ((:url . "https://github.com/abo-abo/swiper") (:commit . "8c30f4cab5948aa8d942a3b2bbf5fb6a94d9441d") (:revdesc . "0.14.2-0-g8c30f4cab594") (:keywords "convenience" "matching" "tools") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Basil L. Contovounesios" . "contovob@tcd.ie")) (:maintainer "Basil L. Contovounesios" . "contovob@tcd.ie"))])
 (counsel-bbdb . [(0 0 5) ((emacs (24 3)) (bbdb (3 2 2 2))) "Quick search&input email from BBDB based on Emacs API `completing-read'" tar ((:url . "https://github.com/redguardtoo/counsel-bbdb") (:commit . "ccae56b0551abb305cad087d85f1b6a97adb7c0f") (:revdesc . "ccae56b0551a") (:keywords "mail" "abbrev" "convenience" "matching") (:authors ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainers ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainer "Chen Bin" . "chenbin.sh@gmail.com"))])
 (counsel-css . [(1 0 7) ((emacs (24 4)) (counsel (0 7 0)) (cl-lib (0 5))) "Stylesheet-selector-aware swiper" tar ((:url . "https://github.com/hlissner/emacs-counsel-css") (:commit . "61a38c9d50fa9d1e38b2fa550d07130eb9322524") (:revdesc . "61a38c9d50fa") (:keywords "convenience" "tools" "counsel" "swiper" "selector" "css" "less" "scss") (:authors ("Henrik Lissner" . "http://github/hlissner")) (:maintainers ("Henrik Lissner" . "henrik@lissner.net")) (:maintainer "Henrik Lissner" . "henrik@lissner.net"))])
 (counsel-dash . [(0 1 3) ((emacs (24 4)) (dash (2 12 1)) (dash-functional (1 2 0)) (helm-dash (1 3 0)) (counsel (0 8 0))) "Browse dash docsets using Ivy" tar ((:url . "https://github.com/dash-docs-el/counsel-dash") (:commit . "a342340bbd8e50e4d1015e0b91d8ecd8f6cdf9f2") (:revdesc . "a342340bbd8e") (:keywords "dash" "ivy" "counsel") (:authors ("Nathan Kot" . "nk@nathankot.com")) (:maintainers ("Nathan Kot" . "nk@nathankot.com")) (:maintainer "Nathan Kot" . "nk@nathankot.com"))])
 (counsel-edit-mode . [(0 6 1) ((emacs (26 1)) (ht (2 3)) (s (1 12 0)) (counsel (0 10 0))) "Edit results of counsel commands in-place" tar ((:url . "https://github.com/tyler-dodge/counsel-edit-mode") (:commit . "75563c48135a4f52230d08e818e35d72fd55c2a4") (:revdesc . "75563c48135a") (:keywords "convenience" "matching"))])
 (counsel-etags . [(1 10 1) ((emacs (26 1)) (counsel (0 13 4))) "Fast and complete Ctags/Etags solution using ivy" tar ((:url . "https://github.com/redguardtoo/counsel-etags") (:commit . "05d364b556aadcfe49df727c0729abc3f0c14372") (:revdesc . "05d364b556aa") (:keywords "tools" "convenience") (:authors ("Chen Bin" . "chenbindotshATgmaildotcom")) (:maintainers ("Chen Bin" . "chenbindotshATgmaildotcom")) (:maintainer "Chen Bin" . "chenbindotshATgmaildotcom"))])
 (counsel-gtags . [(0 1) ((emacs (24 3)) (counsel (0 8 0))) "Ivy for GNU global" tar ((:url . "https://github.com/FelipeLema/emacs-counsel-gtags") (:commit . "8066dd4cd6eb157345fb43788bacf2c5d746b497") (:revdesc . "8066dd4cd6eb") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (counsel-jq . [(1 1) ((swiper (0 12 0)) (ivy (0 12 0)) (emacs (24 1))) "Live preview of \"jq\" queries using counsel" tar ((:url . "https://github.com/200ok-ch/counsel-jq") (:commit . "8cadd2e96470402ede4881b4e955872976443689") (:revdesc . "8cadd2e96470") (:keywords "convenience" "data" "matching") (:authors ("Alain M. Lafon" . "alain@200ok.ch")) (:maintainers ("Alain M. Lafon" . "alain@200ok.ch")) (:maintainer "Alain M. Lafon" . "alain@200ok.ch"))])
 (counsel-projectile . [(0 3 2) ((counsel (0 13 4)) (projectile (2 5 0))) "Ivy integration for Projectile" tar ((:url . "https://github.com/ericdanan/counsel-projectile") (:commit . "e30150792a96968f55f34638cbfe63eaa30839cc") (:revdesc . "e30150792a96") (:keywords "project" "convenience"))])
 (counsel-tramp . [(0 7 7) ((emacs (24 3)) (counsel (0 10))) "Tramp ivy interface for ssh, docker, vagrant" tar ((:url . "https://github.com/masasam/emacs-counsel-tramp") (:commit . "70dcc6b9da5e76fefbc92646e7d780b2a06ca93f") (:revdesc . "70dcc6b9da5e"))])
 (coverage . [(0 5) ((ov (1 0)) (cl-lib (0 5))) "Code coverage line highlighting" tar ((:url . "https://github.com/trezona-lecomte/coverage") (:commit . "6e3c6f2dcb759a76086adeeb1fdfe83e4f082482") (:revdesc . "6e3c6f2dcb75") (:keywords "coverage" "metrics" "simplecov" "ruby" "rspec") (:authors ("Kieran Trezona-le Comte" . "trezona.lecomte@gmail.com")) (:maintainers ("Kieran Trezona-le Comte" . "trezona.lecomte@gmail.com")) (:maintainer "Kieran Trezona-le Comte" . "trezona.lecomte@gmail.com"))])
 (coverlay . [(3 0 2) ((emacs (24 1)) (cl-lib (0 5))) "Test coverage overlays" tar ((:url . "https://github.com/twada/coverlay.el") (:commit . "0beae208d0e7d746a94385428bd61aa5cd7ea828") (:revdesc . "v3.0.2-0-g0beae208d0e7") (:keywords "coverage" "overlay") (:authors ("Takuto Wada" . "takuto.wadaatgmailcom")) (:maintainers ("Takuto Wada" . "takuto.wadaatgmailcom")) (:maintainer "Takuto Wada" . "takuto.wadaatgmailcom"))])
 (cpp-auto-include . [(0 2 0) ((cl-lib (0 5))) "Insert and delete C++ header files automatically" tar ((:url . "https://github.com/emacsorphanage/cpp-auto-include") (:commit . "08208ca7b9dc4ac940ce9ca1f79424d2f3d3d391") (:revdesc . "v0.2.0-0-g08208ca7b9dc") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (cpputils-cmake . [(5 5) nil "Easy real time C++ syntax check and intellisense if you use CMake" tar ((:url . "https://github.com/redguardtoo/cpputils-cmake") (:commit . "55e5c69554379632692a0fa20bfadeef9194fbdd") (:revdesc . "55e5c6955437") (:keywords "cmake" "intellisense" "flymake" "flycheck") (:authors ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainers ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainer "Chen Bin" . "chenbin.sh@gmail.com"))])
 (crc . [(1 1 2) ((emacs (25 1))) "Cyclic Redundancy Check" tar ((:url . "https://codeberg.org/WammKD/Emacs-CRC") (:commit . "fddce64e8ff5b8cd52b3d41cc5dc5056084a42de") (:revdesc . "fddce64e8ff5") (:keywords "lisp" "checksum" "algorithms") (:authors ("Wamm K. D." . "jaft.r@outlook.com")) (:maintainers ("Wamm K. D." . "jaft.r@outlook.com")) (:maintainer "Wamm K. D." . "jaft.r@outlook.com"))])
 (creamsody-theme . [(1 0 9) ((autothemer (0 2)) (emacs (24))) "Straight from the soda fountain" tar ((:url . "https://github.com/emacsfodder/emacs-theme-creamsody") (:commit . "5f4fce9de6920cd2788bf6baf3a3da110f09bffd") (:revdesc . "5f4fce9de692"))])
 (create-link . [(1 0) ((emacs (25 1)) (request (0 3 2)) (w3m (1 4 632))) "Formatted link generator in browser" tar ((:url . "https://github.com/kijimaD/create-link") (:commit . "fbc4e8eeec845f7d1610c52b81c0c7a4e961b991") (:revdesc . "fbc4e8eeec84") (:keywords "link" "format" "browser" "convenience") (:authors ("Kijima Daigo" . "norimaking777@gmail.com")) (:maintainers ("Kijima Daigo" . "norimaking777@gmail.com")) (:maintainer "Kijima Daigo" . "norimaking777@gmail.com"))])
 (creds . [(0 0 6 1) ((s (1 9 0)) (dash (2 5 0))) "A parser credentials file library (not limited to credentials entries)" tar ((:url . "https://github.com/ardumont/emacs-creds") (:commit . "00ebefd10005c170b790a01380cb6a98f798ce5c") (:revdesc . "00ebefd10005") (:keywords "credentials") (:authors ("Antoine R. Dumont" . "eniotna.tATgmail.com")) (:maintainers ("Antoine R. Dumont" . "eniotna.tATgmail.com")) (:maintainer "Antoine R. Dumont" . "eniotna.tATgmail.com"))])
 (cricbuzz . [(0 3 6) ((enlive (0 0 1)) (f (0 19 0)) (dash (2 13 0)) (s (1 11 0))) "Cricket scores from cricbuzz in emacs" tar ((:url . "https://github.com/lepisma/cricbuzz.el") (:commit . "0b95d45991bbcd2fa58d96ce921f6a57ba42c153") (:revdesc . "0b95d45991bb") (:keywords "cricket" "score") (:authors ("Abhinav Tushar" . "abhinav.tushar.vs@gmail.com")) (:maintainers ("Abhinav Tushar" . "abhinav.tushar.vs@gmail.com")) (:maintainer "Abhinav Tushar" . "abhinav.tushar.vs@gmail.com"))])
 (crm-custom . [(0 5) ((cl-lib (0 5))) "Alternate `completing-read-multiple' that uses `completing-read'" tar ((:url . "https://github.com/DarwinAwardWinner/crm-custom") (:commit . "f1aaccf64306a5f99d9bf7ba815d7ea41c15518d") (:revdesc . "f1aaccf64306") (:keywords "completion" "minibuffer" "multiple elements") (:authors ("Ryan C. Thompson" . "rct@thompsonclan.org")) (:maintainers ("Ryan C. Thompson" . "rct@thompsonclan.org")) (:maintainer "Ryan C. Thompson" . "rct@thompsonclan.org"))])
 (crossword . [(1 0) ((emacs (26 1))) "Download and play crossword puzzles" tar ((:url . "https://github.com/Boruch-Baum/emacs-crossword") (:commit . "fa80bfef81168509ddbd840d95c6671efe91c253") (:revdesc . "fa80bfef8116") (:keywords "games"))])
 (crux . [(0 5 0) ((emacs (26 1))) "A Collection of Ridiculously Useful eXtensions" tar ((:url . "https://github.com/bbatsov/crux") (:commit . "7980df10e47eef41d4d1c57cfb690ec406381ed3") (:revdesc . "7980df10e47e") (:keywords "convenience") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainers ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.dev"))])
 (cryptol-mode . [(0 1 0) nil "Cryptol major mode for Emacs" tar ((:url . "https://github.com/thoughtpolice/cryptol-mode") (:commit . "a54d000d24757fad2a91ae2853b16a97ebe52771") (:revdesc . "v0.1.0-0-ga54d000d2475") (:keywords "cryptol" "cryptography") (:authors ("Austin Seipp" . "aseipp[@at]pobox[dot]com")) (:maintainers ("Austin Seipp" . "aseipp[@at]pobox[dot]com")) (:maintainer "Austin Seipp" . "aseipp[@at]pobox[dot]com"))])
 (crystal-mode . [(0 1 0) ((emacs (24 4))) "Major mode for editing Crystal files" tar ((:url . "https://github.com/crystal-lang-tools/emacs-crystal-mode") (:commit . "0fe6815201bebe4c5ff6857bd541d95b05132b10") (:revdesc . "0fe6815201be") (:keywords "languages" "crystal"))])
 (csharp-mode . [(2 0 0) ((emacs (26 1))) "C# mode derived mode" tar ((:url . "https://github.com/emacs-csharp/csharp-mode") (:commit . "d8b058c9e9d0429ea7e81d121ce19b064bd7e0f5") (:revdesc . "d8b058c9e9d0") (:keywords "c#" "languages" "oop" "mode") (:authors ("Theodor Thornhill" . "theo@thornhill.no")) (:maintainers ("Jostein Kjønigsen" . "jostein@gmail.com") ("Theodor Thornhill" . "theo@thornhill.no")) (:maintainer "Jostein Kjønigsen" . "jostein@gmail.com"))])
 (csound-mode . [(0 2 1) ((emacs (25)) (shut-up (0 3 2)) (multi (2 0 1)) (highlight (0))) "A major mode for interacting and coding Csound" tar ((:url . "https://github.com/hlolli/csound-mode") (:commit . "389be230aecfea03e8043e8ea6884ea21ea9230b") (:revdesc . "389be230aecf") (:authors ("Hlöðver Sigurðsson" . "hlolli@gmail.com")) (:maintainers ("Hlöðver Sigurðsson" . "hlolli@gmail.com")) (:maintainer "Hlöðver Sigurðsson" . "hlolli@gmail.com"))])
 (csproj-mode . [(0 1) ((emacs (24))) "Work with .NET project files (csproj, vbproj)" tar ((:url . "https://github.com/omajid/csproj-mode") (:commit . "a7f0f4610c976a28c41b9b8299892f88b5d0336c") (:revdesc . "v0.1-0-ga7f0f4610c97") (:keywords "languages" "tools") (:authors ("Omair Majid" . "omair.majid@gmail.com")) (:maintainers ("Omair Majid" . "omair.majid@gmail.com")) (:maintainer "Omair Majid" . "omair.majid@gmail.com"))])
 (csv . [(2 1) nil "Functions for reading and parsing CSV files" tar ((:url . "https://gitlab.com/u11/csv.el") (:commit . "aa1dfa1263565d5fac3879c21d8ddf5f8915e411") (:revdesc . "aa1dfa126356") (:keywords "extensions" "data" "csv") (:authors ("Ulf Jasper" . "ulf.jasper@web.de")) (:maintainers ("Ulf Jasper" . "ulf.jasper@web.de")) (:maintainer "Ulf Jasper" . "ulf.jasper@web.de"))])
 (ctable . [(0 1 2) nil "Table component for Emacs Lisp" tar ((:url . "https://github.com/kiwanami/emacs-ctable") (:commit . "08a017bde6d24ea585e39ce2637bebe28774d316") (:revdesc . "08a017bde6d2") (:keywords "table") (:authors ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatkiwanami.net"))])
 (ctags-update . [(1 1) nil "(auto) update TAGS in parent directory using exuberant-ctags" tar ((:url . "https://github.com/jixiuf/ctags-update") (:commit . "67faf248b92388442958a069263c62a345425a1b") (:revdesc . "67faf248b923") (:keywords "exuberant-ctags" "etags") (:authors ("纪秀峰" . "Josephjixiuf@gmail.com")) (:maintainers ("纪秀峰" . "Josephjixiuf@gmail.com")) (:maintainer "纪秀峰" . "Josephjixiuf@gmail.com"))])
 (ctrlf . [(1 6) ((emacs (25 1))) "Emacs finally learns how to ctrl+F" tar ((:url . "https://github.com/radian-software/ctrlf") (:commit . "9b4cf6c79a961f2bfbb949805aa300fcf1eb40a6") (:revdesc . "9b4cf6c79a96") (:keywords "extensions") (:authors ("Radian LLC" . "contact+ctrlf@radian.codes")) (:maintainers ("Radian LLC" . "contact+ctrlf@radian.codes")) (:maintainer "Radian LLC" . "contact+ctrlf@radian.codes"))])
 (ctune . [(0 2) ((emacs (26 1))) "Tune out CC Mode Noise Macros" tar ((:url . "https://github.com/maurooaranda/ctune") (:commit . "d7643461f5aa33cc04e4d808123e4ed1d85500ee") (:revdesc . "v0.2-0-gd7643461f5aa") (:keywords "c" "convenience") (:authors ("Mauro Aranda" . "maurooaranda@gmail.com")) (:maintainers ("Mauro Aranda" . "maurooaranda@gmail.com")) (:maintainer "Mauro Aranda" . "maurooaranda@gmail.com"))])
 (ctxmenu . [(0 3 0) ((popup (20140205 103)) (log4e (0 2 0)) (yaxception (0 1))) "Provide a context menu like right-click" tar ((:url . "https://github.com/aki2o/emacs-ctxmenu") (:commit . "5c2376859562b98c07c985d2b483658e4c0e888e") (:revdesc . "5c2376859562") (:keywords "popup") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (cubicaltt . [(1 0) ((emacs (24 1)) (cl-lib (0 5))) "Mode for cubical type theory" tar ((:url . "https://github.com/mortberg/cubicaltt") (:commit . "3257eadf70826fb3ef060c46f85b7a4d60464b1d") (:revdesc . "3257eadf7082") (:keywords "languages"))])
 (cubicle-mode . [(1 2 0) nil "Major mode for the Cubicle model checker" tar ((:url . "https://github.com/cubicle-model-checker/cubicle") (:commit . "7679c8452051ed5c89f891c72c6ada76757fc935") (:revdesc . "7679c8452051"))])
 (cuda-mode . [(1 0 0) nil "NVIDIA CUDA Major Mode" tar ((:url . "https://github.com/chachi/cuda-mode") (:commit . "c8cf7d92b8039cdd0bd525c258ab42f49a0f91cf") (:revdesc . "1.0.0-0-gc8cf7d92b803") (:keywords "c" "languages") (:authors ("Jack Morrison" . "jackmorrison1@gmail.com")) (:maintainers ("Jack Morrison" . "jackmorrison1@gmail.com")) (:maintainer "Jack Morrison" . "jackmorrison1@gmail.com"))])
 (cue-mode . [(1 0 11) ((emacs (25 1))) "Major mode for CUE language files" tar ((:url . "https://github.com/russell/cue-mode") (:commit . "31c671d56e7884fa87ad0f1d27d0bb439dc65380") (:revdesc . "31c671d56e78") (:keywords "data" "languages") (:authors ("Russell Sim" . "russell.sim@gmail.com")) (:maintainers ("Russell Sim" . "russell.sim@gmail.com")) (:maintainer "Russell Sim" . "russell.sim@gmail.com"))])
 (current-word-highlight . [(1 0 4) nil "Highlight the current word minor mode" tar ((:url . "https://github.com/kijimaD/current-word-highlight") (:commit . "d82441c85773bec2bc41eb3c5778659f0be31a61") (:revdesc . "d82441c85773") (:keywords "highlight" "face" "convenience" "word") (:authors ("Kijima Daigo" . "norimaking777@gmail.com")) (:maintainers ("Kijima Daigo" . "norimaking777@gmail.com")) (:maintainer "Kijima Daigo" . "norimaking777@gmail.com"))])
 (cwl-mode . [(0 2 6) ((yaml-mode (0 0 13)) (emacs (24 4))) "A major mode for editing CWL" tar ((:url . "https://github.com/tom-tan/cwl-mode") (:commit . "23a333119efaac78453cba95d316109805bd6aec") (:revdesc . "23a333119efa") (:keywords "languages" "cwl" "common workflow language") (:authors ("Tomoya Tanjo" . "ttanjo@gmail.com")) (:maintainers ("Tomoya Tanjo" . "ttanjo@gmail.com")) (:maintainer "Tomoya Tanjo" . "ttanjo@gmail.com"))])
 (cyanometric-theme . [(1 0 2) ((autothemer (0 2)) (emacs (24))) "A Theme with overwhelming bias towards cyan" tar ((:url . "https://github.com/emacsfodder/emacs-theme-cyanometric") (:commit . "9b20e33a8cc2c76bfe6ad45916be6881386707f5") (:revdesc . "9b20e33a8cc2"))])
 (cyberpunk-theme . [(1 22) nil "Cyberpunk Color Theme" tar ((:url . "https://github.com/n3mo/cyberpunk-theme.el") (:commit . "81004fc774d373777d426926fc11abcf1e7ab334") (:revdesc . "81004fc774d3") (:keywords "color" "theme" "cyberpunk") (:authors ("Nicholas M. Van Horn" . "nvanhorn@protonmail.com")) (:maintainers ("Nicholas M. Van Horn" . "nvanhorn@protonmail.com")) (:maintainer "Nicholas M. Van Horn" . "nvanhorn@protonmail.com"))])
 (cyphejor . [(0 1 2) ((emacs (24 4))) "Shorten major mode names using user-defined rules" tar ((:url . "https://github.com/mrkkrp/cyphejor") (:commit . "d7842388a1872b165489624a1a68f536de97e28d") (:revdesc . "d7842388a187") (:keywords "mode-line" "major-mode") (:authors ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainers ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainer "Mark Karpov" . "markkarpov92@gmail.com"))])
 (d-mode . [(2 0 12) ((emacs (25 1))) "D Programming Language major mode for (X)Emacs" tar ((:url . "https://github.com/Emacs-D-Mode-Maintainers/Emacs-D-Mode") (:commit . "024aca97d07e72bf3500fb6bf0cdf50c4992a741") (:revdesc . "024aca97d07e") (:keywords "d" "programming" "language" "emacs" "cc-mode") (:maintainers ("Russel Winder" . "russel@winder.org.uk") ("Vladimir Panteleev" . "vladimir@thecybershadow.net")) (:maintainer "Russel Winder" . "russel@winder.org.uk"))])
 (d2-mode . [(0 1 3) ((emacs (26 1))) "Major mode for working with d2 graphs" tar ((:url . "https://github.com/andorsk/d2-mode") (:commit . "872a0d79223d2fe0ecad02fd4474831ec623672f") (:revdesc . "872a0d79223d") (:keywords "d2" "graphs" "tools" "processes") (:authors ("Andor Kesselman" . "andor@henosisknot.com")) (:maintainers ("Andor Kesselman" . "andor@henosisknot.com")) (:maintainer "Andor Kesselman" . "andor@henosisknot.com"))])
 (dad-joke . [(1 4) ((emacs (24))) "Get/display dad jokes" tar ((:url . "https://github.com/davep/dad-joke.el") (:commit . "bee47e7b746b403228fa7d7361cb095de19ac9ba") (:revdesc . "bee47e7b746b") (:keywords "games") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (daemons . [(2 0 0) ((emacs (25 1))) "UI for managing init system daemons (services)" tar ((:url . "https://github.com/cbowdon/daemons.el") (:commit . "dcf42cb3178d7245d6d49de346d5e2b44e5b7498") (:revdesc . "dcf42cb3178d") (:keywords "unix" "convenience"))])
 (dall-e-shell . [(1 20 1) ((emacs (27 1)) (shell-maker (0 58 1))) "Interaction mode for DALL-E" tar ((:url . "https://github.com/xenodium/chatgpt-shell") (:commit . "a24c003c79a720eafffc79bc3885070735f667f6") (:revdesc . "a24c003c79a7"))])
 (dante . [(1 7) ((dash (2 12 0)) (emacs (25 1)) (f (0 19 0)) (flycheck (0 30)) (company (0 9)) (haskell-mode (13 14)) (s (1 11 0)) (lcr (1 2))) "Development mode for Haskell" tar ((:url . "https://github.com/jyp/dante") (:commit . "b9061204dfa4c0a62589c25159b6a9b6bcc030be") (:revdesc . "b9061204dfa4") (:keywords "haskell" "tools") (:authors ("Jean-Philippe Bernardy" . "jeanphilippe.bernardy@gmail.com")) (:maintainers ("Jean-Philippe Bernardy" . "jeanphilippe.bernardy@gmail.com")) (:maintainer "Jean-Philippe Bernardy" . "jeanphilippe.bernardy@gmail.com"))])
 (dap-mode . [(0 8) ((emacs (27 1)) (dash (2 18 0)) (lsp-mode (6 0)) (bui (1 1 0)) (f (0 20 0)) (s (1 12 0)) (lsp-treemacs (0 1)) (posframe (0 7 0)) (ht (2 3)) (lsp-docker (1 0 0))) "Debug Adapter Protocol mode" tar ((:url . "https://github.com/emacs-lsp/dap-mode") (:commit . "71c2e5a3734debe265c0de11531bf1d1351f7483") (:revdesc . "71c2e5a3734d") (:keywords "languages" "debug") (:authors ("Ivan Yonchovski" . "yyoncho@gmail.com")) (:maintainers ("Ivan Yonchovski" . "yyoncho@gmail.com")) (:maintainer "Ivan Yonchovski" . "yyoncho@gmail.com"))])
 (darcula-theme . [(2 0) nil "Inspired by IntelliJ's Darcula theme" tar ((:url . "https://gitlab.com/fommil/emacs-darcula-theme") (:commit . "2ecd466ffa7a3157b9ddcd7545b6fb8ad308c976") (:revdesc . "2ecd466ffa7a") (:keywords "faces") (:authors ("Sam Halliday" . "Sam.Halliday@gmail.com")) (:maintainers ("Sam Halliday" . "Sam.Halliday@gmail.com")) (:maintainer "Sam Halliday" . "Sam.Halliday@gmail.com"))])
 (darkman . [(1 1 0) ((emacs (28 1))) "Seamless integration with Darkman" tar ((:url . "https://git.sr.ht/~grtcdr/darkman.el") (:commit . "fa80face9fb6e6c13dc2a0d84631d770fbef71fe") (:revdesc . "1.1.0-0-gfa80face9fb6") (:keywords "convenience") (:authors ("Aziz Ben Ali" . "tahaaziz.benali@esprit.tn")) (:maintainers ("Aziz Ben Ali" . "tahaaziz.benali@esprit.tn")) (:maintainer "Aziz Ben Ali" . "tahaaziz.benali@esprit.tn"))])
 (darktooth-theme . [(1 0 2) ((emacs (27 1)) (autothemer (0 2))) "From the darkness... it watches" tar ((:url . "https://github.com/emacsfodder/emacs-theme-darktooth") (:commit . "6910ebd3ec2441487a730ef98df591d6b1e0c671") (:revdesc . "6910ebd3ec24"))])
 (dart-mode . [(1 0 7) ((emacs (24 3))) "Major mode for editing Dart files" tar ((:url . "https://github.com/emacsorphanage/dart-mode") (:commit . "3bac14200f9f8f8fcebc383087572da5c3823c34") (:revdesc . "3bac14200f9f") (:keywords "languages"))])
 (dart-server . [(0 1 0) ((emacs (24 5)) (cl-lib (0 5)) (dash (2 10 0)) (flycheck (0 23)) (s (1 10))) "Minor mode for editing Dart files" tar ((:url . "https://github.com/bradyt/dart-server") (:commit . "bbc66eb981d17046ab98584c950baf963ac5da61") (:revdesc . "bbc66eb981d1") (:keywords "languages") (:authors ("Brady Trainor" . "mail@bradyt.com")) (:maintainers ("Brady Trainor" . "mail@bradyt.com")) (:maintainer "Brady Trainor" . "mail@bradyt.com"))])
 (dash . [(2 19 1) ((emacs (24))) "A modern list library for Emacs" tar ((:url . "https://github.com/magnars/dash.el") (:commit . "39d067b9fbb2db65fc7a6938bfb21489ad990cb4") (:revdesc . "2.19.1-0-g39d067b9fbb2") (:keywords "extensions" "lisp") (:authors ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (dash-functional . [(2 19 1) ((dash (2 18 0))) "Collection of useful combinators for Emacs Lisp" tar ((:url . "https://github.com/magnars/dash.el") (:commit . "39d067b9fbb2db65fc7a6938bfb21489ad990cb4") (:revdesc . "2.19.1-0-g39d067b9fbb2") (:keywords "extensions" "lisp") (:authors ("Matus Goljer" . "matus.goljer@gmail.com") ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Matus Goljer" . "matus.goljer@gmail.com") ("Magnar Sveen" . "magnars@gmail.com")) (:maintainer "Matus Goljer" . "matus.goljer@gmail.com"))])
 (dashboard . [(1 8 0) ((emacs (26 1))) "A startup screen extracted from Spacemacs" tar ((:url . "https://github.com/emacs-dashboard/emacs-dashboard") (:commit . "a1c29c0bbfca3f6778022628b79e7eef2b9f351d") (:revdesc . "a1c29c0bbfca") (:keywords "startup" "screen" "tools" "dashboard") (:authors ("Rakan Al-Hneiti" . "rakan.alhneiti@gmail.com")) (:maintainers ("Jesús Martínez" . "jesusmartinez93@gmail.com") ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jesús Martínez" . "jesusmartinez93@gmail.com"))])
 (dashboard-ls . [(0 3 0) ((emacs (24 3)) (dashboard (1 2 5))) "Display files/directories in current directory on Dashboard" tar ((:url . "https://github.com/emacs-dashboard/dashboard-ls") (:commit . "5c6a11bfda542892775b5c55c8430773cc82b3c9") (:revdesc . "5c6a11bfda54") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (dashboard-project-status . [(0 0 1) ((emacs (24)) (git (0 1 1)) (dashboard (1 2 5))) "Display a git project status in a dashboard widget" tar ((:url . "https://github.com/functionreturnfunction/dashboard-project-status") (:commit . "42fc624937b965d05c9f9d017661fa0420164df7") (:revdesc . "42fc624937b9") (:authors ("Jason Duncan" . "jasond496@msn.com")) (:maintainers ("Jason Duncan" . "jasond496@msn.com")) (:maintainer "Jason Duncan" . "jasond496@msn.com"))])
 (date-at-point . [(0 1) nil "Add `date' to `thing-at-point' function" tar ((:url . "https://github.com/alezost/date-at-point.el") (:commit . "662f8350a83311503dc0aae47a28752f9f1270c9") (:revdesc . "662f8350a833") (:keywords "convenience") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (date-field . [(0 0 1) ((dash (2 9 0)) (log4e (0 2 0)) (yaxception (0 3 2))) "Date widget" tar ((:url . "https://github.com/aki2o/emacs-date-field") (:commit . "11c9170d1f7b343233f7716d4c0a62be024c1654") (:revdesc . "11c9170d1f7b") (:keywords "widgets") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (datetime . [(0 10 1) ((emacs (25 1)) (extmap (1 1 1))) "Parsing, formatting and matching timestamps" tar ((:url . "https://github.com/doublep/datetime") (:commit . "41d0221ee2fc7b9f9c57cf930f0011edf977a2a8") (:revdesc . "41d0221ee2fc") (:keywords "lisp" "i18n") (:authors ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainers ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainer "Paul Pogonyshev" . "pogonyshev@gmail.com"))])
 (dbc . [(0 1) ((emacs (24 4)) (cl-lib (0 5)) (ht (2 3))) "Control how to open buffers" tar ((:url . "https://gitlab.com/matsievskiysv/display-buffer-control") (:commit . "5123477396a562fae350a89fbed79464cc498bc9") (:revdesc . "5123477396a5") (:keywords "convenience"))])
 (dbml-mode . [(1 2 1) ((emacs (27 1))) "Major mode for DBML" tar ((:url . "https://github.com/KeyWeeUsr/dbml-mode") (:commit . "fd2e4ec1356a63b05a15103631bd007bd089867c") (:revdesc . "1.2.1-0-gfd2e4ec1356a") (:keywords "convenience" "dbml" "language" "markup" "highlight" "dbdiagram" "diagram") (:authors ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainers ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainer "Peter Badida" . "keyweeusr@gmail.com"))])
 (ddskk . [(17 1) ((ccc (1 43)) (cdb (20141201 754))) "Simple Kana to Kanji conversion program" tar ((:url . "https://github.com/skk-dev/ddskk") (:commit . "9aff088a6caf34aadc5a75476bba097e2c887f4a") (:revdesc . "9aff088a6caf"))])
 (ddskk-posframe . [(1 0 0) ((emacs (26 1)) (ddskk (16 2 50))) "Show Henkan tooltip for ddskk via posframe" tar ((:url . "https://github.com/conao3/ddskk-posframe.el") (:commit . "322a9ef8cdb7416dd137e7d2b1be1120126c05fc") (:revdesc . "322a9ef8cdb7") (:keywords "convenience") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (deadgrep . [(0 13) ((emacs (25 1)) (dash (2 12 0)) (s (1 11 0)) (spinner (1 7 3))) "Fast, friendly searching with ripgrep" tar ((:url . "https://github.com/Wilfred/deadgrep") (:commit . "ad7ddfbce9d1b665281c2ec6ea48644602925d30") (:revdesc . "ad7ddfbce9d1") (:keywords "tools") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (debian-el . [(37 4) nil "Emacs helpers specific to Debian users" tar ((:url . "https://salsa.debian.org/emacsen-team/debian-el.git") (:commit . "9690c4adb71e0fc7d00fea24b49ba944f913f4f5") (:revdesc . "37.4-0-g9690c4adb71e"))])
 (debpaste . [(0 1 5) ((xml-rpc (1 6 7))) "Interface for getting/posting/deleting pastes from paste.debian.net" tar ((:url . "https://github.com/alezost/debpaste.el") (:commit . "6f2a400665062468ebd03a2ce1de2a73d9084958") (:revdesc . "6f2a40066506") (:keywords "paste") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (decide . [(0 10 0) nil "Rolling dice and other random things" tar ((:url . "https://github.com/lifelike/decide-mode") (:commit . "cdd1cf76fdf4f08fb9dbe7de25b59af81337cce6") (:revdesc . "cdd1cf76fdf4") (:authors ("Pelle Nilsson" . "perni@lysator.liu.se")) (:maintainers ("Pelle Nilsson" . "perni@lysator.liu.se")) (:maintainer "Pelle Nilsson" . "perni@lysator.liu.se"))])
 (declutter . [(0 1 0) nil "Read html content and paywall sites without clutter" tar ((:url . "https://github.com/sanel/declutter") (:commit . "426760126ab2d8300059cc9d2d808b7eb4ce9c7c") (:revdesc . "426760126ab2") (:keywords "html" "web browser") (:authors ("Sanel Zukan" . "sanelz@gmail.com")) (:maintainers ("Sanel Zukan" . "sanelz@gmail.com")) (:maintainer "Sanel Zukan" . "sanelz@gmail.com"))])
 (decor . [(1 3 2) ((emacs (24 1))) "Modify visual decorations" tar ((:url . "https://github.com/KeyWeeUsr/decor") (:commit . "fa91fd8dabc7e98d7c0fc5e01400aae90966b38d") (:revdesc . "1.3.2-0-gfa91fd8dabc7") (:keywords "convenience" "window" "decoration" "distraction" "xprop" "xwayland") (:authors ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainers ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainer "Peter Badida" . "keyweeusr@gmail.com"))])
 (dedicated . [(1 0 0) nil "A very simple minor mode for dedicated buffers" tar ((:url . "https://github.com/emacsorphanage/dedicated") (:commit . "8275fb672f9cc4ba6682ebda0ef91db827e32992") (:revdesc . "1.0.0-0-g8275fb672f9c") (:keywords "dedicated" "buffer") (:authors ("Eric Crampton" . "eric@atdesk.com")) (:maintainers ("Eric Crampton" . "eric@atdesk.com")) (:maintainer "Eric Crampton" . "eric@atdesk.com"))])
 (default-text-scale . [(0 2) ((emacs (24))) "Easily adjust the font size in all frames" tar ((:url . "https://github.com/purcell/default-text-scale") (:commit . "f425d3765c4dea3f2e550720278f9d424579ee5d") (:revdesc . "f425d3765c4d") (:keywords "frames" "faces") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (deferred . [(0 5 1) ((emacs (24 4))) "Simple asynchronous functions for emacs lisp" tar ((:url . "https://github.com/kiwanami/emacs-deferred") (:commit . "d012a1ab50edcc2c44e3e49006f054dbff47cb6c") (:revdesc . "d012a1ab50ed") (:keywords "deferred" "async") (:authors ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatkiwanami.net"))])
 (define-it . [(0 2 5) ((emacs (25 1)) (s (1 12 0)) (popup (0 5 3)) (pos-tip (0 4 6)) (posframe (1 1 7)) (define-word (0 1 0)) (google-translate (0 11 18)) (wiki-summary (0 1))) "Define, translate, wiki the word" tar ((:url . "https://github.com/jcs-elpa/define-it") (:commit . "de026f399d5b7fa9286f7733b2e3416c6f234372") (:revdesc . "de026f399d5b") (:keywords "convenience" "dictionary" "explanation" "search" "wiki") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (define-word . [(0 1 0) ((emacs (24 1))) "Display the definition of word at point" tar ((:url . "https://github.com/abo-abo/define-word") (:commit . "38e2f94779652fc6280a51b68dc910431513a8e1") (:revdesc . "38e2f9477965") (:keywords "dictionary" "convenience") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com"))])
 (deft . [(0 8) nil "Quickly browse, filter, and edit plain text notes" tar ((:url . "https://github.com/jrblevin/deft") (:commit . "c4b30d780bfa732ff52d85f0311e4a045f44a7b4") (:revdesc . "v0.8-0-gc4b30d780bfa") (:keywords "plain text" "notes" "simplenote" "notational velocity") (:authors ("Jason R. Blevins" . "jrblevin@xbeta.org")) (:maintainers ("Jason R. Blevins" . "jrblevin@xbeta.org")) (:maintainer "Jason R. Blevins" . "jrblevin@xbeta.org"))])
 (demangle-mode . [(2 0) ((cl-lib (0 1)) (emacs (24 3))) "Automatically demangle C++ symbols" tar ((:url . "https://github.com/liblit/demangle-mode") (:commit . "901242db26d00432ba075a2325b389cc847825e2") (:revdesc . "901242db26d0") (:keywords "c" "tools") (:authors ("Ben Liblit" . "liblit@acm.org")) (:maintainers ("Ben Liblit" . "liblit@acm.org")) (:maintainer "Ben Liblit" . "liblit@acm.org"))])
 (demap . [(1 4 0) ((emacs (25 1))) "Detachable minimap package" tar ((:url . "https://gitlab.com/sawyerjgardner/demap.el") (:commit . "c42ec4752544f80ca7c172ff65e705a56089bc96") (:revdesc . "c42ec4752544") (:keywords "lisp" "tools" "convenience") (:authors ("Sawyer Gardner" . "https://gitlab.com/sawyerjgardner")) (:maintainers ("Sawyer Gardner" . "https://gitlab.com/sawyerjgardner")) (:maintainer "Sawyer Gardner" . "https://gitlab.com/sawyerjgardner"))])
 (deno-fmt . [(0 2 0) ((emacs (24))) "Minor mode for using deno fmt on save" tar ((:url . "https://github.com/rclarey/deno-emacs") (:commit . "6378966f448a3b9b5ae98af58cd13a031bd26702") (:revdesc . "6378966f448a") (:authors ("Russell Clarey" . "http://github/rclarey")) (:maintainers ("Russell Clarey" . "http://github/rclarey")) (:maintainer "Russell Clarey" . "http://github/rclarey"))])
 (deno-ts-mode . [(0 3 0) ((emacs (29 1))) "Major mode for Deno" tar ((:url . "https://github.com/mgmarlow/deno-ts-mode") (:commit . "526b6c00483cd86a028805e31ebd8a4a7000c3da") (:revdesc . "526b6c00483c") (:keywords "languages") (:authors ("Graham Marlow" . "info@mgmarlow.com")) (:maintainers ("Graham Marlow" . "info@mgmarlow.com")) (:maintainer "Graham Marlow" . "info@mgmarlow.com"))])
 (describe-hash . [(0 1 0) nil "Help function for examining a hash map" tar ((:url . "https://github.com/Junker/describe-hash") (:commit . "20dbbbea630055b2401f13a55fbb21216960dc46") (:revdesc . "20dbbbea6300"))])
 (describe-number . [(0 3 1) ((yabin (1 1))) "Describe arbitrarily large number at point" tar ((:url . "https://github.com/netromdk/describe-number") (:commit . "40618345a37831804b29589849a785ef5aa5ac24") (:revdesc . "40618345a378") (:keywords "describe" "value" "help") (:authors ("Morten Slot Kristensen" . "mskATnullpointerDOTdk")) (:maintainers ("Morten Slot Kristensen" . "mskATnullpointerDOTdk")) (:maintainer "Morten Slot Kristensen" . "mskATnullpointerDOTdk"))])
 (desktop+ . [(0 2) ((emacs (24 4)) (dash (2 11 0)) (f (0 17 2))) "Handle special buffers when saving & restoring sessions" tar ((:url . "https://github.com/ffevotte/desktop-plus") (:commit . "a9cb8dd0af5071d9f148211b408c54306239381c") (:revdesc . "a9cb8dd0af50") (:authors ("François Févotte" . "fevotte@gmail.com")) (:maintainers ("François Févotte" . "fevotte@gmail.com")) (:maintainer "François Févotte" . "fevotte@gmail.com"))])
 (desktop-environment . [(0 5 0) ((emacs (25 1))) "Helps you control your GNU/Linux computer" tar ((:url . "https://github.com/DamienCassou/desktop-environment") (:commit . "9da8f4bddb78668085a7fc367f9021549f9e5f70") (:revdesc . "9da8f4bddb78") (:authors ("Damien Cassou" . "damien@cassou.me") ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainers ("Damien Cassou" . "damien@cassou.me") ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (desktop-mail-user-agent . [(0 1) ((emacs (24 3))) "Call OS default mail program to compose mail" tar ((:url . "https://github.com/lassik/emacs-desktop-mail-user-agent") (:commit . "6b665208bd9471cd8e4b4a81237b22c93a734528") (:revdesc . "0.1-0-g6b665208bd94") (:keywords "mail") (:authors ("Lassi Kortela" . "lassi@lassi.io")) (:maintainers ("Lassi Kortela" . "lassi@lassi.io")) (:maintainer "Lassi Kortela" . "lassi@lassi.io"))])
 (desktop-registry . [(1 2 0) nil "Keep a central registry of desktop files" tar ((:url . "https://github.com/ryuslash/desktop-registry") (:commit . "244c2e7f9f0a1050aa8a47ad0b38f4e4584682dd") (:revdesc . "1.2.0-0-g244c2e7f9f0a") (:keywords "convenience") (:authors ("Tom Willemse" . "tom@ryuslash.org")) (:maintainers ("Tom Willemse" . "tom@ryuslash.org")) (:maintainer "Tom Willemse" . "tom@ryuslash.org"))])
 (detached . [(0 10 1) ((emacs (27 1))) "A package to launch, and manage, detached processes" tar ((:url . "https://git.sr.ht/~niklaseklund/detached.el") (:commit . "fedb0df5b0fbba13c662107855fb07a922793096") (:revdesc . "0.10.1-0-gfedb0df5b0fb") (:keywords "convenience" "processes") (:authors ("Niklas Eklund" . "niklas.eklund@posteo.net")) (:maintainers ("detached.el Development" . "~niklaseklund/detached.el@lists.sr.ht")) (:maintainer "detached.el Development" . "~niklaseklund/detached.el@lists.sr.ht"))])
 (devil . [(0 6 0) ((emacs (24 4))) "Minor mode for translating key sequences" tar ((:url . "https://github.com/susam/devil") (:commit . "1985300ce84abd712be93b271b27c3bdb164231d") (:revdesc . "0.6.0-0-g1985300ce84a") (:keywords "convenience" "abbrev") (:authors ("Susam Pal" . "susam@susam.net")) (:maintainers ("Susam Pal" . "susam@susam.net")) (:maintainer "Susam Pal" . "susam@susam.net"))])
 (dianyou . [(0 0 3) ((emacs (24 4))) "Search and analyze mails in Gnus" tar ((:url . "https://github.com/redguardtoo/dianyou") (:commit . "1a1fe6da3196f91db7b76b6c552ca4f2629e36bf") (:revdesc . "1a1fe6da3196") (:keywords "mail") (:authors ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainers ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainer "Chen Bin" . "chenbinDOTshATgmailDOTcom"))])
 (diary-manager . [(2 0 2) ((emacs (25))) "Simple personal diary" tar ((:url . "https://github.com/radian-software/diary-manager") (:commit . "919f724bb58e36b8626dd8d7c8475f71c0c54443") (:revdesc . "919f724bb58e") (:keywords "extensions") (:authors ("Radon Rosborough" . "radon.neon@gmail.com")) (:maintainers ("Radon Rosborough" . "radon.neon@gmail.com")) (:maintainer "Radon Rosborough" . "radon.neon@gmail.com"))])
 (dictcc . [(1 0 2) ((emacs (24 4)) (cl-lib (0 5)) (ivy (0 10 0))) "Look up translations on dict.cc" tar ((:url . "https://github.com/martenlienen/dictcc.el") (:commit . "33df7c64ee5bb9faf77a4b80cd123d35a15ad706") (:revdesc . "33df7c64ee5b") (:keywords "convenience") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainers ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com"))])
 (dictionary . [(1 11) ((connection (1 11)) (link (1 11))) "Client for rfc2229 dictionary servers" tar ((:url . "https://github.com/myrkr/dictionary-el") (:commit . "c9cad101100975e88873636bfd426b7a19304ebd") (:revdesc . "c9cad1011009") (:keywords "interface" "dictionary") (:authors ("Torsten Hilbrich" . "torsten.hilbrich@gmx.net")) (:maintainers ("Torsten Hilbrich" . "torsten.hilbrich@gmx.net")) (:maintainer "Torsten Hilbrich" . "torsten.hilbrich@gmx.net"))])
 (didyoumean . [(0 4 0) ((emacs (24 4))) "Did you mean to open another file?" tar ((:url . "https://gitlab.com/kisaragi-hiu/didyoumean.el") (:commit . "6d0c4203eb192d73d89261b3a9bad52951e394af") (:revdesc . "6d0c4203eb19") (:keywords "convenience"))])
 (diff-hl . [(1 10 0) ((cl-lib (0 2)) (emacs (25 1))) "Highlight uncommitted changes using VC" tar ((:url . "https://github.com/dgutov/diff-hl") (:commit . "b80ff9b4a772f7ea000e86fbf88175104ddf9557") (:revdesc . "b80ff9b4a772") (:keywords "vc" "diff") (:authors ("Dmitry Gutov" . "dmitry@gutov.dev")) (:maintainers ("Dmitry Gutov" . "dmitry@gutov.dev")) (:maintainer "Dmitry Gutov" . "dmitry@gutov.dev"))])
 (difflib . [(0 3 8) ((emacs (24 4)) (cl-generic (0 3)) (ht (2 2)) (s (1 12 0))) "Helpers for computing deltas between sequences" tar ((:url . "https://github.com/dieggsy/difflib.el") (:commit . "b08850251812d71e62fd6956081299590acdf37b") (:revdesc . "b08850251812") (:keywords "matching" "tools" "string") (:authors ("Diego A. Mundo" . "diegoamundo@gmail.com")) (:maintainers ("Diego A. Mundo" . "diegoamundo@gmail.com")) (:maintainer "Diego A. Mundo" . "diegoamundo@gmail.com"))])
 (diffpdf . [(1 0) ((emacs (25 1)) (transient (0 3 0))) "Transient diffpdf" tar ((:url . "https://github.com/ShuguangSun/diffpdf.el") (:commit . "fdb37bb696aaec6cb2bcece3760866760e68edc4") (:revdesc . "fdb37bb696aa") (:keywords "tools") (:authors ("Shuguang Sun" . "shuguang79@qq.com")) (:maintainers ("Shuguang Sun" . "shuguang79@qq.com")) (:maintainer "Shuguang Sun" . "shuguang79@qq.com"))])
 (diffview . [(1 0) nil "View diffs in side-by-side format" tar ((:url . "https://github.com/mgalgs/diffview-mode") (:commit . "471dc36af93e68849bf2da0db991e186283b3546") (:revdesc . "471dc36af93e") (:keywords "convenience" "diff") (:authors ("Mitchel Humpherys" . "mitch.special@gmail.com")) (:maintainers ("Mitchel Humpherys" . "mitch.special@gmail.com")) (:maintainer "Mitchel Humpherys" . "mitch.special@gmail.com"))])
 (digistar-mode . [(0 9 14) nil "Major mode for Digistar scripts" tar ((:url . "https://github.com/retroj/digistar-mode") (:commit . "4e5d0b463468fcc4a54df1310360ba13b2bdff6a") (:revdesc . "v0.9.14-0-g4e5d0b463468") (:keywords "languages") (:authors ("John Foerch" . "jjfoerch@gmail.com")) (:maintainers ("John Foerch" . "jjfoerch@gmail.com")) (:maintainer "John Foerch" . "jjfoerch@gmail.com"))])
 (dilbert . [(0 2) ((emacs (26 1)) (enlive (0 0 1)) (dash (2 19 1))) "View Dilbert comics" tar ((:url . "https://github.com/DaniruKun/dilbert-el") (:commit . "4d0ac315d1bf2d7965ea6a4d32a572a73315caf0") (:revdesc . "4d0ac315d1bf") (:keywords "multimedia" "news") (:authors ("Daniils Petrovs" . "thedanpetrov@gmail.com")) (:maintainers ("Daniils Petrovs" . "thedanpetrov@gmail.com")) (:maintainer "Daniils Petrovs" . "thedanpetrov@gmail.com"))])
 (dim . [(0 1) ((emacs (24 4))) "Change mode-line names of major/minor modes" tar ((:url . "https://github.com/alezost/dim.el") (:commit . "0c19a510580ebdc77e6db536f0f8ed2840b9b33e") (:revdesc . "0c19a510580e") (:keywords "convenience") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (dim-autoload . [(2 0 7) ((emacs (26 1)) (compat (30 0 0 0))) "Dim or hide autoload cookie lines" tar ((:url . "https://github.com/tarsius/dim-autoload") (:commit . "dbe0f038c0a7fcc7e0f021947a42db5b0e8f143d") (:revdesc . "v2.0.7-0-gdbe0f038c0a7") (:keywords "convenience") (:authors ("Jonas Bernoulli" . "emacs.dim-autoload@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.dim-autoload@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.dim-autoload@jonas.bernoulli.dev"))])
 (dime . [(0 1 0) ((emacs (25 1)) (dylan (3 0))) "Dylan interaction mode" tar ((:url . "https://github.com/dylan-lang/dylan-emacs-support") (:commit . "d85409dc3cba57a390ca85da95822f8078ecbfa2") (:revdesc . "d85409dc3cba"))])
 (diminish . [(0 45) nil "Diminished modes are minor modes with no modeline display" tar ((:url . "https://github.com/myrjola/diminish.el") (:commit . "0211de96b7cfba9c9dc8d2d392dbd4ccdb22bc65") (:revdesc . "0211de96b7cf") (:keywords "extensions" "diminish" "minor" "codeprose") (:authors ("Will Mengarini" . "seldon@eskimo.com")) (:maintainers ("Martin Yrjölä" . "martin.yrjola@gmail.com")) (:maintainer "Martin Yrjölä" . "martin.yrjola@gmail.com"))])
 (diminish-buffer . [(0 2 0) ((emacs (24 4))) "Diminish (hide) buffers from buffer-menu" tar ((:url . "https://github.com/jcs-elpa/diminish-buffer") (:commit . "f5305840a5a09043f1d012cf50a55dc41317c080") (:revdesc . "f5305840a5a0") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (dimmer . [(0 4 2) ((emacs (25 1))) "Visually highlight the selected buffer" tar ((:url . "https://github.com/gonewest818/dimmer.el") (:commit . "e45bf2d064a8ecdea2b4caf646ece2d0adc1d84e") (:revdesc . "e45bf2d064a8") (:keywords "faces" "editing"))])
 (dionysos . [(0 6 0) ((libmpdee (2 1 0)) (alert (1 2)) (s (1 11 0)) (dash (2 12 1)) (pkg-info (0 5 0)) (cl-lib (0 5))) "Dionysos, a music player for Emacs" tar ((:url . "https://github.com/nlamirault/dionysos") (:commit . "98bc789d20e41020d6e62d63d3c78f8032fa4bf2") (:revdesc . "98bc789d20e4") (:keywords "music") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (dir-config . [(1 0 1) ((emacs (25 1))) "Automatically find and load the .dir-config.el Elisp file" tar ((:url . "https://github.com/jamescherti/dir-config.el") (:commit . "5cbc2655a5ee734a4747a1b580e331e88c720737") (:revdesc . "1.0.1-0-g5cbc2655a5ee") (:keywords "convenience"))])
 (dir-treeview . [(1 4 0) ((emacs (25 1)) (treeview (1 3 0))) "A directory tree browser and simple file manager" tar ((:url . "https://github.com/tilmanrassy/emacs-dir-treeview") (:commit . "09cf976b0f5999e378141bb66361395f1832aeae") (:revdesc . "v1.4.0-0-g09cf976b0f59") (:keywords "tools" "convenience" "files") (:authors ("Tilman Rassy" . "tilman.rassy@googlemail.com")) (:maintainers ("Tilman Rassy" . "tilman.rassy@googlemail.com")) (:maintainer "Tilman Rassy" . "tilman.rassy@googlemail.com"))])
 (dired-atool . [(1 3 0) ((emacs (24))) "Pack/unpack files with atool on dired" tar ((:url . "https://github.com/HKey/dired-atool") (:commit . "c01e0a79c952a29db17c262c9ce8a90632b04b3a") (:revdesc . "c01e0a79c952") (:keywords "files") (:authors ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainers ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainer "Hiroki YAMAKAWA" . "s06139@gmail.com"))])
 (dired-duplicates . [(0 4) ((emacs (27 1))) "Find duplicate files locally and remotely" tar ((:url . "https://codeberg.org/hjudt/dired-duplicates") (:commit . "5c5f24bea92159987f65f01ef32b261e905997bd") (:revdesc . "dired-duplicates-0.4-0-g5c5f24bea921") (:keywords "files") (:authors ("Harald Judt" . "h.judt@gmx.at")) (:maintainers ("Harald Judt" . "h.judt@gmx.at")) (:maintainer "Harald Judt" . "h.judt@gmx.at"))])
 (dired-efap . [(0 8 1) nil "Edit Filename At Point in a dired buffer" tar ((:url . "https://github.com/juan-leon/dired-efap") (:commit . "360b369cb19998c6730ee1debfbec3edb7f349a9") (:revdesc . "360b369cb199") (:keywords "dired" "environment" "files" "renaming") (:authors ("Juan-Leon Lahoz" . "juanleon1@gmail.com")) (:maintainers ("Juan-Leon Lahoz" . "juanleon1@gmail.com")) (:maintainer "Juan-Leon Lahoz" . "juanleon1@gmail.com"))])
 (dired-explorer . [(0 6) ((cl-lib (0 5))) "Minor-mode provides Explorer like select file at dired" tar ((:url . "https://github.com/jidaikobo-shibata/dired-explorer") (:commit . "3ade0a31b5340271d05e9bf443f2504960f6c6dd") (:revdesc . "3ade0a31b534") (:keywords "dired" "explorer"))])
 (dired-gitignore . [(0 2 0) ((emacs (27 1))) "A minor mode to hide gitignored files in a dired buffer" tar ((:url . "https://github.com/johannes-mueller/dired-gitignore.el") (:commit . "b6e804c212b497d5502600bd4df10196e44d2bf7") (:revdesc . "b6e804c212b4") (:keywords "dired" "convenience" "git") (:authors ("Johannes Mueller" . "github@johannes-mueller.org")) (:maintainers ("Johannes Mueller" . "github@johannes-mueller.org")) (:maintainer "Johannes Mueller" . "github@johannes-mueller.org"))])
 (dired-hide-dotfiles . [(0 1) ((emacs (25 1))) "Hde dotfiles in dired" tar ((:url . "https://github.com/mattiasb/dired-hide-dotfiles") (:commit . "32cf3b6f90dc56f6ff271c28d827aab303bc6221") (:revdesc . "v0.1-0-g32cf3b6f90dc") (:keywords "files") (:authors ("Mattias Bengtsson" . "mattias.jc.bengtsson@gmail.com")) (:maintainers ("Mattias Bengtsson" . "mattias.jc.bengtsson@gmail.com")) (:maintainer "Mattias Bengtsson" . "mattias.jc.bengtsson@gmail.com"))])
 (dired-hist . [(0 14) ((emacs (27 1))) "Traverse Dired buffer's history: back, forward" tar ((:url . "https://github.com/Anoncheg1/dired-hist") (:commit . "bcbfa60e2de0d86a38740d72bea7e4f25ccc35c8") (:revdesc . "bcbfa60e2de0") (:keywords "convenience" "dired" "history") (:authors ("Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com")) (:maintainers ("Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com")) (:maintainer "Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com"))])
 (dired-icon . [(0 5) ((emacs (24 3))) "A minor mode to display a list of associated icons in dired buffers" tar ((:url . "https://gitlab.com/xuhdev/dired-icon") (:commit . "dbace8d2250f84487d31b39050fcdc260fcde804") (:revdesc . "dbace8d2250f") (:keywords "dired" "files") (:authors ("Hong Xu" . "hong@topbug.net")) (:maintainers ("Hong Xu" . "hong@topbug.net")) (:maintainer "Hong Xu" . "hong@topbug.net"))])
 (dired-imenu . [(0 5 0) nil "Imenu binding for dired mode" tar ((:url . "https://github.com/DamienCassou/dired-imenu") (:commit . "610e21fe0988c85931d34894d3eee2442c79ab0a") (:revdesc . "610e21fe0988") (:keywords "dired" "imenu") (:authors ("Damien Cassou" . "damien.cassou@gmail.com")) (:maintainers ("Damien Cassou" . "damien.cassou@gmail.com")) (:maintainer "Damien Cassou" . "damien.cassou@gmail.com"))])
 (dired-k . [(0 19) ((emacs (24 3))) "Highlight dired buffer by file size, modified time, git status" tar ((:url . "https://github.com/emacsorphanage/dired-k") (:commit . "3f0b9315f87b0f930d51089e311d41282d5f8b15") (:revdesc . "3f0b9315f87b") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (dired-lsi . [(1 0 0) ((emacs (26 1))) "Add memo to directory and show it in dired" tar ((:url . "https://github.com/conao3/dired-lsi.el") (:commit . "8170d7711254af18cbf1397d681fd331363a17d8") (:revdesc . "8170d7711254") (:keywords "convenience") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (dired-open-with . [(1 2) ((emacs (28 1))) "And \"Open with\" dialog for Dired" tar ((:url . "https://github.com/FrostyX/dired-open-with") (:commit . "5f9fddecea3d467a6d7bdb6a1863505b92a81e0d") (:revdesc . "5f9fddecea3d") (:keywords "files" "dired" "xdg" "open-with") (:authors ("Jakub Kadlčík" . "frostyx@email.cz")) (:maintainers ("Jakub Kadlčík" . "frostyx@email.cz")) (:maintainer "Jakub Kadlčík" . "frostyx@email.cz"))])
 (dired-posframe . [(1 0 0) ((emacs (26 1)) (posframe (0 7))) "Peep dired items using posframe" tar ((:url . "https://github.com/conao3/dired-posframe.el") (:commit . "1a21eb9ad956a0371dd3c9e1bec53407d685f705") (:revdesc . "1a21eb9ad956") (:keywords "convenience") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (dired-quick-sort . [(0 2) ((hydra (0 13 0)) (emacs (24))) "Persistent quick sorting of dired buffers in various ways" tar ((:url . "https://gitlab.com/xuhdev/dired-quick-sort") (:commit . "79e422be55c72bfe36d2ec8a838f19d1cc8d101a") (:revdesc . "79e422be55c7") (:keywords "convenience" "files") (:authors ("Hong Xu" . "hong@topbug.net")) (:maintainers ("Hong Xu" . "hong@topbug.net")) (:maintainer "Hong Xu" . "hong@topbug.net"))])
 (dired-rmjunk . [(1 2) nil "A home directory cleanup utility for Dired" tar ((:url . "https://git.sr.ht/~jakob/dired-rmjunk") (:commit . "6a9fa6a35498e53e8c57282e3b08dedc896d880d") (:revdesc . "v1.2-0-g6a9fa6a35498") (:keywords "files" "matching") (:authors ("Jakob L. Kreuze" . "zerodaysfordays@sdf.lonestar.org")) (:maintainers ("Jakob L. Kreuze" . "zerodaysfordays@sdf.lonestar.org")) (:maintainer "Jakob L. Kreuze" . "zerodaysfordays@sdf.lonestar.org"))])
 (dired-rsync . [(0 7) ((s (1 12 0)) (dash (2 0 0)) (emacs (25 1))) "Allow rsync from dired buffers" tar ((:url . "https://github.com/stsquad/dired-rsync") (:commit . "95607fc7eb84e792122b52d2b1d62f49199a2a37") (:revdesc . "95607fc7eb84") (:authors ("Alex Bennée" . "alex@bennee.com")) (:maintainers ("Alex Bennée" . "alex@bennee.com")) (:maintainer "Alex Bennée" . "alex@bennee.com"))])
 (dired-rsync-transient . [(0 7) ((dired-rsync (0 6)) (transient (0 3 0)) (emacs (24 4))) "Transient command for dired-rsync" tar ((:url . "https://github.com/stsquad/dired-rsync") (:commit . "95607fc7eb84e792122b52d2b1d62f49199a2a37") (:revdesc . "95607fc7eb84") (:authors ("Alex Bennée" . "alex@bennee.com")) (:maintainers ("Alex Bennée" . "alex@bennee.com")) (:maintainer "Alex Bennée" . "alex@bennee.com"))])
 (dired-sidebar . [(0 3 0) ((emacs (25 1)) (dired-subtree (0 0 1))) "Tree browser leveraging dired" tar ((:url . "https://github.com/jojojames/dired-sidebar") (:commit . "702165ad53a473992d84e0207b984b9be5114bde") (:revdesc . "702165ad53a4") (:keywords "dired" "files" "tools") (:authors ("James Nguyen" . "james@jojojames.com")) (:maintainers ("James Nguyen" . "james@jojojames.com")) (:maintainer "James Nguyen" . "james@jojojames.com"))])
 (dired-toggle . [(0 1 5) nil "Show dired as sidebar and will not create new buffers when changing dir" tar ((:url . "https://github.com/fasheng/dired-toggle") (:commit . "5bcdd9f13c0b0149c5125004e93bc2dfd22f3fce") (:revdesc . "5bcdd9f13c0b") (:keywords "dired" "sidebar") (:authors ("Xu FaSheng" . "fasheng.xu@gmail.com")))])
 (dired-toggle-sudo . [(1 0) nil "Browse directory with sudo privileges" tar ((:url . "https://github.com/renard/dired-toggle-sudo") (:commit . "02449dbda4e168f99fe5352c9628df5d39e11483") (:revdesc . "v1.0-0-g02449dbda4e1") (:keywords "emacs" "dired") (:authors ("Sebastien Gross" . "seb•ɑƬ•chezwam•ɖɵʈ•org")) (:maintainers ("Sebastien Gross" . "seb•ɑƬ•chezwam•ɖɵʈ•org")) (:maintainer "Sebastien Gross" . "seb•ɑƬ•chezwam•ɖɵʈ•org"))])
 (dired-view-data . [(1 0) ((emacs (26 1)) (ess (18 10 1)) (ess-view-data (1 0))) "View data from dired via ESS and R" tar ((:url . "https://github.com/ShuguangSun/dired-view-data") (:commit . "c865c34536d9c3140ce647f03c8b7498b46e935c") (:revdesc . "c865c34536d9") (:keywords "tools") (:authors ("Shuguang Sun" . "shuguang79@qq.com")) (:maintainers ("Shuguang Sun" . "shuguang79@qq.com")) (:maintainer "Shuguang Sun" . "shuguang79@qq.com"))])
 (diredc . [(1 4) ((emacs (26 1)) (key-assist (1 0))) "Midnight Commander features (plus) for dired" tar ((:url . "https://github.com/Boruch-Baum/emacs-diredc") (:commit . "0ff2424aa226228c72e47a635f3b5379c424c891") (:revdesc . "0ff2424aa226") (:keywords "files"))])
 (diredfd . [(2 0 1) ((emacs (28 1))) "Dired functions and settings to mimic FD/FDclone" tar ((:url . "https://github.com/knu/diredfd.el") (:commit . "e234c0bf91649bd13de984f6ef1b2354565fd4ce") (:revdesc . "e234c0bf9164") (:keywords "unix" "directories" "dired") (:authors ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (diredfl . [(0 5) ((emacs (24))) "Extra font lock rules for a more colourful dired" tar ((:url . "https://github.com/purcell/diredfl") (:commit . "bca8f0f7b3e9e46b9c7692275ced8c1d59e0d208") (:revdesc . "bca8f0f7b3e9") (:keywords "faces") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (diredful . [(1 10) nil "Colorful file names in dired buffers" tar ((:url . "https://github.com/thamer/diredful") (:commit . "b17b3087e0084a5571a9ac4d47ccfc36d96b109e") (:revdesc . "b17b3087e008") (:keywords "dired" "colors" "extension" "widget") (:authors ("Thamer Mahmoud" . "thamer.mahmoud@gmail.com")) (:maintainers ("Thamer Mahmoud" . "thamer.mahmoud@gmail.com")) (:maintainer "Thamer Mahmoud" . "thamer.mahmoud@gmail.com"))])
 (direnv . [(2 2 0) ((emacs (25 1)) (dash (2 12 0))) "Support for direnv" tar ((:url . "https://github.com/wbolster/emacs-direnv") (:commit . "bd161f38621d1a9e4d70c9bafab9b7e3520f00b2") (:revdesc . "2.2.0-0-gbd161f38621d") (:keywords "direnv" "environment" "processes" "unix" "tools") (:authors ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainers ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainer "wouter bolsterlee" . "wouter@bolsterl.ee"))])
 (direx . [(1 0 0) nil "Simple Directory Explorer" tar ((:url . "https://github.com/emacsorphanage/direx") (:commit . "423caeed13249e37afc937dc8134cb3c53e0f111") (:revdesc . "423caeed1324") (:keywords "convenience") (:authors ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com")) (:maintainers ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com")) (:maintainer "Tomohiro Matsuyama" . "m2ym.pub@gmail.com"))])
 (direx-grep . [(0 1 0) ((direx (0 1 -3))) "Grep node of direx.el using incremental search like anything.el/helm.el" tar ((:url . "https://github.com/aki2o/direx-grep") (:commit . "1109a512a80b2673a70b18b8568514049017faad") (:revdesc . "1109a512a80b") (:keywords "convenience") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (dirvish . [(2 0 53) ((emacs (27 1)) (transient (0 3 7))) "A modern file manager based on dired mode" tar ((:url . "https://github.com/alexluigit/dirvish") (:commit . "c535e2147171be5506f4ff34e862bacbfb3de768") (:revdesc . "c535e2147171") (:keywords "files" "convenience") (:authors ("Alex Lu" . "https://github.com/alexluigit")) (:maintainers ("Alex Lu" . "https://github.com/alexluigit")) (:maintainer "Alex Lu" . "https://github.com/alexluigit"))])
 (disable-mouse . [(0 3) nil "Disable mouse commands globally" tar ((:url . "https://github.com/purcell/disable-mouse") (:commit . "81639930bcaeedadbcc19728e91719afcac84613") (:revdesc . "81639930bcae") (:keywords "mouse") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (disaster . [(1 1) ((emacs (27))) "Disassemble C, C++ or Fortran code under cursor" tar ((:url . "https://github.com/jart/disaster") (:commit . "50232ae95dd3dd149a82fc1b136c191c9ba9f0f4") (:revdesc . "50232ae95dd3") (:keywords "tools" "c") (:authors ("Justine Tunney" . "jtunney@gmail.com") ("Abdelhak Bougouffa" . "abougouffa@fedoraproject.org")) (:maintainers ("Abdelhak Bougouffa" . "abougouffa@fedoraproject.org")) (:maintainer "Abdelhak Bougouffa" . "abougouffa@fedoraproject.org"))])
 (discover . [(0 3) ((makey (0 3))) "Discover more of Emacs" tar ((:url . "https://github.com/mickeynp/discover.el") (:commit . "bbfda2b4e429985a8fa7971d264c942767cfa816") (:revdesc . "bbfda2b4e429") (:authors ("Mickey Petersen" . "mickey@fyeah.org")) (:maintainers ("Mickey Petersen" . "mickey@fyeah.org")) (:maintainer "Mickey Petersen" . "mickey@fyeah.org"))])
 (discover-my-major . [(1 0) ((makey (0 2))) "Discover key bindings and their meaning for the current Emacs major mode" tar ((:url . "https://framagit.org/steckerhalter/discover-my-major.git") (:commit . "57d76fd21ec54706289cf9396fc871250569951e") (:revdesc . "57d76fd21ec5") (:keywords "discover" "help" "major-mode" "keys"))])
 (dispass . [(1 1 2) nil "Emacs wrapper for DisPass" tar ((:url . "https://github.com/ryuslash/dispass.el") (:commit . "38b880e72cfe5e65179b16791903b0900c73eff4") (:revdesc . "1.1.2-0-g38b880e72cfe") (:keywords "processes") (:authors ("Tom Willemsen" . "tom@ryuslash.org")) (:maintainers ("Tom Willemsen" . "tom@ryuslash.org")) (:maintainer "Tom Willemsen" . "tom@ryuslash.org"))])
 (display-wttr . [(2 1 0) ((emacs (27 1))) "Display wttr(weather) in the mode line" tar ((:url . "https://git.sr.ht/~josegpt/display-wttr") (:commit . "d1f5b57e00ee229548005ddd1e8061e213effd32") (:revdesc . "d1f5b57e00ee") (:authors ("Jose G Perez Taveras" . "josegpt27@gmail.com")) (:maintainers ("Jose G Perez Taveras" . "josegpt27@gmail.com")) (:maintainer "Jose G Perez Taveras" . "josegpt27@gmail.com"))])
 (disproject . [(1 3 0) ((emacs (29 4)) (transient (0 8 0))) "Dispatch project commands with Transient" tar ((:url . "https://github.com/aurtzy/disproject") (:commit . "58255e2148816f313b67f511fb005c467e29096a") (:revdesc . "v1.3.0-0-g58255e214881") (:keywords "convenience" "files" "vc") (:authors ("aurtzy" . "aurtzy@gmail.com")) (:maintainers ("aurtzy" . "aurtzy@gmail.com")) (:maintainer "aurtzy" . "aurtzy@gmail.com"))])
 (dist-file-mode . [(1 0 0) ((emacs (26))) "Dispatch major mode for *.dist files" tar ((:url . "https://github.com/emacs-php/dist-file-mode.el") (:commit . "8bb2f05487164cd690cac9c9c442969f6f79b81f") (:revdesc . "8bb2f0548716") (:keywords "files" "convenience") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (ditz-mode . [(0 3) nil "Emacs interface to Ditz issue tracking system" tar ((:url . "https://hg.sr.ht/~zondo/ditz-mode") (:commit . "0551468fc738470e4bbce28f036347273a864bb9") (:revdesc . "0551468fc738470e4bbce28f036347273a864bb9") (:keywords "tools") (:authors ("Glenn Hutchings" . "zondo42@googlemail.com")) (:maintainers ("Glenn Hutchings" . "zondo42@googlemail.com")) (:maintainer "Glenn Hutchings" . "zondo42@googlemail.com"))])
 (dix . [(0 4 1) ((cl-lib (0 5)) (emacs (24 4))) "Apertium XML editing minor mode" tar ((:url . "https://github.com/unhammer/dix") (:commit . "b973de948deb7aa2995b1895e1e62bbe3129b5a5") (:revdesc . "0.4.1-0-gb973de948deb") (:keywords "languages") (:authors ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainers ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainer "Kevin Brubeck Unhammer" . "unhammer@fsfe.org"))])
 (dix-evil . [(0 4 1) ((dix (0 3 0)) (evil (1 0 7))) "Optional evil-integration with dix.el" tar ((:url . "https://github.com/unhammer/dix") (:commit . "b973de948deb7aa2995b1895e1e62bbe3129b5a5") (:revdesc . "0.4.1-0-gb973de948deb") (:keywords "languages") (:authors ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainers ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainer "Kevin Brubeck Unhammer" . "unhammer@fsfe.org"))])
 (django-commands . [(1 4 1) ((emacs (25 1))) "Run django commands" tar ((:url . "https://github.com/muffinmad/emacs-django-commands") (:commit . "7510c0f068bf214ad012c203d68e03ff4262efdf") (:revdesc . "7510c0f068bf") (:keywords "tools") (:authors ("Andrii Kolomoiets" . "andreyk.mad@gmail.com")) (:maintainers ("Andrii Kolomoiets" . "andreyk.mad@gmail.com")) (:maintainer "Andrii Kolomoiets" . "andreyk.mad@gmail.com"))])
 (docker . [(2 3 1) ((aio (1 0)) (dash (2 19 1)) (emacs (26 1)) (s (1 13 0)) (tablist (1 1)) (transient (0 4 3))) "Interface to Docker" tar ((:url . "https://github.com/Silex/docker.el") (:commit . "2def2ab7fa04ed14403d00e3547a94c3822302cb") (:revdesc . "2.3.1-0-g2def2ab7fa04") (:keywords "filename" "convenience") (:authors ("Philippe Vaucher" . "philippe.vaucher@gmail.com")) (:maintainers ("Philippe Vaucher" . "philippe.vaucher@gmail.com")) (:maintainer "Philippe Vaucher" . "philippe.vaucher@gmail.com"))])
 (docker-cli . [(1 0 0) nil "Running various commands in docker containers" tar ((:url . "https://github.com/bosko/docker-cli") (:commit . "328429219574555c5fb831a421b4b5d9a2338561") (:revdesc . "328429219574") (:keywords "processes") (:authors ("Boško Ivanišević" . "bosko.ivanisevic@gmail.com")) (:maintainers ("Boško Ivanišević" . "bosko.ivanisevic@gmail.com")) (:maintainer "Boško Ivanišević" . "bosko.ivanisevic@gmail.com"))])
 (docker-compose-mode . [(1 1 0) ((emacs (24 3)) (dash (2 12 0)) (yaml-mode (0 0 12))) "Major mode for editing docker-compose files" tar ((:url . "https://github.com/meqif/docker-compose-mode") (:commit . "7f4cd0b1718df2ab93d51bd395b2f37df9482265") (:revdesc . "7f4cd0b1718d") (:keywords "convenience"))])
 (docker-tramp . [(0 1 1) ((emacs (24)) (cl-lib (0 5))) "TRAMP integration for docker containers" tar ((:url . "https://github.com/emacs-pe/docker-tramp.el") (:commit . "930d7b46c180d8a13240a028c1b40af84f2a3219") (:revdesc . "930d7b46c180") (:keywords "docker" "convenience") (:authors ("Mario Rodas" . "marsam@users.noreply.github.com")) (:maintainers ("Mario Rodas" . "marsam@users.noreply.github.com")) (:maintainer "Mario Rodas" . "marsam@users.noreply.github.com"))])
 (dockerfile-mode . [(1 9) ((emacs (24))) "Major mode for editing Docker's Dockerfiles" tar ((:url . "https://github.com/spotify/dockerfile-mode") (:commit . "35178a080fb3b61051437570f51fa0cdf2b7772b") (:revdesc . "35178a080fb3") (:keywords "docker" "languages" "processes" "tools"))])
 (docopt . [(0 1 3) ((emacs (26 3)) (dash (2 17 0)) (emacs (26 1)) (f (0 20 0)) (parsec (0 1 3)) (s (1 12 0)) (transient (0 3 7))) "A Docopt implementation in Elisp" tar ((:url . "https://github.com/r0man/docopt.el") (:commit . "21c575db68d4ccadb3125241a62136a0f8b76f63") (:revdesc . "21c575db68d4") (:keywords "docopt" "tools" "processes") (:authors ("r0man" . "roman@burningswell.com")) (:maintainers ("r0man" . "roman@burningswell.com")) (:maintainer "r0man" . "roman@burningswell.com"))])
 (docstr . [(5 7 0) ((emacs (24 4)) (s (1 9 0))) "A document string minor mode" tar ((:url . "https://github.com/emacs-vs/docstr") (:commit . "63b0460a4785b4b4aee5cc072b52fb2d3a7eef6e") (:revdesc . "63b0460a4785") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (dogears . [(0 1) ((emacs (26 3)) (map (2 1))) "Never lose your place again" tar ((:url . "https://github.com/alphapapa/dogears.el") (:commit . "7ba83bd8924cec66fe3ede3334e98b1845e6852e") (:revdesc . "v0.1-0-g7ba83bd8924c") (:keywords "convenience") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (dokuwiki-mode . [(0 1 1) nil "Major mode for DokuWiki document" tar ((:url . "https://github.com/kai2nenobu/emacs-dokuwiki-mode") (:commit . "e4e116f6fcc373e3f5937c1a7daa5c2c9c6d3fa1") (:revdesc . "v0.1.1-0-ge4e116f6fcc3") (:keywords "hypermedia" "text" "dokuwiki") (:authors ("Tsunenobu Kai" . "kai2nenobu@gmail.com")) (:maintainers ("Tsunenobu Kai" . "kai2nenobu@gmail.com")) (:maintainer "Tsunenobu Kai" . "kai2nenobu@gmail.com"))])
 (doom . [(1 3) ((cl-lib (0 5))) "DOM implementation and manipulation library" tar ((:url . "https://github.com/kensanata/doom") (:commit . "5e2d3f54e5b84eaa533cbdb6cf17b1b6009f0730") (:revdesc . "5e2d3f54e5b8") (:keywords "xml" "doom") (:authors ("Alex Schroeder" . "alex@gnu.org") ("Henrik.Motakef" . "elisp@henrik-motakef.de") ("Katherine Whitlock" . "toroidal-code@gmail.com")))])
 (doom-modeline . [(4 1 0) ((emacs (25 1)) (compat (29 1 4 2)) (nerd-icons (0 1 0)) (shrink-path (0 3 1))) "A minimal and modern mode-line" tar ((:url . "https://github.com/seagle0128/doom-modeline") (:commit . "bf880ae56f3f6aab7bd334de9bd9b455c63a24c0") (:revdesc . "bf880ae56f3f") (:keywords "faces" "mode-line") (:authors ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainers ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainer "Vincent Zhang" . "seagle0128@gmail.com"))])
 (doom-themes . [(2 3 0) ((emacs (25 1)) (cl-lib (0 5))) "An opinionated pack of modern color-themes" tar ((:url . "https://github.com/doomemacs/themes") (:commit . "d79a41f593c69697af1ddaac971c0c47ecc446a8") (:revdesc . "v2.3.0-0-gd79a41f593c6") (:keywords "themes" "faces") (:authors ("Henrik Lissner" . "contact@henrik.io")) (:maintainers ("Henrik Lissner" . "contact@henrik.io")) (:maintainer "Henrik Lissner" . "contact@henrik.io"))])
 (dot-env . [(1 0 1) ((emacs (24 4)) (s (1 13 0))) "Dotenv functionality" tar ((:url . "https://github.com/amodelbello/dot-env.el") (:commit . "83ce690e8ef9175fc621c85d5fbef4f7ace7b7a8") (:revdesc . "83ce690e8ef9") (:keywords "convenience" "dotenv" "environment" "configuration"))])
 (dotenv-mode . [(0 2 5) ((emacs (24 3))) "Major mode for .env files" tar ((:url . "https://github.com/preetpalS/emacs-dotenv-mode") (:commit . "e3701bf739bde44f6484eb7753deadaf691b73fb") (:revdesc . "e3701bf739bd"))])
 (double-saber . [(0 0 3) ((emacs (24 4))) "Narrow and delete in search buffers" tar ((:url . "https://github.com/dp12/double-saber") (:commit . "5555dc28cbaa228fa8f9390738a4200e071380b8") (:revdesc . "5555dc28cbaa") (:keywords "double-saber" "narrow" "delete" "sort" "tools" "convenience" "matching") (:authors ("Daniel Ting" . "deep.paren.12@gmail.com")) (:maintainers ("Daniel Ting" . "deep.paren.12@gmail.com")) (:maintainer "Daniel Ting" . "deep.paren.12@gmail.com"))])
 (downplay-mode . [(0 1) nil "Focus attention on a region of the buffer" tar ((:url . "https://github.com/tobias/downplay-mode") (:commit . "225a4b3ca09e6f463dfdd54941c98b02be8d574c") (:revdesc . "225a4b3ca09e") (:authors ("Toby Crawley" . "toby@tcrawley.org")) (:maintainers ("Toby Crawley" . "toby@tcrawley.org")) (:maintainer "Toby Crawley" . "toby@tcrawley.org"))])
 (dpkg-dev-el . [(37 1) ((debian-el (37))) "Emacs modes for debian packaging" tar ((:url . "https://salsa.debian.org/emacsen-team/dpkg-dev-el.git") (:commit . "54b137309b078ec39f4b982368c500df04d4bd5f") (:revdesc . "37.1-0-g54b137309b07"))])
 (dr-racket-like-unicode . [(1 1 0) ((emacs (24 1))) "DrRacket-style unicode input" tar ((:url . "https://github.com/david-christiansen/dr-racket-like-unicode") (:commit . "4953f1c8a68472e157a0dcd0a7e35a4ec2577133") (:revdesc . "4953f1c8a684") (:keywords "i18n" "tools") (:authors ("David Christiansen" . "david@davidchristiansen.dk")) (:maintainers ("David Christiansen" . "david@davidchristiansen.dk")) (:maintainer "David Christiansen" . "david@davidchristiansen.dk"))])
 (dracula-theme . [(1 8 2) ((emacs (24 3))) "Dracula Theme" tar ((:url . "https://github.com/dracula/emacs") (:commit . "29d5180f7e34c0c858a520068fb650f705b8cfc2") (:revdesc . "v1.8.2-0-g29d5180f7e34") (:maintainers ("tienne Deparis" . "etienne@depar.is")) (:maintainer "tienne Deparis" . "etienne@depar.is"))])
 (draft-mode . [(0 1 1) nil "Rough drafting for Emacs" tar ((:url . "https://gitlab.com/gaudecker/draft-mode") (:commit . "4779fb32daf53746459da2def7e08004492d4f18") (:revdesc . "0.1.1-0-g4779fb32daf5") (:keywords "draft" "drafting") (:authors ("Eeli Reilin" . "gaudecker@fea.st")) (:maintainers ("Eeli Reilin" . "gaudecker@fea.st")) (:maintainer "Eeli Reilin" . "gaudecker@fea.st"))])
 (drag-stuff . [(0 3 0) nil "Drag stuff (lines, words, region, etc...) around" tar ((:url . "https://github.com/rejeep/drag-stuff.el") (:commit . "d49fe376d24f0f8ac5ade67b6d7fccc2487c81db") (:revdesc . "d49fe376d24f") (:keywords "speed" "convenience") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (drupal-mode . [(0 8 1) ((php-mode (1 5 0))) "Advanced minor mode for Drupal development" tar ((:url . "https://github.com/arnested/drupal-mode") (:commit . "a353f8bdf3ed98f76b9418afbbc4ef17b5552647") (:revdesc . "0.8.1-0-ga353f8bdf3ed") (:keywords "programming" "php" "drupal") (:authors ("Arne Jørgensen" . "arne@arnested.dk")) (:maintainers ("Arne Jørgensen" . "arne@arnested.dk")) (:maintainer "Arne Jørgensen" . "arne@arnested.dk"))])
 (drupal-spell . [(0 2 2) nil "Aspell extra dictionary for Drupal" tar ((:url . "https://github.com/arnested/drupal-spell") (:commit . "a69f5e3b62c4c0da74ce26c1d00d5b8f7395e4ae") (:revdesc . "0.2.2-0-ga69f5e3b62c4") (:keywords "wp") (:authors ("Arne Jørgensen" . "arne@arnested.dk")) (:maintainers ("Arne Jørgensen" . "arne@arnested.dk")) (:maintainer "Arne Jørgensen" . "arne@arnested.dk"))])
 (dslide . [(0 5 5) ((emacs (29 2))) "Domain Specific sLIDEs. A presentation framework" tar ((:url . "https://github.com/positron-solutions/dslide") (:commit . "0d9a1f6c27e0543e912213d0a5047999f9e5deb5") (:revdesc . "0d9a1f6c27e0") (:keywords "convenience" "org-mode" "presentation" "narrowing") (:authors ("Positron" . "contact@positron.solutions")) (:maintainers ("Positron" . "contact@positron.solutions")) (:maintainer "Positron" . "contact@positron.solutions"))])
 (dtrt-indent . [(1 18) nil "Adapt to foreign indentation offsets" tar ((:url . "https://github.com/jscheid/dtrt-indent") (:commit . "339755e4fb5245862737babf7f2c1e3bae1c129c") (:revdesc . "339755e4fb52") (:keywords "convenience" "files" "languages" "c") (:authors ("Julian Scheid" . "julians37@googlemail.com")) (:maintainers ("Reuben Thomas" . "rrt@sc3d.org")) (:maintainer "Reuben Thomas" . "rrt@sc3d.org"))])
 (ducpel . [(0 1) ((cl-lib (0 5))) "Logic game with sokoban elements" tar ((:url . "https://github.com/alezost/ducpel") (:commit . "ece785baaa102bd2e9d54257af3a92bacc5757bc") (:revdesc . "ece785baaa10") (:keywords "games") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (dumb-jump . [(0 5 4) ((emacs (24 3)) (s (1 11 0)) (dash (2 9 0)) (popup (0 5 3))) "Jump to definition for 50+ languages without configuration" tar ((:url . "https://github.com/jacktasia/dumb-jump") (:commit . "f3176fbf9c11b94cf05bd8279399d9536115ff3c") (:revdesc . "f3176fbf9c11") (:keywords "programming"))])
 (dune . [(3 16 0) nil "Integration with the dune build system" tar ((:commit . "e4380ffddbdf924b3ec4c56048cd8331e1bf39ed") (:url . "https://github.com/ocaml/dune"))])
 (dune-format . [(0 1) ((reformatter (0 6)) (emacs (24 1))) "Reformat OCaml's dune files automatically" tar ((:url . "https://github.com/purcell/emacs-dune-format") (:commit . "eda7a16ae378e7c482c11228c43ef32b893a1520") (:revdesc . "eda7a16ae378") (:keywords "languages") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (duplexer . [(0 2 0) ((emacs (29 1)) (dash (2 19 1))) "Handle conflicts between local minor modes and reuse rules" tar ((:url . "https://github.com/liuyinz/duplexer.el") (:commit . "883e9e24f1c7bb7132c1eac0bf5bedf78081058f") (:revdesc . "883e9e24f1c7") (:keywords "tools") (:authors ("liuyinz" . "liuyinz95@gmail.com")) (:maintainers ("liuyinz" . "liuyinz95@gmail.com")) (:maintainer "liuyinz" . "liuyinz95@gmail.com"))])
 (dw . [(1 1 0) ((emacs (25 1))) "Diceware passphrase generation commands" tar ((:url . "https://github.com/integral-dw/dw-passphrase-generator") (:commit . "61c5718ba64ace4c9e29de18aa2690ecc3f0f258") (:revdesc . "v1.1.0-0-g61c5718ba64a") (:keywords "convenience" "games") (:authors ("D. Williams" . "d.williams@posteo.net")) (:maintainers ("D. Williams" . "d.williams@posteo.net")) (:maintainer "D. Williams" . "d.williams@posteo.net"))])
 (dwim-shell-command . [(0 62 2) ((emacs (28 1))) "Shell commands with DWIM behaviour" tar ((:url . "https://github.com/xenodium/dwim-shell-command") (:commit . "7d1c45aa2bc782c448cadd989dc776c2e5f83514") (:revdesc . "7d1c45aa2bc7"))])
 (dylan . [(0 1 0) ((emacs (25 1))) "Dylan editing modes" tar ((:url . "https://github.com/dylan-lang/dylan-emacs-support") (:commit . "d85409dc3cba57a390ca85da95822f8078ecbfa2") (:revdesc . "d85409dc3cba"))])
 (dynamic-fonts . [(0 6 4) ((font-utils (0 7 0)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Set faces based on available fonts" tar ((:url . "https://github.com/rolandwalker/dynamic-fonts") (:commit . "d318498b377d8941c7420f51616c78e3440d00f5") (:revdesc . "v0.6.4-0-gd318498b377d") (:keywords "faces" "frames") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (dynamic-ruler . [(0 1 7) nil "Displays a dynamic ruler at point" tar ((:url . "https://github.com/rocher/dynamic-ruler") (:commit . "984877f3ad8dd4e4bdec2fcacb82a11b4f3b5d75") (:revdesc . "984877f3ad8d") (:keywords "ruler" "tools" "convenience") (:authors ("Francesc Rocher" . "francesc.rocher@gmail.com")) (:maintainers ("Francesc Rocher" . "francesc.rocher@gmail.com")) (:maintainer "Francesc Rocher" . "francesc.rocher@gmail.com"))])
 (dynaring . [(0 4) ((emacs (25 1))) "A dynamically sized ring structure" tar ((:url . "https://github.com/countvajhula/dynaring") (:commit . "42333fcb734f675cab5d25d1b9d142d502914388") (:revdesc . "0.4-0-g42333fcb734f") (:authors ("Mike Mattie" . "codermattie@gmail.com") ("Sid Kasivajhula" . "sid@countvajhula.com")) (:maintainers ("Sid Kasivajhula" . "sid@countvajhula.com")) (:maintainer "Sid Kasivajhula" . "sid@countvajhula.com"))])
 (e2wm . [(1 4) ((window-layout (1 4))) "Simple window manager for emacs" tar ((:url . "https://github.com/kiwanami/emacs-window-manager") (:commit . "4353d3394c77a49f8f0291c239858c8c5e877549") (:revdesc . "4353d3394c77") (:keywords "tools" "window manager") (:authors ("SAKURAI Masashi" . "m.sakuraiatmarkkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatmarkkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatmarkkiwanami.net"))])
 (e2wm-R . [(0 4) ((e2wm (1 2))) "Some e2wm plugin and perspective for GNU R" tar ((:url . "https://github.com/emacsattic/e2wm-R") (:commit . "fe17906bf48324032a1beaec9af32b9b49ea9125") (:revdesc . "0.4-0-gfe17906bf483") (:keywords "window manager" "convenience" "e2wm"))])
 (e2wm-direx . [(0 0 7) ((e2wm (1 2)) (direx (0 1 -3))) "Plugin of e2wm.el for direx.el" tar ((:url . "https://github.com/aki2o/e2wm-direx") (:commit . "5672bc44d8e5cea6bc3b84c3b58e522050ffae0e") (:revdesc . "5672bc44d8e5") (:keywords "tools" "window manager" "convenience") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (e2wm-pkgex4pl . [(0 0 1) ((e2wm (1 2)) (plsense-direx (0 2 0))) "Plugin of e2wm.el for package explorer of Perl" tar ((:url . "https://github.com/aki2o/e2wm-pkgex4pl") (:commit . "7ea994450727190c4f3cb46cb429ba41b692ecc0") (:revdesc . "7ea994450727") (:keywords "tools" "window manager" "perl") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (e2wm-sww . [(0 0 3) ((e2wm (1 2))) "Plugin of e2wm.el to switch plugin quickly" tar ((:url . "https://github.com/aki2o/e2wm-sww") (:commit . "8926d0c70be05c7b4ef821e22e411e8813973687") (:revdesc . "8926d0c70be0") (:keywords "tools" "window manager") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (e2wm-term . [(0 1 0) ((e2wm (1 2)) (log4e (0 2 0)) (yaxception (1 0 0))) "Perspective of e2wm.el for work in terminal" tar ((:url . "https://github.com/aki2o/e2wm-term") (:commit . "4542e52138484933dd99a497ff1b048ea42f9246") (:revdesc . "4542e5213848") (:keywords "tools" "window manager") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (eacl . [(2 2 0) ((emacs (25 1))) "Auto-complete lines by grepping project" tar ((:url . "https://github.com/redguardtoo/eacl") (:commit . "a9485331789de245445b2b4a9d5befc7498628a6") (:revdesc . "a9485331789d") (:keywords "abbrev" "convenience" "matching") (:authors ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainers ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainer "Chen Bin" . "chenbinDOTshATgmailDOTcom"))])
 (eask . [(0 10 1) ((emacs (26 1))) "Core Eask APIs, for Eask CLI development" tar ((:url . "https://github.com/emacs-eask/eask") (:commit . "34c20849530c59547e032900bba87f5ef05f192a") (:revdesc . "34c20849530c") (:keywords "lisp" "eask" "api") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (eask-mode . [(0 1 0) ((emacs (24 3))) "Major mode for editing Eask files" tar ((:url . "https://github.com/emacs-eask/eask-mode") (:commit . "8925f1bd998d1297ebd93278add0be0b809e473c") (:revdesc . "8925f1bd998d") (:keywords "lisp" "eask") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (easky . [(0 1 0) ((emacs (27 1)) (eask-mode (0 1 0)) (eask (0 1 0)) (ansi (0 4 1)) (lv (0 0)) (marquee-header (0 1 0))) "Control Eask in Emacs" tar ((:url . "https://github.com/emacs-eask/easky") (:commit . "ad528fd56ff4e25deec747dcfc815f4edf56ee68") (:revdesc . "ad528fd56ff4") (:keywords "maint" "easky") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (easy-hugo . [(3 10 60) ((emacs (25 1)) (popup (0 5 3)) (request (0 3 0)) (transient (0 3 6))) "Write blogs made with hugo by markdown or org-mode" tar ((:url . "https://github.com/masasam/emacs-easy-hugo") (:commit . "ecae28ef6bd70f3b7492592008bfa8776d81d2e7") (:revdesc . "ecae28ef6bd7"))])
 (easy-jekyll . [(2 6 30) ((emacs (25 1)) (request (0 3 0))) "Major mode managing jekyll blogs" tar ((:url . "https://github.com/masasam/emacs-easy-jekyll") (:commit . "7f19af310162464956f2bc4c38c6b7e95cb20321") (:revdesc . "7f19af310162"))])
 (easy-kill . [(0 9 4) ((emacs (24)) (cl-lib (0 5))) "Kill & mark things easily" tar ((:url . "https://github.com/leoliu/easy-kill") (:commit . "2a6309d98aa6b71df6bbbcdf15cab3187c521a6b") (:revdesc . "2a6309d98aa6") (:keywords "killing" "convenience") (:authors ("Leo Liu" . "sdl.web@gmail.com")) (:maintainers ("Leo Liu" . "sdl.web@gmail.com")) (:maintainer "Leo Liu" . "sdl.web@gmail.com"))])
 (easy-kill-extras . [(0 9 14) ((easy-kill (0 9 4))) "Extra functions for easy-kill" tar ((:url . "https://github.com/knu/easy-kill-extras.el") (:commit . "ff9de0c9186f8e43cb29611c78756b14e728dbb3") (:revdesc . "ff9de0c9186f") (:keywords "killing" "convenience") (:authors ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (easy-repeat . [(0 2) ((emacs (24 4))) "Repeat easily" tar ((:url . "https://github.com/xuchunyang/easy-repeat.el") (:commit . "060f0e6801c82c40c06961dc0528a00e18947a8c") (:revdesc . "060f0e6801c8") (:keywords "repeat" "convenience") (:authors ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainers ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainer "Chunyang Xu" . "xuchunyang56@gmail.com"))])
 (easysession . [(1 1 1) ((emacs (25 1)) (f (0 18 2))) "Easily persist and restore your editing sessions" tar ((:url . "https://github.com/jamescherti/easysession.el") (:commit . "f45896a6d29966c7a9f63f0a4c603245c1609877") (:revdesc . "1.1.1-0-gf45896a6d299") (:keywords "convenience"))])
 (ebdb-mua-sidecar . [(1 6 0) ((emacs (28 1)) (universal-sidecar (1 5 1)) (ebdb (0 8 20))) "EBDB Integration for Universal Sidecar" tar ((:url . "https://git.sr.ht/~swflint/emacs-universal-sidecar") (:commit . "4c78015d10caba9c700e6e6b582004ae1c1d5344") (:revdesc . "v1.6.0-0-g4c78015d10ca") (:keywords "mail" "convenience") (:authors ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainers ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainer "Samuel W. Flint" . "me@samuelwflint.com"))])
 (ebf . [(1 0 0) ((dash (2 11 0)) (dash-functional (1 2 0)) (cl-lib (0 5))) "Brainfuck language transpiler to Emacs Lisp" tar ((:url . "https://github.com/rexim/ebf") (:commit . "d0bd4fe1abbe327e7d9228eff09927fec57e8378") (:revdesc . "d0bd4fe1abbe") (:authors ("Alexey Kutepov" . "reximkut@gmail.com")) (:maintainers ("Alexey Kutepov" . "reximkut@gmail.com")) (:maintainer "Alexey Kutepov" . "reximkut@gmail.com"))])
 (ebib . [(2 48) ((parsebib (6 0)) (emacs (27 1)) (compat (29 1 4 3))) "A BibTeX database manager" tar ((:url . "https://github.com/joostkremers/ebib") (:commit . "0b5a6b71d723225f19720425fea8229dc77310c2") (:revdesc . "0b5a6b71d723") (:keywords "text" "bibtex") (:authors ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainers ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainer "Joost Kremers" . "joostkremers@fastmail.fm"))])
 (ebib-sidecar . [(1 6 0) ((emacs (28 1)) (citeproc (0 9 4)) (universal-sidecar (1 5 1)) (universal-sidecar-citeproc (1 0 0)) (ebib (2 39))) "Sidecar to show formatted reference of current Ebib Entry" tar ((:url . "https://git.sr.ht/~swflint/emacs-universal-sidecar") (:commit . "4c78015d10caba9c700e6e6b582004ae1c1d5344") (:revdesc . "v1.6.0-0-g4c78015d10ca") (:keywords "bib") (:authors ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainers ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainer "Samuel W. Flint" . "me@samuelwflint.com"))])
 (eclim . [(0 4) ((dash (2 11 0)) (json (1 2)) (popup (0 5 2)) (s (1 9 0)) (cl-lib (0 5)) (yasnippet (0 10 0))) "An interface to the Eclipse IDE" tar ((:url . "https://github.com/emacs-eclim/emacs-eclim") (:commit . "8203fbf8544e65324a948a67718f7a16ba2d52e6") (:revdesc . "8203fbf8544e"))])
 (ecukes . [(0 6 18) ((commander (0 6 1)) (espuds (0 2 2)) (ansi (0 3 0)) (dash (2 2 0)) (s (1 8 0)) (f (0 11 0))) "Cucumber for Emacs" tar ((:url . "https://github.com/ecukes/ecukes") (:commit . "d173cdf487bc2c62305e2232db96290bc021950f") (:revdesc . "d173cdf487bc"))])
 (edbi . [(0 1 2) ((concurrent (0 3 1)) (ctable (0 1 1)) (epc (0 1 1))) "Emacs Database Interface" tar ((:url . "https://github.com/kiwanami/emacs-edbi") (:commit . "39b833d2e51ae5ce66ebdec7c5425ff0d34e02d2") (:revdesc . "39b833d2e51a") (:keywords "database" "epc") (:authors ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatkiwanami.net"))])
 (ede-php-autoload . [(1 1 0) nil "Simple EDE PHP Project" tar ((:url . "https://github.com/emacs-php/ede-php-autoload") (:commit . "28a989232c276ee7fc5112c9050b1c29f628be9f") (:revdesc . "28a989232c27") (:keywords "php" "project" "ede") (:authors ("Steven Rémot" . "steven.remot@gmail.com") ("original code for C++ by Eric M. Ludlam" . "eric@siege-engine.com")) (:maintainers ("Steven Rémot" . "steven.remot@gmail.com") ("original code for C++ by Eric M. Ludlam" . "eric@siege-engine.com")) (:maintainer "Steven Rémot" . "steven.remot@gmail.com"))])
 (ede-php-autoload-composer-installers . [(0 1 0) ((ede-php-autoload (20170212 450)) (f (0 19 0)) (s (1 7 0))) "Composer installers support for ede-php-autoload" tar ((:url . "https://github.com/xendk/ede-php-autoload-composer-installers") (:commit . "f9942e07d0773444040084ac84652e69f0fd46d5") (:revdesc . "f9942e07d077") (:keywords "programming" "php") (:authors ("Thomas Fini Hansen" . "xen@xen.dk")) (:maintainers ("Thomas Fini Hansen" . "xen@xen.dk")) (:maintainer "Thomas Fini Hansen" . "xen@xen.dk"))])
 (ede-php-autoload-drupal . [(0 1 1) ((ede-php-autoload (1 0 0)) (f (0 19 0)) (s (1 7 0))) "Drupal support for ede-php-autoload" tar ((:url . "https://github.com/xendk/ede-php-autoload-drupal") (:commit . "6b62ffa7a69f52aab79067eaed80b2720f7e3fc2") (:revdesc . "6b62ffa7a69f") (:keywords "programming" "php" "drupal") (:authors ("Thomas Fini Hansen" . "xen@xen.dk")) (:maintainers ("Thomas Fini Hansen" . "xen@xen.dk")) (:maintainer "Thomas Fini Hansen" . "xen@xen.dk"))])
 (edit-indirect . [(0 1 13) ((emacs (24 3))) "Edit regions in separate buffers" tar ((:url . "https://github.com/Fanael/edit-indirect") (:commit . "82a28d8a85277cfe453af464603ea330eae41c05") (:revdesc . "82a28d8a8527") (:authors ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Fanael Linithien" . "fanael4@gmail.com"))])
 (edit-list . [(0 3) nil "Edit a single list" tar ((:url . "https://github.com/emacsmirror/edit-list") (:commit . "f460d3f9e208a4e606fe6ded307f1b011916ca71") (:revdesc . "0.3-0-gf460d3f9e208") (:authors ("Michael Olson" . "mwolson@gnu.org")) (:maintainers ("Michael Olson" . "mwolson@gnu.org")) (:maintainer "Michael Olson" . "mwolson@gnu.org"))])
 (edit-server . [(1 16) nil "Server that responds to edit requests from Chrome" tar ((:url . "https://github.com/stsquad/emacs_chrome") (:commit . "1632acab5624637031326bd902e2ad7ccb6b4c90") (:revdesc . "1632acab5624") (:authors ("Alex Bennée" . "alex@bennee.com")) (:maintainers ("Alex Bennée" . "alex@bennee.com")) (:maintainer "Alex Bennée" . "alex@bennee.com"))])
 (editorconfig . [(0 11 0) ((emacs (26 1)) (nadvice (0 3))) "EditorConfig Emacs Plugin" tar ((:url . "https://github.com/editorconfig/editorconfig-emacs") (:commit . "f1531bab5b57e40759167b7e5db49acbbc09972f") (:revdesc . "f1531bab5b57") (:keywords "convenience" "editorconfig") (:authors ("EditorConfig Team" . "editorconfig@googlegroups.com")) (:maintainers ("EditorConfig Team" . "editorconfig@googlegroups.com")) (:maintainer "EditorConfig Team" . "editorconfig@googlegroups.com"))])
 (editorconfig-custom-majormode . [(0 0 3) ((editorconfig (0 6 0))) "Decide major-mode and mmm-mode from EditorConfig" tar ((:url . "https://github.com/10sr/editorconfig-custom-majormode-el") (:commit . "ae613f0a56364afbbab19d4377c108406d5cfc7c") (:revdesc . "ae613f0a5636") (:keywords "editorconfig" "util") (:authors ("10sr" . "8slashes+el[at]gmail[dot]com")) (:maintainers ("10sr" . "8slashes+el[at]gmail[dot]com")) (:maintainer "10sr" . "8slashes+el[at]gmail[dot]com"))])
 (edn . [(1 1 2) ((cl-lib (0 3)) (emacs (24 1)) (dash (2 10 0)) (peg (0 6)) (s (1 8 0))) "Support for reading and writing the edn data format from elisp" tar ((:url . "https://github.com/expez/edn.el") (:commit . "bb035dcbeccccdb2c899d2cce8e81486764d0ad7") (:revdesc . "1.1.2-0-gbb035dcbeccc") (:keywords "edn" "clojure") (:authors ("Lars Andersen" . "expez@expez.com")) (:maintainers ("Lars Andersen" . "expez@expez.com")) (:maintainer "Lars Andersen" . "expez@expez.com"))])
 (ednc . [(0 2) ((emacs (26 1))) "Emacs Desktop Notification Center" tar ((:url . "https://github.com/sinic/ednc") (:commit . "6fdb2da558049ad7978ffac40012ff1e1b2249a6") (:revdesc . "6fdb2da55804") (:keywords "unix") (:authors ("Simon Nicolussi" . "sinic@sinic.name")) (:maintainers ("Simon Nicolussi" . "sinic@sinic.name")) (:maintainer "Simon Nicolussi" . "sinic@sinic.name"))])
 (edts . [(1 2 0) ((auto-complete (20201213 1255)) (auto-highlight-symbol (20211106 638)) (dash (20210609 1330)) (emacs (24 3)) (erlang (20210315 1640)) (f (20191110 1357)) (popup (20210317 138)) (s (20210603 736))) "Erlang Development Tool Suite" tar ((:url . "https://github.com/sebastiw/edts") (:commit . "5c3cded3fab56baa60874f4e1efd14155cec587f") (:revdesc . "1.2.0-0-g5c3cded3fab5"))])
 (edwina . [(0 2 0) ((emacs (25))) "Dynamic window manager" tar ((:url . "https://gitlab.com/ajgrf/edwina") (:commit . "cc0a039a400e8ef07b0d96d2169f1407e0af107a") (:revdesc . "cc0a039a400e") (:keywords "convenience") (:authors ("Alex Griffin" . "a@ajgrf.com")) (:maintainers ("Alex Griffin" . "a@ajgrf.com")) (:maintainer "Alex Griffin" . "a@ajgrf.com"))])
 (efar . [(1 29) ((emacs (26 1))) "FAR-like file manager" tar ((:url . "https://github.com/suntsov/efar") (:commit . "ee10a6770b0523f25152fbe8fc3409fdb5f70544") (:revdesc . "ee10a6770b05") (:keywords "files") (:authors ("Vladimir Suntsov" . "vladimir@suntsov.online")) (:maintainers (nil . "vladimir@suntsov.online")) (:maintainer nil . "vladimir@suntsov.online"))])
 (eff . [(0 2) ((emacs (28))) "Show symbols in Executable File Formats" tar ((:url . "https://github.com/oxidase/eff") (:commit . "b8ce5d82dc2ef4df912b2b0cbe79e20b455ebd84") (:revdesc . "b8ce5d82dc2e") (:keywords "elf" "readelf" "convenience"))])
 (eg . [(1 1) ((cl-lib (0 5)) (emacs (24 3))) "Norton Guide reader" tar ((:url . "https://github.com/davep/eg.el") (:commit . "0791452498719afb7409d1f723dbea2ec26d56f1") (:revdesc . "079145249871") (:keywords "docs") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (egalgo . [(1 0 2) ((dash (2 14)) (emacs (24))) "Genetic algorithm for Emacs" tar ((:url . "https://github.com/ROCKTAKEY/egalgo") (:commit . "85c8c01c3424e69528f4111a384092dfa721196a") (:revdesc . "85c8c01c3424") (:keywords "data") (:authors ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainers ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainer "ROCKTAKEY" . "rocktakey@gmail.com"))])
 (egg . [(1 1 4) nil "Emacs Got Git - Emacs interface to Git" tar ((:url . "https://github.com/byplayer/egg") (:commit . "00e768a78ac3d25f457eed667d02cac568480bf9") (:revdesc . "00e768a78ac3") (:keywords "git" "version control" "release management") (:authors ("Bogolisk" . "bogolisk@gmail.com")) (:maintainers ("Bogolisk" . "bogolisk@gmail.com")) (:maintainer "Bogolisk" . "bogolisk@gmail.com"))])
 (egison-mode . [(4 1 3) nil "Egison editing mode" tar ((:url . "https://github.com/egison/egison") (:commit . "dbb395b41a4e4eb69f3f045cbfbe95a1575ac45b") (:revdesc . "dbb395b41a4e") (:authors ("Satoshi Egi" . "egisatoshi@gmail.com")) (:maintainers ("Satoshi Egi" . "egisatoshi@gmail.com")) (:maintainer "Satoshi Egi" . "egisatoshi@gmail.com"))])
 (eglot-fsharp . [(2 0) ((emacs (27 1)) (eglot (1 4)) (fsharp-mode (1 10)) (jsonrpc (1 0 14))) "Fsharp-mode eglot integration" tar ((:url . "https://github.com/fsharp/emacs-fsharp-mode") (:commit . "15964df7c65a3b46d704c85873619fec073eabc6") (:revdesc . "15964df7c65a") (:keywords "languages") (:authors ("Jürgen Hötzel" . "juergen@hoetzel.info")) (:maintainers ("Jürgen Hötzel" . "juergen@hoetzel.info")) (:maintainer "Jürgen Hötzel" . "juergen@hoetzel.info"))])
 (eglot-java . [(1 35) ((emacs (26 1)) (eglot (1 0)) (jsonrpc (1 0 0))) "Java extension for the eglot LSP client" tar ((:url . "https://github.com/yveszoundi/eglot-java") (:commit . "492282d653c91b07ec10b30eb8a05cbfdc4017c7") (:revdesc . "492282d653c9") (:keywords "convenience" "languages") (:authors ("Yves Zoundi and contributors" . "yves_zoundi@hotmail.com")) (:maintainers ("Yves Zoundi" . "yves_zoundi@hotmail.com")) (:maintainer "Yves Zoundi" . "yves_zoundi@hotmail.com"))])
 (eglot-jl . [(2 4 0) ((emacs (25 1)) (eglot (1 4)) (project (0 8 1)) (cl-generic (1 0))) "Julia support for eglot" tar ((:url . "https://github.com/non-Jedi/eglot-jl") (:commit . "7c968cc61fb64016ebe6dc8ff83fd05923db4374") (:revdesc . "v2.4.0-0-g7c968cc61fb6") (:keywords "convenience" "languages") (:authors ("Adam Beckmeyer" . "adam_git@thebeckmeyers.xyz")) (:maintainers ("Adam Beckmeyer" . "adam_git@thebeckmeyers.xyz")) (:maintainer "Adam Beckmeyer" . "adam_git@thebeckmeyers.xyz"))])
 (eglot-luau . [(0 2 0) ((emacs (29 1)) (eglot (1 17))) "Luau language server integration for eglot" tar ((:url . "https://github.com/kennethloeffler/eglot-luau") (:commit . "23335f45fb91de606e6971e93179df0fee0fd062") (:revdesc . "23335f45fb91") (:keywords "roblox" "luau" "tools") (:authors ("Kenneth Loeffler" . "kenloef@gmail.com")) (:maintainers ("Kenneth Loeffler" . "kenloef@gmail.com")) (:maintainer "Kenneth Loeffler" . "kenloef@gmail.com"))])
 (eglot-signature-eldoc-talkative . [(0 0 7) ((emacs (29 1)) (eglot (1 16)) (eldoc (1 14 0)) (jsonrpc (1 0 23))) "Make Eglot make ElDoc echo docs" tar ((:url . "https://codeberg.org/mekeor/eglot-signature-eldoc-talkative") (:commit . "859aa6f2c0acf060a8e7549b79daf46c8d63ea8d") (:revdesc . "859aa6f2c0ac") (:keywords "convenience" "documentation" "eglot" "eldoc" "languages" "lsp") (:authors ("João Távora" . "joaotavora@gmail.com") ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainers ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainer "Mekeor Melire" . "mekeor@posteo.de"))])
 (eglot-tempel . [(0 8 2) ((eglot (1 9)) (tempel (0 5)) (emacs (29 1)) (peg (1 0 1))) "Use tempel to expand snippets from eglot" tar ((:url . "https://github.com/fejfighter/eglot-tempel") (:commit . "2e796a2fb4785d0aa68f0aad61b582c11e5238df") (:revdesc . "2e796a2fb478") (:keywords "convenience" "languages" "tools") (:authors ("Jeff Walsh" . "fejfighter@gmail.com")) (:maintainers ("Jeff Walsh" . "fejfighter@gmail.com")) (:maintainer "Jeff Walsh" . "fejfighter@gmail.com"))])
 (eide . [(2 3 1) nil "IDE interface" tar ((:url . "https://forge.tedomum.net/hjuvi/eide.git") (:commit . "8cabc6d77b41bf0c9982ab56530c088d980bc353") (:revdesc . "2.3.1-0-g8cabc6d77b41") (:authors ("Cédric Marie" . "cedric@hjuvi.fr.eu.org")) (:maintainers ("Cédric Marie" . "cedric@hjuvi.fr.eu.org")) (:maintainer "Cédric Marie" . "cedric@hjuvi.fr.eu.org"))])
 (eink-theme . [(1 0 0) nil "E Ink color theme" tar ((:url . "https://github.com/maio/eink-emacs") (:commit . "93d25c097b105594472c4f99d693f439b4b709f0") (:revdesc . "93d25c097b10") (:authors ("Marian Schubert" . "marian.schubert@gmail.com")) (:maintainers ("Marian Schubert" . "marian.schubert@gmail.com")) (:maintainer "Marian Schubert" . "marian.schubert@gmail.com"))])
 (ejc-sql . [(0 4 1) ((emacs (26 3)) (clomacs (0 0 4)) (dash (2 16 0)) (spinner (1 7 3)) (direx (1 0 0))) "Emacs SQL client uses Clojure JDBC." tar ((:commit . "ddbae7be2aed9c273d9d570c542936f1faa3088f") (:authors ("Kostafey" . "kostafey@gmail.com")) (:maintainers ("Kostafey" . "kostafey@gmail.com")) (:maintainer "Kostafey" . "kostafey@gmail.com") (:keywords "sql" "jdbc") (:url . "https://github.com/kostafey/ejc-sql"))])
 (ekg . [(0 6 4) ((triples (0 4 0)) (emacs (28 1)) (llm (0 18 0))) "A system for recording and linking information" tar ((:url . "https://github.com/ahyatt/ekg") (:commit . "942457bb75574f17058cba1da25e46aeee3fde4b") (:revdesc . "942457bb7557") (:keywords "outlines" "hypermedia") (:authors ("Andrew Hyatt" . "ahyatt@gmail.com")) (:maintainers ("Andrew Hyatt" . "ahyatt@gmail.com")) (:maintainer "Andrew Hyatt" . "ahyatt@gmail.com"))])
 (el-autoyas . [(0 5) nil "Automatically create Emacs-Lisp Yasnippets" tar ((:url . "https://github.com/mattfidler/el-autoyas.el") (:commit . "bde0251ecb504f585dfa27c205c8e312655310cc") (:revdesc . "v0.5-0-gbde0251ecb50") (:keywords "emacs" "lisp" "mode" "yasnippet"))])
 (el-fetch . [(3 3 0) ((emacs (25 1))) "Show system information in Neofetch-like style (eg CPU, RAM)" tar ((:url . "https://gitlab.com/xgqt/emacs-el-fetch") (:commit . "0142f58f075ea39aa6cc7ed35dd599afc4b6b450") (:revdesc . "3.3.0-0-g0142f58f075e") (:authors ("Maciej Barć" . "xgqt@riseup.net")) (:maintainers ("Maciej Barć" . "xgqt@riseup.net")) (:maintainer "Maciej Barć" . "xgqt@riseup.net"))])
 (el-get . [(5 1) nil "Manage the external elisp bits and pieces you depend upon" tar ((:url . "https://github.com/dimitri/el-get") (:commit . "bfffd553f4c72b818e9ee94f05458eae7a16056b") (:revdesc . "bfffd553f4c7") (:keywords "emacs" "package" "elisp" "install" "elpa" "git" "git-svn" "bzr" "cvs" "svn" "darcs" "hg" "apt-get" "fink" "pacman" "http" "http-tar" "emacswiki") (:authors ("Dimitri Fontaine" . "dim@tapoueh.org")) (:maintainers ("Dimitri Fontaine" . "dim@tapoueh.org")) (:maintainer "Dimitri Fontaine" . "dim@tapoueh.org"))])
 (el-init . [(0 2 0) ((emacs (24)) (cl-lib (0 5)) (anaphora (1 0 0))) "A loader inspired by init-loader" tar ((:url . "https://github.com/HKey/el-init") (:commit . "25fd21d820bca1cf576b8f70c8d5a3bc76792597") (:revdesc . "25fd21d820bc") (:authors ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainers ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainer "Hiroki YAMAKAWA" . "s06139@gmail.com"))])
 (el-init-viewer . [(0 1 0) ((emacs (24)) (cl-lib (0 5)) (ctable (0 1 2)) (dash (2 10 0)) (anaphora (1 0 0)) (el-init (0 1 4))) "Record viewer for el-init" tar ((:url . "https://github.com/HKey/el-init-viewer") (:commit . "dcc595ba51b5aff972292278aa528c7ddb46f1b5") (:revdesc . "dcc595ba51b5") (:authors ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainers ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainer "Hiroki YAMAKAWA" . "s06139@gmail.com"))])
 (el-job . [(0 3 18) ((emacs (28 1)) (compat (30))) "Call a function using all CPU cores" tar ((:url . "https://github.com/meedstrom/el-job") (:commit . "6d6445cc16d4fb030a6750bdbbfb2483d5aafcbf") (:revdesc . "0.3.18-0-g6d6445cc16d4") (:keywords "processes") (:authors ("Martin Edström" . "meedstrom91@gmail.com")) (:maintainers ("Martin Edström" . "meedstrom91@gmail.com")) (:maintainer "Martin Edström" . "meedstrom91@gmail.com"))])
 (el-mock . [(1 25 1) nil "Tiny Mock and Stub framework in Emacs Lisp" tar ((:url . "https://github.com/rejeep/el-mock.el") (:commit . "3069931de75bb6704ecf565af5390009dc4dae00") (:revdesc . "3069931de75b") (:keywords "lisp" "testing" "unittest") (:authors ("rubikitch" . "rubikitch@ruby-lang.org")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (el-patch . [(3 1) ((emacs (26))) "Future-proof your Elisp" tar ((:url . "https://github.com/radian-software/el-patch") (:commit . "92803e7ea6e07cd56667ed7ea0dfacfc1f37f6d9") (:revdesc . "92803e7ea6e0") (:keywords "extensions") (:authors ("Radian LLC" . "contact+el-patch@radian.codes")) (:maintainers ("Radian LLC" . "contact+el-patch@radian.codes")) (:maintainer "Radian LLC" . "contact+el-patch@radian.codes"))])
 (el-spice . [(0 3 0) nil "Extra spice for emacs lisp programming" tar ((:url . "https://github.com/vedang/el-spice") (:commit . "972dace20ec61cd27b9322432d0c7a688c6f061a") (:revdesc . "0.3.0-0-g972dace20ec6") (:keywords "languages" "extensions") (:authors ("Vedang Manerikar" . "vedang.manerikar@gmail.com")) (:maintainers ("Vedang Manerikar" . "vedang.manerikar@gmail.com")) (:maintainer "Vedang Manerikar" . "vedang.manerikar@gmail.com"))])
 (el2org . [(0 6 0) ((emacs (25 1))) "Convert elisp file to org file" tar ((:url . "https://github.com/tumashu/el2org") (:commit . "4a33469cd305e581603d7ef63bc2a1f2156f2e2e") (:revdesc . "4a33469cd305") (:keywords "convenience") (:authors ("Feng Shu" . "tumashuAT163.com")) (:maintainers ("Feng Shu" . "tumashuAT163.com")) (:maintainer "Feng Shu" . "tumashuAT163.com"))])
 (elbank . [(1 2) ((emacs (25)) (seq (2 16))) "Personal finances reporting application" tar ((:url . "https://github.com/NicolasPetton/elbank") (:commit . "f494716105b1a9f4f52f43bc3dd37c9cd0309bf5") (:revdesc . "1.2-0-gf494716105b1") (:keywords "tools" "personal-finances") (:authors ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainers ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainer "Nicolas Petton" . "nicolas@petton.fr"))])
 (elcouch . [(0 11 0) ((emacs (25 1)) (json-mode (1 0 0)) (libelcouch (0 11 0)) (navigel (0 3 0))) "View and manipulate CouchDB databases" tar ((:url . "https://github.com/DamienCassou/elcouch") (:commit . "3d162dda14411349e12509029d2b621c5d1edea2") (:revdesc . "3d162dda1441") (:keywords "data" "tools") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (eldev . [(1 10 3) ((emacs (24 4))) "Elisp development tool" tar ((:url . "https://github.com/emacs-eldev/eldev") (:commit . "b5f583c70742ba371ff5c176d515c71d5407cf79") (:revdesc . "b5f583c70742") (:keywords "maint" "tools") (:authors ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainers ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainer "Paul Pogonyshev" . "pogonyshev@gmail.com"))])
 (eldoc-box . [(1 12 1) ((emacs (27 1))) "Display documentation in childframe" tar ((:url . "https://github.com/casouri/eldoc-box") (:commit . "0be491c30e2f97da6bd680174a3223847eae567a") (:revdesc . "0be491c30e2f") (:authors ("Yuan Fu" . "casouri@gmail.com")) (:maintainers ("Yuan Fu" . "casouri@gmail.com")) (:maintainer "Yuan Fu" . "casouri@gmail.com"))])
 (eldoc-eask . [(0 1 0) ((emacs (26 1)) (eask (0 1 0))) "Eldoc support for Eask-file" tar ((:url . "https://github.com/emacs-eask/eldoc-eask") (:commit . "c82dedc41772f6a84f02b2fe24bea7ba9512e246") (:revdesc . "c82dedc41772") (:keywords "convenience") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (eldoc-eval . [(1 1) nil "Enable eldoc support when minibuffer is in use" tar ((:url . "https://github.com/thierryvolpiatto/eldoc-eval") (:commit . "deca5e39f31282a06531002d289258cd099433c0") (:revdesc . "v1.1-0-gdeca5e39f312") (:authors ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainers ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainer "Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))])
 (eldoc-stan . [(10 2 0) ((emacs (25)) (stan-mode (10 1 0))) "Eldoc support for stan functions" tar ((:url . "https://github.com/stan-dev/stan-mode") (:commit . "2dd330604563d143031fc8ffd516266217aa1f9b") (:revdesc . "2dd330604563") (:keywords "help" "tools") (:authors ("Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu")) (:maintainers ("Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu")) (:maintainer "Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu"))])
 (electric-cursor . [(0 2) ((emacs (25 1))) "Change cursor automatically depending on mode" tar ((:url . "https://codeberg.org/acdw/electric-cursor.el") (:commit . "92f77b05fec80c5440a8b800b33345dabca13872") (:revdesc . "92f77b05fec8") (:keywords "terminals" "frames") (:authors ("Case Duckworth" . "acdw@acdw.net")) (:maintainers ("Case Duckworth" . "acdw@acdw.net")) (:maintainer "Case Duckworth" . "acdw@acdw.net"))])
 (electric-operator . [(2 1) ((dash (2 10 0)) (emacs (24 4))) "Automatically add spaces around operators" tar ((:url . "https://github.com/davidshepherd7/electric-operator") (:commit . "92c3eae146cb9bfcebef4b33498ab7d0973033fe") (:revdesc . "92c3eae146cb") (:keywords "electric") (:authors ("David Shepherd" . "davidshepherd7@gmail.com")) (:maintainers ("David Shepherd" . "davidshepherd7@gmail.com")) (:maintainer "David Shepherd" . "davidshepherd7@gmail.com"))])
 (electric-ospl . [(3 2 0) ((emacs (26 1))) "Electric OSPL Mode" tar ((:url . "https://git.sr.ht/~swflint/electric-ospl-mode") (:commit . "deab4493530ab4bb2112c18d8ca6ccc652e24a63") (:revdesc . "v3.2.0-0-gdeab4493530a") (:keywords "convenience" "text") (:authors ("Samuel W. Flint" . "swflint@flintfam.org")) (:maintainers ("Samuel W. Flint" . "swflint@flintfam.org")) (:maintainer "Samuel W. Flint" . "swflint@flintfam.org"))])
 (elein . [(0 1) nil "Running leiningen commands from emacs" tar ((:url . "https://github.com/remvee/elein") (:commit . "ae1aebc8abe293d5d6949d290628537c3705078d") (:revdesc . "ae1aebc8abe2") (:keywords "tools" "processes"))])
 (elescope . [(0 2) ((emacs (25 1)) (ivy (0 10)) (request (0 3)) (seq (2 0))) "Seach and clone projects from the minibuffer" tar ((:url . "https://github.com/freesteph/elescope") (:commit . "7711f7e34d04ea52a258f69ee0c94ef1240c5655") (:revdesc . "7711f7e34d04") (:keywords "vc") (:authors ("Stéphane Maniaci" . "stephane.maniaci@gmail.com")) (:maintainers ("Stéphane Maniaci" . "stephane.maniaci@gmail.com")) (:maintainer "Stéphane Maniaci" . "stephane.maniaci@gmail.com"))])
 (elf-mode . [(0 1 0) ((emacs (24 3))) "Show symbols in binaries" tar ((:url . "https://github.com/abo-abo/elf-mode") (:commit . "cd280d683cd3341d8bb31af6db7e3b74a133e6ab") (:revdesc . "cd280d683cd3") (:keywords "matching") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com"))])
 (elfeed . [(3 4 2) ((emacs (24 3))) "An Emacs Atom/RSS feed reader" tar ((:url . "https://github.com/skeeto/elfeed") (:commit . "904b6d4feca78e7e5336d7dbb7b8ba53b8c4dac1") (:revdesc . "3.4.2-0-g904b6d4feca7") (:authors ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainers ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainer "Christopher Wellons" . "wellons@nullprogram.com"))])
 (elfeed-autotag . [(0 1 2) ((emacs (27 1)) (elfeed (3 4 1)) (elfeed-protocol (0 8 0)) (org (8 2 7)) (dash (2 10 0)) (s (1 9 0))) "Easy auto-tagging for elfeed" tar ((:url . "https://github.com/paulelms/elfeed-autotag") (:commit . "bc62c37fb79b720ff8b6d67f04f2268841306dcd") (:revdesc . "bc62c37fb79b") (:keywords "news") (:authors ("Paul Elms" . "https://paul.elms.pro")) (:maintainers ("Paul Elms" . "paul@elms.pro")) (:maintainer "Paul Elms" . "paul@elms.pro"))])
 (elfeed-curate . [(0 2 1) ((emacs (25 1)) (elfeed (3 4 1))) "Elfeed entry curation" tar ((:url . "https://github.com/rnadler/elfeed-curate") (:commit . "195ee944a1dd95380c680d886e15a8aadab50b8e") (:revdesc . "195ee944a1dd") (:keywords "news") (:authors ("Robert Nadler" . "robert.nadler@gmail.com")) (:maintainers ("Robert Nadler" . "robert.nadler@gmail.com")) (:maintainer "Robert Nadler" . "robert.nadler@gmail.com"))])
 (elfeed-protocol . [(0 9 1) ((emacs (24 4)) (elfeed (2 1 1)) (cl-lib (0 5))) "Provide fever/newsblur/owncloud/ttrss protocols for elfeed" tar ((:url . "https://github.com/fasheng/elfeed-protocol") (:commit . "bcefb85a1d4075f36e73a94bda569e71f28a52c2") (:revdesc . "bcefb85a1d40") (:keywords "news") (:authors ("Xu Fasheng" . "fasheng[AT]fasheng.info")) (:maintainers ("Xu Fasheng" . "fasheng[AT]fasheng.info")) (:maintainer "Xu Fasheng" . "fasheng[AT]fasheng.info"))])
 (elfeed-score . [(1 2 8) ((emacs (26 1)) (elfeed (3 3 0))) "Gnus-style scoring for Elfeed" tar ((:url . "https://github.com/sp1ff/elfeed-score") (:commit . "c2be8c12d4c1e7027409d4a1b7876da68f3c167c") (:revdesc . "1.2.8-0-gc2be8c12d4c1") (:keywords "news") (:authors ("Michael Herstine" . "sp1ff@pobox.com")) (:maintainers ("Michael Herstine" . "sp1ff@pobox.com")) (:maintainer "Michael Herstine" . "sp1ff@pobox.com"))])
 (elfeed-summary . [(0 1 0) ((emacs (27 1)) (magit-section (3 3 0)) (elfeed (3 4 1))) "Feed summary interface for elfeed" tar ((:url . "https://github.com/SqrtMinusOne/elfeed-summary") (:commit . "1cf73acae8b791e214dc347c2adf7ec17e8ff41a") (:revdesc . "1cf73acae8b7") (:authors ("Korytov Pavel" . "thexcloud@gmail.com")) (:maintainers ("Korytov Pavel" . "thexcloud@gmail.com")) (:maintainer "Korytov Pavel" . "thexcloud@gmail.com"))])
 (elfeed-tube . [(0 15) ((emacs (27 1)) (elfeed (3 4 1)) (aio (1 0))) "YouTube integration for Elfeed" tar ((:url . "https://github.com/karthink/elfeed-tube") (:commit . "7e1409e41628d61d8197ca248d910182ae4fc520") (:revdesc . "7e1409e41628") (:keywords "news" "hypermedia" "convenience") (:authors ("Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com")) (:maintainers ("Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com")) (:maintainer "Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com"))])
 (elfeed-tube-mpv . [(0 15) ((emacs (27 1)) (elfeed-tube (0 10)) (mpv (0 2 0))) "Control mpv from Elfeed" tar ((:url . "https://github.com/karthink/elfeed-tube") (:commit . "7e1409e41628d61d8197ca248d910182ae4fc520") (:revdesc . "7e1409e41628") (:keywords "news" "hypermedia") (:authors ("Karthik Chikmagalur" . "karthikchikmagalur@gmail.com")) (:maintainers ("Karthik Chikmagalur" . "karthikchikmagalur@gmail.com")) (:maintainer "Karthik Chikmagalur" . "karthikchikmagalur@gmail.com"))])
 (elfeed-web . [(3 4 2) ((simple-httpd (1 5 1)) (elfeed (3 2 0)) (emacs (24 3))) "Web interface to Elfeed" tar ((:url . "https://github.com/skeeto/elfeed") (:commit . "904b6d4feca78e7e5336d7dbb7b8ba53b8c4dac1") (:revdesc . "3.4.2-0-g904b6d4feca7") (:authors ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainers ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainer "Christopher Wellons" . "wellons@nullprogram.com"))])
 (elgrep . [(1 0 0) ((emacs (25 1))) "Searching files for regular expressions" tar ((:url . "https://github.com/TobiasZawada/elgrep") (:commit . "c2c5858f335ac1d0013dc631e5bc2dc16d9b3198") (:revdesc . "c2c5858f335a") (:keywords "tools" "matching" "files" "unix") (:authors ("Tobias Zawada" . "naehring@smtp.1und1.de")) (:maintainers ("Tobias Zawada" . "naehring@smtp.1und1.de")) (:maintainer "Tobias Zawada" . "naehring@smtp.1und1.de"))])
 (elisa . [(1 1 3) ((emacs (29 2)) (ellama (0 11 2)) (llm (0 18 1)) (async (1 9 8)) (plz (0 9))) "Emacs Lisp Information System Assistant" tar ((:url . "https://github.com/s-kostyaev/elisa") (:commit . "322d7eb839f1e981b8aa09a6ee4a7d6a22173772") (:revdesc . "322d7eb839f1") (:keywords "help" "local" "tools") (:authors ("Sergey Kostyaev" . "sskostyaev@gmail.com")) (:maintainers ("Sergey Kostyaev" . "sskostyaev@gmail.com")) (:maintainer "Sergey Kostyaev" . "sskostyaev@gmail.com"))])
 (elisp-def . [(1 1) ((dash (2 12 0)) (f (0 19 0)) (s (1 11 0)) (emacs (24 3))) "Macro-aware go-to-definition for elisp" tar ((:url . "https://github.com/Wilfred/elisp-def") (:commit . "e374dfa1724c7ee34376305a94c5a31a052f4e3b") (:revdesc . "e374dfa1724c") (:keywords "lisp") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (elisp-demos . [(2024 1 16) ((emacs (24 4))) "Elisp API Demos" tar ((:url . "https://github.com/xuchunyang/elisp-demos") (:commit . "bf22eddd42c8fcc52648d2cafd842f120d4dc591") (:revdesc . "bf22eddd42c8") (:keywords "lisp" "docs"))])
 (elisp-lint . [(0 4 0) ((emacs (24 4)) (dash (2 15 0)) (package-lint (0 11))) "Basic linting for Emacs Lisp" tar ((:url . "https://github.com/gonewest818/elisp-lint") (:commit . "2b645266be8010a6a49c6d0ebf6a3ad5bd290ff4") (:revdesc . "2b645266be80") (:keywords "lisp" "maint" "tools") (:authors ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainers ("Neil Okamoto" . "neil.okamoto+melpa@gmail.com")) (:maintainer "Neil Okamoto" . "neil.okamoto+melpa@gmail.com"))])
 (elisp-refs . [(1 5) ((dash (2 12 0)) (s (1 11 0))) "Find callers of elisp functions or macros" tar ((:url . "https://github.com/Wilfred/elisp-refs") (:commit . "afc82c235feb228dbc860587e607599f5e67aa20") (:revdesc . "afc82c235feb") (:keywords "lisp") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (elisp-slime-nav . [(0 10) ((emacs (24 1)) (cl-lib (0 2))) "Make M-. and M-, work in elisp like they do in slime" tar ((:url . "https://github.com/purcell/elisp-slime-nav") (:commit . "9ab52362600af9f97f1590f05a295538025170b3") (:revdesc . "9ab52362600a") (:keywords "languages" "navigation" "slime" "elisp" "emacs-lisp") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (elixir-mode . [(2 5 0) ((emacs (25))) "Major mode for editing Elixir files" tar ((:url . "https://github.com/elixir-editors/emacs-elixir") (:commit . "00d6580a040a750e019218f9392cf9a4c2dac23a") (:revdesc . "00d6580a040a") (:keywords "languages" "elixir"))])
 (elixir-yasnippets . [(0 0 1) ((yasnippet (0 8 0))) "Yasnippets for Elixir" tar ((:url . "https://github.com/hisea/elixir-yasnippets") (:commit . "6b55c88ce483932f226b6bca0212b589d1d393ea") (:revdesc . "6b55c88ce483") (:keywords "snippets") (:authors ("Yinghai Zhao" . "zyinghai@gmail.com")) (:maintainers ("Yinghai Zhao" . "zyinghai@gmail.com")) (:maintainer "Yinghai Zhao" . "zyinghai@gmail.com"))])
 (ellama . [(0 13 0) ((emacs (28 1)) (llm (0 6 0)) (spinner (1 7 4)) (transient (0 7)) (compat (29 1))) "Tool for interacting with LLMs" tar ((:url . "https://github.com/s-kostyaev/ellama") (:commit . "d4927093e2988084eac86c3254a7b7f5d4cbd761") (:revdesc . "d4927093e298") (:keywords "help" "local" "tools") (:authors ("Sergey Kostyaev" . "sskostyaev@gmail.com")) (:maintainers ("Sergey Kostyaev" . "sskostyaev@gmail.com")) (:maintainer "Sergey Kostyaev" . "sskostyaev@gmail.com"))])
 (elm-mode . [(0 22 0) ((f (0 17)) (s (1 7 0)) (emacs (25 1)) (seq (2 23)) (reformatter (0 3))) "Major mode for Elm" tar ((:url . "https://github.com/jcollard/elm-mode") (:commit . "1e277684d8a6681a2410cce2dd589ee30a998369") (:revdesc . "1e277684d8a6"))])
 (elmacro . [(1 1 1) ((s (1 11 0)) (dash (2 13 0))) "Convert keyboard macros to emacs lisp" tar ((:url . "https://github.com/Silex/elmacro") (:commit . "5bf9ba6009226b95e5ba0f50489ccced475753e3") (:revdesc . "1.1.1-0-g5bf9ba600922") (:keywords "macro" "elisp" "convenience") (:authors ("Philippe Vaucher" . "philippe.vaucher@gmail.com")) (:maintainers ("Philippe Vaucher" . "philippe.vaucher@gmail.com")) (:maintainer "Philippe Vaucher" . "philippe.vaucher@gmail.com"))])
 (elmine . [(0 3) nil "[No description available]" tar ((:url . "https://github.com/leoc/elmine") (:commit . "091f61c70c9e7630a74b7b127488051d143a35e7") (:revdesc . "091f61c70c9e") (:keywords "tools") (:authors ("Arthur Andersen" . "leocDOTgitATgmail.com")) (:maintainers ("Arthur Andersen" . "leocDOTgitATgmail.com")) (:maintainer "Arthur Andersen" . "leocDOTgitATgmail.com"))])
 (elmpd . [(1 0 0) ((emacs (25 1))) "A tight, ergonomic, async client library for mpd" tar ((:url . "https://github.com/sp1ff/elmpd") (:commit . "db808e58993310a01419649985b2f732b1067e9e") (:revdesc . "1.0.0-0-gdb808e589933") (:keywords "comm") (:authors ("Michael Herstine" . "sp1ff@pobox.com")) (:maintainers ("Michael Herstine" . "sp1ff@pobox.com")) (:maintainer "Michael Herstine" . "sp1ff@pobox.com"))])
 (elogcat . [(0 2 0) ((s (1 9 0)) (dash (2 10 0))) "Logcat interface" tar ((:url . "https://github.com/youngker/elogcat.el") (:commit . "f2f19d7ab6b77b8fec55cb67524df629fe967891") (:revdesc . "f2f19d7ab6b7") (:keywords "tools") (:authors ("Youngjoo Lee" . "youngker@gmail.com")) (:maintainers ("Youngjoo Lee" . "youngker@gmail.com")) (:maintainer "Youngjoo Lee" . "youngker@gmail.com"))])
 (elpa-audit . [(0 4) nil "Handy functions for inspecting and comparing package archives" tar ((:url . "https://github.com/purcell/elpa-audit") (:commit . "a7a1806278c73ea6cb6d235714e7bc8088971df5") (:revdesc . "a7a1806278c7") (:keywords "maint") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (elpa-clone . [(0 4 0) ((emacs (24 4))) "Clone ELPA archive" tar ((:url . "https://github.com/dochang/elpa-clone") (:commit . "dfbb68ac183b8c3e6e370c45032790ed7cf52165") (:revdesc . "0.4.0-0-gdfbb68ac183b") (:keywords "comm" "elpa" "clone" "mirror") (:authors ("ZHANG Weiyi" . "dochang@gmail.com")) (:maintainers ("ZHANG Weiyi" . "dochang@gmail.com")) (:maintainer "ZHANG Weiyi" . "dochang@gmail.com"))])
 (elpa-mirror . [(2 3 0) ((emacs (27 1))) "Create local package repository from installed packages" tar ((:url . "https://github.com/redguardtoo/elpa-mirror") (:commit . "d51a5b81af909727fac45f3c9d3653b1170e01f0") (:revdesc . "d51a5b81af90") (:keywords "tools") (:authors ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainers ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainer "Chen Bin" . "chenbin.sh@gmail.com"))])
 (elpher . [(3 6 4) ((emacs (27 1))) "A friendly gopher and gemini client" tar ((:url . "https://thelambdalab.xyz/git/elpher.git") (:commit . "a1c5fbf16b528fb67d087437d44d66e9edc99664") (:revdesc . "a1c5fbf16b52") (:keywords "comm" "gopher" "gemini") (:authors ("Tim Vaughan" . "plugd@thelambdalab.xyz")) (:maintainers ("Tim Vaughan" . "plugd@thelambdalab.xyz")) (:maintainer "Tim Vaughan" . "plugd@thelambdalab.xyz"))])
 (elpy . [(1 35 0) ((company (0 9 2)) (emacs (24 4)) (highlight-indentation (0 5 0)) (pyvenv (1 3)) (yasnippet (0 8 0)) (s (1 11 0))) "Emacs Python Development Environment" tar ((:url . "https://github.com/jorgenschaefer/elpy") (:commit . "4666c16ef362d4f99053bbc0856d8c65121e1825") (:revdesc . "1.35.0-0-g4666c16ef362") (:keywords "python" "ide" "languages" "tools") (:authors ("Jorgen Schaefer" . "contact@jorgenschaefer.de") ("Gaby Launay" . "gaby.launay@protonmail.com")) (:maintainers ("Jorgen Schaefer" . "contact@jorgenschaefer.de") ("Gaby Launay" . "gaby.launay@protonmail.com")) (:maintainer "Jorgen Schaefer" . "contact@jorgenschaefer.de"))])
 (elquery . [(1 1 0) ((emacs (25 1)) (dash (2 13 0))) "The HTML library for elisp" tar ((:url . "https://github.com/AdamNiederer/elquery") (:commit . "8d82d0d3005d6ec6d1e7fcd7f26abb1a165cc79a") (:revdesc . "8d82d0d3005d") (:keywords "html" "hypermedia" "tools" "webscale"))])
 (elscreen . [(20180321) ((emacs (24))) "Emacs window session manager" tar ((:url . "https://github.com/knu/elscreen") (:commit . "cc58337faf5ba1eae7e87f75f6ff3758675688f2") (:revdesc . "cc58337faf5b") (:keywords "window" "convenience") (:authors ("Naoto Morishima" . "naoto@morishima.net")) (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (elscreen-fr . [(0 0 3) ((elscreen (0)) (seq (1 11))) "Use frame title as screen tab" tar ((:url . "https://github.com/rocher/elscreen-fr") (:commit . "b9c11f80d277086d5d5bf88623e15fc7adbbbe3c") (:revdesc . "b9c11f80d277") (:authors ("Francesc Rocher" . "francesc.rocher@gmail.com")) (:maintainers ("Francesc Rocher" . "francesc.rocher@gmail.com")) (:maintainer "Francesc Rocher" . "francesc.rocher@gmail.com"))])
 (elscreen-mew . [(1 0 2) ((elscreen (20120413 807))) "ElScreen Add-On for Mew" tar ((:url . "https://github.com/masutaka/elscreen-mew") (:commit . "89871fad690ae161dc076e16ef481b1965612077") (:revdesc . "1.0.2-0-g89871fad690a") (:authors ("Takashi Masuda" . "masutaka.net@gmail.com")) (:maintainers ("Takashi Masuda" . "masutaka.net@gmail.com")) (:maintainer "Takashi Masuda" . "masutaka.net@gmail.com"))])
 (elscreen-tab . [(1 1 0) ((emacs (26)) (elscreen (20180321)) (dash (2 14 1))) "Minor mode to display tabs of elscreen in a dedicated buffer" tar ((:url . "https://github.com/aki-s/elscreen-tab") (:commit . "6ad77f972bde05e4e3d44f0d33b68ac41655e5f1") (:revdesc . "1.1.0-0-g6ad77f972bde") (:keywords "tools" "extensions") (:authors ("Aki Syunsuke" . "sunny.day.dev@gmail.com")) (:maintainers ("Aki Syunsuke" . "sunny.day.dev@gmail.com")) (:maintainer "Aki Syunsuke" . "sunny.day.dev@gmail.com"))])
 (elwm . [(0 0 2) ((dash (1 1 0))) "Minimalistic window manager for emacs" tar ((:url . "https://github.com/Fuco1/elwm") (:commit . "c33b183f006ad476c3a44dab316f580f8b369930") (:revdesc . "c33b183f006a") (:keywords "docs") (:authors ("Matus Goljer" . "matus.goljer@gmail.com")) (:maintainers ("Matus Goljer" . "matus.goljer@gmail.com")) (:maintainer "Matus Goljer" . "matus.goljer@gmail.com"))])
 (elx . [(2 0 3) ((emacs (26 1)) (compat (30 0 0 0)) (llama (0 3 1))) "Extract information from Emacs Lisp libraries" tar ((:url . "https://github.com/emacscollective/elx") (:commit . "be1afda54a182c726d7f0c584b2ac4854384ffda") (:revdesc . "v2.0.3-0-gbe1afda54a18") (:keywords "docs" "libraries" "packages") (:authors ("Jonas Bernoulli" . "emacs.elx@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.elx@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.elx@jonas.bernoulli.dev"))])
 (elysium . [(0 0 1) ((emacs (27 1)) (gptel (0 9 0))) "Automatically apply LLM-created code-suggestions" tar ((:url . "https://github.com/lanceberge/elysium") (:commit . "c53afa442bc02a8b9002744f93ee8806187ed381") (:revdesc . "c53afa442bc0") (:authors ("Lance Bergeron" . "bergeron.lance6@gmail.com")) (:maintainers ("Lance Bergeron" . "bergeron.lance6@gmail.com")) (:maintainer "Lance Bergeron" . "bergeron.lance6@gmail.com"))])
 (emacsc . [(1 6 20241206) nil "Helper for emacsc(1)" tar ((:url . "https://github.com/knu/emacsc") (:commit . "810f5e8b97e3046bdc7b0195067335b8eecb0bcb") (:revdesc . "810f5e8b97e3") (:keywords "tools") (:authors ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (emacsql . [(4 1 0) ((emacs (26 1))) "High-level SQL database front-end" tar ((:url . "https://github.com/magit/emacsql") (:commit . "d6529f010a0573630122b826230e72157ab8fa88") (:revdesc . "v4.1.0-0-gd6529f010a05") (:authors ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainers ("Jonas Bernoulli" . "emacs.emacsql@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.emacsql@jonas.bernoulli.dev"))])
 (emacsshot . [(0 5 0) ((emacs (24 4))) "Snapshot a frame or window from within" tar ((:url . "https://gitlab.com/marcowahl/emacsshot") (:commit . "f0add6820d250875f7d7c21aa5d813dc73dbcf96") (:revdesc . "f0add6820d25") (:keywords "convenience") (:authors ("Marco Wahl" . "marcowahlsoft@gmail.com")))])
 (emamux . [(0 14) ((emacs (24 3))) "Interact with tmux" tar ((:url . "https://github.com/emacsorphanage/emamux") (:commit . "573dd1cf18584a1fd240efb16c7726b6fd790b73") (:revdesc . "573dd1cf1858") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (emaps . [(0 2 0) ((dash (2 17 0)) (emacs (24))) "Utilities for working with keymaps" tar ((:url . "https://github.com/GuiltyDolphin/emaps") (:commit . "7c561f3ded2015ed3774e5784059d6601082743e") (:revdesc . "7c561f3ded20") (:keywords "convenience" "keyboard" "keymap" "utility") (:authors ("Ben Moon" . "software@guiltydolphin.com")) (:maintainers ("Ben Moon" . "software@guiltydolphin.com")) (:maintainer "Ben Moon" . "software@guiltydolphin.com"))])
 (embark . [(1 1) ((emacs (27 1)) (compat (29 1 4 0))) "Conveniently act on minibuffer completions" tar ((:url . "https://github.com/oantolin/embark") (:commit . "195add1f1ccd1059472c9df7334c97c4d155425e") (:revdesc . "195add1f1ccd") (:keywords "convenience") (:authors ("Omar Antolín Camarena" . "omar@matem.unam.mx")) (:maintainers ("Omar Antolín Camarena" . "omar@matem.unam.mx")) (:maintainer "Omar Antolín Camarena" . "omar@matem.unam.mx"))])
 (embark-consult . [(1 1) ((emacs (27 1)) (compat (29 1 4 0)) (embark (1 0)) (consult (1 0))) "Consult integration for Embark" tar ((:url . "https://github.com/oantolin/embark") (:commit . "195add1f1ccd1059472c9df7334c97c4d155425e") (:revdesc . "195add1f1ccd") (:keywords "convenience") (:authors ("Omar Antolín Camarena" . "omar@matem.unam.mx")) (:maintainers ("Omar Antolín Camarena" . "omar@matem.unam.mx")) (:maintainer "Omar Antolín Camarena" . "omar@matem.unam.mx"))])
 (embark-org-roam . [(0 2) ((emacs (27 1)) (embark (0 23)) (org-roam (2 2 0))) "Embark export buffer for org roam nodes" tar ((:url . "https://github.com/bramadams/embark-org-roam") (:commit . "5bc9efc33e74eb47becbc2f6467141864cb6ecea") (:revdesc . "5bc9efc33e74") (:keywords "outlines" "hypermedia") (:authors ("Bram Adams" . "bram.adams@queensu.ca")) (:maintainers ("Bram Adams" . "bram.adams@queensu.ca")) (:maintainer "Bram Adams" . "bram.adams@queensu.ca"))])
 (embrace . [(0 1 4) ((cl-lib (0 5)) (expand-region (0 10 0))) "Add/Change/Delete pairs based on `expand-region'" tar ((:url . "https://github.com/cute-jumper/embrace.el") (:commit . "dd5da196e5bcc5e6d87e1937eca0c21da4334ef2") (:revdesc . "dd5da196e5bc") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (emidje . [(1 1 0) ((emacs (25)) (cider (0 17 0)) (seq (2 16))) "Test runner and report viewer for Midje" tar ((:url . "https://github.com/nubank/emidje") (:commit . "e8577698bade8a8ea6bf394ab9a441e982058f19") (:revdesc . "e8577698bade") (:keywords "tools") (:authors ("Alan Ghelardi" . "alan.ghelardi@nubank.com.br")) (:maintainers ("Alan Ghelardi" . "alan.ghelardi@nubank.com.br")) (:maintainer "Alan Ghelardi" . "alan.ghelardi@nubank.com.br"))])
 (emmet-mode . [(1 0 8) nil "Unofficial Emmet's support for emacs" tar ((:url . "https://github.com/smihica/emmet-mode") (:commit . "bf76d717c60f33d223cdac35513105e9f9244885") (:revdesc . "bf76d717c60f") (:keywords "convenience") (:authors ("Shin Aoyama" . "smihica@gmail.com")) (:maintainers ("Shin Aoyama" . "smihica@gmail.com")) (:maintainer "Shin Aoyama" . "smihica@gmail.com"))])
 (emms . [(20 2) ((cl-lib (0 5)) (nadvice (0 3)) (seq (0))) "The Emacs Multimedia System" tar ((:url . "https://git.savannah.gnu.org/git/emms.git") (:commit . "b7e4a4cdbdb7e55300882d6c9a4f71048ec298d5") (:revdesc . "20.2-0-gb7e4a4cdbdb7") (:keywords "emms" "mp3" "ogg" "flac" "music" "mpeg" "video" "multimedia") (:authors ("Jorgen Schäfer" . "forcer@forcix.cx")) (:maintainers ("Yoni Rabkin" . "yrk@gnu.org")) (:maintainer "Yoni Rabkin" . "yrk@gnu.org"))])
 (emms-mode-line-cycle . [(0 2 5) ((emacs (24)) (emms (4 0))) "Display the emms mode line as a ticker" tar ((:url . "https://github.com/momomo5717/emms-mode-line-cycle") (:commit . "2c2f395e484a1d345050ddd61ff5fab71a92a6bc") (:revdesc . "0.2.5-0-g2c2f395e484a") (:keywords "emms" "mode-line"))])
 (emms-player-simple-mpv . [(0 4 0) ((emacs (24)) (cl-lib (0 5)) (emms (4 0))) "An extension of emms-player-simple.el for mpv JSON IPC" tar ((:url . "https://github.com/momomo5717/emms-player-simple-mpv") (:commit . "bcc056364df5f405716006a8b7bb90102a57f62f") (:revdesc . "v0.4.0-0-gbcc056364df5") (:keywords "emms" "mpv"))])
 (emms-player-spotify . [(0 1) ((emacs (26 1)) (compat (29 1)) (emms (18)) (s (1 13 0))) "Spotify player for EMMS" tar ((:url . "https://github.com/sarg/emms-spotify") (:commit . "3b1e8e5b5306173940d311191b13e2ace4d048b9") (:revdesc . "3b1e8e5b5306") (:authors ("Sergey Trofimov" . "sarg@sarg.org.ru")) (:maintainers ("Sergey Trofimov" . "sarg@sarg.org.ru")) (:maintainer "Sergey Trofimov" . "sarg@sarg.org.ru"))])
 (emms-state . [(0 2) ((emms (0))) "Display track description and playing time in the mode line" tar ((:url . "https://github.com/alezost/emms-state.el") (:commit . "77930300222333b71eafd495cc1fee3a3585eb23") (:revdesc . "779303002223") (:keywords "emms") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (emoji-cheat-sheet-plus . [(1 2 2) ((emacs (24)) (helm (1 6 4))) "Emoji-cheat-sheet for emacs" tar ((:url . "https://github.com/syl20bnr/emacs-emoji-cheat-sheet-plus") (:commit . "ffcc84d7060dfa000148e7f8be4fd6701593a74f") (:revdesc . "ffcc84d7060d") (:keywords "emacs" "emoji"))])
 (emoji-fontset . [(0 1 1) nil "Set font face for Emoji" tar ((:url . "https://github.com/zonuexe/emoji-fontset.el") (:commit . "e460c9a08e48ec4103e38a7a04acae20880149a9") (:revdesc . "e460c9a08e48") (:keywords "emoji" "font" "config") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (emoji-github . [(0 2 3) ((emacs (24 4)) (emojify (1 0)) (request (0 3 0))) "Display list of GitHub's emoji.  (cheat sheet)" tar ((:url . "https://github.com/jcs-elpa/emoji-github") (:commit . "d512c2babb412820945444c6daf309b470e2eb12") (:revdesc . "d512c2babb41") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (emojify . [(1 2) ((seq (1 11)) (ht (2 0)) (emacs (24 3))) "Display emojis in Emacs" tar ((:url . "https://github.com/iqbalansari/emacs-emojify") (:commit . "302d16e9bac72faf94984e0c48ecd0e4b8d66738") (:revdesc . "302d16e9bac7") (:keywords "multimedia" "convenience") (:authors ("Iqbal Ansari" . "iqbalansari02@yahoo.com")) (:maintainers ("Iqbal Ansari" . "iqbalansari02@yahoo.com")) (:maintainer "Iqbal Ansari" . "iqbalansari02@yahoo.com"))])
 (empv . [(4 5 0) ((emacs (28 1)) (s (1 13 0)) (compat (29 1 4 4))) "A multimedia player/manager, YouTube interface" tar ((:url . "https://github.com/isamert/empv.el") (:commit . "ccfe44bbfa79a2a4d2cab06b807d494d4e85d45b") (:revdesc . "ccfe44bbfa79") (:authors ("Isa Mert Gurbuz" . "isamertgurbuz@gmail.com")) (:maintainers ("Isa Mert Gurbuz" . "isamertgurbuz@gmail.com")) (:maintainer "Isa Mert Gurbuz" . "isamertgurbuz@gmail.com"))])
 (emr . [(0 4) ((s (1 3 1)) (dash (1 2 0)) (cl-lib (0 2)) (popup (0 5 0)) (emacs (24 1)) (list-utils (0 3 0)) (paredit (24 0 0)) (projectile (0 9 1)) (clang-format (0)) (iedit (0 97))) "Emacs refactoring system" tar ((:url . "https://github.com/Wilfred/emacs-refactor") (:commit . "2b3606252d2dd29898d0ef702918eb13081b6c1a") (:revdesc . "2b3606252d2d") (:keywords "tools" "convenience" "refactoring") (:authors ("Chris Barrett" . "chris.d.barrett@me.com")) (:maintainers ("Chris Barrett" . "chris.d.barrett@me.com")) (:maintainer "Chris Barrett" . "chris.d.barrett@me.com"))])
 (enclose . [(0 0 2) nil "Enclose cursor within punctuation pairs" tar ((:url . "https://github.com/rejeep/enclose.el") (:commit . "8c3a9c050cb76f478049674069c1dac1b2a3ad81") (:revdesc . "8c3a9c050cb7") (:keywords "speed" "convenience") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (encrypt-region . [(1 0) ((emacs (26 1))) "Encrypts and decrypts regions" tar ((:url . "https://github.com/cgshep/encrypt-region") (:commit . "76d4e621c188467bfb9608ab9662215e7352cd77") (:revdesc . "v1.0-0-g76d4e621c188") (:keywords "tools" "convenience") (:authors ("Carlton Shepherd" . "carlton@linux.com")) (:maintainers ("Carlton Shepherd" . "carlton@linux.com")) (:maintainer "Carlton Shepherd" . "carlton@linux.com"))])
 (engine-mode . [(2 2 4) ((cl-lib (0 5))) "Define and query search engines" tar ((:url . "https://github.com/hrs/engine-mode") (:commit . "67b68c1a2bff48bad2cc4722598da0f36e3866a9") (:revdesc . "67b68c1a2bff") (:authors ("Harry R. Schwartz" . "hello@harryrschwartz.com")) (:maintainers ("Harry R. Schwartz" . "hello@harryrschwartz.com")) (:maintainer "Harry R. Schwartz" . "hello@harryrschwartz.com"))])
 (enh-ruby-mode . [(20191111) ((emacs (24 3))) "Major mode for editing Ruby files" tar ((:url . "https://github.com/zenspider/enhanced-ruby-mode") (:commit . "4e058f36a455c90816fd9615a4a7a63a8c8b8cc8") (:revdesc . "4e058f36a455") (:keywords "languages" "elisp" "ruby"))])
 (enhanced-evil-paredit . [(1 0 1) ((emacs (24 1)) (evil (1 0 9)) (paredit (25 -2))) "Paredit support for evil keybindings" tar ((:url . "https://github.com/jamescherti/enhanced-evil-paredit.el") (:commit . "3e43209270bcce1141a13bbffd7b3b372cc3d31c") (:revdesc . "1.0.1-0-g3e43209270bc") (:keywords "convenience"))])
 (enlight . [(0 3) ((emacs (27 1)) (compat (29 1 4 1))) "Highly customizable startup screen" tar ((:url . "https://github.com/ichernyshovvv/enlight") (:commit . "5194c1a4f4c245a1ef544205d723381fac30414b") (:revdesc . "5194c1a4f4c2") (:keywords "startup" "screen" "tools" "dashboard") (:authors ("Ilya Chernyshov" . "ichernyshovvv@gmail.com")) (:maintainers ("Ilya Chernyshov" . "ichernyshovvv@gmail.com")) (:maintainer "Ilya Chernyshov" . "ichernyshovvv@gmail.com"))])
 (enlive . [(0 0 1) nil "Query html document with css selectors" tar ((:url . "https://github.com/zweifisch/enlive") (:commit . "60facaf8bc48b660d209551c0ce4d17e5c907ab8") (:revdesc . "60facaf8bc48") (:keywords "css" "selector" "query") (:authors ("ZHOU Feng" . "zf.pascal@gmail.com")) (:maintainers ("ZHOU Feng" . "zf.pascal@gmail.com")) (:maintainer "ZHOU Feng" . "zf.pascal@gmail.com"))])
 (enotify . [(0 1 3) nil "[No description available]" tar ((:url . "https://github.com/laynor/enotify") (:commit . "75c84b53703e5d52cb18acc9251b87ffa400f388") (:revdesc . "75c84b53703e"))])
 (environ . [(0 0 1) ((emacs (24 1)) (dash (2 17 0)) (f (0 20 0)) (s (1 12 0))) "API for environment variables and env files" tar ((:url . "https://github.com/cfclrk/environ") (:commit . "03e367b8887713be2662ede872bb9bb300bd7bbb") (:revdesc . "03e367b88877") (:keywords "environment") (:authors ("Chris Clark" . "cfclrk@gmail.com")) (:maintainers ("Chris Clark" . "cfclrk@gmail.com")) (:maintainer "Chris Clark" . "cfclrk@gmail.com"))])
 (envrc . [(0 12) ((emacs (26 1)) (inheritenv (0 1))) "Support for `direnv' that operates buffer-locally" tar ((:url . "https://github.com/purcell/envrc") (:commit . "2316e004c1574234fe4d991bd75a254cdeaa83ae") (:revdesc . "2316e004c157") (:keywords "processes" "tools") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (eopengrok . [(1 7 42) ((s (1 9 0)) (dash (2 10 0)) (magit (2 1 0)) (cl-lib (0 5))) "Opengrok interface for emacs" tar ((:url . "https://github.com/youngker/eopengrok.el") (:commit . "83b1695774f8bdc322e528ade9dffe9b2e93f32a") (:revdesc . "83b1695774f8") (:keywords "tools") (:authors ("Youngjoo Lee" . "youngker@gmail.com")) (:maintainers ("Youngjoo Lee" . "youngker@gmail.com")) (:maintainer "Youngjoo Lee" . "youngker@gmail.com"))])
 (epc . [(0 1 1) ((concurrent (0 3 1)) (ctable (0 1 2))) "A RPC stack for the Emacs Lisp" tar ((:url . "https://github.com/kiwanami/emacs-epc") (:commit . "16e975efad63093a1f1f7b59f8fda5a3cf34f2a0") (:revdesc . "0.1.1-0-g16e975efad63") (:keywords "lisp" "rpc") (:authors ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatkiwanami.net"))])
 (eping . [(0 1 1) ((emacs (25 1)) (dash (2 12 0)) (s (1 12 0))) "Ping websites to check internet connectivity" tar ((:url . "https://github.com/sean-hut/eping") (:commit . "0d5d80dd0c76f0d46a3565d940a2b0ed955dfd0a") (:revdesc . "0.1.1-0-g0d5d80dd0c76") (:keywords "comm" "processes" "terminals" "unix") (:authors ("Sean Hutchings" . "seanhut@yandex.com")) (:maintainers ("Sean Hutchings" . "seanhut@yandex.com")) (:maintainer "Sean Hutchings" . "seanhut@yandex.com"))])
 (epkg . [(4 0 2) ((emacs (26 1)) (compat (30 0 0 0)) (closql (2 0 0)) (emacsql (4 0 2)) (llama (0 3 1))) "Browse the Emacsmirror package database" tar ((:url . "https://github.com/emacscollective/epkg") (:commit . "f568083014664cc63eb942ee04a925634527793e") (:revdesc . "v4.0.2-0-gf56808301466") (:keywords "tools") (:authors ("Jonas Bernoulli" . "emacs.epkg@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.epkg@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.epkg@jonas.bernoulli.dev"))])
 (epkg-marginalia . [(1 0 0) ((emacs (27 1)) (compat (30 0 0 0)) (epkg (4 0 0)) (marginalia (1 7))) "Show Epkg information in completion annotations" tar ((:url . "https://github.com/emacscollective/epkg-marginalia") (:commit . "58d5f2b6b6f68a22510cf4301dadf2ec4b5ffcaa") (:revdesc . "v1.0.0-0-g58d5f2b6b6f6") (:keywords "tools") (:authors ("Jonas Bernoulli" . "emacs.epkg-marginalia@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.epkg-marginalia@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.epkg-marginalia@jonas.bernoulli.dev"))])
 (epl . [(0 9) ((cl-lib (0 3))) "Emacs Package Library" tar ((:url . "https://github.com/cask/epl") (:commit . "fd906d3f92d58ecf24169055744409886ceb06ce") (:revdesc . "0.9-0-gfd906d3f92d5") (:keywords "convenience") (:authors ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com") ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (epm . [(0 1) ((emacs (24 3)) (epl (0 8))) "Emacs Package Manager" tar ((:url . "https://github.com/xuchunyang/epm") (:commit . "6375ddbf93c5f25647f6ebb25b54045b3c93a5be") (:revdesc . "6375ddbf93c5") (:authors ("Chunyang Xu" . "xuchunyang.me@gmail.com")) (:maintainers ("Chunyang Xu" . "xuchunyang.me@gmail.com")) (:maintainer "Chunyang Xu" . "xuchunyang.me@gmail.com"))])
 (erc-crypt . [(2 1) ((cl-lib (0 5))) "Symmetric Encryption for ERC" tar ((:url . "https://github.com/atomontage/erc-crypt") (:commit . "6d158b39ea2833b753858153eb110da9b8a40fc4") (:revdesc . "6d158b39ea28") (:keywords "comm") (:authors ("xristos" . "xristos@sdf.org")) (:maintainers ("xristos" . "xristos@sdf.org")) (:maintainer "xristos" . "xristos@sdf.org"))])
 (erc-hl-nicks . [(1 3 4) nil "ERC nick highlighter that ignores uniquifying chars when colorizing" tar ((:url . "https://github.com/leathekd/erc-hl-nicks") (:commit . "a67fe361c8f2aa20fc235447fbb898f424b51439") (:revdesc . "a67fe361c8f2") (:authors ("David Leatherman" . "leathekd@gmail.com")) (:maintainers ("David Leatherman" . "leathekd@gmail.com")) (:maintainer "David Leatherman" . "leathekd@gmail.com"))])
 (erc-scrolltoplace . [(0 1 0) ((emacs (24 0)) (switch-buffer-functions (0 0 1))) "An Erc module to scrolltobottom better with keep-place" tar ((:url . "https://gitlab.com/jgkamat/erc-scrolltoplace") (:commit . "7539654e4a72edcc5bba07a101961e5bf0a9d449") (:revdesc . "0.1.0-0-g7539654e4a72") (:keywords "erc" "module" "comm" "scrolltobottom" "keep-place") (:authors ("Jay Kamat" . "jaygkamat@gmail.com")) (:maintainers ("Jay Kamat" . "jaygkamat@gmail.com")) (:maintainer "Jay Kamat" . "jaygkamat@gmail.com"))])
 (erc-twitch . [(1 1) ((json (1 3)) (erc (5 0))) "Support for Twitch emotes for ERC" tar ((:url . "https://github.com/vibhavp/erc-twitch") (:commit . "6938191c787d66fef4c13674e0a98a9d64eff364") (:revdesc . "6938191c787d") (:keywords "twitch" "erc" "emotes") (:authors ("Vibhav Pant" . "vibhavp@gmail.com")) (:maintainers ("Vibhav Pant" . "vibhavp@gmail.com")) (:maintainer "Vibhav Pant" . "vibhavp@gmail.com"))])
 (erc-youtube . [(0 1) nil "Show info about a YouTube URL in an ERC buffer" tar ((:url . "https://github.com/kidd/erc-youtube.el") (:commit . "97054ba8475b442e2aa81e5a291f668b7f28697f") (:revdesc . "97054ba8475b") (:keywords "multimedia") (:authors ("Raimon Grau Cuscó" . "raimonster@gmail.com")) (:maintainers ("Raimon Grau Cuscó" . "raimonster@gmail.com")) (:maintainer "Raimon Grau Cuscó" . "raimonster@gmail.com"))])
 (ercn . [(1 1 1) nil "Flexible ERC notifications" tar ((:url . "https://github.com/leathekd/ercn") (:commit . "73b00dadf83b97dd9edd8381a4b27f583c08b7f6") (:revdesc . "73b00dadf83b") (:authors ("David Leatherman" . "leathekd@gmail.com")) (:maintainers ("David Leatherman" . "leathekd@gmail.com")) (:maintainer "David Leatherman" . "leathekd@gmail.com"))])
 (eredis . [(0 9 6) ((dash (0))) "Eredis, a Redis client in emacs lisp" tar ((:url . "https://github.com/justinhj/eredis") (:commit . "cfbfc25832f6fbc507bdd56b02e3a0b851a3c368") (:revdesc . "cfbfc25832f6") (:keywords "redis" "api" "tools" "org") (:authors ("Justin Heyes-Jones" . "justinhj@gmail.com")) (:maintainers ("Justin Heyes-Jones" . "justinhj@gmail.com")) (:maintainer "Justin Heyes-Jones" . "justinhj@gmail.com"))])
 (erefactor . [(0 7 0) ((cl-lib (0 3))) "Emacs-Lisp refactoring utilities" tar ((:url . "https://github.com/mhayashi1120/Emacs-erefactor") (:commit . "fde3fd42c815c76e8015f69518a92f6bfcfde990") (:revdesc . "fde3fd42c815") (:keywords "extensions" "tools" "maint") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (ergoemacs-mode . [(5 22 2 23) ((emacs (24 1)) (cl-lib (0 5))) "Emacs mode based on common modern interface and ergonomics" tar ((:url . "https://github.com/ergoemacs/ergoemacs-mode") (:commit . "757475874a840f99b20c56182c7199257b6ae477") (:revdesc . "757475874a84") (:keywords "convenience") (:authors ("Xah Lee" . "xah@xahlee.org") ("David Capello" . "davidcapello@gmail.com") ("Matthew L. Fidler" . "matthew.fidler@gmail.com") ("Kim F. Storm -- CUA approach for C-x and C-c" . "storm@cua.dk")) (:maintainers ("Matthew L. Fidler" . "matthew.fidler@gmail.com")) (:maintainer "Matthew L. Fidler" . "matthew.fidler@gmail.com"))])
 (eri . [(2 7 0 1) nil "Enhanced relative indentation (eri)" tar ((:url . "https://github.com/agda/agda") (:commit . "a6fc20c27ae953149b53a8997ba4a1c8b17d628a") (:revdesc . "v2.7.0.1-0-ga6fc20c27ae9"))])
 (erk . [(0 5 3) ((emacs (28 1)) (auto-compile (1 2 0)) (dash (2 18 0)) (license-templates (0 1 3))) "Elisp (GitHub) Repository Kit" tar ((:url . "https://github.com/positron-solutions/elisp-repo-kit") (:commit . "49611de3ed000b5872c63270dd66efa0e6bf76c9") (:revdesc . "49611de3ed00") (:keywords "convenience" "programming") (:authors ("Positron Solutions" . "contact@positron.solutions")) (:maintainers ("Positron Solutions" . "contact@positron.solutions")) (:maintainer "Positron Solutions" . "contact@positron.solutions"))])
 (erlang . [(27 2) ((emacs (24 1))) "Erlang major mode" tar ((:url . "https://github.com/erlang/otp") (:commit . "6bf99d64a0df3feceb25c166c3a3cb3f80594f59") (:revdesc . "OTP-27.2-0-g6bf99d64a0df") (:keywords "erlang" "languages" "processes"))])
 (erlstack-mode . [(0 1 1) ((emacs (25 1)) (dash (2 12 0))) "Minor mode for analysing Erlang stacktraces" tar ((:url . "https://github.com/k32/erlstack-mode") (:commit . "a4a30f74e48894ccfdefc073a9e1b005ee632017") (:revdesc . "a4a30f74e488") (:keywords "tools" "erlang"))])
 (eros-inspector . [(1 0 1) ((emacs (24 4)) (eros (0 1 0)) (inspector (0 38))) "Glue between eros and inspector" tar ((:url . "https://github.com/port19x/eros-inspector") (:commit . "c1625f553ec944883867f0975bff08f10dd3086f") (:revdesc . "c1625f553ec9") (:keywords "convenience" "lisp" "tool" "debugging" "development") (:authors ("port19" . "port19@port19.xyz")) (:maintainers ("port19" . "port19@port19.xyz")) (:maintainer "port19" . "port19@port19.xyz"))])
 (ert-async . [(0 1 2) nil "Async support for ERT" tar ((:url . "https://github.com/rejeep/ert-async.el") (:commit . "f64a7ed5b0d2900c9a3d8cc33294bf8a79bc8526") (:revdesc . "f64a7ed5b0d2") (:keywords "test") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (ert-junit . [(0 4 1) ((ert (0)) (emacs (23 4))) "JUnit XML reports from ert results" tar ((:url . "https://bitbucket.org/olanilsson/ert-junit") (:commit . "65f91c35b088b87943dbbbe7e1ce354bc9bc0992") (:revdesc . "v0.4.1-0-g65f91c35b088") (:keywords "tools" "test" "unittest" "ert") (:authors ("Ola Nilsson" . "ola.nilsson@gmail.com")) (:maintainers ("Ola Nilsson" . "ola.nilsson@gmail.com")) (:maintainer "Ola Nilsson" . "ola.nilsson@gmail.com"))])
 (ert-results . [(1 0 6) ((emacs (24 1))) "Filter ERT test results display" tar ((:url . "https://github.com/rswgnu/ert-results") (:commit . "b89ffb3d719e24bb29a9d57cf189f5962caafdd4") (:revdesc . "b89ffb3d719e") (:keywords "lisp" "maint" "tools") (:authors ("Robert Weiner" . "rsw@gnu.org")) (:maintainers ("Robert Weiner" . "rsw@gnu.org")) (:maintainer "Robert Weiner" . "rsw@gnu.org"))])
 (ert-runner . [(0 8 0) ((s (1 6 1)) (dash (1 8 0)) (f (0 10 0)) (commander (0 2 0)) (ansi (0 1 0)) (shut-up (0 1 0))) "Opinionated Ert testing workflow" tar ((:url . "https://github.com/rejeep/ert-runner.el") (:commit . "1829f05c46b0baaae160d900f89c8881f4fcdbcc") (:revdesc . "1829f05c46b0") (:keywords "test") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (es-lib . [(0 4) ((cl-lib (0 3))) "A collection of emacs utilities" tar ((:url . "https://github.com/sabof/es-lib") (:commit . "753b27363e39c10edc9e4e452bdbbbe4d190df4a") (:revdesc . "753b27363e39"))])
 (es-mode . [(4 3 0) ((dash (2 11 0)) (cl-lib (0 5)) (spark (1 0))) "A major mode for editing Elasticsearch queries" tar ((:url . "https://github.com/dakrone/es-mode") (:commit . "996730ebce57d810d2c275c7fadb11c2b1134dea") (:revdesc . "4.3.0-0-g996730ebce57") (:keywords "elasticsearch") (:authors ("Lee Hinman" . "lee@writequit.org")) (:maintainers ("Lee Hinman" . "lee@writequit.org")) (:maintainer "Lee Hinman" . "lee@writequit.org"))])
 (es-windows . [(0 3) ((cl-lib (0 3)) (emacs (24))) "Window-management utilities" tar ((:url . "https://github.com/sabof/es-windows") (:commit . "7ebe6c6e0831373847d7adbedeaa2e506b54b2af") (:revdesc . "7ebe6c6e0831"))])
 (esa . [(0 8 13) ((cl-lib (0 3))) "Emacs integration for esa.io" tar ((:url . "https://github.com/nabinno/esa.el") (:commit . "0f69f9f45ac15018c48853509ac38e68286f9c0e") (:revdesc . "0f69f9f45ac1") (:keywords "tools" "esa") (:authors ("Nab Inno" . "nab@blahfe.com")) (:maintainers ("Nab Inno" . "nab@blahfe.com")) (:maintainer "Nab Inno" . "nab@blahfe.com"))])
 (esh-autosuggest . [(2 0 1) ((emacs (24 4)) (company (0 9 4))) "History autosuggestions for eshell" tar ((:url . "https://github.com/dieggsy/esh-autosuggest") (:commit . "a6d5eb3337d010bd2a2d677ff304cd53adc291a0") (:revdesc . "a6d5eb3337d0") (:keywords "completion" "company" "matching" "convenience" "abbrev") (:authors ("Diego A. Mundo" . "diegoamundo@gmail.com")) (:maintainers ("Diego A. Mundo" . "diegoamundo@gmail.com")) (:maintainer "Diego A. Mundo" . "diegoamundo@gmail.com"))])
 (esh-help . [(1 0 1) ((dash (1 4 0))) "Add some help functions and support for Eshell" tar ((:url . "https://github.com/tom-tan/esh-help") (:commit . "8a8a9d4d9852f8bd96da3b94e95ff57097ac8ec6") (:revdesc . "v1.0.1-0-g8a8a9d4d9852") (:keywords "eshell" "extensions") (:authors ("Tomoya Tanjo" . "ttanjo@gmail.com")) (:maintainers ("Tomoya Tanjo" . "ttanjo@gmail.com")) (:maintainer "Tomoya Tanjo" . "ttanjo@gmail.com"))])
 (eshell-autojump . [(0 2) nil "Autojump command for Eshell" tar ((:url . "https://github.com/coldnew/eshell-autojump") (:commit . "c0866d7f2789831665ebb01b812bae89d085bff0") (:revdesc . "c0866d7f2789") (:maintainers ("Lee" . "coldnew.tw@gmail.com")) (:maintainer "Lee" . "coldnew.tw@gmail.com"))])
 (eshell-bookmark . [(2 0 0) ((emacs (24 3))) "Integrate bookmarks with eshell" tar ((:url . "https://github.com/Fuco1/eshell-bookmark") (:commit . "deda4b848b2fb979dbe73ead2cb866610e3596ed") (:revdesc . "deda4b848b2f") (:keywords "convenience" "files") (:authors ("Matúš Goljer" . "matus.goljer@gmail.com")) (:maintainers ("Matúš Goljer" . "matus.goljer@gmail.com")) (:maintainer "Matúš Goljer" . "matus.goljer@gmail.com"))])
 (eshell-did-you-mean . [(0 2) ((emacs (24 1)) (cl-lib (0 5))) "Command not found (\"did you mean…\" feature) in Eshell" tar ((:url . "https://github.com/xuchunyang/eshell-did-you-mean") (:commit . "80cd8c4b186a2fb29621cf634bcf2bcd914f1e3d") (:revdesc . "80cd8c4b186a") (:keywords "eshell") (:authors ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainers ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainer "Chunyang Xu" . "xuchunyang56@gmail.com"))])
 (eshell-git-prompt . [(0 1 3) ((emacs (24 1)) (cl-lib (0 5)) (dash (2 11 0))) "Some Eshell prompt for Git users" tar ((:url . "https://github.com/xuchunyang/eshell-git-prompt") (:commit . "dfcf9cd93add6763e2c46603b0323274d4c22906") (:revdesc . "dfcf9cd93add") (:keywords "eshell" "git") (:authors ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainers ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainer "Chunyang Xu" . "mail@xuchunyang.me"))])
 (eshell-info-banner . [(0 8 8) ((emacs (25 1)) (s (1))) "System information as your Eshell banner" tar ((:url . "https://github.com/Phundrak/eshell-info-banner.el") (:commit . "27b0be266beaedd594bf0022582567454107af5f") (:revdesc . "27b0be266bea") (:authors ("Lucien Cartier-Tilet" . "lucien@phundrak.com")) (:maintainers ("Lucien Cartier-Tilet" . "lucien@phundrak.com")) (:maintainer "Lucien Cartier-Tilet" . "lucien@phundrak.com"))])
 (eshell-outline . [(2020 8 31) ((emacs (25 1))) "Enhanced outline-mode for Eshell" tar ((:commit . "45311744f38dea4f750b382068c0b720568449b1") (:authors ("Jamie Beardslee" . "jdb@jamzattack.xyz")) (:maintainers ("Jamie Beardslee" . "jdb@jamzattack.xyz")) (:maintainer "Jamie Beardslee" . "jdb@jamzattack.xyz") (:keywords "unix" "eshell" "outline" "convenience") (:url . "https://git.jamzattack.xyz/eshell-outline"))])
 (eshell-prompt-extras . [(1 1) ((emacs (25))) "Display extra information for your eshell prompt" tar ((:url . "https://github.com/zwild/eshell-prompt-extras") (:commit . "f490ab511a36166f09b97811495b09d72c9d37f9") (:revdesc . "f490ab511a36") (:keywords "eshell" "prompt") (:authors ("zwild" . "judezhao@outlook.com")) (:maintainers ("Xu Chunyang" . "xuchunyang56@gmail.com")) (:maintainer "Xu Chunyang" . "xuchunyang56@gmail.com"))])
 (eshell-syntax-highlighting . [(0 6) ((emacs (25 1))) "Highlight eshell commands" tar ((:url . "https://github.com/akreisher/eshell-syntax-highlighting") (:commit . "c43f83983dad5f89d842450b97239bb22b5236a7") (:revdesc . "c43f83983dad") (:keywords "convenience") (:authors ("Alex Kreisher" . "akreisher18@gmail.com")) (:maintainers ("Alex Kreisher" . "akreisher18@gmail.com")) (:maintainer "Alex Kreisher" . "akreisher18@gmail.com"))])
 (eshell-up . [(0 0 4) ((emacs (24))) "Quickly go to a specific parent directory in eshell" tar ((:url . "https://github.com/peterwvj/eshell-up") (:commit . "1999afaa509204b780db44e99ac9648fe7d92d32") (:revdesc . "1999afaa5092") (:keywords "eshell") (:authors ("Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com")) (:maintainers ("Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com")) (:maintainer "Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com"))])
 (eshell-z . [(0 4) ((cl-lib (0 5))) "Cd to frequent directory in eshell" tar ((:url . "https://github.com/xuchunyang/eshell-z") (:commit . "337cb241e17bd472bd3677ff166a0800f684213c") (:revdesc . "337cb241e17b") (:keywords "convenience") (:authors ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainers ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainer "Chunyang Xu" . "mail@xuchunyang.me"))])
 (eslint-disable-rule . [(0 3 0) ((emacs (27 2))) "Commands to add JS comments disabling eslint rules" tar ((:url . "https://github.com/DamienCassou/eslint-disable-rule") (:commit . "642ead124172dd470e8ab59fd0645597dc9d8e66") (:revdesc . "642ead124172"))])
 (eslint-fix . [(1 0 0) nil "Fix JavaScript files using ESLint" tar ((:url . "https://github.com/codesuki/eslint-fix") (:commit . "be90d1e78b1dfd43b6b3b1c06868539e2ac27d3a") (:revdesc . "1.0.0-0-gbe90d1e78b1d") (:keywords "javascript" "eslint" "lint" "formatting" "style") (:authors ("Neri Marschik" . "marschik_neri@cyberagent.co.jp")) (:maintainers ("Neri Marschik" . "marschik_neri@cyberagent.co.jp")) (:maintainer "Neri Marschik" . "marschik_neri@cyberagent.co.jp"))])
 (eslintd-fix . [(1 2 0) ((dash (2 12 0)) (emacs (26 3))) "Use eslint_d to automatically fix js files" tar ((:url . "https://github.com/aaronjensen/eslintd-fix") (:commit . "5488db4436fc312386fdb123289d7fc5f099702b") (:revdesc . "v1.2.0-0-g5488db4436fc") (:authors ("Aaron Jensen" . "aaronjensen@gmail.com")) (:maintainers ("Aaron Jensen" . "aaronjensen@gmail.com")) (:maintainer "Aaron Jensen" . "aaronjensen@gmail.com"))])
 (espuds . [(0 3 3) ((s (1 7 0)) (dash (2 2 0)) (f (0 12 1))) "Ecukes step definitions" tar ((:url . "https://github.com/ecukes/espuds") (:commit . "1405972873339e056517217136de4ad3202d744a") (:revdesc . "140597287333") (:keywords "test") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (ess . [(24 1 1) ((emacs (25 1))) "Emacs Speaks Statistics" tar ((:url . "https://github.com/emacs-ess/ESS") (:commit . "ab2faeca1ba6c456333312c58f58ef9e5ef4aa8b") (:revdesc . "v24.01.1-0-gab2faeca1ba6") (:authors ("David Smith" . "dsmith@stats.adelaide.edu.au") ("A.J. Rossini" . "blindglobe@gmail.com") ("Richard M. Heiberger" . "rmh@temple.edu") ("Kurt Hornik" . "Kurt.Hornik@R-project.org") ("Martin Maechler" . "maechler@stat.math.ethz.ch") ("Rodney A. Sparapani" . "rsparapa@mcw.edu") ("Stephen Eglen" . "stephen@gnu.org") ("Sebastian P. Luque" . "spluque@gmail.com") ("Henning Redestig" . "henning.red@googlemail.com") ("Vitalie Spinu" . "spinuvit@gmail.com") ("Lionel Henry" . "lionel.hry@gmail.com") ("J. Alexander Branham" . "alex.branham@gmail.com")) (:maintainers ("ESS Core Team" . "ESS-core@r-project.org")) (:maintainer "ESS Core Team" . "ESS-core@r-project.org"))])
 (ess-R-data-view . [(1 0) ((ctable (20130313 1743)) (popup (20130324 1305)) (ess (20130225 1754))) "Data viewer for GNU R" tar ((:url . "https://github.com/myuhe/ess-R-data-view.el") (:commit . "d6e98d3ae1e2a2ea39a56eebcdb73e99d29562e9") (:revdesc . "d6e98d3ae1e2") (:keywords "convenience") (:authors ("myuhe" . "yuhei.maeda_at_gmail.com")))])
 (ess-r-insert-obj . [(1 0) ((emacs (26 1)) (ess (18 10 1))) "ESS complete insert value" tar ((:url . "https://github.com/ShuguangSun/ess-r-insert-obj") (:commit . "a3b9339a066ecf0b4e13b123c2034c2ad0235a6a") (:revdesc . "a3b9339a066e") (:keywords "tools") (:authors ("Shuguang Sun" . "shuguang79@qq.com")) (:maintainers ("Shuguang Sun" . "shuguang79@qq.com")) (:maintainer "Shuguang Sun" . "shuguang79@qq.com"))])
 (ess-smart-equals . [(0 3 1) ((emacs (25 1)) (ess (18 10))) "Flexible, context-sensitive assignment key for R/S" tar ((:url . "https://github.com/genovese/ess-smart-equals") (:commit . "746cf9e78c3b86cbbf78d69c335a8a4ff3da79d6") (:revdesc . "v0.3.1-0-g746cf9e78c3b") (:keywords "r" "s" "ess" "convenience") (:authors ("Christopher R. Genovese" . "genovese@cmu.edu")) (:maintainers ("Christopher R. Genovese" . "genovese@cmu.edu")) (:maintainer "Christopher R. Genovese" . "genovese@cmu.edu"))])
 (ess-smart-underscore . [(0 81) ((ess (0))) "Ess Smart Underscore" tar ((:url . "https://github.com/mattfidler/ess-smart-underscore.el") (:commit . "ed4b37e8976124a182196a721068a8e334b6aa97") (:revdesc . "ed4b37e89761") (:keywords "ess" "underscore"))])
 (ess-view-data . [(1 4) ((emacs (26 1)) (ess (18 10 1)) (csv-mode (1 12))) "View Data" tar ((:url . "https://github.com/ShuguangSun/ess-view-data") (:commit . "fddf070b51dbcbf7fa060a9998e676e8d0c15e1d") (:revdesc . "fddf070b51db") (:keywords "tools") (:authors ("Shuguang Sun" . "shuguang79@qq.com")) (:maintainers ("Shuguang Sun" . "shuguang79@qq.com")) (:maintainer "Shuguang Sun" . "shuguang79@qq.com"))])
 (esup . [(0 7 1) ((cl-lib (0 5)) (emacs (25))) "The Emacs StartUp Profiler (ESUP)" tar ((:url . "https://github.com/jschaf/esup") (:commit . "49e05d4f96adfbf71e608a78d23bbf148a8a7fc0") (:revdesc . "v0.7.1-0-g49e05d4f96ad") (:keywords "convenience" "processes") (:authors ("Joe Schafer" . "joe@jschaf.com")) (:maintainers ("Serghei Iakovlev" . "egrep@protonmail.ch")) (:maintainer "Serghei Iakovlev" . "egrep@protonmail.ch"))])
 (esxml . [(0 3 7) ((kv (0 0 5)) (cl-lib (0 5))) "Library for working with xml via esxml and sxml" tar ((:url . "https://github.com/tali713/esxml") (:commit . "9f96449f6059cb75491dc812ddeb1b6200ec6740") (:revdesc . "9f96449f6059") (:keywords "tools" "lisp" "comm") (:authors ("Evan Izaksonas-Smith" . "izak0002atumndotedu")))])
 (etc-sudoers-mode . [(1 1 1) ((sudo-edit (0)) (with-editor (0))) "Edit Sudo security policies" tar ((:url . "https://gitlab.com/mavit/etc-sudoers-mode") (:commit . "133f342e7a249ed4b3e3983e6d8bf541bae05c4b") (:revdesc . "133f342e7a24") (:keywords "languages") (:authors ("Peter Oliver" . "git@mavit.org.uk")) (:maintainers ("Peter Oliver" . "git@mavit.org.uk")) (:maintainer "Peter Oliver" . "git@mavit.org.uk"))])
 (etd . [(2 1 2) ((emacs (24 4))) "Examples to Tests and Docs" tar ((:url . "https://github.com/emacsfodder/etd") (:commit . "65f713935c9d2598f6fa4674bf2bdac2169005a9") (:revdesc . "65f713935c9d") (:keywords "lisp" "tools" "extensions") (:authors ("Jason M23" . "jasonm23@gmail.com")) (:maintainers ("Jason M23" . "jasonm23@gmail.com")) (:maintainer "Jason M23" . "jasonm23@gmail.com"))])
 (eterm-256color . [(0 3 13) ((emacs (24 4)) (xterm-color (1 7)) (f (0 19 0))) "Customizable 256 colors for term" tar ((:url . "https://github.com/dieggsy/eterm-256color") (:commit . "dab96af559deb443c4c9c00e23389926e1607192") (:revdesc . "dab96af559de") (:keywords "faces") (:authors ("Diego A. Mundo" . "diegoamundo@gmail.com")) (:maintainers ("Diego A. Mundo" . "diegoamundo@gmail.com")) (:maintainer "Diego A. Mundo" . "diegoamundo@gmail.com"))])
 (ethan-wspace . [(0 7 1) nil "Whitespace customizations for emacs" tar ((:url . "https://github.com/glasserc/ethan-wspace") (:commit . "e055ee6730c0b03525d32e67511ef6c51e4c29e4") (:revdesc . "e055ee6730c0") (:keywords "whitespace" "tab" "newline" "trailing" "clean") (:authors ("Ethan Glasser-Camp" . "ethan@betacantrips.com")) (:maintainers ("Ethan Glasser-Camp" . "ethan@betacantrips.com")) (:maintainer "Ethan Glasser-Camp" . "ethan@betacantrips.com"))])
 (eval-in-repl . [(0 9 7) ((dash (0 0 0)) (paredit (0 0 0)) (ace-window (0 0 0))) "Consistent ESS-like eval interface for various REPLs" tar ((:url . "https://github.com/kaz-yos/eval-in-repl") (:commit . "c8e5f31a2476c922857d921e367b6a2320ce5a6f") (:revdesc . "c8e5f31a2476") (:keywords "tools" "convenience") (:authors ("Kazuki YOSHIDA" . "kazukiyoshida@mail.harvard.edu")) (:maintainers ("Kazuki YOSHIDA" . "kazukiyoshida@mail.harvard.edu")) (:maintainer "Kazuki YOSHIDA" . "kazukiyoshida@mail.harvard.edu"))])
 (eval-sexp-fu . [(0 6 0) ((cl-lib (0))) "Tiny functionality enhancements for evaluating sexps" tar ((:url . "https://github.com/hchbaw/eval-sexp-fu.el") (:commit . "36d2fe3bcf602e15ca10a7f487da103515ef391a") (:revdesc . "v0.6.0-0-g36d2fe3bcf60") (:keywords "lisp" "highlight" "convenience") (:authors ("Takeshi Banse" . "takebi@laafc.net")) (:maintainers ("Takeshi Banse" . "takebi@laafc.net")) (:maintainer "Takeshi Banse" . "takebi@laafc.net"))])
 (evalator . [(1 0 0) ((helm-core (1 9 1))) "Package for interactive transformation of data with helm" tar ((:url . "https://github.com/seanirby/evalator") (:commit . "edf3840f5aa025cf38d0c2677b2f88f59079409e") (:revdesc . "edf3840f5aa0") (:keywords "languages" "elisp" "helm") (:maintainers ("Sean Irby" . "sean.t.irby@gmail.com")) (:maintainer "Sean Irby" . "sean.t.irby@gmail.com"))])
 (evedel . [(0 4 16) ((emacs (29 1)) (gptel (0 9 0))) "Instructed LLM programmer/assistant" tar ((:url . "https://github.com/daedsidog/evedel") (:commit . "bea64bd0475d1c2a4a84b9533740ae03712d0d6f") (:revdesc . "bea64bd0475d") (:keywords "convenience" "tools") (:authors ("daedsidog" . "contact@daedsidog.com")) (:maintainers ("daedsidog" . "contact@daedsidog.com")) (:maintainer "daedsidog" . "contact@daedsidog.com"))])
 (evenok . [(0 11 1) ((emacs (28 1))) "Themes with perceptively evenly distributed colors" tar ((:url . "https://codeberg.org/mekeor/evenok") (:commit . "1cdd8f8d09473bc8fb1c5157bd3a2129883701bc") (:revdesc . "1cdd8f8d0947") (:keywords "faces" "theme") (:authors ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainers ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainer "Mekeor Melire" . "mekeor@posteo.de"))])
 (everlasting-scratch . [(0 1) ((emacs (25 1))) "The *scratch* that lasts forever" tar ((:url . "https://github.com/beacoder/everlasting-scratch") (:commit . "509cf24422d4047b110aac8ed077b52a8011cfe7") (:revdesc . "509cf24422d4") (:keywords "convenience" "tool") (:authors ("Huming Chen" . "chenhuming@gmail.com")) (:maintainers ("Huming Chen" . "chenhuming@gmail.com")) (:maintainer "Huming Chen" . "chenhuming@gmail.com"))])
 (evil . [(1 14 2) ((emacs (24 1)) (goto-chg (1 6)) (cl-lib (0 5))) "Extensible Vi layer for Emacs" tar ((:url . "https://github.com/emacs-evil/evil") (:commit . "162a94cbce4f2c09fa7dd6bd8ca56080cb0ab63b") (:revdesc . "162a94cbce4f") (:keywords "emulation" "vim") (:maintainers ("Tom Dalziel" . "tom.dalziel@gmail.com")) (:maintainer "Tom Dalziel" . "tom.dalziel@gmail.com"))])
 (evil-anzu . [(0 3) ((evil (1 0 0)) (anzu (0 46))) "Anzu for evil-mode" tar ((:url . "https://github.com/emacsorphanage/evil-anzu") (:commit . "64cc08a3546373f28cd7bfd76a3e93bd78efa251") (:revdesc . "64cc08a35463") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com") ("Fredrik Bergroth" . "fbergroth@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com") ("Fredrik Bergroth" . "fbergroth@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (evil-args . [(1 0) ((evil (1 0 8))) "Motions and text objects for delimited arguments in Evil" tar ((:url . "https://github.com/wcsmith/evil-args") (:commit . "2a88b4d19953a11227cc1e91973b92149116f44c") (:revdesc . "2a88b4d19953") (:keywords "evil" "vim-emulation") (:authors ("Connor Smith" . "wconnorsmith@gmail.com")) (:maintainers ("Connor Smith" . "wconnorsmith@gmail.com")) (:maintainer "Connor Smith" . "wconnorsmith@gmail.com"))])
 (evil-colemak-basics . [(2 2 1) ((emacs (24 3)) (evil (1 2 12)) (evil-snipe (2 0 3))) "Basic Colemak key bindings for evil-mode" tar ((:url . "https://github.com/wbolster/emacs-evil-colemak-basics") (:commit . "05c023740f3d95805533081894bfd87f06401af5") (:revdesc . "2.2.1-0-g05c023740f3d") (:keywords "convenience" "emulations" "colemak" "evil") (:authors ("Wouter Bolsterlee" . "wouter@bolsterl.ee")) (:maintainers ("Wouter Bolsterlee" . "wouter@bolsterl.ee")) (:maintainer "Wouter Bolsterlee" . "wouter@bolsterl.ee"))])
 (evil-collection . [(0 0 10) ((emacs (26 3)) (evil (1 2 13)) (annalist (1 0))) "A set of keybindings for Evil mode" tar ((:url . "https://github.com/emacs-evil/evil-collection") (:commit . "d0518fc1626f09a341d4b5a98c857087abfb1b0c") (:revdesc . "d0518fc1626f") (:keywords "evil" "tools") (:authors ("James Nguyen" . "james@jojojames.com")) (:maintainers ("James Nguyen" . "james@jojojames.com")) (:maintainer "James Nguyen" . "james@jojojames.com"))])
 (evil-commentary . [(2 2 0) ((evil (1 0 0))) "Comment stuff out. A port of vim-commentary" tar ((:url . "https://github.com/linktohack/evil-commentary") (:commit . "ca182e27156198db533bf6d48b7e5f6f54081397") (:revdesc . "ca182e271561") (:keywords "evil" "comment" "commentary" "evil-commentary") (:authors ("Quang Linh LE" . "linktohack@gmail.com")) (:maintainers ("Quang Linh LE" . "linktohack@gmail.com")) (:maintainer "Quang Linh LE" . "linktohack@gmail.com"))])
 (evil-embrace . [(0 1 1) ((emacs (24 4)) (embrace (0 1 0)) (evil-surround (0))) "Evil integration of embrace.el" tar ((:url . "https://github.com/cute-jumper/evil-embrace.el") (:commit . "4379adea032b25e359d01a36301b4a5afdd0d1b7") (:revdesc . "4379adea032b") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (evil-escape . [(3 16) ((emacs (24)) (evil (1 0 9)) (cl-lib (0 5))) "Escape from anything with a customizable key sequence" tar ((:url . "https://github.com/emacsorphanage/evil-escape") (:commit . "3c335a5709b1abb08687960038746b36add465f9") (:revdesc . "3c335a5709b1") (:keywords "convenience" "editing" "evil") (:authors ("Sylvain Benner" . "sylvain.benner@gmail.com")) (:maintainers ("Sylvain Benner" . "sylvain.benner@gmail.com")) (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com"))])
 (evil-iedit-state . [(1 3) ((evil (1 0 9)) (iedit (0 9 9 9))) "Evil states to interface iedit mode" tar ((:url . "https://github.com/syl20bnr/evil-iedit-state") (:commit . "44c64c71692e5b2f608ad3e3c537ec0a0e0ea0f8") (:revdesc . "44c64c71692e") (:keywords "convenience" "editing" "evil" "iedit" "mnemonic") (:authors ("Sylvain Benner" . "sylvain.benner@gmail.com")) (:maintainers ("Sylvain Benner" . "sylvain.benner@gmail.com")) (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com"))])
 (evil-leader . [(0 4 3) ((evil (0))) "Let there be <leader>" tar ((:url . "https://github.com/cofi/evil-leader") (:commit . "753b01eb4958370ae2226b3780ff31fe157c2852") (:revdesc . "753b01eb4958") (:keywords "evil" "vim-emulation" "leader") (:authors ("Michael Markert" . "markert.michael@googlemail.com")) (:maintainers ("Michael Markert" . "markert.michael@googlemail.com")) (:maintainer "Michael Markert" . "markert.michael@googlemail.com"))])
 (evil-lisp-state . [(8 2) ((evil (1 0 9)) (bind-map (0)) (smartparens (1 6 1))) "An evil state to edit Lisp code" tar ((:url . "https://github.com/syl20bnr/evil-lisp-state") (:commit . "3c65fecd9917a41eaf6460f22187e2323821f3ce") (:revdesc . "3c65fecd9917") (:keywords "convenience" "editing" "evil" "smartparens" "lisp" "mnemonic") (:authors ("Sylvain Benner" . "sylvain.benner@gmail.com")) (:maintainers ("Sylvain Benner" . "sylvain.benner@gmail.com")) (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com"))])
 (evil-lispops . [(0 10 2) ((emacs (26 1)) (evil (1 2 10))) "Operations for editing lisp evilly" tar ((:url . "https://github.com/precompute/evil-lispops") (:commit . "372b52df1a45fcea6c9461e7909cfdbb1db822a9") (:revdesc . "372b52df1a45") (:authors ("precompute" . "git@precompute.net")) (:maintainers ("precompute" . "git@precompute.net")) (:maintainer "precompute" . "git@precompute.net"))])
 (evil-mark-replace . [(0 0 6) ((evil (1 14 0))) "Replace the thing in marked area" tar ((:url . "https://github.com/redguardtoo/evil-mark-replace") (:commit . "217d5b507aa11dd0b334d5c3e1f74ac1fc2f66a4") (:revdesc . "217d5b507aa1") (:keywords "convenience") (:authors ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainers ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainer "Chen Bin" . "chenbinDOTshATgmailDOTcom"))])
 (evil-matchit . [(4 0 1) ((emacs (27 1))) "Vim matchit ported to Evil" tar ((:url . "https://github.com/redguardtoo/evil-matchit") (:commit . "84a6d34c1a1282c43c6ccef2ead3eaa41fd1535f") (:revdesc . "84a6d34c1a12") (:keywords "matchit" "vim" "evil") (:authors ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainers ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainer "Chen Bin" . "chenbin.sh@gmail.com"))])
 (evil-mc . [(0 0 3) ((emacs (24 3)) (evil (1 2 12)) (cl-lib (0 5))) "Multiple cursors for evil-mode" tar ((:url . "https://github.com/gabesoft/evil-mc") (:commit . "be2259b8cedd62011b25ddbcc1774bbbe9a66c61") (:revdesc . "be2259b8cedd") (:keywords "evil" "editing" "multiple-cursors" "vim" "evil-multiple-cursors" "evil-mc" "evil-mc") (:authors ("Gabriel Adomnicai" . "gabesoft@gmail.com")) (:maintainers ("Gabriel Adomnicai" . "gabesoft@gmail.com")) (:maintainer "Gabriel Adomnicai" . "gabesoft@gmail.com"))])
 (evil-multiedit . [(1 4 3) ((emacs (25 1)) (evil (1 14 0)) (iedit (0 9 9)) (cl-lib (0 5))) "Multiple cursors for evil-mode" tar ((:url . "https://github.com/hlissner/evil-multiedit") (:commit . "23b53bc8743fb82a8854ba907b1d277374c93a79") (:revdesc . "23b53bc8743f") (:keywords "multiple cursors" "editing" "iedit") (:authors ("Henrik Lissner" . "http://github/hlissner")) (:maintainers ("Henrik Lissner" . "contact@henrik.io")) (:maintainer "Henrik Lissner" . "contact@henrik.io"))])
 (evil-neo . [(1 0) ((evil (1 0 0))) "Minor mode for using the Neo keyboard layout with Evil" tar ((:url . "https://git.sr.ht/~p-conrad/evil-neo") (:commit . "18f115a0ddc12a0930f0eb2f9f119b190c71017e") (:revdesc . "1.0-0-g18f115a0ddc1") (:keywords "convenience" "emulations" "neo" "evil" "vim" "keymap") (:authors ("Peter Conrad" . "p.conrad@proton.me")) (:maintainers ("Peter Conrad" . "p.conrad@proton.me")) (:maintainer "Peter Conrad" . "p.conrad@proton.me"))])
 (evil-nerd-commenter . [(3 6 1) ((emacs (26 1))) "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" tar ((:url . "https://github.com/redguardtoo/evil-nerd-commenter") (:commit . "3b197a2b559b06a7cf39978704b196f53dac802a") (:revdesc . "3b197a2b559b") (:keywords "convenience" "evil") (:authors ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainers ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainer "Chen Bin" . "chenbin.sh@gmail.com"))])
 (evil-numbers . [(0 6) ((emacs (24 1))) "Increment/decrement numbers like in VIM" tar ((:url . "https://github.com/juliapath/evil-numbers") (:commit . "13294fdbd1928dec2a87ee71294dec28aeefe280") (:revdesc . "0.6-0-g13294fdbd192") (:keywords "convenience" "tools") (:authors ("Michael Markert" . "markert.michael@googlemail.com")) (:maintainers ("Julia Path" . "julia@jpath.de")) (:maintainer "Julia Path" . "julia@jpath.de"))])
 (evil-opener . [(0 2 2) ((evil (1 2 12)) (opener (0 2 2))) "Opening urls as buffers in evil" tar ((:url . "https://github.com/0robustus1/opener.el") (:commit . "c384f67278046fdcd220275fdd212ab85672cbeb") (:revdesc . "0.2.2-0-gc384f6727804") (:keywords "url" "http" "files") (:authors ("Tim Reddehase" . "tr@rightsrestricted.com")) (:maintainers ("Tim Reddehase" . "tr@rightsrestricted.com")) (:maintainer "Tim Reddehase" . "tr@rightsrestricted.com"))])
 (evil-org . [(1 0 2) ((emacs (24 4)) (evil (1 0))) "Evil keybindings for org-mode" tar ((:url . "https://github.com/Somelauw/evil-org-mode") (:commit . "9d4be14118bf27094a30dbff349b815f098aacbf") (:revdesc . "9d4be14118bf") (:keywords "evil" "vim-emulation" "org-mode" "key-bindings" "presets"))])
 (evil-owl . [(0 0 1) ((emacs (25 1)) (evil (1 2 13))) "Preview evil registers and marks before using them" tar ((:url . "https://github.com/mamapanda/evil-owl") (:commit . "24c5f43df375194386344e69bc720ea3986c9510") (:revdesc . "24c5f43df375") (:keywords "emulations" "evil" "visual") (:authors ("Daniel Phan" . "daniel.phan36@gmail.com")) (:maintainers ("Daniel Phan" . "daniel.phan36@gmail.com")) (:maintainer "Daniel Phan" . "daniel.phan36@gmail.com"))])
 (evil-quickscope . [(0 1 4) ((evil (0))) "Highlight unique characters in words for f,F,t,T navigation" tar ((:url . "https://github.com/blorbx/evil-quickscope") (:commit . "37a20e4c56c6058abf186ad4013c155e695e876f") (:revdesc . "37a20e4c56c6") (:keywords "faces" "emulation" "vim" "evil") (:authors ("Michael Chen" . "blorbx@gmail.com")) (:maintainers ("Michael Chen" . "blorbx@gmail.com")) (:maintainer "Michael Chen" . "blorbx@gmail.com"))])
 (evil-replace-with-char . [(1 0 0) ((evil (1 2 13)) (emacs (24))) "Replace chars of a text object with a char" tar ((:url . "https://github.com/ninrod/evil-replace-with-char") (:commit . "dddbbafdd620cc48dd0a257baf4010e1b415ebe8") (:revdesc . "dddbbafdd620") (:authors ("Filipe Silva" . "filipe.silva@gmail.com")) (:maintainers ("Filipe Silva" . "filipe.silva@gmail.com")) (:maintainer "Filipe Silva" . "filipe.silva@gmail.com"))])
 (evil-rsi . [(2 0 0) ((evil (1 0 0))) "Use emacs motion keys in evil, inspired by vim-rsi" tar ((:url . "https://github.com/linktohack/evil-rsi") (:commit . "236bf6ed1e2285698db808463e5f2f69f5f5e7c0") (:revdesc . "236bf6ed1e22") (:keywords "evil" "rsi" "evil-rsi") (:authors ("Quang Linh LE" . "linktohack@gmail.com")) (:maintainers ("Quang Linh LE" . "linktohack@gmail.com")) (:maintainer "Quang Linh LE" . "linktohack@gmail.com"))])
 (evil-ruby-text-objects . [(0 2 0) ((emacs (25 1)) (evil (1 2 0))) "Evil text objects for Ruby code" tar ((:url . "https://github.com/porras/evil-ruby-text-objects") (:commit . "e69abb6aad7687222cb47a8a64dc4dd66ef96a9e") (:revdesc . "e69abb6aad76") (:keywords "languages") (:authors ("Sergio Gil" . "sgilperez@gmail.com")) (:maintainers ("Sergio Gil" . "sgilperez@gmail.com")) (:maintainer "Sergio Gil" . "sgilperez@gmail.com"))])
 (evil-search-highlight-persist . [(1 8) ((highlight (0))) "Persistent highlights after search" tar ((:url . "https://github.com/naclander/evil-search-highlight-persist") (:commit . "0e2b3d4e3dec5f38ae95f62519eb2736f73c0b85") (:revdesc . "0e2b3d4e3dec") (:authors ("Juanjo Alvarez" . "juanjo@juanjoalvarez.net")) (:maintainers ("Juanjo Alvarez" . "juanjo@juanjoalvarez.net")) (:maintainer "Juanjo Alvarez" . "juanjo@juanjoalvarez.net"))])
 (evil-smartparens . [(0 4 0) ((evil (1 0)) (emacs (24 4)) (smartparens (1 10 1))) "Evil support for smartparens" tar ((:url . "https://github.com/expez/evil-smartparens") (:commit . "9fe4eed1c6327197afe6c13bb0771e18908aff00") (:revdesc . "0.4.0-0-g9fe4eed1c632") (:keywords "evil" "smartparens") (:authors ("Lars Andersen" . "expez@expez.com")) (:maintainers ("Lars Andersen" . "expez@expez.com")) (:maintainer "Lars Andersen" . "expez@expez.com"))])
 (evil-snipe . [(2 0 8) ((emacs (24 4)) (evil (1 2 12)) (cl-lib (0 5))) "Emulate vim-sneak & vim-seek" tar ((:url . "https://github.com/hlissner/evil-snipe") (:commit . "dc62ac317fd29f018e9785c1b3b7dd7ad57b3938") (:revdesc . "dc62ac317fd2") (:keywords "emulation" "vim" "evil" "sneak" "seek") (:authors ("Henrik Lissner" . "http://github/hlissner")) (:maintainers ("Henrik Lissner" . "henrik@lissner.net")) (:maintainer "Henrik Lissner" . "henrik@lissner.net"))])
 (evil-space . [(0 0 6) ((evil (1 0 0))) "Repeat motion in Evil. Correct the behaviour of what SPC should do" tar ((:url . "https://github.com/linktohack/evil-space") (:commit . "f77860fa00662e2def3e1885adac777f051e1e61") (:revdesc . "f77860fa0066") (:keywords "space" "repeat" "motion") (:authors ("Quang Linh LE" . "linktohack@gmail.com")) (:maintainers ("Quang Linh LE" . "linktohack@gmail.com")) (:maintainer "Quang Linh LE" . "linktohack@gmail.com"))])
 (evil-string-inflection . [(1 0 1) ((emacs (24)) (evil (1 2 13)) (string-inflection (1 0 6))) "Snake_case -> CamelCase -> etc. for text objects" tar ((:url . "https://github.com/ninrod/evil-string-inflection") (:commit . "d22a90ab807afa7f27f3815b5b5ea47d52d05218") (:revdesc . "d22a90ab807a") (:authors ("Filipe Silva" . "filipe.silva@gmail.com")) (:maintainers ("Filipe Silva" . "filipe.silva@gmail.com")) (:maintainer "Filipe Silva" . "filipe.silva@gmail.com"))])
 (evil-surround . [(1 1 1) ((evil (1 2 12))) "Emulate surround.vim from Vim" tar ((:url . "https://github.com/emacs-evil/evil-surround") (:commit . "346d4d85fcf1f9517e9c4991c1efe68b4130f93a") (:revdesc . "346d4d85fcf1") (:keywords "emulation" "vi" "evil") (:authors ("Tim Harper" . "timcharperatgmaildotcom") ("Vegard ye" . "vegard_oyeathotmaildotcom")) (:maintainers ("Tim Harper" . "timcharperatgmaildotcom") ("Vegard ye" . "vegard_oyeathotmaildotcom")) (:maintainer "Tim Harper" . "timcharperatgmaildotcom"))])
 (evil-swap-keys . [(1 0 0) ((emacs (24))) "Intelligently swap keys on text input with evil" tar ((:url . "https://github.com/wbolster/evil-swap-keys") (:commit . "56bc201e265a6bd482a7c41a7c81d2238341ef3a") (:revdesc . "1.0.0-0-g56bc201e265a") (:keywords "evil" "key" "swap" "numbers" "symbols") (:authors ("Wouter Bolsterlee" . "wouter@bolsterl.ee")) (:maintainers ("Wouter Bolsterlee" . "wouter@bolsterl.ee")) (:maintainer "Wouter Bolsterlee" . "wouter@bolsterl.ee"))])
 (evil-test-helpers . [(1 14 2) ((evil (1 14 2))) "Unit test helpers for Evil" tar ((:url . "https://github.com/emacs-evil/evil") (:commit . "162a94cbce4f2c09fa7dd6bd8ca56080cb0ab63b") (:revdesc . "162a94cbce4f") (:authors ("Vegard ye" . "vegard_oyeathotmail.com")) (:maintainers ("Vegard ye" . "vegard_oyeathotmail.com")) (:maintainer "Vegard ye" . "vegard_oyeathotmail.com"))])
 (evil-tex . [(1 0 2) ((emacs (25 1)) (evil (1 0)) (auctex (11 88))) "Useful features for editing LaTeX in evil-mode" tar ((:url . "https://github.com/iyefrat/evil-tex") (:commit . "ac313efb22d621c093d8d30233bd7dc8b4cc54b4") (:revdesc . "ac313efb22d6") (:keywords "tex" "emulation" "vi" "evil" "wp"))])
 (evil-text-object-python . [(1 0 1) ((emacs (24)) (evil (1 2 12))) "Python specific evil text objects" tar ((:url . "https://github.com/wbolster/evil-text-object-python") (:commit . "3b3fb01e7ad7eeeeae1143695547fe75148cc44f") (:revdesc . "1.0.1-0-g3b3fb01e7ad7") (:keywords "evil" "python" "text-object") (:authors ("Wouter Bolsterlee" . "wouter@bolsterl.ee")) (:maintainers ("Wouter Bolsterlee" . "wouter@bolsterl.ee")) (:maintainer "Wouter Bolsterlee" . "wouter@bolsterl.ee"))])
 (evil-textobj-anyblock . [(0 1) ((cl-lib (0 5)) (evil (1 1 0))) "Textobject for the closest user-defined blocks" tar ((:url . "https://github.com/noctuid/evil-textobj-anyblock") (:commit . "068d26a625cd6202aaf70a8ff399f9130c0ffa68") (:revdesc . "v0.1-0-g068d26a625cd") (:keywords "evil") (:authors ("Lit Wakefield" . "noct@openmailbox.org")) (:maintainers ("Lit Wakefield" . "noct@openmailbox.org")) (:maintainer "Lit Wakefield" . "noct@openmailbox.org"))])
 (evil-textobj-line . [(0 1) ((evil (1 0 0))) "Line text object for Evil" tar ((:url . "https://github.com/emacsorphanage/evil-textobj-line") (:commit . "9eaf9a5485c2b5c05e16552b34632ca520cd681d") (:revdesc . "v0.1-0-g9eaf9a5485c2") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (evil-textobj-tree-sitter . [(0 5) ((emacs (25 1))) "Provides evil textobjects using tree-sitter" tar ((:url . "https://github.com/meain/evil-textobj-tree-sitter") (:commit . "cf25134c3af3aece61f866ae42bc7ab3714b59ea") (:revdesc . "cf25134c3af3") (:keywords "evil" "tree-sitter" "text-object" "convenience"))])
 (evil-tutor . [(1 0) ((evil (1 0 9))) "Vimtutor adapted to Evil and wrapped in a major-mode" tar ((:url . "https://github.com/syl20bnr/evil-tutor") (:commit . "909273bac88b98a565f1b89bbb13d523b7edce2b") (:revdesc . "909273bac88b") (:keywords "convenience" "editing" "evil") (:authors ("Sylvain Benner" . "sylvain.benner@gmail.com")) (:maintainers ("Sylvain Benner" . "sylvain.benner@gmail.com")) (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com"))])
 (evil-tutor-sc . [(2 2) ((evil (1 0 9)) (evil-tutor (0 1))) "Simplified Chinese tutor for Evil" tar ((:url . "https://github.com/clsty/evil-tutor-sc") (:commit . "9ae3cff4b1d44d74989e832cfa566c20bbe6bb1a") (:revdesc . "9ae3cff4b1d4") (:keywords "convenience" "editing" "evil" "chinese") (:authors ("clsty" . "celestial.y@outlook.com")) (:maintainers ("clsty" . "celestial.y@outlook.com")) (:maintainer "clsty" . "celestial.y@outlook.com"))])
 (evil-visual-mark-mode . [(0 0 3) ((evil (1 0 9)) (dash (2 10))) "Display evil marks on buffer" tar ((:url . "https://github.com/roman/evil-visual-mark-mode") (:commit . "094ee37599492885ff3144918fcdd9b74dadaaa0") (:revdesc . "094ee3759949") (:keywords "evil") (:authors ("Roman Gonzalez" . "romanandreg@gmail.com")) (:maintainers ("Roman Gonzalez" . "romanandreg@gmail.com")) (:maintainer "Roman Gonzalez" . "romanandreg@gmail.com"))])
 (evil-visual-replace . [(0 0 5) ((evil (1 0 0))) "Search/replace commands for evil visual state, inc. blocks" tar ((:url . "https://github.com/troyp/evil-visual-replace") (:commit . "163fc827a1ffc106475da470c37fb26f4cc9b008") (:revdesc . "163fc827a1ff") (:keywords "evil" "search" "replace" "regexp" "block" "rectangular" "region" "visual"))])
 (evil-visualstar . [(0 2 0) ((evil (0))) "Starts a * or # search from the visual selection" tar ((:url . "https://github.com/bling/evil-visualstar") (:commit . "eb996eca0081b6e8bab70b2c0a86ef1c71087bf6") (:revdesc . "eb996eca0081") (:keywords "evil" "vim" "visualstar"))])
 (ewal . [(0 2 1) ((emacs (25 1))) "A pywal-based theme generator" tar ((:url . "https://github.com/cyruseuros/ewal") (:commit . "732a2f4abb480f9f5a3249af822d8eb1e90324e3") (:revdesc . "732a2f4abb48") (:keywords "faces"))])
 (ewal-doom-themes . [(0 2 1) ((emacs (25)) (ewal (0 1)) (doom-themes (0 1))) "Dread the colors of darkness" tar ((:url . "https://github.com/cyruseuros/ewal") (:commit . "732a2f4abb480f9f5a3249af822d8eb1e90324e3") (:revdesc . "732a2f4abb48") (:keywords "faces"))])
 (ewal-evil-cursors . [(0 2 1) ((emacs (25)) (ewal (0 1))) "`ewal'-colored evil cursor for Emacs and Spacemacs" tar ((:url . "https://github.com/cyruseuros/ewal") (:commit . "732a2f4abb480f9f5a3249af822d8eb1e90324e3") (:revdesc . "732a2f4abb48") (:keywords "faces"))])
 (ewal-spacemacs-themes . [(0 2 1) ((emacs (25)) (ewal (0 1)) (spacemacs-theme (0 1))) "Ride the rainbow spaceship" tar ((:url . "https://github.com/cyruseuros/ewal") (:commit . "732a2f4abb480f9f5a3249af822d8eb1e90324e3") (:revdesc . "732a2f4abb48") (:keywords "faces"))])
 (ewmctrl . [(1 0 0) nil "Use `wmctrl' to manage desktop windows via EWMH/NetWM" tar ((:url . "https://github.com/flexibeast/ewmctrl") (:commit . "3d0217c4d6cdb5c308b6cb4293574f470d4faacf") (:revdesc . "3d0217c4d6cd") (:keywords "desktop" "windows" "ewmh" "netwm") (:authors ("Alexis" . "flexibeast@gmail.com") ("Adam Plaice" . "plaice.adam@gmail.com")) (:maintainers ("Alexis" . "flexibeast@gmail.com")) (:maintainer "Alexis" . "flexibeast@gmail.com"))])
 (eww-lnum . [(1 1) nil "Conkeror-like functionality for eww" tar ((:url . "https://github.com/m00natic/eww-lnum") (:commit . "daef49974446ed4c1001e0549c3f74679bca6bd3") (:revdesc . "daef49974446") (:keywords "eww" "browse" "conkeror") (:authors ("Andrey Kotlarski" . "m00naticus@gmail.com")) (:maintainers ("Andrey Kotlarski" . "m00naticus@gmail.com")) (:maintainer "Andrey Kotlarski" . "m00naticus@gmail.com"))])
 (exato . [(1 0 0) ((evil (1 2 13)) (emacs (24))) "EXATO: Evil XML/HTML Attributes Text Object" tar ((:url . "https://github.com/ninrod/exato") (:commit . "5e7b5721bf48aa49c6cdb5d41b908ef7d513b2a8") (:revdesc . "5e7b5721bf48") (:authors ("Filipe Silva" . "filipe.silva@gmail.com")) (:maintainers ("Filipe Silva" . "filipe.silva@gmail.com")) (:maintainer "Filipe Silva" . "filipe.silva@gmail.com"))])
 (exec-path-from-shell . [(2 2) ((emacs (24 4))) "Get environment variables such as $PATH from the shell" tar ((:url . "https://github.com/purcell/exec-path-from-shell") (:commit . "72ede29a0e0467b3b433e8edbee3c79bab005884") (:revdesc . "72ede29a0e04") (:keywords "unix" "environment") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (execline . [(1 1) ((emacs (26 1)) (s (1 6 0))) "Major mode for editing execline scripts" tar ((:url . "https://gitlab.com/KAction/emacs-execline") (:commit . "c75dd9b2c54d8e59fc35fd4bd98d8e213948a3f5") (:revdesc . "v1.1-0-gc75dd9b2c54d") (:keywords "tools" "unix" "languages") (:authors ("Dmitry Bogatov" . "KAction@debian.org")) (:maintainers ("Dmitry Bogatov" . "KAction@debian.org")) (:maintainer "Dmitry Bogatov" . "KAction@debian.org"))])
 (exiftool . [(0 3 2) ((emacs (25))) "Elisp wrapper around ExifTool" tar ((:url . "https://git.systemreboot.net/exiftool.el/") (:commit . "c1058d99c34e62b99dbfca13ada47519fb51bf73") (:revdesc . "v0.3.2-0-gc1058d99c34e") (:keywords "data") (:authors ("Arun I" . "arunisaac@systemreboot.net")) (:maintainers ("Arun I" . "arunisaac@systemreboot.net")) (:maintainer "Arun I" . "arunisaac@systemreboot.net"))])
 (expand-region . [(1 0 0) ((emacs (24 4))) "Increase selected region by semantic units" tar ((:url . "https://github.com/magnars/expand-region.el") (:commit . "9e3f86c02c5e2ab6f0d95da8a34045b54f6166d1") (:revdesc . "1.0.0-0-g9e3f86c02c5e") (:keywords "marking" "region") (:authors ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (expenses . [(0 2 0) ((emacs (26 1)) (dash (2 19 1)) (ht (2 3))) "Record and view expenses" tar ((:url . "https://github.com/md-arif-shaikh/expenses") (:commit . "e668666770858e92de83d8217c7e384de3ba1e34") (:revdesc . "e66866677085") (:keywords "expense tracking" "convenience") (:authors ("Md Arif Shaikh" . "arifshaikh.astro@gmail.com")) (:maintainers ("Md Arif Shaikh" . "arifshaikh.astro@gmail.com")) (:maintainer "Md Arif Shaikh" . "arifshaikh.astro@gmail.com"))])
 (express . [(0 6 0) ((string-utils (0 3 2))) "Alternatives to `message'" tar ((:url . "https://github.com/rolandwalker/express") (:commit . "e6dc9abdc395ef537408befebeb4fd3ed4ee5c60") (:revdesc . "v0.6.0-0-ge6dc9abdc395") (:keywords "extensions" "message" "interface") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (exsqlaim-mode . [(0 0 2) ((s (1 10 0))) "Use variables inside sql queries" tar ((:url . "https://github.com/ahmadnazir/exsqlaim-mode") (:commit . "a2e0a62ec8b87193d8eaa695774bfd689324b06c") (:revdesc . "a2e0a62ec8b8") (:authors ("Ahmad Nazir Raja" . "ahmadnazir@gmail.com")) (:maintainers ("Ahmad Nazir Raja" . "ahmadnazir@gmail.com")) (:maintainer "Ahmad Nazir Raja" . "ahmadnazir@gmail.com"))])
 (extend-dnd . [(0 5) nil "R drag and Drop" tar ((:url . "https://github.com/mattfidler/extend-dnd") (:commit . "a1923d57f8f5e862cc66c189b5e6627bc84a2119") (:revdesc . "v0.5-0-ga1923d57f8f5") (:keywords "extend" "drag and drop"))])
 (extmap . [(1 3) ((emacs (24 4))) "Externally-stored constant mapping for Elisp" tar ((:url . "https://github.com/doublep/extmap") (:commit . "c7af95865ef083327d299b86c254ca87fa88a504") (:revdesc . "c7af95865ef0") (:keywords "lisp") (:authors ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainers ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainer "Paul Pogonyshev" . "pogonyshev@gmail.com"))])
 (exwm-mff . [(1 2 0) ((emacs (25))) "Mouse Follows Focus" tar ((:url . "https://codeberg.org/emacs-weirdware/exwm-mff") (:commit . "c3a132164ea5fdcaa9df49d8a115eab0481ee342") (:revdesc . "c3a132164ea5") (:keywords "unix") (:authors ("Ian Eure" . "public@lowbar.fyi")) (:maintainers ("Ian Eure" . "public@lowbar.fyi")) (:maintainer "Ian Eure" . "public@lowbar.fyi"))])
 (exwm-modeline . [(0 1 3) ((emacs (27 1)) (exwm (0 26))) "A modeline segment for EXWM workspaces" tar ((:url . "https://github.com/SqrtMinusOne/exwm-modeline") (:commit . "dfd0b861337d4cdef9d4e6126d631397f893c087") (:revdesc . "dfd0b861337d") (:authors ("Korytov Pavel" . "thexcloud@gmail.com")) (:maintainers ("Korytov Pavel" . "thexcloud@gmail.com")) (:maintainer "Korytov Pavel" . "thexcloud@gmail.com"))])
 (exwm-x . [(2 0 2) ((cl-lib (0 5)) (async (1 6)) (exwm (0 22))) "A derivative wm based on EXWM (emacs x window manager)" tar ((:url . "https://github.com/tumashu/exwm-x") (:commit . "8fd00a0ca586e1c80d08209919f1414b448bc228") (:revdesc . "8fd00a0ca586") (:keywords "window-manager" "exwm") (:authors ("Feng Shu" . "tumashu@163.com")) (:maintainers ("Feng Shu" . "tumashu@163.com")) (:maintainer "Feng Shu" . "tumashu@163.com"))])
 (ez-query-replace . [(0 4) ((dash (1 2 0)) (s (1 11 0))) "A smarter context-sensitive query-replace that can be reapplied" tar ((:url . "https://github.com/Wilfred/ez-query-replace") (:commit . "f5dbd2d3e5e62e6b7e7cc1a98fc4d0cd411e5afa") (:revdesc . "f5dbd2d3e5e6") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (eziam-themes . [(5 1) nil "The mostly monochrome Eziam theme family" tar ((:url . "https://github.com/thblt/eziam-theme-emacs") (:commit . "8223acc0218130ad2493c1476ad3736ee4fdbb8f") (:revdesc . "8223acc02181") (:keywords "faces") (:authors ("Thibault Polge" . "thibault@thb.lt")) (:maintainers ("Thibault Polge" . "thibault@thb.lt")) (:maintainer "Thibault Polge" . "thibault@thb.lt"))])
 (f . [(0 21 0) ((emacs (24 1)) (s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" tar ((:url . "https://github.com/rejeep/f.el") (:commit . "931b6d0667fe03e7bf1c6c282d6d8d7006143c52") (:revdesc . "931b6d0667fe") (:keywords "files" "directories") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Lucien Cartier-Tilet" . "lucien@phundrak.com")) (:maintainer "Lucien Cartier-Tilet" . "lucien@phundrak.com"))])
 (f3 . [(0 1) ((emacs (24 3)) (helm (2 8 8)) (cl-lib (0 5))) "A helm interface to find" tar ((:url . "https://github.com/cosmicexplorer/f3") (:commit . "19120dda2d760d3dd6c6aa620121d1de0a40932d") (:revdesc . "19120dda2d76") (:keywords "find" "file" "files" "helm" "fast" "finder"))])
 (fabric . [(0 2 0) nil "Launch Fabric using Emacs" tar ((:url . "https://github.com/nlamirault/fabric.el") (:commit . "004934318f63d8cf955022f87b2c33eb97ada280") (:revdesc . "0.2.0-0-g004934318f63") (:keywords "python" "fabric") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@chmouel.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@chmouel.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@chmouel.com"))])
 (factlog . [(0 0 1) nil "File activity logger" tar ((:url . "https://github.com/tkf/factlog") (:commit . "c834fdab81ec5b1bdc0ee2721a12cecb48a319bf") (:revdesc . "c834fdab81ec") (:authors ("Takafumi Arakaki" . "aka.tkfatgmail.com")) (:maintainers ("Takafumi Arakaki" . "aka.tkfatgmail.com")) (:maintainer "Takafumi Arakaki" . "aka.tkfatgmail.com"))])
 (faff-theme . [(3 5) nil "Light Emacs color theme on cornsilk3 background" tar ((:url . "https://github.com/WJCFerguson/emacs-faff-theme") (:commit . "763d524b5dd6273843256810e8531954335583bd") (:revdesc . "763d524b5dd6") (:keywords "color" "theme") (:authors ("James Ferguson" . "")) (:maintainers ("James Ferguson" . "")) (:maintainer "James Ferguson" . ""))])
 (fancy-battery . [(0 2) ((emacs (24 1))) "Fancy battery display" tar ((:url . "https://github.com/emacsorphanage/fancy-battery") (:commit . "5b8115bbeb67c52d4202a12dcd5726fb66e0a1ff") (:revdesc . "0.2-0-g5b8115bbeb67") (:keywords "convenience" "tools" "hardware") (:authors ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainers ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com"))])
 (fancy-narrow . [(0 9 5) nil "Narrow-to-region with more eye candy" tar ((:url . "https://github.com/Malabarba/fancy-narrow") (:commit . "c0f70b4333d4764323b7154e37a378adb1610ab7") (:revdesc . "c0f70b4333d4") (:keywords "faces" "convenience") (:authors ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainers ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainer "Artur Malabarba" . "bruce.connor.am@gmail.com"))])
 (fancy-urls-menu . [(0 1 0) ((emacs (29 1))) "Interface for viewing and opening URLs in current buffer" tar ((:url . "https://codeberg.org/kakafarm/emacs-fancy-urls-menu") (:commit . "4a817ef24a91fb8e53cbece1a8351321c919d62a") (:revdesc . "4a817ef24a91") (:keywords "convenience") (:maintainers (nil . "yuval.langer@gmail.com")) (:maintainer nil . "yuval.langer@gmail.com"))])
 (fantom-theme . [(1 0) ((emacs (24 1))) "Emacs theme with a dark background" tar ((:url . "https://github.com/adsva/fantom-emacs-theme") (:commit . "70cef2886ca90c93bcafc869bcc77bad1e390c33") (:revdesc . "70cef2886ca9"))])
 (farmhouse-themes . [(1 1) nil "Farmhouse Themes, dark and light versions" tar ((:url . "https://github.com/emacsorphanage/farmhouse-themes") (:commit . "30c763d01611dad88f1a1ff88451431e2629016d") (:revdesc . "v1.1-0-g30c763d01611") (:authors ("Matthew Lyon" . "matthew@lyonheart.us")) (:maintainers ("Matthew Lyon" . "matthew@lyonheart.us")) (:maintainer "Matthew Lyon" . "matthew@lyonheart.us"))])
 (fast-scroll . [(0 0 5) ((emacs (25 1)) (cl-lib (0 6 1))) "Some utilities for faster scrolling over large buffers" tar ((:url . "https://github.com/ahungry/fast-scroll") (:commit . "0f78d1039e5394a6b57d186189a89937453c7002") (:revdesc . "0f78d1039e53") (:keywords "ahungry" "convenience" "fast" "scroll" "scrolling") (:authors ("Matthew Carter" . "m@ahungry.com")) (:maintainers ("Matthew Carter" . "m@ahungry.com")) (:maintainer "Matthew Carter" . "m@ahungry.com"))])
 (fastdef . [(0 2 0) ((ivy (0 7 0)) (w3m (0 0))) "Insert terminology from Google top search results" tar ((:url . "https://github.com/redguardtoo/fastdef") (:commit . "0696f41dc150d35ce31fe8d2ea74f4173818bb55") (:revdesc . "0696f41dc150") (:keywords "terminology" "org-mode" "markdown") (:authors ("Chen Bin" . "cheninDOTshATgmailDOTcom")) (:maintainers ("Chen Bin" . "cheninDOTshATgmailDOTcom")) (:maintainer "Chen Bin" . "cheninDOTshATgmailDOTcom"))])
 (fastnav . [(1 0 7) nil "Fast navigation and editing routines" tar ((:url . "https://github.com/gleber/fastnav.el") (:commit . "54626e9e7cc7be5bc2bd01732e95ed2afc2312a1") (:revdesc . "54626e9e7cc7") (:keywords "nav" "fast" "fastnav" "navigation") (:authors ("Zsolt Terek" . "zsolt@google.com")) (:maintainers ("Zsolt Terek" . "zsolt@google.com")) (:maintainer "Zsolt Terek" . "zsolt@google.com"))])
 (faust-mode . [(0 6) nil "Faust syntax colorizer for Emacs" tar ((:url . "https://github.com/rukano/emacs-faust-mode") (:commit . "7c31b22bdbfd2f8c16ec117d2975d56dd61ac15c") (:revdesc . "7c31b22bdbfd") (:keywords "languages" "faust") (:authors ("rukano" . "rukano@gmail.com")) (:maintainers ("Yassin Philip" . "xaccrocheur@gmail.com")) (:maintainer "Yassin Philip" . "xaccrocheur@gmail.com"))])
 (faustine . [(0 4) ((emacs (24 3)) (faust-mode (0 3))) "Edit, visualize, build and run Faust code" tar ((:url . "https://bitbucket.org/yphil/faustine") (:commit . "f186461e2bc38ec8ae38bd5ab727cc769218a168") (:revdesc . "v0.4-0-gf186461e2bc3") (:keywords "languages" "faust") (:authors ("Yassin Philip" . "xaccrocheur@gmail.com")) (:maintainers ("Yassin Philip" . "xaccrocheur@gmail.com")) (:maintainer "Yassin Philip" . "xaccrocheur@gmail.com"))])
 (fcitx . [(0 2 3) nil "Make fcitx better in Emacs" tar ((:url . "https://github.com/cute-jumper/fcitx.el") (:commit . "6d552ab44234ed78ce9a50f2412f56197266bc9f") (:revdesc . "6d552ab44234") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (fd-dired . [(0 1 0) nil "Find-dired alternative using fd" tar ((:url . "https://github.com/yqrashawn/fd-dired") (:commit . "d90ec902f417c194e44697f73a9d6cbfd0cf7216") (:revdesc . "d90ec902f417") (:keywords "tools" "fd" "find" "dired") (:authors ("Rashawn Zhang" . "namy.19@gmail.com")) (:maintainers ("Rashawn Zhang" . "namy.19@gmail.com")) (:maintainer "Rashawn Zhang" . "namy.19@gmail.com"))])
 (feature-mode . [(0 4) nil "Major mode for editing Gherkin (i.e. Cucumber) user stories" tar ((:url . "https://github.com/michaelklishin/cucumber.el") (:commit . "4bd8f19da816115094beb4b0e085822eb298ac37") (:revdesc . "4bd8f19da816"))])
 (fedi . [(0 2) ((emacs (28 1)) (markdown-mode (2 5))) "Helper functions for fediverse clients" tar ((:url . "https://codeberg.org/martianh/fedi.el") (:commit . "ffcb84bb132a72c9d787b4f6d8481d27da623d41") (:revdesc . "ffcb84bb132a") (:authors ("Marty Hiatt" . "martianhiatus@riseup.net")) (:maintainers ("Marty Hiatt" . "martianhiatus@riseup.net")) (:maintainer "Marty Hiatt" . "martianhiatus@riseup.net"))])
 (feed-discovery . [(1 0 0) ((emacs (25 1)) (dash (2 16 0))) "Discover feed url by RSS/Atom autodiscovery" tar ((:url . "https://github.com/HKey/feed-discovery") (:commit . "3812439c845c184eaf164d3ac8935de135259855") (:revdesc . "3812439c845c") (:authors ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainers ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainer "Hiroki YAMAKAWA" . "s06139@gmail.com"))])
 (feline . [(1 1) ((emacs (28 1))) "A modeline with very little" tar ((:url . "https://opensource.chee.party/chee/feline-mode") (:commit . "8c46b1be9e45a38281aa9ddae79fda3c8e4cb5c5") (:revdesc . "8c46b1be9e45") (:authors ("chee" . "emacs@chee.party")) (:maintainers ("chee" . "emacs@chee.party")) (:maintainer "chee" . "emacs@chee.party"))])
 (fennel-mode . [(0 9 1) ((emacs (26 1))) "A major-mode for editing Fennel code" tar ((:url . "https://git.sr.ht/~technomancy/fennel-mode") (:commit . "1ce807cc664cb209afa0e0331d4d2f0cdbc09f78") (:revdesc . "0.9.1-0-g1ce807cc664c") (:keywords "languages" "tools"))])
 (ffmpeg-player . [(0 2 1) ((emacs (24 4)) (s (1 12 0)) (f (0 20 0))) "Play video using ffmpeg" tar ((:url . "https://github.com/jcs-elpa/ffmpeg-player") (:commit . "164fb15d70adbc186eb2d987f5c5143aa7336659") (:revdesc . "164fb15d70ad") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (file-info . [(0 6 1) ((emacs (28 1)) (hydra (0 15 0)) (browse-at-remote (0 15 0))) "Show pretty information about current file" tar ((:url . "https://github.com/Artawower/file-info.el") (:commit . "c6892a0d3bab0c10c85f2fbdfe859547cd051eb8") (:revdesc . "c6892a0d3bab") (:authors ("Artur Yaroshenko" . "artawower@protonmail.com")) (:maintainers ("Artur Yaroshenko" . "artawower@protonmail.com")) (:maintainer "Artur Yaroshenko" . "artawower@protonmail.com"))])
 (fill-column-indicator . [(1 90) nil "Graphically indicate the fill column" tar ((:url . "https://github.com/alpaker/fill-column-indicator") (:commit . "f7b3f99b41ff017f50a21ad53eed16f8ef5ab7ee") (:revdesc . "f7b3f99b41ff") (:keywords "convenience") (:authors ("Alp Aker" . "alp.tekin.aker@gmail.com")) (:maintainers ("Alp Aker" . "alp.tekin.aker@gmail.com")) (:maintainer "Alp Aker" . "alp.tekin.aker@gmail.com"))])
 (fill-function-arguments . [(0 9) ((emacs (24 4))) "Convert function arguments to/from single line" tar ((:url . "https://github.com/davidshepherd7/fill-function-arguments") (:commit . "e819fca19a138ae67201220e41fe1d4384fb2a42") (:revdesc . "e819fca19a13") (:keywords "convenience") (:authors ("David Shepherd" . "davidshepherd7@gmail.com")) (:maintainers ("David Shepherd" . "davidshepherd7@gmail.com")) (:maintainer "David Shepherd" . "davidshepherd7@gmail.com"))])
 (fill-page . [(0 3 7) ((emacs (24 4))) "Fill buffer so you don't see empty lines at the end" tar ((:url . "https://github.com/jcs-elpa/fill-page") (:commit . "95f82f93848ca608d4c4d9ec7386d94745cbc691") (:revdesc . "95f82f93848c") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (filldent . [(1 0 1) ((emacs (24 1))) "Fill or indent" tar ((:url . "https://codeberg.org/acdw/filldent.el") (:commit . "ec406d76c97fd8a59df9308d60dba63061dc716a") (:revdesc . "ec406d76c97f") (:authors ("Case Duckworth" . "acdw@acdw.net")) (:maintainers ("Case Duckworth" . "acdw@acdw.net")) (:maintainer "Case Duckworth" . "acdw@acdw.net"))])
 (finalize . [(2 0 0) ((emacs (24 1)) (cl-generic (0 3)) (cl-lib (0 3)) (eieio (1 4))) "Finalizers for Emacs Lisp" tar ((:url . "https://github.com/skeeto/elisp-finalize") (:commit . "0f7d47c4d50f1c76fc3b43bfc2d4886dd3e8ca27") (:revdesc . "2.0.0-0-g0f7d47c4d50f") (:authors ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainers ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainer "Christopher Wellons" . "wellons@nullprogram.com"))])
 (find-by-pinyin-dired . [(0 0 3) ((pinyinlib (0 1 0))) "Find file by first PinYin character of Chinese Hanzi" tar ((:url . "https://github.com/redguardtoo/find-by-pinyin-dired") (:commit . "2c48434637bd63840fca4d2c6cf9ebd5dd44658f") (:revdesc . "2c48434637bd") (:keywords "hanzi" "chinese" "dired" "find" "file" "pinyin") (:authors ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainers ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainer "Chen Bin" . "chenbin.sh@gmail.com"))])
 (find-dupes-dired . [(1 0) ((emacs (26 1))) "Find dupes and handle in dired" tar ((:url . "https://github.com/ShuguangSun/find-dupes-dired") (:commit . "f39e2afbc33e02a6bf62116f6ce71b8368068698") (:revdesc . "f39e2afbc33e") (:keywords "tools") (:authors ("Shuguang Sun" . "shuguang79@qq.com")) (:maintainers ("Shuguang Sun" . "shuguang79@qq.com")) (:maintainer "Shuguang Sun" . "shuguang79@qq.com"))])
 (find-file-in-project . [(6 2 1) ((emacs (25 1))) "Find file/directory and review Diff/Patch/Commit efficiently" tar ((:url . "https://github.com/redguardtoo/find-file-in-project") (:commit . "889466d047ee93ab33fa8eaa4e1ef279d884f1da") (:revdesc . "889466d047ee") (:keywords "project" "convenience") (:maintainers ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainer "Chen Bin" . "chenbin.sh@gmail.com"))])
 (find-file-in-repository . [(1 2) nil "Quickly find files in a git, mercurial or other repository" tar ((:url . "https://github.com/h/find-file-in-repository") (:commit . "8b888f85029a2ff9159a724b42aeacdb051c3420") (:revdesc . "8b888f85029a") (:keywords "files" "convenience" "repository" "project" "source control") (:authors ("Samuel Hoffstaetter" . "samuel@hoffstaetter.com")) (:maintainers ("Samuel Hoffstaetter" . "samuel@hoffstaetter.com")) (:maintainer "Samuel Hoffstaetter" . "samuel@hoffstaetter.com"))])
 (finito . [(0 5 0) ((emacs (27 1)) (dash (2 17 0)) (request (0 3 2)) (f (0 2 0)) (s (1 12 0)) (transient (0 3 0)) (graphql (0 1 1)) (async (1 9 3))) "View and collect books" tar ((:url . "https://github.com/LaurenceWarne/finito.el") (:commit . "5e20777922aafb6afc2ddac8f4a62cd0c1ed987d") (:revdesc . "v0.5.0-0-g5e20777922aa") (:keywords "outlines"))])
 (fiplr . [(0 2 4) ((grizzl (0 1 0))) "Fuzzy Search for Files in Projects" tar ((:url . "https://github.com/grizzl/fiplr") (:commit . "100dfc33f43da8c49e50e8a2222b9d95532f6e24") (:revdesc . "0.2.4-0-g100dfc33f43d") (:keywords "convenience" "usability" "project") (:authors ("Chris Corbyn" . "chris@w3style.co.uk")) (:maintainers ("Chris Corbyn" . "chris@w3style.co.uk")) (:maintainer "Chris Corbyn" . "chris@w3style.co.uk"))])
 (fireplace . [(1 2 0) nil "A cozy fireplace for emacs" tar ((:url . "https://github.com/johanvts/emacs-fireplace") (:commit . "f6c23e259349922aae25cf2898ba815a7d8f2527") (:revdesc . "f6c23e259349") (:keywords "games") (:authors ("Johan Sivertsen" . "johanvts@gmail.com")) (:maintainers ("Johan Sivertsen" . "johanvts@gmail.com")) (:maintainer "Johan Sivertsen" . "johanvts@gmail.com"))])
 (firstly-search . [(0 1 2) ((emacs (29 1))) "Search with any key: Dired, Package, Buffer menu modes" tar ((:url . "https://github.com/Anoncheg1/firstly-search") (:commit . "2045d990509074a8151c8a27db50e477d254aa31") (:revdesc . "2045d9905090") (:keywords "matching" "isearch" "navigation" "dired" "packagemenu"))])
 (fish-completion . [(1 2) ((emacs (25 1))) "Fish completion for pcomplete (shell and Eshell)" tar ((:commit . "10384881817b5ae38cf6197a077a663420090d2c") (:authors ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainers ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz") (:url . "https://gitlab.com/Ambrevar/emacs-fish-completion"))])
 (fish-mode . [(0 1 6) ((emacs (24))) "Major mode for fish shell scripts" tar ((:url . "https://github.com/wwwjfy/emacs-fish") (:commit . "a7c953b1491ac3a3e00a7b560f2c9f46b3cb5c04") (:revdesc . "a7c953b1491a") (:keywords "fish" "shell") (:authors ("Tony Wang" . "wwwjfy@gmail.com")) (:maintainers ("Tony Wang" . "wwwjfy@gmail.com")) (:maintainer "Tony Wang" . "wwwjfy@gmail.com"))])
 (fit-text-scale . [(1 1 4) ((emacs (25 1))) "Fit text by scaling" tar ((:url . "https://gitlab.com/marcowahl/fit-text-scale") (:commit . "ba63f0591c3be1644ee7ee972430c74b5d346579") (:revdesc . "ba63f0591c3b") (:keywords "convenience") (:authors ("Marco Wahl" . "marcowahlsoft@gmail.com")) (:maintainers ("Marco Wahl" . "marcowahlsoft@gmail.com")) (:maintainer "Marco Wahl" . "marcowahlsoft@gmail.com"))])
 (fix-input . [(0 1 1) ((emacs (24 4))) "Make input methods play nicely with alternative keyboard layout on OS level" tar ((:url . "https://github.com/mrkkrp/fix-input") (:commit . "a70edfa7880ff9b082f358607d2a9ad6a8dcc8f3") (:revdesc . "a70edfa7880f") (:keywords "input" "method") (:authors ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainers ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainer "Mark Karpov" . "markkarpov92@gmail.com"))])
 (fix-muscle-memory . [(0 94) nil "Simple hacks to fix muscle memory problems" tar ((:url . "https://github.com/jonnay/fix-muscle-memory") (:commit . "b8d4b8025d758762f4459c70c3a7a209ead865ed") (:revdesc . "b8d4b8025d75") (:keywords "spelling" "typing") (:authors ("Jonathan Arkell" . "jonnay@jonnay.net")) (:maintainers ("Jonathan Arkell" . "jonnay@jonnay.net")) (:maintainer "Jonathan Arkell" . "jonnay@jonnay.net"))])
 (fix-word . [(0 2 0) ((emacs (24 1)) (cl-lib (0 5))) "Convenient word transformation" tar ((:url . "https://github.com/mrkkrp/fix-word") (:commit . "b3b3a3c8e33e425f9a8d0ec653adb6897c8efc03") (:revdesc . "b3b3a3c8e33e") (:keywords "word" "convenience") (:authors ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainers ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainer "Mark Karpov" . "markkarpov92@gmail.com"))])
 (fixmee . [(0 8 6) ((button-lock (1 0 2)) (nav-flash (1 0 0)) (back-button (0 6 0)) (smartrep (0 0 3)) (string-utils (0 3 2)) (tabulated-list (0))) "Quickly navigate to FIXME notices in code" tar ((:url . "https://github.com/rolandwalker/fixmee") (:commit . "aa3be8ad9fcc9c0c7ff15f70cda4ba77de96dd74") (:revdesc . "v0.8.6-0-gaa3be8ad9fcc") (:keywords "navigation" "convenience") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (flatbuffers-mode . [(0 3) ((emacs (24 3))) "Major mode for editing flatbuffers" tar ((:url . "https://github.com/Asalle/flatbuffers-mode") (:commit . "8e7783db45a64c9456130fd0c108ac12d45a7789") (:revdesc . "8e7783db45a6") (:keywords "flatbuffers" "languages") (:authors ("Asal Mirzaieva" . "asalle.kim@gmail.com")) (:maintainers ("Asal Mirzaieva" . "asalle.kim@gmail.com")) (:maintainer "Asal Mirzaieva" . "asalle.kim@gmail.com"))])
 (flatui-dark-theme . [(0 3 0) ((emacs (24))) "Dark color theme with colors from https://flatuicolors.com/" tar ((:url . "https://github.com/theasp/flatui-dark-theme") (:commit . "af5c84e2a2810748cc71a68ec7ba333097cc1f63") (:revdesc . "af5c84e2a281") (:keywords "color" "theme" "dark" "flatui" "faces") (:authors ("Andrew Phillips" . "theasp@gmail.com")) (:maintainers ("Andrew Phillips" . "theasp@gmail.com")) (:maintainer "Andrew Phillips" . "theasp@gmail.com"))])
 (flex-compile . [(1 5) ((emacs (26 1)) (dash (2 17 0)) (buffer-manage (1 1))) "Run, evaluate and compile across many languages" tar ((:url . "https://github.com/plandes/flex-compile") (:commit . "713c07b6be627fc05417d477ec6d1526ab1797fe") (:revdesc . "v1.5-0-g713c07b6be62") (:keywords "compilation" "integration" "processes"))])
 (floobits . [(1 9 4) ((json (1 2)) (highlight (0))) "Floobits plugin for real-time collaborative editing" tar ((:url . "https://github.com/Floobits/floobits-emacs") (:commit . "93b3317fb6c842efe165e54c8a32bf51d436837d") (:revdesc . "93b3317fb6c8") (:keywords "comm" "tools"))])
 (flow-minor-mode . [(0 3) ((emacs (25 1))) "Flow type mode based on web-mode" tar ((:url . "https://github.com/an-sh/flow-minor-mode") (:commit . "50dded94ad201fdc9453656a8b15179981cd5acd") (:revdesc . "50dded94ad20"))])
 (flower . [(0 4 7) ((emacs (24 4)) (clomacs (0 0 3))) "Emacs task tracker client" tar ((:url . "https://github.com/FlowerAutomation/flower") (:commit . "0d5dd8b9b844adab1a1b7a9641daa9e98918712c") (:revdesc . "0d5dd8b9b844") (:keywords "hypermedia" "outlines" "tools" "vc") (:authors ("Sergey Sobko" . "SSobko@ptsecurity.com")) (:maintainers ("Sergey Sobko" . "SSobko@ptsecurity.com")) (:maintainer "Sergey Sobko" . "SSobko@ptsecurity.com"))])
 (flx . [(0 6 1) ((cl-lib (0 3))) "Fuzzy matching with good sorting" tar ((:url . "https://github.com/lewang/flx") (:commit . "7fce6a4cdb65ac1b52e2b409ba548767581ce34c") (:revdesc . "7fce6a4cdb65"))])
 (flx-ido . [(0 6 1) ((flx (0 1)) (cl-lib (0 3))) "Flx integration for ido" tar ((:url . "https://github.com/lewang/flx") (:commit . "7fce6a4cdb65ac1b52e2b409ba548767581ce34c") (:revdesc . "7fce6a4cdb65"))])
 (flycheck . [(34 1) ((emacs (26 1))) "On-the-fly syntax checking" tar ((:url . "https://github.com/flycheck/flycheck") (:commit . "5a9ff918f91e230ae08a6bdce7ec1f107864a5e2") (:revdesc . "5a9ff918f91e") (:keywords "convenience" "languages" "tools") (:authors ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainers ("Clément Pit-Claudel" . "clement.pitclaudel@live.com") ("fmdkdd" . "fmdkdd@gmail.com") ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainer "Clément Pit-Claudel" . "clement.pitclaudel@live.com"))])
 (flycheck-actionlint . [(0 2 0) ((emacs (26)) (flycheck (32))) "Flycheck integration for actionlint" tar ((:url . "https://github.com/tirimia/flycheck-actionlint") (:commit . "f3baf396b534f8b874d3ae885cc1dd53b5098dff") (:revdesc . "f3baf396b534") (:keywords "convenience" "github" "linter" "flycheck"))])
 (flycheck-ameba . [(0 1 0) ((flycheck (30))) "Add support for Ameba to Flycheck" tar ((:url . "https://github.com/crystal-ameba/ameba.el") (:commit . "ca5faaa0d5115dc2c301e06e062e653a7b9cb927") (:revdesc . "ca5faaa0d511") (:keywords "tools" "crystal" "ameba"))])
 (flycheck-apertium . [(0 3 0) ((flycheck (0 25))) "Apertium checkers in flycheck" tar ((:url . "https://github.com/unhammer/flycheck-apertium") (:commit . "e146ab1b929c50450ba0708e1bdd9fed85606964") (:revdesc . "v0.3.0-0-ge146ab1b929c") (:keywords "convenience" "tools" "xml") (:authors ("Kevin Brubeck Unhammer" . "unhammer+apertium@mm.st")) (:maintainers ("Kevin Brubeck Unhammer" . "unhammer+apertium@mm.st")) (:maintainer "Kevin Brubeck Unhammer" . "unhammer+apertium@mm.st"))])
 (flycheck-cask . [(0 4) ((emacs (24 1)) (flycheck (0 14)) (dash (2 4 0))) "Cask support in Flycheck" tar ((:url . "https://github.com/flycheck/flycheck-cask") (:commit . "b4667500dcf52f96ec7e0fa10dd07edf191cbf5b") (:revdesc . "0.4-0-gb4667500dcf5") (:keywords "tools" "convenience") (:authors ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainers ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com"))])
 (flycheck-cfn . [(1 0 2) ((emacs (26 1)) (flycheck (31))) "Flycheck backend for AWS cloudformation" tar ((:url . "https://gitlab.com/worr/cfn-mode") (:commit . "4cf56affe3035fda364109836e26499431095185") (:revdesc . "flycheck-cfn/v1.0.2-0-g4cf56affe303") (:keywords "convenience") (:authors ("William Orr" . "will@worrbase.com")) (:maintainers ("William Orr" . "will@worrbase.com")) (:maintainer "William Orr" . "will@worrbase.com"))])
 (flycheck-checkbashisms . [(1 5) ((emacs (24)) (flycheck (0 25))) "Checkbashisms checker for flycheck" tar ((:url . "https://github.com/cuonglm/flycheck-checkbashisms") (:commit . "39362240b8e38e6ddc1da2e2c2229e3fecdf6057") (:revdesc . "39362240b8e3") (:keywords "convenience" "tools" "sh" "unix") (:authors ("Cuong Le" . "cuong.manhle.vn@gmail.com")) (:maintainers ("Cuong Le" . "cuong.manhle.vn@gmail.com")) (:maintainer "Cuong Le" . "cuong.manhle.vn@gmail.com"))])
 (flycheck-checkpatch . [(0 1) ((emacs (25)) (flycheck (30))) "Flyckeck support for checkpatch.pl tool" tar ((:url . "https://github.com/zpp0/flycheck-checkpatch") (:commit . "aca98ea79f8b26a95f9dbdd4142b01fdd2def866") (:revdesc . "aca98ea79f8b") (:authors ("Alexander Yarygin" . "yarygin.alexander@gmail.com")) (:maintainers ("Alexander Yarygin" . "yarygin.alexander@gmail.com")) (:maintainer "Alexander Yarygin" . "yarygin.alexander@gmail.com"))])
 (flycheck-clang-tidy . [(0 3 0) ((flycheck (0 30))) "Flycheck syntax checker using clang-tidy" tar ((:url . "https://github.com/ch1bo/flycheck-clang-tidy") (:commit . "2f89698ab0d78818875d5ef08d0b470a9ffc402f") (:revdesc . "0.3.0-0-g2f89698ab0d7") (:keywords "convenience" "languages" "tools") (:authors ("Sebastian Nagel" . "sebastian.nagel@ncoding.at")) (:maintainers ("tastytea" . "tastytea@tastytea.de")) (:maintainer "tastytea" . "tastytea@tastytea.de"))])
 (flycheck-clj-kondo . [(0 0 3) ((flycheck (0 18))) "Add clj-kondo linter to flycheck" tar ((:url . "https://github.com/borkdude/flycheck-clj-kondo") (:commit . "a558bda44c4cb65b69fa53df233e8941ebd195c5") (:revdesc . "a558bda44c4c") (:authors ("Michiel Borkent" . "michielborkent@gmail.com")) (:maintainers ("Michiel Borkent" . "michielborkent@gmail.com")) (:maintainer "Michiel Borkent" . "michielborkent@gmail.com"))])
 (flycheck-clojure . [(0 1 5) ((cider (0 8 1)) (flycheck (0 22 -4 1)) (let-alist (1 0 1)) (emacs (24))) "Flycheck: Clojure support" tar ((:url . "https://github.com/clojure-emacs/squiggly-clojure") (:commit . "fc0f1473c85b5287c8a62c1eee86894c98fbb84c") (:revdesc . "0.1.5-0-gfc0f1473c85b") (:authors ("Peter Fraenkel" . "pnf@podsnap.com") ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainers ("Peter Fraenkel" . "pnf@podsnap.com")) (:maintainer "Peter Fraenkel" . "pnf@podsnap.com"))])
 (flycheck-color-mode-line . [(0 3) ((flycheck (0 15)) (dash (1 2)) (emacs (24 1))) "Change mode line color with Flycheck status" tar ((:url . "https://github.com/flycheck/flycheck-color-mode-line") (:commit . "c85319f8d2579e770c9060bfef11bedc1370d8be") (:revdesc . "c85319f8d257") (:keywords "convenience" "language" "tools") (:authors ("Sylvain Benner" . "sylvain.benner@gmail.com")) (:maintainers ("Sylvain Benner" . "sylvain.benner@gmail.com")) (:maintainer "Sylvain Benner" . "sylvain.benner@gmail.com"))])
 (flycheck-crystal . [(0 1 0) ((flycheck (30))) "Add support for Crystal to Flycheck" tar ((:url . "https://github.com/crystal-lang-tools/emacs-crystal-mode") (:commit . "0fe6815201bebe4c5ff6857bd541d95b05132b10") (:revdesc . "0fe6815201be") (:keywords "tools" "crystal"))])
 (flycheck-deno . [(0 1 0) ((emacs (26 1)) (flycheck (0 14))) "Flycheck for deno-lint" tar ((:url . "https://github.com/flycheck/flycheck-deno") (:commit . "ea7a5330535bdb25edb1c147f4d6d426abb1e097") (:revdesc . "ea7a5330535b") (:keywords "lisp" "deno") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (flycheck-dmd-dub . [(0 12) ((flycheck (0 24)) (f (0 18 2))) "Sets flycheck-dmd-include-paths from dub package information" tar ((:url . "https://github.com/atilaneves/flycheck-dmd-dub") (:commit . "41a839e18eb7159175c59a2f8b2f5f283191e33f") (:revdesc . "V0.12-0-g41a839e18eb7") (:keywords "languages") (:authors ("Atila Neves" . "atila.neves@gmail.com")) (:maintainers ("Atila Neves" . "atila.neves@gmail.com")) (:maintainer "Atila Neves" . "atila.neves@gmail.com"))])
 (flycheck-eask . [(0 1 0) ((emacs (26 1)) (flycheck (0 14))) "Eask support in Flycheck" tar ((:url . "https://github.com/flycheck/flycheck-eask") (:commit . "ca1de9d55c99c91971857f0c37abfb3da90dd012") (:revdesc . "ca1de9d55c99") (:keywords "lisp" "eask") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (flycheck-eldev . [(1 1) ((flycheck (32)) (dash (2 17)) (emacs (24 4))) "Eldev support in Flycheck" tar ((:url . "https://github.com/flycheck/flycheck-eldev") (:commit . "d222ce6a8e59385ffeeee7c3a36ee41cf9a8561e") (:revdesc . "d222ce6a8e59") (:keywords "tools" "convenience") (:authors ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainers ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainer "Paul Pogonyshev" . "pogonyshev@gmail.com"))])
 (flycheck-falco-rules . [(1 0 0) ((emacs (24 3)) (flycheck (0 25)) (let-alist (1 0 1))) "On-the-fly syntax checking for falco rules files" tar ((:url . "https://github.com/falcosecurity/flycheck-falco-rules") (:commit . "1ad301d497ade9556327053ca571ee51bf0c0633") (:revdesc . "1ad301d497ad") (:keywords "tools" "convenience"))])
 (flycheck-gometalinter . [(0 1 4) ((emacs (24)) (flycheck (0 22))) "Flycheck checker for gometalinter" tar ((:url . "https://github.com/favadi/flycheck-gometalinter") (:commit . "2e863429cc953cf4c14783e249df56d1ae669868") (:revdesc . "v0.1.4-0-g2e863429cc95") (:keywords "convenience" "tools" "go") (:authors ("Diep Pham" . "me@favadi.com")) (:maintainers ("Diep Pham" . "me@favadi.com")) (:maintainer "Diep Pham" . "me@favadi.com"))])
 (flycheck-google-cpplint . [(1 0 2) ((flycheck (0 20 -4 1))) "Help to comply with the Google C++ Style Guide" tar ((:url . "https://github.com/flycheck/flycheck-google-cpplint") (:commit . "95f2038831d1e04a4ea6f91f0a846a4f989606b7") (:revdesc . "95f2038831d1") (:keywords "flycheck" "c" "c++") (:authors ("Akiha Senda" . "senda.akiha@gmail.com")) (:maintainers ("Jen-Chieh Shen" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh Shen" . "jcs090218@gmail.com"))])
 (flycheck-grammalecte . [(2 4) ((emacs (26 1)) (flycheck (26))) "Integrate Grammalecte with Flycheck" tar ((:url . "https://git.umaneti.net/flycheck-grammalecte/") (:commit . "76aca865992d828af54d77c1cf9a70663747e080") (:revdesc . "v2.4-0-g76aca865992d") (:keywords "i18n" "text") (:authors ("Guilhem Doulcier" . "guilhem.doulcier@espci.fr") ("tienne Deparis" . "etienne@depar.is")) (:maintainers ("tienne Deparis" . "etienne@depar.is")) (:maintainer "tienne Deparis" . "etienne@depar.is"))])
 (flycheck-grammarly . [(0 2 3) ((emacs (25 1)) (flycheck (0 14)) (grammarly (0 3 0))) "Grammarly support for Flycheck" tar ((:url . "https://github.com/emacs-grammarly/flycheck-grammarly") (:commit . "64e8ffc0ddf05586398a49ae2ad5704cae6eb4c8") (:revdesc . "64e8ffc0ddf0") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (flycheck-guile . [(0 5) ((emacs (25 1)) (flycheck (0 22)) (geiser (0 20))) "A Flycheck checker for GNU Guile" tar ((:url . "https://github.com/flatwhatson/flycheck-guile") (:commit . "16c869ec2212dfaeb98f31710667199e4d702515") (:revdesc . "16c869ec2212") (:authors ("Ricardo Wurmus" . "rekado@elephly.net")) (:maintainers ("Andrew Whatson" . "whatson@tailcall.au")) (:maintainer "Andrew Whatson" . "whatson@tailcall.au"))])
 (flycheck-haskell . [(0 8) ((emacs (24 3)) (flycheck (0 25)) (haskell-mode (13 7)) (dash (2 4 0)) (seq (1 11)) (let-alist (1 0 1))) "Flycheck: Automatic Haskell configuration" tar ((:url . "https://github.com/flycheck/flycheck-haskell") (:commit . "ee3401d97cc5e8edc216f2369e9dea3d363e462c") (:revdesc . "0.8-0-gee3401d97cc5") (:keywords "tools" "convenience") (:authors ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainers ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com"))])
 (flycheck-hdevtools . [(0 3) ((flycheck (0 15))) "A flycheck checker for Haskell using hdevtools" tar ((:url . "https://github.com/flycheck/flycheck-hdevtools") (:commit . "fbf90b9a7d2d90f69ac55b57d18f0f4a47afed61") (:revdesc . "fbf90b9a7d2d") (:keywords "convenience" "languages" "tools") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flycheck-hledger . [(1 0 0) ((emacs (27 1)) (flycheck (31))) "Flycheck module to check hledger journals" tar ((:url . "https://github.com/DamienCassou/flycheck-hledger") (:commit . "87ed9d4ce448f84f10a5348d8d89d9467ee720ff") (:revdesc . "v1.0.0-0-g87ed9d4ce448") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (flycheck-indent . [(1 0 0) ((emacs (24 4)) (indent-lint (0 0 1)) (flycheck (31))) "Indent-lint frontend for flycheck" tar ((:url . "https://github.com/conao3/indent-lint.el") (:commit . "5601a716d4daeb444642736ddef420cbc1047968") (:revdesc . "5601a716d4da") (:keywords "tools") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (flycheck-indicator . [(1 1 1) ((flycheck (0 15))) "A fancy mode line indicator for `flycheck-mode'" tar ((:url . "https://github.com/gexplorer/flycheck-indicator") (:commit . "e00d9a20cbc21d6814c27cc9206296da394478e8") (:revdesc . "e00d9a20cbc2") (:keywords "convenience" "language" "tools") (:authors ("Eder Elorriaga" . "gexplorer8@gmail.com")) (:maintainers ("Eder Elorriaga" . "gexplorer8@gmail.com")) (:maintainer "Eder Elorriaga" . "gexplorer8@gmail.com"))])
 (flycheck-ini-pyinilint . [(0 3) ((flycheck (31))) "Flycheck integration for PyINILint" tar ((:url . "https://gitlab.com/danieljrmay/flycheck-ini-pyinilint") (:commit . "54744a78d06373404933fedc3ca836916e83de51") (:revdesc . "54744a78d063") (:keywords "convenience" "files" "tools") (:authors ("Daniel J. R. May" . "daniel.may@danieljrmay.com")) (:maintainers ("Daniel J. R. May" . "daniel.may@danieljrmay.com")) (:maintainer "Daniel J. R. May" . "daniel.may@danieljrmay.com"))])
 (flycheck-irony . [(0 1 0) ((emacs (24 1)) (flycheck (0 22)) (irony (0 2 0))) "Flycheck: C/C++ support via Irony" tar ((:url . "https://github.com/Sarcasm/flycheck-irony") (:commit . "34940ae5ab8f4c721d9c1118ebfc3496d7e67a84") (:revdesc . "34940ae5ab8f") (:keywords "convenience" "tools" "c") (:authors ("Guillaume Papin" . "guillaume.papin@epitech.eu")) (:maintainers ("Guillaume Papin" . "guillaume.papin@epitech.eu")) (:maintainer "Guillaume Papin" . "guillaume.papin@epitech.eu"))])
 (flycheck-joker . [(1 5 0) ((flycheck (0 18))) "Add Clojure syntax checker (via Joker) to flycheck" tar ((:url . "https://github.com/candid82/flycheck-joker") (:commit . "93576295fef7a749bf779eeece5edd85e21868e2") (:revdesc . "v1.5.0-0-g93576295fef7") (:authors ("Roman Bataev" . "roman.bataev@gmail.com")) (:maintainers ("Roman Bataev" . "roman.bataev@gmail.com")) (:maintainer "Roman Bataev" . "roman.bataev@gmail.com"))])
 (flycheck-julia . [(0 1 1) ((emacs (24)) (flycheck (0 22))) "Julia support for Flycheck" tar ((:url . "https://github.com/gdkrmr/flycheck-julia") (:commit . "213b60a5a9a1cb7887260e1d159b5bb27167cbb6") (:revdesc . "213b60a5a9a1") (:keywords "convenience" "tools" "languages") (:authors ("Guido Kraemer" . "guido.kraemer@gmx.de")) (:maintainers ("Guido Kraemer" . "guido.kraemer@gmx.de")) (:maintainer "Guido Kraemer" . "guido.kraemer@gmx.de"))])
 (flycheck-kotlin . [(0 4) ((flycheck (0 20))) "Support kotlin in flycheck" tar ((:url . "https://github.com/whirm/flycheck-kotlin") (:commit . "5104ee9a3fdb7f0a0a3d3bcfd8dd3c45a9929310") (:revdesc . "5104ee9a3fdb") (:authors ("Elric Milon" . "whirm_REMOVETHIS__@gmx.com")) (:maintainers ("Elric Milon" . "whirm_REMOVETHIS__@gmx.com")) (:maintainer "Elric Milon" . "whirm_REMOVETHIS__@gmx.com"))])
 (flycheck-languagetool . [(0 4 1) ((emacs (25 1)) (flycheck (0 14))) "Flycheck support for LanguageTool" tar ((:url . "https://github.com/emacs-languagetool/flycheck-languagetool") (:commit . "03d023c78cca177901afe7223ee57a8e396dcf49") (:revdesc . "03d023c78cca") (:keywords "convenience" "grammar" "check") (:authors ("Jen-Chieh" . "jcs090218@gmail.com") ("Peter Oliver" . "git@mavit.org.uk")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com") ("Peter Oliver" . "git@mavit.org.uk")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (flycheck-ledger . [(0 5) ((emacs (24 1)) (flycheck (0 15))) "Flycheck integration for ledger files" tar ((:url . "https://github.com/purcell/flycheck-ledger") (:commit . "628e25ba66604946085571652a94a54f4d1ad96f") (:revdesc . "628e25ba6660") (:keywords "convenience" "languages" "tools") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flycheck-mmark . [(0 1 0) ((emacs (24 4)) (flycheck (0 29))) "Flycheck checker for MMark markdown processor" tar ((:url . "https://github.com/mmark-md/flycheck-mmark") (:commit . "b73b40cb9c5cf6bc6fa501aa87a4c30b210c0c5f") (:revdesc . "b73b40cb9c5c") (:keywords "convenience" "text") (:authors ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainers ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainer "Mark Karpov" . "markkarpov92@gmail.com"))])
 (flycheck-nimsuggest . [(0 8 1) ((flycheck (0 23)) (nim-mode (0 4 1)) (emacs (24))) "Flycheck backend for Nim using nimsuggest" tar ((:url . "https://github.com/yuutayamada/flycheck-nimsuggest") (:commit . "8b1c69e9aa924368bc4dadd4cde818ff158cd3f0") (:revdesc . "8b1c69e9aa92") (:authors ("Yuta Yamada" . "cokesboy\"at\"gmail.com")) (:maintainers ("Yuta Yamada" . "cokesboy\"at\"gmail.com")) (:maintainer "Yuta Yamada" . "cokesboy\"at\"gmail.com"))])
 (flycheck-objc-clang . [(4 0 2) ((emacs (24 4)) (flycheck (26))) "Flycheck: Objective-C support using Clang" tar ((:url . "https://github.com/GyazSquare/flycheck-objc-clang") (:commit . "5a441a31e58de17da94f933277150be39198d98c") (:revdesc . "4.0.2-0-g5a441a31e58d") (:keywords "convenience" "languages" "tools") (:authors ("Goichi Hirakawa" . "gooichi@gyazsquare.com")) (:maintainers ("Goichi Hirakawa" . "gooichi@gyazsquare.com")) (:maintainer "Goichi Hirakawa" . "gooichi@gyazsquare.com"))])
 (flycheck-ocaml . [(0 4 2) ((emacs (24 1)) (flycheck (0 22)) (merlin (3 0 1)) (let-alist (1 0 3))) "Flycheck: OCaml support" tar ((:url . "https://github.com/flycheck/flycheck-ocaml") (:commit . "7f7530043d0a52f4900ced5d202534dd5e855363") (:revdesc . "7f7530043d0a") (:keywords "convenience" "tools" "languages" "ocaml") (:authors ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainers ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.dev"))])
 (flycheck-package . [(0 14) ((emacs (24 1)) (flycheck (0 22)) (package-lint (0 2))) "A Flycheck checker for elisp package authors" tar ((:url . "https://github.com/purcell/flycheck-package") (:commit . "ecd03f83790611888d693c684d719e033f69cb40") (:revdesc . "ecd03f837906") (:keywords "lisp") (:authors ("Steve Purcell" . "steve@sanityinc.com") ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com") ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flycheck-pest . [(0 1 0) ((emacs (26 3)) (flycheck (31)) (pest-mode (0 1))) "Flycheck integration for Pest -" tar ((:url . "https://github.com/ksqsf/pest-mode") (:commit . "43447a2c70f98edd1139005e32f437d3f142442b") (:revdesc . "v0.1.0-0-g43447a2c70f9") (:keywords "convenience" "flycheck") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (flycheck-phpstan . [(0 7 2) ((emacs (24 3)) (flycheck (26)) (phpstan (0 7 2))) "Flycheck integration for PHPStan" tar ((:url . "https://github.com/emacs-php/phpstan.el") (:commit . "2dc25cb2f3d83484ea0eb063c9ffca8148828a2b") (:revdesc . "2dc25cb2f3d8") (:keywords "tools" "php") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (flycheck-pony . [(0 3 0) ((flycheck (0 25 1))) "Pony support in Flycheck" tar ((:url . "https://github.com/ponylang/flycheck-pony") (:commit . "22787cf8223ca9ec309e30a42c20a8e706d8bfbe") (:revdesc . "22787cf8223c") (:keywords "tools" "convenience"))])
 (flycheck-popup-tip . [(0 12 2) ((flycheck (0 22)) (popup (0 5)) (emacs (24))) "Display Flycheck error messages using popup.el" tar ((:url . "https://github.com/flycheck/flycheck-popup-tip") (:commit . "ef86aad907f27ca076859d8d9416f4f7727619c6") (:revdesc . "0.12.2-0-gef86aad907f2") (:keywords "convenience" "tools" "flycheck" "tooltip") (:authors ("Saša Jovanić" . "sasa@simplify.ba")) (:maintainers ("Saša Jovanić" . "sasa@simplify.ba")) (:maintainer "Saša Jovanić" . "sasa@simplify.ba"))])
 (flycheck-pos-tip . [(0 3) ((emacs (24 1)) (flycheck (0 22)) (pos-tip (0 4 6))) "Display Flycheck errors in GUI tooltips" tar ((:url . "https://github.com/flycheck/flycheck-pos-tip") (:commit . "3f1d5297fdff44a14ee624160eefdc678e2bd0bd") (:revdesc . "0.3-0-g3f1d5297fdff") (:keywords "tools" "convenience") (:authors ("Akiha Senda" . "senda.akiha@gmail.com") ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainers ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com"))])
 (flycheck-projectile . [(0 2 0) ((emacs (25 1)) (flycheck (31)) (projectile (2 2))) "Project-wide errors" tar ((:url . "https://github.com/nbfalcon/flycheck-projectile") (:commit . "ce6e9e8793a55dace13d5fa13badab2dca3b5ddb") (:revdesc . "ce6e9e8793a5") (:authors ("Nikita Bloshchanevich" . "nikblos@outlook.com")) (:maintainers ("Nikita Bloshchanevich" . "nikblos@outlook.com")) (:maintainer "Nikita Bloshchanevich" . "nikblos@outlook.com"))])
 (flycheck-psalm . [(0 6 0) ((emacs (24 3)) (flycheck (26)) (psalm (0 6 0))) "Flycheck integration for Psalm" tar ((:url . "https://github.com/emacs-php/psalm.el") (:commit . "aaa77b4ceb61d41a520baa0b84b9b236c99c4156") (:revdesc . "aaa77b4ceb61") (:keywords "tools" "php") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (flycheck-pycheckers . [(0 16) ((flycheck (0 18))) "Multiple syntax checker for Python, using Flycheck" tar ((:url . "https://github.com/msherry/flycheck-pycheckers") (:commit . "055830b67cd0f0d7196a5b71bd5cce3197a557a7") (:revdesc . "055830b67cd0") (:keywords "convenience" "tools" "languages"))])
 (flycheck-relint . [(0 6) ((emacs (26 1)) (flycheck (0 22)) (relint (1 15))) "A Flycheck checker for elisp regular expressions" tar ((:url . "https://github.com/purcell/flycheck-relint") (:commit . "d1e54d4bfdb12d0b60a1b9a8c2b11799426ddc57") (:revdesc . "d1e54d4bfdb1") (:keywords "lisp") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flycheck-rtags . [(3 23) ((emacs (24)) (flycheck (0 23)) (rtags (2 10))) "RTags Flycheck integration" tar ((:url . "https://github.com/Andersbakken/rtags") (:commit . "7169ed577d676690a3c6f0025b54e8477d80eacf") (:revdesc . "v3.23-0-g7169ed577d67") (:authors ("Christian Schwarzgruber" . "c.schwarzgruber.cs@gmail.com")) (:maintainers ("Christian Schwarzgruber" . "c.schwarzgruber.cs@gmail.com")) (:maintainer "Christian Schwarzgruber" . "c.schwarzgruber.cs@gmail.com"))])
 (flycheck-rust . [(1 1) ((emacs (24 1)) (flycheck (28)) (dash (2 13 0)) (seq (2 3)) (let-alist (1 0 4))) "Flycheck: Rust additions and Cargo support" tar ((:url . "https://github.com/flycheck/flycheck-rust") (:commit . "a139cd53c5062697e9ed94ad80b803c37d999600") (:revdesc . "1.1-0-ga139cd53c506") (:keywords "tools" "convenience") (:authors ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainers ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com"))])
 (flycheck-stan . [(10 2 0) ((emacs (25 1)) (flycheck (0 16 0)) (stan-mode (10 1 0))) "Add Stan support for Flycheck" tar ((:url . "https://github.com/stan-dev/stan-mode") (:commit . "2dd330604563d143031fc8ffd516266217aa1f9b") (:revdesc . "2dd330604563") (:keywords "c" "languages") (:authors ("Jeffrey Arnold" . "jeffrey.arnold@gmail.com") ("Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu")) (:maintainers ("Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu")) (:maintainer "Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu"))])
 (flycheck-status-emoji . [(1 3) ((cl-lib (0 1)) (emacs (24)) (flycheck (0 20)) (let-alist (1 0))) "Show flycheck status using cute, compact emoji" tar ((:url . "https://github.com/liblit/flycheck-status-emoji") (:commit . "4bd113ab42dec9544b66e0a27ed9008ce8148433") (:revdesc . "4bd113ab42de") (:keywords "convenience" "languages" "tools") (:authors ("Ben Liblit" . "liblit@acm.org")) (:maintainers ("Ben Liblit" . "liblit@acm.org")) (:maintainer "Ben Liblit" . "liblit@acm.org"))])
 (flycheck-swift . [(2 0) ((emacs (24 4)) (flycheck (0 25))) "Flycheck extension for Apple's Swift" tar ((:url . "https://github.com/swift-emacs/flycheck-swift") (:commit . "822d1415eabfd464adc52063f9c44da1c87f0ff9") (:revdesc . "822d1415eabf") (:keywords "languages" "swift"))])
 (flycheck-swift3 . [(3 2 0) ((emacs (25 1)) (flycheck (26))) "Flycheck: Swift support for Apple swift-mode" tar ((:url . "https://github.com/GyazSquare/flycheck-swift3") (:commit . "14cb83c71a03bb7ae0952ee1707783219fda980e") (:revdesc . "14cb83c71a03") (:keywords "convenience" "languages" "tools") (:authors ("Goichi Hirakawa" . "gooichi@gyazsquare.com")) (:maintainers ("Goichi Hirakawa" . "gooichi@gyazsquare.com")) (:maintainer "Goichi Hirakawa" . "gooichi@gyazsquare.com"))])
 (flycheck-tip . [(0 5 0) ((flycheck (0 13)) (emacs (24 1)) (popup (0 5 0))) "Show flycheck/flymake errors by tooltip" tar ((:url . "https://github.com/yuutayamada/flycheck-tip") (:commit . "0bfddf52ae4ec48d970324f8336a5d62986bbc9e") (:revdesc . "0bfddf52ae4e") (:keywords "flycheck") (:authors ("Yuta Yamada" . "cokesboy\"at\"gmail.com")) (:maintainers ("Yuta Yamada" . "cokesboy\"at\"gmail.com")) (:maintainer "Yuta Yamada" . "cokesboy\"at\"gmail.com"))])
 (flycheck-title . [(1 0) ((flycheck (30)) (emacs (24))) "Show flycheck errors in the frame title" tar ((:url . "https://github.com/Wilfred/flycheck-title") (:commit . "2b7a11c39420e517a07d0c95126455c1617f2c61") (:revdesc . "2b7a11c39420") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (flycheck-vdm . [(0 0 4) ((emacs (24)) (flycheck (32 -4)) (vdm-mode (0 0 4))) "Syntax checking for vdm-mode" tar ((:url . "https://github.com/peterwvj/vdm-mode") (:commit . "e131edb0d35de28bd47d6128dd70d9a6fc46e0fa") (:revdesc . "e131edb0d35d") (:keywords "languages") (:authors ("Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com")) (:maintainers ("Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com")) (:maintainer "Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com"))])
 (flycheck-yamllint . [(0 1 0) ((flycheck (30))) "Flycheck integration for YAMLLint" tar ((:url . "https://github.com/krzysztof-magosa/flycheck-yamllint") (:commit . "aa211b1243168a4f752888c0014c5b9d2da178b1") (:revdesc . "aa211b124316") (:keywords "convenience" "languages" "tools") (:authors ("Krzysztof Magosa" . "krzysztof@magosa.pl")) (:maintainers ("Krzysztof Magosa" . "krzysztof@magosa.pl")) (:maintainer "Krzysztof Magosa" . "krzysztof@magosa.pl"))])
 (flycheck-ycmd . [(1 2) ((emacs (24)) (dash (2 13 0)) (flycheck (0 22)) (ycmd (1 2)) (let-alist (1 0 5))) "Flycheck integration for ycmd" tar ((:url . "https://github.com/abingham/emacs-ycmd") (:commit . "d042a673b4d717c3ca9d641f120bfe16c994c740") (:revdesc . "d042a673b4d7") (:authors ("Austin Bingham" . "austin.bingham@gmail.com")) (:maintainers ("Austin Bingham" . "austin.bingham@gmail.com")) (:maintainer "Austin Bingham" . "austin.bingham@gmail.com"))])
 (flymake-actionlint . [(0 1 0) ((emacs (24 1)) (flymake-easy (0 0 0))) "A Flymake handler for actionlint" tar ((:url . "https://github.com/ROCKTAKEY/flymake-actionlint") (:commit . "59d1f17a52bd48ad39f18900c8c77255f9f37718") (:revdesc . "v0.1.0-0-g59d1f17a52bd") (:keywords "convenience") (:authors ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainers ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainer "ROCKTAKEY" . "rocktakey@gmail.com"))])
 (flymake-ansible-lint . [(1 0 1) ((emacs (26 1))) "A Flymake backend for ansible-lint" tar ((:url . "https://github.com/jamescherti/flymake-ansible-lint.el") (:commit . "0503a9b7ace1d0909ba5d20f9474451621c2011a") (:revdesc . "1.0.1-0-g0503a9b7ace1") (:keywords "tools"))])
 (flymake-bashate . [(1 0 1) ((flymake-quickdef (1 0 0)) (emacs (26 1))) "A Flymake backend for bashate (a Bash style checker)" tar ((:url . "https://github.com/jamescherti/flymake-bashate.el") (:commit . "2339c28cd2aa6e63c5aeb5e904dd5b0060dc264e") (:revdesc . "1.0.1-0-g2339c28cd2aa") (:keywords "tools"))])
 (flymake-coffee . [(0 12) ((flymake-easy (0 1))) "A flymake handler for coffee script" tar ((:url . "https://github.com/purcell/flymake-coffee") (:commit . "d4ef325255ea36d1dd622f29284fe72c3fc9abc0") (:revdesc . "d4ef325255ea") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-collection . [(1 0 1) ((emacs (28 1)) (let-alist (1 0)) (flymake (1 2 1))) "Collection of checkers for flymake, bringing flymake to the level of flycheck" tar ((:url . "https://github.com/mohkale/flymake-collection") (:commit . "6fb90eefc2ad6214127de2ccff5160bf1d47eb87") (:revdesc . "6fb90eefc2ad") (:keywords "language" "tools") (:authors ("Mohsin Kaleem" . "mohkale@kisara.moe")) (:maintainers ("Mohsin Kaleem" . "mohkale@kisara.moe")) (:maintainer "Mohsin Kaleem" . "mohkale@kisara.moe"))])
 (flymake-css . [(0 3) ((flymake-easy (0 1))) "Flymake support for css using csslint" tar ((:url . "https://github.com/purcell/flymake-css") (:commit . "3e56d47d3c53e39741aa4f702bb9fb827cce22ed") (:revdesc . "3e56d47d3c53") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-cursor . [(1 0 2) ((flymake (0 3))) "Show flymake messages in the minibuffer after delay" tar ((:url . "https://github.com/flymake/emacs-flymake-cursor") (:commit . "5cac5045398b1436ceb143d48961b50d38ae1396") (:revdesc . "5cac5045398b") (:keywords "languages" "mode" "flymake") (:authors ("Dino Chiesa" . "dpchiesa@hotmail.com") ("Sam Graham" . "libflymake-emacsBLAHBLAHillusori.co.uk")) (:maintainers ("Sam Graham" . "libflymake-emacsBLAHBLAHillusori.co.uk")) (:maintainer "Sam Graham" . "libflymake-emacsBLAHBLAHillusori.co.uk"))])
 (flymake-diagnostic-at-point . [(1 2 0) ((emacs (26 1)) (popup (0 5 3))) "Display flymake diagnostics at point" tar ((:url . "https://github.com/meqif/flymake-diagnostic-at-point") (:commit . "379616b1c6f5ebeaf08fbe54ae765008a78b3be7") (:revdesc . "379616b1c6f5") (:keywords "convenience" "languages" "tools") (:authors ("Ricardo Martins" . "ricardo@scarybox.net")) (:maintainers ("Ricardo Martins" . "ricardo@scarybox.net")) (:maintainer "Ricardo Martins" . "ricardo@scarybox.net"))])
 (flymake-eask . [(0 1 0) ((emacs (26 1)) (flymake-easy (0 1))) "Eask support in Flymake" tar ((:url . "https://github.com/flymake/flymake-eask") (:commit . "5e1a3efa93e823da95ac4c1e79ab3812c112e6aa") (:revdesc . "5e1a3efa93e8") (:keywords "lisp" "eask") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (flymake-easy . [(0 10) nil "Helpers for easily building flymake checkers" tar ((:url . "https://github.com/purcell/flymake-easy") (:commit . "2a24f260cdc3b9c8f9263b653a475d90efa1d392") (:revdesc . "2a24f260cdc3") (:keywords "convenience" "internal") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-eldev . [(1 0) ((dash (2 17)) (emacs (28 1))) "Eldev support in Flymake" tar ((:url . "https://github.com/emacs-eldev/flymake-eldev") (:commit . "947d3f43d19ddf67dffcaa3ba66c51ce1077dda7") (:revdesc . "947d3f43d19d") (:keywords "tools" "convenience") (:authors ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainers ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainer "Paul Pogonyshev" . "pogonyshev@gmail.com"))])
 (flymake-elisp-config . [(1 0 0) ((emacs (28 1))) "Setup load-path for flymake on Emacs Lisp mode" tar ((:url . "https://github.com/ROCKTAKEY/flymake-elisp-config") (:commit . "a2d211fb7ae419186e42c4510c7477f8f2893b5f") (:revdesc . "v1.0.0-0-ga2d211fb7ae4") (:keywords "lisp") (:authors ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainers ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainer "ROCKTAKEY" . "rocktakey@gmail.com"))])
 (flymake-eslint . [(1 5 0) ((emacs (26 0))) "A Flymake backend for Javascript using eslint" tar ((:url . "https://github.com/orzechowskid/flymake-eslint") (:commit . "6e2d376f84ddf9af593072954c97e9c82ab85331") (:revdesc . "6e2d376f84dd"))])
 (flymake-flycheck . [(0 2) ((flycheck (31)) (emacs (26 1))) "Use flycheck checkers as flymake backends" tar ((:url . "https://github.com/purcell/flymake-flycheck") (:commit . "cc50a97ee1384d260c56aca257a1dbf770084330") (:revdesc . "cc50a97ee138") (:keywords "convenience" "languages" "tools") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-gjshint . [(0 0 6) nil "A flymake handler for javascript using both jshint and gjslint" tar ((:url . "https://github.com/yasuyk/flymake-gjshint-el") (:commit . "71495ee5303de18293decd57ab9f9abdbaabfa05") (:revdesc . "0.0.6-0-g71495ee5303d") (:keywords "flymake" "javascript" "jshint" "gjslint") (:authors ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainers ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainer "Yasuyuki Oka" . "yasuyk@gmail.com"))])
 (flymake-grammarly . [(0 2 1) ((emacs (26 1)) (grammarly (0 3 0))) "Flymake support for Grammarly" tar ((:url . "https://github.com/emacs-grammarly/flymake-grammarly") (:commit . "5e5dc903642d8b66f6400d0ac34ca08b836d8195") (:revdesc . "5e5dc903642d") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (flymake-haml . [(0 8) ((flymake-easy (0 1))) "A flymake handler for haml files" tar ((:url . "https://github.com/purcell/flymake-haml") (:commit . "343449920866238db343d61343bc845cc8bc5e1b") (:revdesc . "343449920866") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-haskell-multi . [(0 3) ((flymake-easy (0 1))) "Syntax-check haskell-mode using both ghc and hlint" tar ((:url . "https://github.com/purcell/flymake-haskell-multi") (:commit . "d2c9aeffd33440d360c1ea0c5aef6d1f171599f9") (:revdesc . "d2c9aeffd334") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-hledger . [(0 1 0) ((emacs (28 2))) "Flymake module to check hledger journals" tar ((:url . "https://github.com/DamienCassou/flymake-hledger") (:commit . "542f44933712b6e0abd8e4f3e51787a1afb40440") (:revdesc . "v0.1.0-0-g542f44933712") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (flymake-hlint . [(0 2) ((flymake-easy (0 1))) "A flymake handler for haskell-mode files using hlint" tar ((:url . "https://github.com/purcell/flymake-hlint") (:commit . "d540e250a80a09da3036c16bf86f9deb6d738c9c") (:revdesc . "d540e250a80a") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-jslint . [(0 23) nil "Flymake support for javascript using jslint" tar ((:url . "https://github.com/purcell/flymake-jslint") (:commit . "30693f75059bab53a9d2eb676c68751f4d8b091c") (:revdesc . "30693f75059b") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-json . [(0 1) ((flymake-easy (0 1))) "A flymake handler for json using jsonlint" tar ((:url . "https://github.com/purcell/flymake-json") (:commit . "ad8e482db1ad29e23bdd9d089b9bc3615649ce65") (:revdesc . "ad8e482db1ad") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-kondor . [(0 1 3) ((emacs (26 1))) "Linter with clj-kondo" tar ((:url . "https://github.com/turbo-cafe/flymake-kondor") (:commit . "784e57f36812a37e323409b90b935ef3c6920a22") (:revdesc . "0.1.3-0-g784e57f36812"))])
 (flymake-languagetool . [(0 2 0) ((emacs (27 1)) (s (1 9 0))) "Flymake support for LanguageTool" tar ((:url . "https://github.com/emacs-languagetool/flymake-languagetool") (:commit . "f0f105ab11fd1de1379baef91fcd46e6c2464dca") (:revdesc . "f0f105ab11fd") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (flymake-less . [(0 3) ((less-css-mode (0 15))) "Flymake handler for LESS stylesheets (lesscss.org)" tar ((:url . "https://github.com/purcell/flymake-less") (:commit . "8cbb5e41c8f4b988cee3ef4449cfa9aea3540893") (:revdesc . "8cbb5e41c8f4") (:keywords "languages") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-markdownlint . [(0 1 3) ((emacs (27 1))) "Markdown linter with markdownlint" tar ((:url . "https://codeberg.org/shaohme/flymake-markdownlint") (:commit . "59e3520668d9394c573e07b7980a2d48d9f6086c") (:revdesc . "59e3520668d9") (:authors ("Martin Kjær Jørgensen" . "mkj@gotu.dk")) (:maintainers ("Martin Kjær Jørgensen" . "mkj@gotu.dk")) (:maintainer "Martin Kjær Jørgensen" . "mkj@gotu.dk"))])
 (flymake-perlcritic . [(1 0 3) ((flymake (0 3))) "Flymake handler for Perl to invoke Perl::Critic" tar ((:url . "https://github.com/flymake/emacs-flymake-perlcritic") (:commit . "0692d6ad5495f6e5438bde0a10345829b8e1def8") (:revdesc . "0692d6ad5495") (:authors ("Sam Graham" . "libflymake-perlcritic-emacsBLAHBLAHillusori.co.uk")) (:maintainers ("Sam Graham" . "libflymake-perlcritic-emacsBLAHBLAHillusori.co.uk")) (:maintainer "Sam Graham" . "libflymake-perlcritic-emacsBLAHBLAHillusori.co.uk"))])
 (flymake-pest . [(0 1 0) ((emacs (26 3)) (pest-mode (0 1))) "A flymake handler for Pest files" tar ((:url . "https://github.com/ksqsf/pest-mode") (:commit . "43447a2c70f98edd1139005e32f437d3f142442b") (:revdesc . "v0.1.0-0-g43447a2c70f9") (:keywords "languages" "flymake") (:authors ("ksqsf" . "i@ksqsf.moe") ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("ksqsf" . "i@ksqsf.moe") ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "ksqsf" . "i@ksqsf.moe"))])
 (flymake-php . [(0 5) ((flymake-easy (0 1))) "A flymake handler for php-mode files" tar ((:url . "https://github.com/purcell/flymake-php") (:commit . "91f867e209011af31a2ca2d8f6874b994403bcb2") (:revdesc . "91f867e20901") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-phpcs . [(1 1) ((flymake-easy (0 9))) "Making flymake work with PHP CodeSniffer" tar ((:url . "https://github.com/flymake/flymake-phpcs") (:commit . "f947ba3066c1fa903d2ec69d67bf84413f51eb3f") (:revdesc . "f947ba3066c1") (:keywords "flymake" "phpcs" "php"))])
 (flymake-phpstan . [(0 7 2) ((emacs (26 1)) (phpstan (0 7 2))) "Flymake backend for PHP using PHPStan" tar ((:url . "https://github.com/emacs-php/phpstan.el") (:commit . "2dc25cb2f3d83484ea0eb063c9ffca8148828a2b") (:revdesc . "2dc25cb2f3d8") (:keywords "tools" "php") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (flymake-python-pyflakes . [(0 9) ((flymake-easy (0 8))) "A flymake handler for python-mode files using pyflakes (or flake8)" tar ((:url . "https://github.com/purcell/flymake-python-pyflakes") (:commit . "78806a25b0f01f03df4210a79a6eaeec59511d7a") (:revdesc . "78806a25b0f0") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-quickdef . [(1 0 0) ((emacs (26 1))) "Quickly define a new Flymake backend" tar ((:url . "https://github.com/karlotness/flymake-quickdef") (:commit . "150c5839768a3d32f988f9dc08052978a68f2ad7") (:revdesc . "150c5839768a") (:keywords "languages" "tools" "convenience" "lisp"))])
 (flymake-rakudo . [(0 1 0) ((emacs (28 1)) (flymake-collection (2 0 0)) (let-alist (1 0))) "Flymake syntax checker for Rakudo" tar ((:url . "https://github.com/Raku/flymake-rakudo") (:commit . "f8e3d03a7207876cd891174702efd572d74f2e49") (:revdesc . "v0.1.0-0-gf8e3d03a7207") (:keywords "language" "tools" "convenience") (:authors ("Siavash Askari Nasr" . "ciavash@proton.me")) (:maintainers ("Siavash Askari Nasr" . "ciavash@proton.me")) (:maintainer "Siavash Askari Nasr" . "ciavash@proton.me"))])
 (flymake-ruby . [(0 8) ((flymake-easy (0 1))) "A flymake handler for ruby-mode files" tar ((:url . "https://github.com/purcell/flymake-ruby") (:commit . "e14e8e2abda223bd3920dbad0eefd5af5973ae6d") (:revdesc . "e14e8e2abda2") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-sass . [(0 6) ((flymake-easy (0 1))) "Flymake handler for sass files" tar ((:url . "https://github.com/purcell/flymake-sass") (:commit . "1c7664818db539de7f3dab396c013528a3f5b8b4") (:revdesc . "1c7664818db5") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-shell . [(0 8) ((flymake-easy (0 1))) "A flymake syntax-checker for shell scripts" tar ((:url . "https://github.com/purcell/flymake-shell") (:commit . "ec097bd77db5523a04ceb15a128e01689d36fb90") (:revdesc . "ec097bd77db5") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (flymake-swi-prolog . [(0 2 2) ((emacs (26 1))) "A Flymake backend for SWI-Prolog" tar ((:url . "https://git.sr.ht/~eshel/flymake-swi-prolog") (:commit . "ae0e4b706a40b71c007ed6cb0ec5425d49bea4c3") (:revdesc . "v0.2.2-0-gae0e4b706a40") (:keywords "languages"))])
 (flymake-yamllint . [(0 1 4) ((emacs (26 1))) "YAML linter with yamllint" tar ((:url . "https://codeberg.org/shaohme/flymake-yamllint") (:commit . "f269e6614993f3c56d545e7d7b225ca2ba1da342") (:revdesc . "f269e6614993") (:authors ("Martin Kjær Jørgensen" . "mkj@gotu.dk")) (:maintainers ("Martin Kjær Jørgensen" . "mkj@gotu.dk")) (:maintainer "Martin Kjær Jørgensen" . "mkj@gotu.dk"))])
 (flyspell-correct . [(0 6 1) ((emacs (24))) "Correcting words with flyspell via custom interface" tar ((:url . "https://github.com/d12frosted/flyspell-correct") (:commit . "7b4cf8c9ba5ac65e3bb2b62f5b72d45f4c9cf7b6") (:revdesc . "7b4cf8c9ba5a") (:authors ("Boris Buliga" . "boris@d12frosted.io")) (:maintainers ("Boris Buliga" . "boris@d12frosted.io")) (:maintainer "Boris Buliga" . "boris@d12frosted.io"))])
 (flyspell-correct-avy-menu . [(0 6 1) ((flyspell-correct (0 5 0)) (avy-menu (0 1 1)) (emacs (24))) "Correcting words with flyspell via avy-menu interface" tar ((:url . "https://github.com/d12frosted/flyspell-correct") (:commit . "7b4cf8c9ba5ac65e3bb2b62f5b72d45f4c9cf7b6") (:revdesc . "7b4cf8c9ba5a") (:authors ("Boris Buliga" . "boris@d12frosted.io") ("Clemens Radermacher" . "clemera@posteo.net")) (:maintainers ("Boris Buliga" . "boris@d12frosted.io") ("Clemens Radermacher" . "clemera@posteo.net")) (:maintainer "Boris Buliga" . "boris@d12frosted.io"))])
 (flyspell-correct-helm . [(0 6 1) ((flyspell-correct (0 5 0)) (helm (1 9 0)) (emacs (24))) "Correcting words with flyspell via helm interface" tar ((:url . "https://github.com/d12frosted/flyspell-correct") (:commit . "7b4cf8c9ba5ac65e3bb2b62f5b72d45f4c9cf7b6") (:revdesc . "7b4cf8c9ba5a") (:authors ("Boris Buliga" . "boris@d12frosted.io")) (:maintainers ("Boris Buliga" . "boris@d12frosted.io")) (:maintainer "Boris Buliga" . "boris@d12frosted.io"))])
 (flyspell-correct-ivy . [(0 6 1) ((flyspell-correct (0 5 0)) (ivy (0 8 0)) (emacs (24))) "Correcting words with flyspell via ivy interface" tar ((:url . "https://github.com/d12frosted/flyspell-correct") (:commit . "7b4cf8c9ba5ac65e3bb2b62f5b72d45f4c9cf7b6") (:revdesc . "7b4cf8c9ba5a") (:authors ("Boris Buliga" . "boris@d12frosted.io")) (:maintainers ("Boris Buliga" . "boris@d12frosted.io")) (:maintainer "Boris Buliga" . "boris@d12frosted.io"))])
 (flyspell-correct-popup . [(0 6 1) ((flyspell-correct (0 5 0)) (popup (0 5 3)) (emacs (24))) "Correcting words with flyspell via popup interface" tar ((:url . "https://github.com/d12frosted/flyspell-correct") (:commit . "7b4cf8c9ba5ac65e3bb2b62f5b72d45f4c9cf7b6") (:revdesc . "7b4cf8c9ba5a") (:authors ("Boris Buliga" . "boris@d12frosted.io")) (:maintainers ("Boris Buliga" . "boris@d12frosted.io")) (:maintainer "Boris Buliga" . "boris@d12frosted.io"))])
 (flyspell-lazy . [(0 6 10) nil "Improve flyspell responsiveness using idle timers" tar ((:url . "https://github.com/rolandwalker/flyspell-lazy") (:commit . "31786fe04a4732d2f845e1c7e96fcb030182ef10") (:revdesc . "v0.6.10-0-g31786fe04a47") (:keywords "spelling") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (flyspell-popup . [(0 3) ((popup (0 5 0))) "Correcting words with Flyspell in popup menus" tar ((:url . "https://github.com/xuchunyang/flyspell-popup") (:commit . "29311849bfd253b9b689bf331860b4c4d3bd4dde") (:revdesc . "29311849bfd2") (:keywords "convenience") (:authors ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainers ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainer "Chunyang Xu" . "mail@xuchunyang.me"))])
 (fn . [(0 1 2) ((emacs (24)) (cl-lib (0 5)) (dash (2 12 1)) (dash-functional (1 2 0))) "Concise anonymous functions for Emacs Lisp" tar ((:url . "https://github.com/troyp/fn.el") (:commit . "2842e3c6d1b5c96184fa638c37b25ce5b347a1a6") (:revdesc . "0.1.2-0-g2842e3c6d1b5") (:keywords "functional"))])
 (focus . [(1 0 1) ((emacs (24 3)) (cl-lib (0 5))) "Dim the font color of text in surrounding sections" tar ((:url . "https://github.com/larstvei/Focus") (:commit . "2507ec4ec5a9402647ef85540669db1815520c15") (:revdesc . "2507ec4ec5a9") (:authors ("Lars Tveito" . "larstvei@ifi.uio.no")) (:maintainers ("Lars Tveito" . "larstvei@ifi.uio.no")) (:maintainer "Lars Tveito" . "larstvei@ifi.uio.no"))])
 (fold-dwim . [(1 2) nil "[No description available]" tar ((:url . "https://github.com/emacsattic/fold-dwim") (:commit . "4764b0246a722d37eb8ec9f204ffaccaad1755d0") (:revdesc . "1.2-0-g4764b0246a72") (:authors ("Peter Heslin" . "p.j.heslin@dur.ac.uk")) (:maintainers ("Peter Heslin" . "p.j.heslin@dur.ac.uk")) (:maintainer "Peter Heslin" . "p.j.heslin@dur.ac.uk"))])
 (fold-dwim-org . [(0 6) ((fold-dwim (1 2))) "Fold DWIM bound to org key-strokes" tar ((:url . "https://github.com/mattfidler/fold-dwim-org") (:commit . "c09bb2b46d65afbd1d0febc6fded7495be7a3037") (:revdesc . "v0.6-0-gc09bb2b46d65") (:keywords "folding" "emacs" "org-mode"))])
 (fold-this . [(0 3 0) nil "Just fold this region please" tar ((:url . "https://github.com/magnars/fold-this.el") (:commit . "90b41d7b588ab1c3295bf69f7dd87bf31b543a6a") (:revdesc . "0.3.0-0-g90b41d7b588a") (:keywords "convenience") (:authors ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (font-utils . [(0 7 8) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Utility functions for working with fonts" tar ((:url . "https://github.com/rolandwalker/font-utils") (:commit . "9192d3f8ee6a4e75f34c3fed10378674cc2b11d3") (:revdesc . "v0.7.8-0-g9192d3f8ee6a") (:keywords "extensions") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (fontawesome . [(0 4) ((helm-core (1 7 7)) (emacs (24 4))) "Fontawesome utility" tar ((:url . "https://github.com/emacsorphanage/fontawesome") (:commit . "72b4f2f83c7fdacd225aee58f93acefc53166626") (:revdesc . "72b4f2f83c7f") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (fontify-face . [(1 1 0) ((emacs (24))) "Fontify symbols representing faces with that face" tar ((:url . "https://github.com/Fuco1/fontify-face") (:commit . "fc3325c98427523d86f0b411e0515cec51ac3d8a") (:revdesc . "fc3325c98427") (:keywords "faces") (:authors ("Matúš Goljer" . "matus.goljer@gmail.com")) (:maintainers ("Matúš Goljer" . "matus.goljer@gmail.com")) (:maintainer "Matúš Goljer" . "matus.goljer@gmail.com"))])
 (fontsloth . [(0 15 3) ((f (0 20 0)) (logito (0 1)) (pcache (0 5)) (emacs (26 1))) "Elisp otf/ttf font loader/renderer" tar ((:url . "https://github.com/jollm/fontsloth") (:commit . "8ce1802b356962296a492d90cc9ae62e06c7ae43") (:revdesc . "v0.15.3-0-g8ce1802b3569") (:keywords "data" "font" "rasterization" "ttf" "otf") (:authors ("Jo Gay" . "jo.gay@mailfence.com")) (:maintainers ("Jo Gay" . "jo.gay@mailfence.com")) (:maintainer "Jo Gay" . "jo.gay@mailfence.com"))])
 (for . [(1 4) ((emacs (28 1))) "Iteration and sequence" tar ((:url . "https://github.com/usaoc/elisp-for") (:commit . "08f65ee62cc4d5fcf5c6eeed5971c43709ff9e00") (:revdesc . "08f65ee62cc4") (:keywords "extensions") (:authors ("Wing Hei Chan" . "whmunkchan@outlook.com")) (:maintainers ("Wing Hei Chan" . "whmunkchan@outlook.com")) (:maintainer "Wing Hei Chan" . "whmunkchan@outlook.com"))])
 (foreman-mode . [(0 0 1) ((s (1 9 0)) (dash (2 10 0)) (dash-functional (1 2 0)) (f (0 17 2)) (emacs (24))) "View and manage Procfile-based applications" tar ((:url . "https://github.com/zweifisch/foreman-mode") (:commit . "e90d2b56e83ab914f9ba9e78126bd7a534d5b8fb") (:revdesc . "e90d2b56e83a") (:keywords "foreman") (:authors ("ZHOU Feng" . "zf.pascal@gmail.com")) (:maintainers ("ZHOU Feng" . "zf.pascal@gmail.com")) (:maintainer "ZHOU Feng" . "zf.pascal@gmail.com"))])
 (forge . [(0 4 5) ((emacs (29 1)) (compat (30 0 0 0)) (closql (2 1 0)) (dash (2 19 1)) (emacsql (4 1 0)) (ghub (4 2 0)) (let-alist (1 0 6)) (magit (4 1 3)) (markdown-mode (2 6)) (seq (2 24)) (transient (0 8 0)) (yaml (0 5 5))) "Access Git forges from Magit" tar ((:url . "https://github.com/magit/forge") (:commit . "b2bf67a8fef501ebe01a19b39fa832482738f2f5") (:revdesc . "v0.4.5-0-gb2bf67a8fef5") (:keywords "git" "tools" "vc") (:authors ("Jonas Bernoulli" . "emacs.forge@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.forge@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.forge@jonas.bernoulli.dev"))])
 (form-feed . [(0 2 3) nil "Display ^L glyphs as horizontal lines" tar ((:url . "https://depp.brause.cc/form-feed.git") (:commit . "7ae9703577d6d58026d0248d59c89e84f658824b") (:revdesc . "7ae9703577d6") (:keywords "faces") (:authors ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainers ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainer "Vasilij Schneidermann" . "mail@vasilij.de"))])
 (format-all . [(0 6 0) ((emacs (24 4)) (inheritenv (0 1)) (language-id (0 20))) "Auto-format C, C++, JS, Python, Ruby and 50 other languages" tar ((:url . "https://github.com/lassik/emacs-format-all-the-code") (:commit . "1f4a69811b4b6a00c74fa2566ef731b17b9a2ed1") (:revdesc . "1f4a69811b4b") (:keywords "languages" "util") (:authors ("Lassi Kortela" . "lassi@lassi.io")) (:maintainers ("Lassi Kortela" . "lassi@lassi.io")) (:maintainer "Lassi Kortela" . "lassi@lassi.io"))])
 (format-sql . [(0 4) nil "Use format-sql to make your SQL readable in directly Emacs" tar ((:url . "https://github.com/paetzke/format-sql.el") (:commit . "97f475c245cd6c81a72a265678e2087cee66ac7b") (:revdesc . "97f475c245cd") (:authors ("Friedrich Paetzke" . "paetzke@fastmail.fm")) (:maintainers ("Friedrich Paetzke" . "paetzke@fastmail.fm")) (:maintainer "Friedrich Paetzke" . "paetzke@fastmail.fm"))])
 (format-table . [(0 0 1) ((emacs (25)) (dash (2 14 1))) "Parse and reformat tabular data" tar ((:url . "https://github.com/functionreturnfunction/format-table") (:commit . "dfcae3a867e574577fc09a43b045889ff155b58f") (:revdesc . "dfcae3a867e5") (:keywords "data") (:authors ("Jason Duncan" . "jasond496@msn.com")) (:maintainers ("Jason Duncan" . "jasond496@msn.com")) (:maintainer "Jason Duncan" . "jasond496@msn.com"))])
 (fortune-cookie . [(1 0 0) nil "Print a fortune in your scratch buffer" tar ((:url . "https://github.com/andyleejordan/fortune-cookie") (:commit . "bad99a2cd090f6646c7ee1125b95dd98744939c6") (:revdesc . "bad99a2cd090") (:keywords "fortune" "cowsay" "scratch" "startup") (:authors ("Andrew Schwartzmeyer" . "andrew@schwartzmeyer.com")) (:maintainers ("Andrew Schwartzmeyer" . "andrew@schwartzmeyer.com")) (:maintainer "Andrew Schwartzmeyer" . "andrew@schwartzmeyer.com"))])
 (fountain-mode . [(3 7 3) ((emacs (24 4)) (seq (2 20))) "Major mode for screenwriting in Fountain markup" tar ((:url . "https://github.com/rnkn/fountain-mode") (:commit . "195fa8670456855b592e76fb495d03cc621ad647") (:revdesc . "v3.7.3-0-g195fa8670456") (:keywords "wp" "text") (:authors ("Paul W. Rankin" . "hello@paulwrankin.com")) (:maintainers ("Paul W. Rankin" . "hello@paulwrankin.com")) (:maintainer "Paul W. Rankin" . "hello@paulwrankin.com"))])
 (fpga . [(0 2 0) ((emacs (29 1))) "FPGA & ASIC Utils" tar ((:url . "https://github.com/gmlarumbe/fpga") (:commit . "9cf7b25ab7364f4e690e86b364cc3279cdffc25e") (:revdesc . "9cf7b25ab736") (:keywords "tools") (:authors ("Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com")) (:maintainers ("Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com")) (:maintainer "Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com"))])
 (frame-purpose . [(1 0) ((emacs (25 1)) (dash (2 12)) (dash-functional (1 2 0))) "Purpose-specific frames" tar ((:url . "https://github.com/alphapapa/frame-purpose.el") (:commit . "60778ef3c02cb09a7ccc323732c89bf374dfbffe") (:revdesc . "1.0-0-g60778ef3c02c") (:keywords "buffers" "convenience" "frames") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (frames-only-mode . [(1 0 0) ((emacs (24 4)) (seq (2 3))) "Use frames instead of Emacs windows" tar ((:url . "https://github.com/davidshepherd7/frames-only-mode") (:commit . "5a2947d797a5d6f74d3a9c97f8c0ab6cff115b28") (:revdesc . "5a2947d797a5") (:keywords "frames" "windows") (:authors ("David Shepherd" . "davidshepherd7@gmail.com")) (:maintainers ("David Shepherd" . "davidshepherd7@gmail.com")) (:maintainer "David Shepherd" . "davidshepherd7@gmail.com"))])
 (frameshot . [(1 0 0) ((emacs (26 1)) (compat (30 0 0 0))) "Take screenshots of a frame" tar ((:url . "https://github.com/tarsius/frameshot") (:commit . "050ef28e4007a608f12bbd476ccc52d19854f13d") (:revdesc . "v1.0.0-0-g050ef28e4007") (:keywords "multimedia") (:authors ("Jonas Bernoulli" . "emacs.frameshot@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.frameshot@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.frameshot@jonas.bernoulli.dev"))])
 (frecency . [(1 0) ((emacs (25 1)) (a (0 1)) (dash (2 13 0))) "Library for sorting items by frequency and recency of access" tar ((:url . "https://github.com/alphapapa/frecency.el") (:commit . "4293bf4c8d571b0914e16a5aa05a6d657fdff551") (:revdesc . "v1.0-0-g4293bf4c8d57") (:keywords "extensions") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (free-keys . [(1 0 0) ((cl-lib (0 3))) "Show free keybindings for modkeys or prefixes" tar ((:url . "https://github.com/Fuco1/free-keys") (:commit . "edfd69dc369b2647447b7c28c7c1163b1ddf45b4") (:revdesc . "edfd69dc369b") (:keywords "convenience") (:authors ("Matus Goljer" . "matus.goljer@gmail.com")) (:maintainers ("Matus Goljer" . "matus.goljer@gmail.com")) (:maintainer "Matus Goljer" . "matus.goljer@gmail.com"))])
 (freeze-it . [(0 2 2) ((emacs (24 5))) "Minor mode to make your previous writing read-only" tar ((:url . "https://github.com/rnkn/freeze-it") (:commit . "6891d3b7a85da13e6d5982ac6b9588473941ec98") (:revdesc . "6891d3b7a85d") (:keywords "wp" "text") (:authors ("Paul W. Rankin" . "pwr@bydasein.com")) (:maintainers ("Paul W. Rankin" . "pwr@bydasein.com")) (:maintainer "Paul W. Rankin" . "pwr@bydasein.com"))])
 (friendly-remote-shell . [(0 2 5) ((emacs (24 1)) (cl-lib (0 6 1)) (with-shell-interpreter (0 2 5)) (friendly-tramp-path (0 1 0)) (friendly-shell (0 2 0))) "Human-friendly remote interactive shells" tar ((:url . "https://github.com/p3r7/friendly-shell") (:commit . "5cafa3f6313ce04a47c8996ea1ac6b617d155d46") (:revdesc . "5cafa3f6313c") (:keywords "processes" "terminals"))])
 (friendly-shell . [(0 2 5) ((emacs (24 1)) (cl-lib (0 6 1)) (dash (2 17 0)) (with-shell-interpreter (0 2 5))) "Better shell-mode API" tar ((:url . "https://github.com/p3r7/friendly-shell") (:commit . "5cafa3f6313ce04a47c8996ea1ac6b617d155d46") (:revdesc . "5cafa3f6313c") (:keywords "processes" "terminals"))])
 (friendly-shell-command . [(0 2 5) ((emacs (24 1)) (cl-lib (0 6 1)) (dash (2 17 0)) (with-shell-interpreter (0 2 5))) "Better shell-command API" tar ((:url . "https://github.com/p3r7/friendly-shell") (:commit . "5cafa3f6313ce04a47c8996ea1ac6b617d155d46") (:revdesc . "5cafa3f6313c") (:keywords "processes" "terminals"))])
 (friendly-tramp-path . [(0 1 0) ((cl-lib (0 6 1))) "Human-friendly TRAMP path construction" tar ((:url . "https://github.com/p3r7/friendly-tramp-path") (:commit . "be2714118876c592fae199aaa877c49475b6176a") (:revdesc . "be2714118876"))])
 (fringe-helper . [(1 0 1) nil "Helper functions for fringe bitmaps" tar ((:url . "https://github.com/nschum/fringe-helper.el") (:commit . "0f10a196c6e57222b8d4c94eafc40a96e7b20f1b") (:revdesc . "1.0.1-0-g0f10a196c6e5") (:keywords "lisp") (:authors ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainers ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainer "Nikolaj Schumacher" . "bugs*nschumde"))])
 (frontside-javascript . [(1 0 0) ((emacs (25 1)) (add-node-modules-path (1 2 0)) (company (0 9 2)) (flycheck (20201228 2104)) (js2-mode (20201220)) (js2-refactor (0 9 0)) (rjsx-mode (0 5 0)) (tide (4 0 2)) (web-mode (17)) (lsp-mode (20220124))) "JS  development that just work™️" tar ((:url . "https://github.com/thefrontside/frontmacs") (:commit . "18816534a977fbd28848389b58c22b6538cfdeec") (:revdesc . "18816534a977") (:keywords "files" "tools") (:authors ("Frontside Engineering" . "engineering@frontside.com")) (:maintainers ("Frontside Engineering" . "engineering@frontside.com")) (:maintainer "Frontside Engineering" . "engineering@frontside.com"))])
 (fsbot-data-browser . [(0 3) nil "Browse the fsbot database using tabulated-list-mode" tar ((:url . "https://github.com/Benaiah/fsbot-data-browser") (:commit . "6bca4f7de63e31839d2542f6c678b79931dec344") (:revdesc . "6bca4f7de63e") (:keywords "fsbot" "irc" "tabulated-list-mode"))])
 (fsharp-mode . [(2 0) ((emacs (25))) "Support for the F# programming language" tar ((:url . "https://github.com/fsharp/emacs-fsharp-mode") (:commit . "15964df7c65a3b46d704c85873619fec073eabc6") (:revdesc . "15964df7c65a") (:keywords "languages") (:authors ("2010-2011 Laurent Le Brun" . "laurent@le-brun.eu") ("2012-2014 Robin Neatherway" . "robin.neatherway@gmail.com")))])
 (fstar-mode . [(0 9 4 0) ((emacs (24 3)) (dash (2 11))) "Support for F* programming" tar ((:url . "https://github.com/FStarLang/fstar-mode.el") (:commit . "3a9be64827bbed8e34d38803b5c44d8d4f6cd688") (:revdesc . "3a9be64827bb") (:keywords "convenience" "languages") (:authors ("Clément Pit--Claudel" . "clement.pitclaudel@live.com")) (:maintainers ("Clément Pit--Claudel" . "clement.pitclaudel@live.com")) (:maintainer "Clément Pit--Claudel" . "clement.pitclaudel@live.com"))])
 (fuel . [(0 100) ((cl-lib (0 2)) (emacs (24 2))) "Major mode for the Factor programming language" tar ((:url . "https://github.com/factor/factor") (:commit . "80a4633f05a47547c60556baee1b43546f20e331") (:revdesc . "80a4633f05a4"))])
 (full-ack . [(1 0) nil "A front-end for ack" tar ((:url . "https://github.com/nschum/full-ack") (:commit . "0aef4be1686535f83217cafb1524818071bd8325") (:revdesc . "1.0-0-g0aef4be16865") (:keywords "tools" "matching") (:authors ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainers ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainer "Nikolaj Schumacher" . "bugs*nschumde"))])
 (fullframe . [(0 5 1) ((cl-lib (0 5))) "Generalized automatic execution in a single frame" tar ((:url . "https://git.sr.ht/~tomterl/fullframe") (:commit . "886b831c001b44ec95aec4ff36e8bc1b3003c786") (:revdesc . "0.5.1-0-g886b831c001b") (:keywords "fullscreen") (:authors ("Tom Regner" . "tom@goochesa.de")) (:maintainers ("Tom Regner" . "tom@goochesa.de")) (:maintainer "Tom Regner" . "tom@goochesa.de"))])
 (function-args . [(0 6 0) ((ivy (0 9 1))) "C++ completion for GNU Emacs" tar ((:url . "https://github.com/abo-abo/function-args") (:commit . "0b07db81c0c1fa88d1ec763219ee57640858f79d") (:revdesc . "0b07db81c0c1") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com"))])
 (fussy . [(2 1) ((emacs (28 2)) (flx (0 5)) (compat (30 0 0 0))) "Fuzzy completion style using `flx'" tar ((:url . "https://github.com/jojojames/fussy") (:commit . "dd66f96400797f8db5e6335617fafe41340df85c") (:revdesc . "dd66f9640079") (:keywords "matching") (:authors ("James Nguyen" . "james@jojojames.com")) (:maintainers ("James Nguyen" . "james@jojojames.com")) (:maintainer "James Nguyen" . "james@jojojames.com"))])
 (fuz . [(1 3 0) ((emacs (25 1))) "Fast and precise fuzzy scoring/matching utils" tar ((:url . "https://github.com/rustify-emacs/fuz.el") (:commit . "90ca9207a9c1decda24a552b94ff41169ecccb14") (:revdesc . "1.3.0-0-g90ca9207a9c1") (:keywords "lisp") (:authors ("Zhu Zihao" . "all_but_last@163.com")) (:maintainers ("Zhu Zihao" . "all_but_last@163.com")) (:maintainer "Zhu Zihao" . "all_but_last@163.com"))])
 (fuzzy . [(0 3) nil "Fuzzy Matching" tar ((:url . "https://github.com/auto-complete/fuzzy-el") (:commit . "122939ee0a82efa1bcf405de3134debe34e4a0b6") (:revdesc . "v0.3-0-g122939ee0a82") (:keywords "convenience") (:authors ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com")) (:maintainers ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com")) (:maintainer "Tomohiro Matsuyama" . "m2ym.pub@gmail.com"))])
 (fuzzy-finder . [(0 0 1) ((emacs (24 4))) "Fuzzy Finder App Integration" tar ((:url . "https://github.com/10sr/fuzzy-finder-el") (:commit . "f459ee206cbb324c13fe939656b0b9d3a4c3c0b7") (:revdesc . "f459ee206cbb") (:keywords "matching") (:authors ("10sr" . "8.slashes@gmail.com")) (:maintainers ("10sr" . "8.slashes@gmail.com")) (:maintainer "10sr" . "8.slashes@gmail.com"))])
 (fvwm-mode . [(2 0 0) nil "A major mode for editing Fvwm configuration files" tar ((:url . "https://github.com/theBlackDragon/fvwm-mode") (:commit . "574c0370f6199c9a1492923bf0d35fdd26738d24") (:revdesc . "v2.0.0-0-g574c0370f619") (:keywords "files") (:authors ("Bert Geens" . "bert@lair.be")) (:maintainers ("Bert Geens" . "bert@lair.be")) (:maintainer "Bert Geens" . "bert@lair.be"))])
 (fwb-cmds . [(2 0 2) ((emacs (26 1)) (compat (30 0 0 0))) "Misc frame, window and buffer commands" tar ((:url . "https://github.com/tarsius/fwb-cmds") (:commit . "973a0033c406ce644ce0fb87de70c2f4046ab1b7") (:revdesc . "v2.0.2-0-g973a0033c406") (:keywords "convenience") (:authors ("Jonas Bernoulli" . "emacs.fwb-cmds@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.fwb-cmds@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.fwb-cmds@jonas.bernoulli.dev"))])
 (fxrd-mode . [(1 0) ((s (1 2))) "Major mode for editing fixed field width files" tar ((:url . "https://github.com/msherry/fxrd-mode") (:commit . "795b969346982b75e24b5c8619b46197982fbb4d") (:revdesc . "1.0-0-g795b96934698") (:keywords "convenience") (:authors ("Marc Sherry" . "(msherry@gmail.com)")) (:maintainers ("Marc Sherry" . "(msherry@gmail.com)")) (:maintainer "Marc Sherry" . "(msherry@gmail.com)"))])
 (fzf . [(0 2) ((emacs (24 4))) "A front-end for fzf" tar ((:url . "https://github.com/bling/fzf.el") (:commit . "383a050920e9b99d37c21d041deb7f38b202485c") (:revdesc . "383a050920e9") (:keywords "fzf" "fuzzy" "search"))])
 (gams-mode . [(6 16) ((emacs (24 3))) "Major mode for General Algebraic Modeling System (GAMS)" tar ((:url . "https://github.com/ShiroTakeda/gams-mode") (:commit . "6fb90d9c83747ac020743cd7a8c2efda0c5936eb") (:revdesc . "6fb90d9c8374") (:keywords "languages" "tools" "gams"))])
 (gather . [(1 1 0) nil "Gather string in buffer" tar ((:url . "https://github.com/mhayashi1120/Emacs-gather") (:commit . "303af57dd2ae0fc1363a3d1a84d475167f58c84a") (:revdesc . "303af57dd2ae") (:keywords "matching" "convenience" "tools") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (gdscript-mode . [(1 4 0) ((emacs (26 3))) "Major mode for Godot's GDScript language" tar ((:url . "https://github.com/godotengine/emacs-gdscript-mode") (:commit . "ef7a7f2789d0708a624a93b0f7037dd057cd8532") (:revdesc . "ef7a7f2789d0") (:keywords "languages") (:authors ("Nathan Lovato" . "nathan@gdquest.com") ("Fabián E. Gallina" . "fgallina@gnu.org")) (:maintainers (nil . "nathan@gdquest.com")) (:maintainer nil . "nathan@gdquest.com"))])
 (geben . [(1 1 1) ((emacs (24 3)) (cl-lib (0 5))) "DBGp protocol frontend, a script debugger" tar ((:url . "https://github.com/ahungry/geben") (:commit . "003abd23a7468daa133dfbc7ef85d0d61a0410dc") (:revdesc . "003abd23a746") (:keywords "c" "comm" "tools") (:authors ("Matthew Carter" . "m@ahungry.com")) (:maintainers ("Matthew Carter" . "m@ahungry.com")) (:maintainer "Matthew Carter" . "m@ahungry.com"))])
 (geben-helm-projectile . [(0 0 4) ((emacs (24)) (geben (0 26)) (helm-projectile (0 13 0))) "Integrate helm-projectile with geben" tar ((:url . "https://github.com/ahungry/geben-helm-projectile") (:commit . "31ce0faca5dcc71924884f03fd5a7a25d00ccd9b") (:revdesc . "31ce0faca5dc") (:keywords "ahungry" "emacs" "geben" "helm" "projectile" "debug") (:authors ("Matthew Carter" . "m@ahungry.com")) (:maintainers ("Matthew Carter" . "m@ahungry.com")) (:maintainer "Matthew Carter" . "m@ahungry.com"))])
 (geiser . [(0 31 1) ((emacs (27 1)) (project (0 8 1))) "GNU Emacs and Scheme talk to each other" tar ((:url . "https://gitlab.com/emacs-geiser/geiser") (:commit . "c034c129cfa7442881f13ae146c87785b367cff5") (:revdesc . "c034c129cfa7") (:keywords "languages" "scheme" "geiser") (:authors ("Jose Antonio Ortega Ruiz" . "(jao@gnu.org)")) (:maintainers ("Jose Antonio Ortega Ruiz" . "(jao@gnu.org)")) (:maintainer "Jose Antonio Ortega Ruiz" . "(jao@gnu.org)"))])
 (geiser-chez . [(0 18) ((emacs (26 1)) (geiser (0 19))) "Chez and Geiser talk to each other" tar ((:url . "https://gitlab.com/emacs-geiser/chez") (:commit . "04ab4387fed68659f21377dbe74513edac2fd134") (:revdesc . "04ab4387fed6") (:keywords "languages" "chez" "scheme" "geiser") (:authors ("Peter" . "craven@gmx.net")) (:maintainers ("Jose A Ortega Ruiz" . "jao@gnu.org")) (:maintainer "Jose A Ortega Ruiz" . "jao@gnu.org"))])
 (geiser-chibi . [(0 17) ((emacs (24 4)) (geiser (0 18))) "Chibi Scheme's implementation of the geiser protocols" tar ((:url . "https://gitlab.com/emacs-geiser/chibi") (:commit . "5a6a5a580ea45cd4974df21629a8d50cbe3d6e99") (:revdesc . "5a6a5a580ea4") (:keywords "languages" "chibi" "scheme" "geiser") (:authors ("Peter" . "craven@gmx.net")) (:maintainers ("Jose A Ortega Ruiz" . "jao@gnu.org")) (:maintainer "Jose A Ortega Ruiz" . "jao@gnu.org"))])
 (geiser-chicken . [(0 17) ((emacs (24 4)) (geiser (0 19))) "Chicken's implementation of the geiser protocols" tar ((:url . "https://gitlab.com/emacs-geiser/chicken") (:commit . "79a9ac78f4df7c9ec1f918313c543c116dbb8b70") (:revdesc . "79a9ac78f4df") (:keywords "languages" "chicken" "scheme" "geiser"))])
 (geiser-gambit . [(0 18 1) ((emacs (26 1)) (geiser (0 18))) "Gambit's implementation of the geiser protocols" tar ((:url . "https://gitlab.com/emacs-geiser/gambit") (:commit . "381d74ca5059b44fe3d8b5daf42214019c6d1a88") (:revdesc . "381d74ca5059") (:keywords "languages" "gambit" "scheme" "geiser") (:maintainers ("Jose A Ortega Ruiz" . "jao@gnu.org")) (:maintainer "Jose A Ortega Ruiz" . "jao@gnu.org"))])
 (geiser-gauche . [(0 14) nil "[No description available]" tar ((:url . "https://gitlab.com/emacs-geiser/gauche") (:commit . "362f1d1189c090ece8b94f6a51680f74b1ff40f9") (:revdesc . "362f1d1189c0"))])
 (geiser-guile . [(0 28 3) ((emacs (26 1)) (transient (0 3)) (geiser (0 28 1))) "Guile and Geiser talk to each other" tar ((:url . "https://gitlab.com/emacs-geiser/guile") (:commit . "a0f111f8dedd31c593c4ed12c0b99745f3c1340f") (:revdesc . "a0f111f8dedd") (:keywords "languages" "guile" "scheme" "geiser") (:authors ("Jose Antonio Ortega Ruiz" . "(jao@gnu.org)")) (:maintainers ("Jose Antonio Ortega Ruiz" . "(jao@gnu.org)")) (:maintainer "Jose Antonio Ortega Ruiz" . "(jao@gnu.org)"))])
 (geiser-kawa . [(0 14) ((emacs (26 1)) (geiser (0 11 2))) "Kawa scheme support for Geiser" tar ((:url . "https://gitlab.com/emacs-geiser/kawa") (:commit . "f76b53dbc1465dbd799e29bdcd2be34cc1603f50") (:revdesc . "f76b53dbc146") (:keywords "languages" "kawa" "scheme" "geiser") (:authors ("spellcard199" . "spellcard199@protonmail.com")) (:maintainers ("spellcard199" . "spellcard199@protonmail.com")) (:maintainer "spellcard199" . "spellcard199@protonmail.com"))])
 (geiser-mit . [(0 15) ((emacs (24 4)) (geiser (0 18))) "MIT/GNU Scheme's implementation of the geiser protocols" tar ((:url . "https://gitlab.com/emacs-geiser/mit") (:commit . "4e90e9ae815e89f3540fb9644e6016c663ef5765") (:revdesc . "4e90e9ae815e") (:keywords "languages" "mit" "scheme" "geiser") (:authors ("Peter" . "craven@gmx.net")) (:maintainers ("Jose A Ortega Ruiz" . "jao@gnu.org")) (:maintainer "Jose A Ortega Ruiz" . "jao@gnu.org"))])
 (geiser-overlay . [(1 1 0) ((emacs (24 4)) (geiser (0 31))) "Overlay Scheme evaluation results" tar ((:url . "https://github.com/port19x/geiser-overlay") (:commit . "6e2eaf7e10130a6d782e40bf42c97be63ba3b71f") (:revdesc . "6e2eaf7e1013") (:keywords "lisp" "scheme") (:authors ("port19" . "port19@port19.xyz")) (:maintainers ("port19" . "port19@port19.xyz")) (:maintainer "port19" . "port19@port19.xyz"))])
 (geiser-racket . [(1 0) ((emacs (26 1)) (geiser (0 12))) "Support for Racket in Geiser" tar ((:url . "https://gitlab.com/emacs-geiser/racket") (:commit . "42376b74ae0ad84d02c26560dfd9181493dcccd7") (:revdesc . "42376b74ae0a") (:keywords "languages" "racket" "scheme" "geiser") (:authors ("Jose Antonio Ortega Ruiz" . "(jao@gnu.org)")) (:maintainers ("Jose Antonio Ortega Ruiz" . "(jao@gnu.org)")) (:maintainer "Jose Antonio Ortega Ruiz" . "(jao@gnu.org)"))])
 (geiser-stklos . [(1 8) ((emacs (24 4)) (geiser (0 16))) "STklos Scheme implementation of the geiser protocols" tar ((:url . "https://gitlab.com/emacs-geiser/stklos") (:commit . "3358d0cc01436bd8f71a500175db2716e75b2eed") (:revdesc . "3358d0cc0143") (:keywords "languages" "stklos" "scheme" "geiser") (:authors ("Jeronimo Pellegrini" . "(j_p@aleph0.info)")) (:maintainers ("Jeronimo Pellegrini" . "(j_p@aleph0.info)")) (:maintainer "Jeronimo Pellegrini" . "(j_p@aleph0.info)"))])
 (genrnc . [(0 1 0) ((deferred (0 3 1)) (concurrent (0 3)) (log4e (0 2 0)) (yaxception (0 1))) "Generate RELAX NG Compact Schema from RELAX NG Schema, XML Schema and DTD" tar ((:url . "https://github.com/aki2o/emacs-genrnc") (:commit . "da75b1966a73ad215ec2ced4522c25f4d0bf1f9a") (:revdesc . "da75b1966a73") (:keywords "xml") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (geolocation . [(0 2 0) ((request-deferred (0 3 2)) (deferred (0 5 1)) (emacs (25 1))) "Get your location on Earth" tar ((:url . "https://github.com/gonewest818/geolocation.el") (:commit . "83ab28e64bc067016b5344dffe93e380e9807e9c") (:revdesc . "83ab28e64bc0") (:keywords "hardware") (:authors ("Neil Okamoto" . "neil.okamoto+melpa@gmail.com")) (:maintainers ("Neil Okamoto" . "neil.okamoto+melpa@gmail.com")) (:maintainer "Neil Okamoto" . "neil.okamoto+melpa@gmail.com"))])
 (german-holidays . [(0 2 1) nil "German holidays for Emacs calendar" tar ((:url . "https://github.com/rudolfochrist/german-holidays") (:commit . "d7d540c229c1a8be68ee09fbda08fe3ea31b7d29") (:revdesc . "german-holidays-0.2.1-0-gd7d540c229c1") (:authors ("Sebastian Christ" . "rudolfo.christ@gmail.com")) (:maintainers ("Sebastian Christ" . "rudolfo.christ@gmail.com")) (:maintainer "Sebastian Christ" . "rudolfo.christ@gmail.com"))])
 (gf . [(1 1 2) ((s (1 0)) (ht (2 0))) "Major mode for editing GF code" tar ((:url . "https://github.com/GrammaticalFramework/gf-emacs-mode") (:commit . "49fa46db67634530499be969ffd3c436a22d4404") (:revdesc . "49fa46db6763") (:keywords "languages") (:authors ("Johan Bockgård" . "bojohan+mail@dd.chalmers.se")) (:maintainers ("bruno cuconato" . "bcclaro+emacs@gmail.com")) (:maintainer "bruno cuconato" . "bcclaro+emacs@gmail.com"))])
 (ggo-mode . [(20210310) nil "Gengetopt major mode" tar ((:url . "https://github.com/mkjunker/ggo-mode") (:commit . "6a7617b5af3d13029e4d680a375e8107c40d0fac") (:revdesc . "6a7617b5af3d") (:keywords "extensions" "convenience" "local") (:authors ("Matthew K. Junker" . "junker@alum.mit.edu")) (:maintainers ("Matthew K. Junker" . "junker@alum.mit.edu")) (:maintainer "Matthew K. Junker" . "junker@alum.mit.edu"))])
 (ggtags . [(0 8 13) ((emacs (24)) (cl-lib (0 5))) "Emacs frontend to GNU Global source code tagging system" tar ((:url . "https://github.com/leoliu/ggtags") (:commit . "17a121af1b375a6a5c5acec52f2ffd2b9715d244") (:revdesc . "17a121af1b37") (:keywords "tools" "convenience") (:authors ("Leo Liu" . "sdl.web@gmail.com")) (:maintainers ("Leo Liu" . "sdl.web@gmail.com")) (:maintainer "Leo Liu" . "sdl.web@gmail.com"))])
 (gh . [(1 0 1) ((emacs (25 1)) (pcache (0 4 2)) (logito (0 1)) (marshal (0 9 0))) "A GitHub library for Emacs" tar ((:url . "https://github.com/sigma/gh.el") (:commit . "fa8d65f4ddc390d256eb76dd3f7e3afae02f23e7") (:revdesc . "fa8d65f4ddc3") (:authors ("Yann Hodique" . "yhodique@gmail.com")) (:maintainers ("Yann Hodique" . "yhodique@gmail.com")) (:maintainer "Yann Hodique" . "yhodique@gmail.com"))])
 (gh-notify . [(2 1 0) ((emacs (29 1)) (magit (3 3 0)) (forge (0 4 0))) "A veneer for Magit/Forge GitHub notifications" tar ((:url . "https://github.com/anticomputer/gh-notify") (:commit . "364cc30f619321b98dc6772ca50c87fa14350a50") (:revdesc . "364cc30f6193") (:keywords "comm") (:authors ("Bas Alberts" . "bas@anti.computer") ("xristos" . "xristos@sdf.org")) (:maintainers ("Bas Alberts" . "bas@anti.computer")) (:maintainer "Bas Alberts" . "bas@anti.computer"))])
 (ghc-imported-from . [(0 1 2) ((emacs (24 1))) "Haskell documentation lookup with ghc-imported-from" tar ((:url . "https://github.com/david-christiansen/ghc-imported-from-el") (:commit . "fcff08628a19f5d26151564659218cc677779b79") (:revdesc . "fcff08628a19") (:keywords "languages") (:authors ("David Raymond Christiansen" . "david@davidchristiansen.dk")) (:maintainers ("David Raymond Christiansen" . "david@davidchristiansen.dk")) (:maintainer "David Raymond Christiansen" . "david@davidchristiansen.dk"))])
 (ghq . [(0 2 0) ((emacs (26 1)) (dash (2 18 0)) (s (1 7 0))) "Ghq interface for emacs" tar ((:url . "https://github.com/lafrenierejm/emacs-ghq") (:commit . "a5de31e0e37a4a61bf5f425cece2a1e209498977") (:revdesc . "a5de31e0e37a") (:keywords "ghq") (:authors ("Roman Coedo" . "romancoedo@gmail.com")) (:maintainers ("Roman Coedo" . "romancoedo@gmail.com")) (:maintainer "Roman Coedo" . "romancoedo@gmail.com"))])
 (ghub . [(4 2 0) ((emacs (29 1)) (compat (30 0 0 0)) (let-alist (1 0 6)) (treepy (0 1 2))) "Client libraries for Git forge APIs" tar ((:url . "https://github.com/magit/ghub") (:commit . "97edaf450ef74f40e6c0bd6a35ebd3fcb710ca4d") (:revdesc . "v4.2.0-0-g97edaf450ef7") (:keywords "tools") (:authors ("Jonas Bernoulli" . "emacs.ghub@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.ghub@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.ghub@jonas.bernoulli.dev"))])
 (ghub+ . [(0 3) ((emacs (25)) (ghub (2 0)) (apiwrap (0 5))) "A thick GitHub API client built on ghub" tar ((:url . "https://github.com/vermiculus/ghub-plus") (:commit . "b4a9662f5a6562f8d1dfdda2f009ec78a107c9a2") (:revdesc . "0.3-0-gb4a9662f5a65") (:keywords "extensions" "multimedia" "tools") (:authors ("Sean Allred" . "code@seanallred.com")) (:maintainers ("Sean Allred" . "code@seanallred.com")) (:maintainer "Sean Allred" . "code@seanallred.com"))])
 (gif-screencast . [(1 2) ((emacs (25 1))) "One-frame-per-action GIF recording" tar ((:url . "https://gitlab.com/Ambrevar/emacs-gif-screencast") (:commit . "fa81e915c256271fa10b807a2935d5eaa4700dff") (:revdesc . "fa81e915c256") (:keywords "multimedia" "screencast") (:authors ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainers ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz"))])
 (girly-notebook-theme . [(1 2 1) ((emacs (26 1))) "A light theme with vivid colours and cursive text" tar ((:url . "https://github.com/melissaboiko/girly-notebook-theme") (:commit . "e27603d5afb2b60714b8acef61f3477d11c34e00") (:revdesc . "1.2.1-0-ge27603d5afb2") (:authors ("elilla&" . "elilla@transmom.love")) (:maintainers ("elilla&" . "elilla@transmom.love")) (:maintainer "elilla&" . "elilla@transmom.love"))])
 (gist . [(1 4 0) ((emacs (24 1)) (gh (0 10 0))) "Emacs integration for gist.github.com" tar ((:url . "https://github.com/defunkt/gist.el") (:commit . "a03f142455e8b39f77fbd57ee1c1e44478c1f9e2") (:revdesc . "a03f142455e8") (:keywords "tools") (:authors ("Yann Hodique" . "yann.hodique@gmail.com")) (:maintainers ("Yann Hodique" . "yann.hodique@gmail.com")) (:maintainer "Yann Hodique" . "yann.hodique@gmail.com"))])
 (git . [(0 1 1) ((s (1 7 0)) (dash (2 2 0)) (f (0 10 0))) "An Elisp API for programmatically using Git" tar ((:url . "https://github.com/rejeep/git.el") (:commit . "8b7f1477ef367b5b7de452589dd9a8ab30150d0a") (:revdesc . "8b7f1477ef36") (:keywords "git") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (git-annex . [(1 1) nil "Mode for easy editing of git-annex'd files" tar ((:url . "https://github.com/jwiegley/git-annex-el") (:commit . "7d41775a1709b5754a7779e9f64f15d336ea5c8c") (:revdesc . "v1.1-0-g7d41775a1709") (:keywords "files" "data" "git" "annex") (:authors ("John Wiegley" . "jwiegley@gmail.com")) (:maintainers ("John Wiegley" . "jwiegley@gmail.com")) (:maintainer "John Wiegley" . "jwiegley@gmail.com"))])
 (git-attr . [(1 0 0) ((emacs (24 3))) "Git attributes of buffer file" tar ((:url . "https://github.com/arnested/emacs-git-attr") (:commit . "3e43a0cf616b00a4bbd3c6b49fd2397f3103796f") (:revdesc . "1.0.0-0-g3e43a0cf616b") (:keywords "vc") (:authors ("Arne Jørgensen" . "arne@arnested.dk")) (:maintainers ("Arne Jørgensen" . "arne@arnested.dk")) (:maintainer "Arne Jørgensen" . "arne@arnested.dk"))])
 (git-auto-commit-mode . [(4 7 0) nil "Emacs Minor mode to automatically commit and push" tar ((:url . "https://github.com/ryuslash/git-auto-commit-mode") (:commit . "df07899acdb3f9c114b72fdab77107c924b3172c") (:revdesc . "4.7.0-0-gdf07899acdb3") (:keywords "vc") (:authors ("Tom Willemse" . "tom@ryuslash.org")) (:maintainers ("Tom Willemse" . "tom@ryuslash.org")) (:maintainer "Tom Willemse" . "tom@ryuslash.org"))])
 (git-backup . [(0 0 1) ((emacs (24 3)) (s (1 8 0))) "Backup each file change using git" tar ((:url . "https://github.com/antham/git-backup") (:commit . "e28d7af2d1c58fa5b8068223eb83a73f044e6a6c") (:revdesc . "e28d7af2d1c5") (:keywords "backup" "files" "tools" "git") (:authors ("Anthony HAMON" . "hamon.anth@gmail.com")) (:maintainers ("Anthony HAMON" . "hamon.anth@gmail.com")) (:maintainer "Anthony HAMON" . "hamon.anth@gmail.com"))])
 (git-cliff . [(0 7 0) ((emacs (29 1)) (transient (0 6 0)) (dash (2 19 1))) "Generate and update changelog using git-cliff" tar ((:url . "https://github.com/liuyinz/git-cliff.el") (:commit . "14be943b04c1a0e9a0771bc6fc748d0e961af825") (:revdesc . "14be943b04c1") (:keywords "tools") (:authors ("liuyinz" . "liuyinz95@gmail.com")) (:maintainers ("liuyinz" . "liuyinz95@gmail.com")) (:maintainer "liuyinz" . "liuyinz95@gmail.com"))])
 (git-command . [(0 2 0) ((term-run (0 1 4)) (with-editor (2 3 1)) (git-ps1-mode (0 2 0))) "Yet another Git interface" tar ((:url . "https://github.com/10sr/git-command-el") (:commit . "6cc5c17ca3cc1967b5402bb9a0538fb90933428d") (:revdesc . "6cc5c17ca3cc") (:keywords "utility" "git") (:authors ("10sr" . "8slashes+el[at]gmail[dot]com")) (:maintainers ("10sr" . "8slashes+el[at]gmail[dot]com")) (:maintainer "10sr" . "8slashes+el[at]gmail[dot]com"))])
 (git-commit . [(4 1 3) nil "Edit Git commit messages" tar ((:url . "https://github.com/magit/magit") (:commit . "7adad8c8d3bd61ae36659638751223cfa2c7d720") (:revdesc . "v4.1.3-0-g7adad8c8d3bd") (:authors ("Jonas Bernoulli" . "emacs.magit@jonas.bernoulli.dev") ("Sebastian Wiesner" . "lunaryorn@gmail.com") ("Florian Ragwitz" . "rafl@debian.org") ("Marius Vollmer" . "marius.vollmer@gmail.com")) (:maintainers ("Jonas Bernoulli" . "emacs.magit@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.magit@jonas.bernoulli.dev"))])
 (git-commit-insert-issue . [(0 4 1) ((emacs (25)) (projectile (0)) (s (0)) (ghub (0)) (bitbucket (0))) "Get issues list when typing \"Fixes #\"" tar ((:url . "https://gitlab.com/emacs-stuff/git-commit-insert-issue") (:commit . "8a403005ea7f7611bb1bfd829eeefe5a4f10bb40") (:revdesc . "8a403005ea7f") (:keywords "tools" "vc" "github" "gitlab" "bitbucket" "commit" "issues"))])
 (git-grep-transient . [(0 1 1) ((emacs (27 1)) (magit (3 3 0)) (transient (0 6 0)) (symbol-overlay (4 2))) "Search for text using git grep command" tar ((:url . "https://github.com/adelplanque/git-grep-transient") (:commit . "c9eb6d76e6b0600d2f90d009fdc28a171f69dd80") (:revdesc . "c9eb6d76e6b0") (:keywords "git" "tools" "vc") (:authors ("Alain Delplanque" . "alaindelplanque@mailoo.org")) (:maintainers ("Alain Delplanque" . "alaindelplanque@mailoo.org")) (:maintainer "Alain Delplanque" . "alaindelplanque@mailoo.org"))])
 (git-gutter . [(0 93) ((emacs (25 1))) "Port of Sublime Text plugin GitGutter" tar ((:url . "https://github.com/emacsorphanage/git-gutter") (:commit . "3772fdfa673f8a7f7b7894110d78b4070eccf361") (:revdesc . "3772fdfa673f") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Neil Okamoto" . "neil.okamoto+melpa@gmail.com") ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Neil Okamoto" . "neil.okamoto+melpa@gmail.com"))])
 (git-gutter+ . [(0 4) ((git-commit (0))) "Manage Git hunks straight from the buffer" tar ((:url . "https://github.com/nonsequitur/git-gutter-plus") (:commit . "f8daebb6569bb116086d8653da3505382e03d940") (:revdesc . "f8daebb6569b") (:keywords "git" "vc") (:authors ("Syohei YOSHIDA and contributors" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA and contributors" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA and contributors" . "syohex@gmail.com"))])
 (git-gutter-fringe . [(0 23) ((git-gutter (0 88)) (fringe-helper (0 1 1)) (cl-lib (0 5)) (emacs (24))) "Fringe version of git-gutter.el" tar ((:url . "https://github.com/emacsorphanage/git-gutter-fringe") (:commit . "dfc93d1064df154a809aab350942830408051da3") (:revdesc . "dfc93d1064df") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (git-gutter-fringe+ . [(0 1) ((git-gutter+ (0 1)) (fringe-helper (20130519 1641))) "Fringe version of git-gutter+.el" tar ((:url . "https://github.com/nonsequitur/git-gutter-fringe-plus") (:commit . "ce9d594c0189e78d78df26a0c26bbcf886e373cd") (:revdesc . "ce9d594c0189") (:authors ("Syohei YOSHIDA and contributors" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA and contributors" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA and contributors" . "syohex@gmail.com"))])
 (git-identity . [(0 2 1) ((emacs (25 1)) (dash (2 10)) (hydra (0 14)) (f (0 20))) "Identity management for (ma)git" tar ((:url . "https://github.com/akirak/git-identity.el") (:commit . "e7da2b3e3a5a790311431e3263b00df41d335136") (:revdesc . "e7da2b3e3a5a") (:keywords "git" "vc" "convenience") (:authors ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainers ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainer "Akira Komamura" . "akira.komamura@gmail.com"))])
 (git-lens . [(0 7 0) ((emacs (24 4))) "Show new, deleted or modified files in branch" tar ((:url . "https://codeberg.org/pidu/git-lens") (:commit . "ea49e2e005af977a08331f8caa8f64d102b3b932") (:revdesc . "ea49e2e005af") (:keywords "vc" "convenience") (:authors ("Peter Stiernström" . "peter@stiernstrom.se")) (:maintainers ("Peter Stiernström" . "peter@stiernstrom.se")) (:maintainer "Peter Stiernström" . "peter@stiernstrom.se"))])
 (git-link . [(0 9 2) ((emacs (24 3))) "Get the GitHub/Bitbucket/GitLab URL for a buffer location" tar ((:url . "https://github.com/sshaw/git-link") (:commit . "f66d1f3cdc2c99a2a5c193a6e2521118807f59e8") (:revdesc . "f66d1f3cdc2c") (:keywords "git" "vc" "github" "bitbucket" "gitlab" "sourcehut" "aws" "azure" "convenience") (:authors ("Skye Shaw" . "skye.shaw@gmail.com")) (:maintainers ("Skye Shaw" . "skye.shaw@gmail.com")) (:maintainer "Skye Shaw" . "skye.shaw@gmail.com"))])
 (git-messenger . [(0 18) ((emacs (24 3)) (popup (0 5 0))) "Pop up last commit information of current line" tar ((:url . "https://github.com/emacsorphanage/git-messenger") (:commit . "9297464c010dd8a2d584ac8e012876856655a8b5") (:revdesc . "9297464c010d") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (git-modes . [(1 4 4) ((emacs (26 1)) (compat (30 0 0 0))) "Major modes for editing Git configuration files" tar ((:url . "https://github.com/magit/git-modes") (:commit . "f99010bbeb8b6d8a0819fac0195a2ef0159d08f0") (:revdesc . "v1.4.4-0-gf99010bbeb8b") (:keywords "convenience" "vc" "git") (:authors ("Sebastian Wiesner" . "lunaryorn@gmail.com") ("Rüdiger Sonderfeld" . "ruediger@c-plusplus.net") ("Jonas Bernoulli" . "emacs.git-modes@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.git-modes@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.git-modes@jonas.bernoulli.dev"))])
 (git-ps1-mode . [(0 2 2) nil "Global minor-mode to print __git_ps1" tar ((:url . "https://github.com/10sr/git-ps1-mode-el") (:commit . "288e5c4d0ff20a4e1ac9e72b6af632f67f1d7525") (:revdesc . "288e5c4d0ff2") (:keywords "utility" "mode-line" "git") (:authors ("10sr" . "8slashes+el[at]gmail[dot]com")) (:maintainers ("10sr" . "8slashes+el[at]gmail[dot]com")) (:maintainer "10sr" . "8slashes+el[at]gmail[dot]com"))])
 (git-timemachine . [(4 13) ((emacs (24 3)) (transient (0 1 0))) "Walk through git revisions of a file" tar ((:url . "https://codeberg.org/pidu/git-timemachine") (:commit . "ac933e5cd29583c131401f3bd991d98129c316df") (:revdesc . "ac933e5cd295") (:keywords "vc") (:authors ("Peter Stiernström" . "peter@stiernstrom.se")) (:maintainers ("Peter Stiernström" . "peter@stiernstrom.se")) (:maintainer "Peter Stiernström" . "peter@stiernstrom.se"))])
 (git-walktree . [(0 1 0) ((emacs (26 1)) (git (0 1 1)) (cl-lib (0 5))) "Browse Git tree and blob objects" tar ((:url . "https://github.com/10sr/git-walktree-el") (:commit . "a1a5490b89d193724ec637818baf2d8edf97c638") (:revdesc . "a1a5490b89d1") (:keywords "vc" "utility" "git") (:authors ("10sr" . "8.slashes[at]gmail[dot]com")) (:maintainers ("10sr" . "8.slashes[at]gmail[dot]com")) (:maintainer "10sr" . "8.slashes[at]gmail[dot]com"))])
 (git-wip-timemachine . [(1 0) ((s (1 9 0))) "Walk through git-wip revisions of a file" tar ((:url . "https://github.com/itsjeyd/git-wip-timemachine") (:commit . "7da7f2acec0b1d1252d7474b13190ae88e5b205d") (:revdesc . "7da7f2acec0b") (:keywords "git") (:authors ("Tim Krones" . "t.krones@gmx.net")) (:maintainers ("Tim Krones" . "t.krones@gmx.net")) (:maintainer "Tim Krones" . "t.krones@gmx.net"))])
 (gitconfig . [(1 0 0) nil "Emacs lisp interface to work with git-config variables" tar ((:url . "https://github.com/tonini/gitconfig.el") (:commit . "6c313a39e20702ddcebc12d146f69db1ce668901") (:revdesc . "6c313a39e207") (:keywords "git" "gitconfig" "git-config"))])
 (github-browse-file . [(0 5 0) ((cl-lib (0 5))) "View the file you're editing on GitHub" tar ((:url . "https://github.com/ozanmakes/github-browse-file") (:commit . "fa5cc00a40869430fb44596792961a4cddf9c265") (:revdesc . "fa5cc00a4086") (:keywords "convenience" "vc" "git" "github") (:authors ("Ozan Sener" . "ozan@ozansener.com")) (:maintainers ("Ozan Sener" . "ozan@ozansener.com")) (:maintainer "Ozan Sener" . "ozan@ozansener.com"))])
 (github-clone . [(0 2) ((gh (0 7 2)) (magit (1 2 0)) (emacs (24))) "Fork and clone github repos" tar ((:url . "https://github.com/dgtized/github-clone.el") (:commit . "ab048cf49d9ebda73acae803bc44e731e629d540") (:revdesc . "ab048cf49d9e") (:keywords "vc" "tools") (:authors ("Charles L.G. Comstock" . "dgtized@gmail.com")) (:maintainers ("Charles L.G. Comstock" . "dgtized@gmail.com")) (:maintainer "Charles L.G. Comstock" . "dgtized@gmail.com"))])
 (github-dark-vscode-theme . [(0 4 0) ((emacs (25 1))) "The GitHub Dark Theme from Visual Studio Code" tar ((:url . "https://github.com/Justintime50/github-dark-vscode-emacs-theme") (:commit . "00cac57857732999681e14d0c04fd8b8dbf3ef2d") (:revdesc . "00cac5785773") (:keywords "faces"))])
 (github-elpa . [(0 0 1) ((package-build (1 0)) (commander (0 7 0)) (git (0 1 1))) "Build and publish ELPA repositories with GitHub Pages" tar ((:url . "https://github.com/10sr/github-elpa") (:commit . "c5960375ed5d67465412be7eb0ac558082feebc7") (:revdesc . "c5960375ed5d") (:authors ("10sr" . "8slashes+el@gmail.com")) (:maintainers ("10sr" . "8slashes+el@gmail.com")) (:maintainer "10sr" . "8slashes+el@gmail.com"))])
 (github-explorer . [(1 1 0) ((emacs (25)) (graphql (0))) "Explore a GitHub repository on the fly" tar ((:url . "https://github.com/TxGVNN/github-explorer") (:commit . "d7198dd81afc4ee2001606be821707a9ff4f31da") (:revdesc . "d7198dd81afc") (:keywords "comm") (:authors ("Giap Tran" . "txgvnn@gmail.com")) (:maintainers ("Giap Tran" . "txgvnn@gmail.com")) (:maintainer "Giap Tran" . "txgvnn@gmail.com"))])
 (github-linguist . [(0 1 2) ((emacs (27 1)) (project (0 8)) (async (1 9)) (map (3))) "Run GitHub Linguist on projects to collect information" tar ((:url . "https://github.com/akirak/github-linguist.el") (:commit . "f8f28745542d7e4300d73c6bf006ce48b6657947") (:revdesc . "f8f28745542d") (:keywords "processes") (:authors ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainers ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainer "Akira Komamura" . "akira.komamura@gmail.com"))])
 (github-notifier . [(0 1) ((emacs (24))) "Displays your GitHub notifications unread count in mode-line" tar ((:url . "https://github.com/xuchunyang/github-notifier.el") (:commit . "f8d011ebef9f626a94a27b5576c8ed06e6ff8987") (:revdesc . "f8d011ebef9f") (:keywords "github" "mode-line") (:authors ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainers ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainer "Chunyang Xu" . "mail@xuchunyang.me"))])
 (github-search . [(0 0 1) ((magit (2 1 0)) (gh (1 0 0))) "Clone repositories by searching github" tar ((:url . "https://github.com/colonelpanic8/github-search") (:commit . "1a5c1f8291f4d41e57367a8522699cb08eea8fc4") (:revdesc . "1a5c1f8291f4") (:keywords "github" "search" "clone" "api" "gh" "magit") (:authors ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainers ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainer "Ivan Malison" . "IvanMalison@gmail.com"))])
 (gitignore-templates . [(1 0) ((emacs (24 3))) "Create .gitignore using GitHub or gitignore.io API" tar ((:url . "https://github.com/xuchunyang/gitignore-templates.el") (:commit . "b147d1930645dda76dbd48fb6f4f7f790353de26") (:revdesc . "b147d1930645") (:keywords "tools"))])
 (gitlab . [(0 8 0) ((s (1 9 0)) (dash (2 9 0)) (pkg-info (0 5 0)) (request (0 1 0))) "Emacs client for Gitlab" tar ((:url . "https://github.com/nlamirault/emacs-gitlab") (:commit . "a1c1441ff5ffb290e695eb9ac05431e9385578f4") (:revdesc . "a1c1441ff5ff") (:keywords "gitlab") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (gitlab-ci-mode . [(20190824 12 2) ((emacs (25)) (yaml-mode (0 0 12))) "Mode for editing GitLab CI files" tar ((:url . "https://gitlab.com/joewreschnig/gitlab-ci-mode") (:commit . "2651e831aed84ee2512245952fac94901b086549") (:revdesc . "2651e831aed8") (:keywords "tools" "vc"))])
 (gitlab-ci-mode-flycheck . [(20180605 1) ((emacs (25)) (flycheck (31)) (gitlab-ci-mode (1))) "Flycheck support for ‘gitlab-ci-mode’" tar ((:url . "https://gitlab.com/joewreschnig/gitlab-ci-mode-flycheck") (:commit . "30ea0eab74b24818f187242b079845785035e967") (:revdesc . "30ea0eab74b2") (:keywords "tools" "vc" "convenience"))])
 (gitlab-pipeline . [(1 1 0) ((emacs (25 1)) (ghub (3 3 0))) "Get infomation about Gitlab pipelines" tar ((:url . "https://github.com/TxGVNN/gitlab-pipeline") (:commit . "078f72d52e840907aa4c568468ce25758f20eb15") (:revdesc . "078f72d52e84") (:keywords "comm" "tools" "git") (:authors ("Giap Tran" . "txgvnn@gmail.com")) (:maintainers ("Giap Tran" . "txgvnn@gmail.com")) (:maintainer "Giap Tran" . "txgvnn@gmail.com"))])
 (gitlab-snip-helm . [(0 0 2) ((emacs (25)) (dash (2 12 0)) (helm (3 2))) "Gitlab snippets api helm package" tar ((:url . "https://gitlab.com/sasanidas/gitlab-snip-helm") (:commit . "5fe0a66642da6f4e7ba9e1e3a96572c7f1876e37") (:revdesc . "5fe0a66642da") (:keywords "tools" "files" "convenience") (:authors ("Fermin MF" . "fmfs@posteo.net")) (:maintainers ("Fermin MF" . "fmfs@posteo.net")) (:maintainer "Fermin MF" . "fmfs@posteo.net"))])
 (gitpatch . [(0 5 1) ((emacs (24 3))) "Git-format patch toolkit" tar ((:url . "https://github.com/tumashu/gitpatch") (:commit . "94d40a2ee2b7cd7b209546ea02568079176b0034") (:revdesc . "94d40a2ee2b7") (:keywords "convenience") (:authors ("Feng Shu" . "tumashu@163.com")) (:maintainers ("Feng Shu" . "tumashu@163.com")) (:maintainer "Feng Shu" . "tumashu@163.com"))])
 (gitter . [(1) ((emacs (24 1)) (let-alist (1 0 4))) "An Emacs Gitter client" tar ((:url . "https://github.com/xuchunyang/gitter.el") (:commit . "bd2ba457109dd5d3e4b419e3ef5cbd3b5c9498d6") (:revdesc . "bd2ba457109d") (:keywords "gitter" "chat" "client" "internet") (:authors ("Chunyang Xu" . "xuchunyang.me@gmail.com")) (:maintainers ("Chunyang Xu" . "xuchunyang.me@gmail.com")) (:maintainer "Chunyang Xu" . "xuchunyang.me@gmail.com"))])
 (gkroam . [(2 4 3) ((emacs (26 3)) (db (0 0 6)) (company (0 9 10))) "A lightweight org-mode Roam Research replica" tar ((:url . "https://github.com/Kinneyzhang/gkroam") (:commit . "2552444f1037240cce4f459bff3ac2b1f331bbb6") (:revdesc . "2552444f1037") (:keywords "org" "convenience") (:authors ("Kinney Zhang" . "kinneyzhang666@gmail.com")) (:maintainers ("Kinney Zhang" . "kinneyzhang666@gmail.com")) (:maintainer "Kinney Zhang" . "kinneyzhang666@gmail.com"))])
 (gl-conf-mode . [(0 3) nil "[No description available]" tar ((:url . "https://github.com/llloret/gitolite-emacs") (:commit . "1a53e548277eb9c669bbeda4bee9be32be7a82ec") (:revdesc . "v0.3-0-g1a53e548277e"))])
 (glass-tty-theme . [(1 0 1) ((emacs (24 1))) "Reverse video-like theme for the Glass TTY VT220 font" tar ((:url . "https://github.com/irtnog/glass-tty-theme") (:commit . "59126e888d9a237c6a0461e3712665d543f1320d") (:revdesc . "59126e888d9a") (:authors ("Matthew X. Economou" . "xenophon+glass-tty-theme@irtnog.org")) (:maintainers ("Matthew X. Economou" . "xenophon+glass-tty-theme@irtnog.org")) (:maintainer "Matthew X. Economou" . "xenophon+glass-tty-theme@irtnog.org"))])
 (global-tags . [(0 7) ((emacs (26 1)) (async (1 9 4)) (project (0 5 2)) (ht (2 3))) "Elisp API and editor integration for GNU global" tar ((:url . "https://git.launchpad.net/global-tags.el") (:commit . "344d084ec5ff6c99b31c5ea57e5352c85b57ae26") (:revdesc . "344d084ec5ff") (:keywords "convenience" "matching" "tools") (:authors ("Felipe Lema" . "felipelema@mortemale.org")) (:maintainers ("Felipe Lema" . "felipelema@mortemale.org")) (:maintainer "Felipe Lema" . "felipelema@mortemale.org"))])
 (gmail-message-mode . [(1 4) ((ham-mode (1 0))) "A major-mode for editing gmail messages using markdown syntax" tar ((:url . "https://github.com/Malabarba/gmail-mode") (:commit . "ec36672a9dc93c09ebe2f77597b498d11883d008") (:revdesc . "ec36672a9dc9") (:keywords "mail" "convenience" "emulation") (:authors ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainers ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainer "Artur Malabarba" . "bruce.connor.am@gmail.com"))])
 (gmail2bbdb . [(0 0 6) nil "Import email and name into bbdb from vcard" tar ((:url . "https://github.com/redguardtoo/gmail2bbdb") (:commit . "181ef6039227bb30a02041d8cfdc435551a7d948") (:revdesc . "181ef6039227") (:keywords "vcard" "bbdb" "email" "contact" "gmail") (:authors ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainers ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainer "Chen Bin" . "chenbin.sh@gmail.com"))])
 (gmpl-mode . [(0 1 0) nil "Major mode for editing GMPL(MathProg) files" tar ((:url . "https://github.com/cute-jumper/gmpl-mode") (:commit . "25d20f9d24594e85cb6f80d35d7c73b7e82cbc71") (:revdesc . "25d20f9d2459") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (gn-mode . [(0 4 1) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing GN (generate ninja) files" tar ((:url . "https://github.com/lashtear/gn-mode") (:commit . "fcf8e1e500d953364e97e7ebc5708a2c00fa3cd2") (:revdesc . "fcf8e1e500d9") (:keywords "data") (:authors ("Emily Backes" . "lucca@accela.net")) (:maintainers ("Emily Backes" . "lucca@accela.net")) (:maintainer "Emily Backes" . "lucca@accela.net"))])
 (gnome-screencast . [(1 4) ((emacs (25))) "Use Gnome screen recording functionality using elisp" tar ((:url . "https://github.com/juergenhoetzel/emacs-gnome-screencast") (:commit . "261844a88c75f10d98b60577ac8121fcd6721564") (:revdesc . "261844a88c75") (:keywords "tools" "multimedia") (:authors ("Jürgen Hötzel" . "juergen@hoetzel.info")) (:maintainers ("Jürgen Hötzel" . "juergen@hoetzel.info")) (:maintainer "Jürgen Hötzel" . "juergen@hoetzel.info"))])
 (gnosis . [(0 4 9) ((emacs (27 2)) (emacsql (4 0 1)) (compat (29 1 4 2)) (transient (0 7 2))) "Spaced Repetition System" tar ((:url . "https://git.thanosapollo.org/gnosis") (:commit . "383f8b489dbbc7fd13b076acaad10ccf73e1dd48") (:revdesc . "383f8b489dbb") (:keywords "extensions") (:authors ("Thanos Apollo" . "public@thanosapollo.org")) (:maintainers ("Thanos Apollo" . "public@thanosapollo.org")) (:maintainer "Thanos Apollo" . "public@thanosapollo.org"))])
 (gntp . [(0 1) nil "Growl Notification Protocol for Emacs" tar ((:url . "https://github.com/tekai/gntp.el") (:commit . "767571135e2c0985944017dc59b0be79af222ef5") (:revdesc . "767571135e2c") (:authors ("Engelke Eschner" . "tekai@gmx.li")) (:maintainers ("Engelke Eschner" . "tekai@gmx.li")) (:maintainer "Engelke Eschner" . "tekai@gmx.li"))])
 (gnuplot . [(0 8 1) ((emacs (25 1))) "Major-mode and interactive frontend for gnuplot" tar ((:url . "https://github.com/emacs-gnuplot/gnuplot") (:commit . "663a89d263d4f26b996796d01b6a3b783449e0f5") (:revdesc . "663a89d263d4") (:keywords "data" "gnuplot" "plotting") (:maintainers ("Maxime Tréca" . "maxime@gmail.com") ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Maxime Tréca" . "maxime@gmail.com"))])
 (gnus-desktop-notify . [(1 4) ((gnus (1 0))) "Gnus Desktop Notification global minor mode" tar ((:url . "https://gitlab.com/wavexx/gnus-desktop-notify.el") (:commit . "210c70f0021ee78e724f1d8e00ca96e1e99928ca") (:revdesc . "1.4-0-g210c70f0021e") (:authors ("Yuri D'Elia" . "wavexxATthregr.org")) (:maintainers ("Yuri D'Elia" . "wavexxATthregr.org")) (:maintainer "Yuri D'Elia" . "wavexxATthregr.org"))])
 (gnus-notes . [(0 4 2) ((emacs (27 1)) (bbdb (3 1)) (helm (3 1)) (hydra (0 13 0)) (org (8 3)) (s (0 0)) (lv (0 0)) (async (1 9 1))) "Keep handy notes of read Gnus articles with helm and org" tar ((:url . "https://github.com/deusmax/gnus-notes") (:commit . "249e1471d586e0b3679a4b1ac4070e9f5c4516d2") (:revdesc . "v0.4.2-0-g249e1471d586") (:keywords "convenience" "mail" "bbdb" "gnus" "helm" "org" "hydra") (:authors ("Deus Max" . "deusmax@gmx.com")) (:maintainers ("Deus Max" . "deusmax@gmx.com")) (:maintainer "Deus Max" . "deusmax@gmx.com"))])
 (gnus-recent . [(0 4 0) ((emacs (25 3 2))) "Article breadcrumbs for Gnus" tar ((:url . "https://github.com/unhammer/gnus-recent") (:commit . "6f13a00c5736c269ed850094cfbc9ea474e24dfe") (:revdesc . "v0.4.0-0-g6f13a00c5736") (:keywords "convenience" "mail") (:authors ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainers ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainer "Kevin Brubeck Unhammer" . "unhammer@fsfe.org"))])
 (gnus-summary-repo . [(1 0 0) ((emacs (25))) "Import and export files between IMAP and local by using GNUS" tar ((:url . "https://github.com/TxGVNN/gnus-summary-repo") (:commit . "3968667bfded60fbbf33f2fba3170e2b6501ec43") (:revdesc . "1.0.0-0-g3968667bfded") (:keywords "gnus" "repository") (:authors ("Giap Tran" . "txgvnn@gmail.com")) (:maintainers ("Giap Tran" . "txgvnn@gmail.com")) (:maintainer "Giap Tran" . "txgvnn@gmail.com"))])
 (gnus-x-gm-raw . [(0 0 1) ((log4e (0 2 0)) (yaxception (0 1))) "Search mail of Gmail using X-GM-RAW as web interface" tar ((:url . "https://github.com/aki2o/gnus-x-gm-raw") (:commit . "978bdfcecc8844465b71641c2e909fcdc66b22be") (:revdesc . "978bdfcecc88") (:keywords "gnus") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (go-add-tags . [(0 4) ((emacs (24 3)) (s (1 11 0))) "Add field tags for struct fields" tar ((:url . "https://github.com/emacsorphanage/go-add-tags") (:commit . "54879945e46a0884c5f93d7fd6c866a9cdf401ac") (:revdesc . "54879945e46a") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (go-direx . [(0 4) ((direx (1 0 0)) (cl-lib (0 5))) "Tree style source code viewer for Go language" tar ((:url . "https://github.com/emacsorphanage/go-direx") (:commit . "aecb9fef4d56d04d230d37c75c260c8392b5ad9f") (:revdesc . "aecb9fef4d56") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (go-dlv . [(0 6 0) ((go-mode (1 3 1))) "Go Delve - Debug Go programs interactively with the GUD" tar ((:url . "https://github.com/benma/go-dlv.el") (:commit . "0a296bc3b7b4dcf0c140a78c5ca3e1a8c6b7ea1a") (:revdesc . "v0.6.0-0-g0a296bc3b7b4") (:keywords "go" "debug" "debugger" "delve" "interactive" "gud") (:authors ("Marko Bencun" . "mbencun@gmail.com")) (:maintainers ("Marko Bencun" . "mbencun@gmail.com")) (:maintainer "Marko Bencun" . "mbencun@gmail.com"))])
 (go-eldoc . [(0 30) ((emacs (24 3)) (go-mode (1 0 0))) "Eldoc for go-mode" tar ((:url . "https://github.com/emacsorphanage/go-eldoc") (:commit . "f1ad302ec4073354801e613293be2f55ba770618") (:revdesc . "f1ad302ec407") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (go-errcheck . [(1 1 2) nil "Errcheck integration for go-mode" tar ((:url . "https://github.com/dominikh/go-errcheck.el") (:commit . "1b0cd6af048a8b2074ace14ab51fb6c987beb430") (:revdesc . "v1.1.2-0-g1b0cd6af048a") (:authors ("Dominik Honnef" . "dominikh@fork-bomb.org")) (:maintainers ("Dominik Honnef" . "dominikh@fork-bomb.org")) (:maintainer "Dominik Honnef" . "dominikh@fork-bomb.org"))])
 (go-fill-struct . [(0 1) ((emacs (24))) "Fill struct for golang" tar ((:url . "https://github.com/s-kostyaev/go-fill-struct") (:commit . "3c97c92e78f3629a7a1069404c7c641881c16d0e") (:revdesc . "3c97c92e78f3") (:keywords "tools") (:authors ("Sergey Kostyaev" . "feo.me@ya.ru")) (:maintainers ("Sergey Kostyaev" . "feo.me@ya.ru")) (:maintainer "Sergey Kostyaev" . "feo.me@ya.ru"))])
 (go-guru . [(1 6 0) ((go-mode (1 3 1)) (cl-lib (0 5))) "Integration of the Go 'guru' analysis tool into Emacs" tar ((:url . "https://github.com/dominikh/go-mode.el") (:commit . "3273fcece5d9ab7edd4f15b2d6bce61f4e5a0666") (:revdesc . "v1.6.0-0-g3273fcece5d9") (:keywords "tools"))])
 (go-imenu . [(0 1 0) ((emacs (24 3))) "Imenu for go language" tar ((:url . "https://github.com/brantou/go-imenu.el") (:commit . "fc1566fbe396fc8c94f7de99d9c7191b47cd48d9") (:revdesc . "fc1566fbe396") (:keywords "tools") (:authors ("Brantou" . "brantou89@gmail.com")) (:maintainers ("Brantou" . "brantou89@gmail.com")) (:maintainer "Brantou" . "brantou89@gmail.com"))])
 (go-impl . [(0 14) ((emacs (24 3)) (go-mode (1 3 0))) "Impl integration for go-mode" tar ((:url . "https://github.com/emacsorphanage/go-impl") (:commit . "69f0d0ef05771487e15abec500cd06befd171abf") (:revdesc . "69f0d0ef0577") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (go-mode . [(1 6 0) ((emacs (26 1))) "Major mode for the Go programming language" tar ((:url . "https://github.com/dominikh/go-mode.el") (:commit . "3273fcece5d9ab7edd4f15b2d6bce61f4e5a0666") (:revdesc . "v1.6.0-0-g3273fcece5d9") (:keywords "languages" "go"))])
 (go-playground . [(1 9 0) ((emacs (24)) (go-mode (1 4 0)) (gotest (0 13 0))) "Local Golang playground for short snippets" tar ((:url . "https://github.com/grafov/go-playground") (:commit . "52227ad154249fc0df2e8a53fa9e2c76c5a6fc76") (:revdesc . "52227ad15424") (:keywords "tools" "golang") (:authors ("Alexander I.Grafov" . "grafov@inet.name")) (:maintainers ("Alexander I.Grafov" . "grafov@inet.name")) (:maintainer "Alexander I.Grafov" . "grafov@inet.name"))])
 (go-rename . [(1 6 0) ((go-mode (1 3 1))) "Integration of the 'gorename' tool into Emacs" tar ((:url . "https://github.com/dominikh/go-mode.el") (:commit . "3273fcece5d9ab7edd4f15b2d6bce61f4e5a0666") (:revdesc . "v1.6.0-0-g3273fcece5d9") (:keywords "tools"))])
 (go-scratch . [(0 0 1) ((go-mode (1 3 1)) (emacs (24))) "*scratch* buffer for Go" tar ((:url . "https://github.com/shosti/go-scratch.el") (:commit . "3f68cbcce04f59eb8e83af109164731ec0454be0") (:revdesc . "3f68cbcce04f") (:keywords "languages" "go") (:authors ("Emanuel Evans" . "mail@emanuel.industries")) (:maintainers ("Emanuel Evans" . "mail@emanuel.industries")) (:maintainer "Emanuel Evans" . "mail@emanuel.industries"))])
 (go-tag . [(1 1 1) ((emacs (24 0)) (go-mode (1 5 0))) "Edit Golang struct field tag" tar ((:url . "https://github.com/brantou/emacs-go-tag") (:commit . "33f2059551d5298ca228d90f525b99d1a8d70364") (:revdesc . "33f2059551d5") (:keywords "tools") (:authors ("Brantou" . "brantou89@gmail.com")) (:maintainers ("Brantou" . "brantou89@gmail.com")) (:maintainer "Brantou" . "brantou89@gmail.com"))])
 (go-translate . [(3 0 7) ((emacs (28 1))) "Translation framework, configurable and scalable" tar ((:url . "https://github.com/lorniu/go-translate") (:commit . "334efbddd3d421ec294002fca166fbd6b0152e2e") (:revdesc . "334efbddd3d4") (:keywords "convenience") (:authors ("lorniu" . "lorniu@gmail.com")) (:maintainers ("lorniu" . "lorniu@gmail.com")) (:maintainer "lorniu" . "lorniu@gmail.com"))])
 (god-mode . [(2 18 0) ((emacs (25 1))) "Minor mode for God-like command entering" tar ((:url . "https://github.com/emacsorphanage/god-mode") (:commit . "c7754eaadaeabae2df94e23317b4a04d19b3f9e0") (:revdesc . "c7754eaadaea") (:authors ("Chris Done" . "chrisdone@gmail.com")) (:maintainers ("Chris Done" . "chrisdone@gmail.com")) (:maintainer "Chris Done" . "chrisdone@gmail.com"))])
 (godoctor . [(0 6 0) nil "Frontend for godoctor" tar ((:url . "https://github.com/microamp/godoctor.el") (:commit . "4b45ff3d0572f0e84056e4c3ba91fcc178199859") (:revdesc . "4b45ff3d0572") (:keywords "go" "golang" "refactoring") (:authors ("Sangho Na" . "microamp@protonmail.com")) (:maintainers ("Sangho Na" . "microamp@protonmail.com")) (:maintainer "Sangho Na" . "microamp@protonmail.com"))])
 (gofmt-tag . [(1 0 2) ((emacs (27))) "Format and align go struct tags" tar ((:url . "https://github.com/M1ndo/gofmt-tag") (:commit . "b7cc315ac45342fc9c17dde779cc9c37aa309841") (:revdesc . "b7cc315ac453") (:keywords "tools" "wp" "matching") (:authors ("ybenel" . "http://github/m1ndo")) (:maintainers ("ybenel" . "root@ybenel.cf")) (:maintainer "ybenel" . "root@ybenel.cf"))])
 (goggles . [(0 4) ((emacs (27 1))) "Pulse modified regions" tar ((:url . "https://github.com/minad/goggles") (:commit . "41d3669d7ae7b73bd39d298e5373ece48b656ce3") (:revdesc . "41d3669d7ae7") (:keywords "convenience" "text") (:authors ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainers ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de"))])
 (golden-ratio . [(1 0) nil "Automatic resizing of Emacs windows to the golden ratio" tar ((:url . "https://github.com/roman/golden-ratio.el") (:commit . "79b1743fc1a2f3462445e9ddd0a869f30065bb6d") (:revdesc . "v1.0-0-g79b1743fc1a2") (:keywords "window" "resizing") (:authors ("Roman Gonzalez" . "romanandreg@gmail.com")) (:maintainers ("Roman Gonzalez" . "romanandreg@gmail.com")) (:maintainer "Roman Gonzalez" . "romanandreg@gmail.com"))])
 (good-scroll . [(2 0 1) ((emacs (27 1))) "Good pixel line scrolling" tar ((:url . "https://github.com/io12/good-scroll.el") (:commit . "8530d6697b1534de0146275c80faccae35fa36fa") (:revdesc . "8530d6697b15") (:authors ("Benjamin Levy" . "blevy@protonmail.com")) (:maintainers ("Benjamin Levy" . "blevy@protonmail.com")) (:maintainer "Benjamin Levy" . "blevy@protonmail.com"))])
 (google-maps . [(1 0 0) nil "Access Google Maps from Emacs" tar ((:url . "https://github.com/jd/google-maps.el") (:commit . "90151ab59e693243ca8da660ce7b9ce361ea5126") (:revdesc . "1.0.0-0-g90151ab59e69") (:keywords "comm") (:authors ("Julien Danjou" . "julien@danjou.info")) (:maintainers ("Julien Danjou" . "julien@danjou.info")) (:maintainer "Julien Danjou" . "julien@danjou.info"))])
 (google-this . [(1 12) ((emacs (24 1))) "A set of functions and bindings to google under point" tar ((:url . "https://github.com/Malabarba/emacs-google-this") (:commit . "8a2e3ca5da6a8c89bfe99a21486c6c7db125dc84") (:revdesc . "8a2e3ca5da6a") (:keywords "convenience" "hypermedia") (:authors ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainers ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainer "Artur Malabarba" . "bruce.connor.am@gmail.com"))])
 (google-translate . [(0 12 0) nil "Emacs interface to Google Translate" tar ((:url . "https://github.com/atykhonov/google-translate") (:commit . "ba027ff85352b989abac29b0efba1811b870ebec") (:revdesc . "ba027ff85352") (:keywords "convenience") (:authors ("Oleksandr Manzyuk" . "manzyuk@gmail.com")) (:maintainers ("Andrey Tykhonov" . "atykhonov@gmail.com")) (:maintainer "Andrey Tykhonov" . "atykhonov@gmail.com"))])
 (gorepl-mode . [(1 0 0) ((emacs (24))) "Go REPL Interactive Development in top of Gore" tar ((:url . "https://github.com/manute/gorepl-mode") (:commit . "17e025951f5964a0542a4b353ddddbc734c01eed") (:revdesc . "17e025951f59") (:keywords "languages" "go" "golang" "gorepl") (:authors ("Manuel Alonso" . "manuteali@gmail.com")) (:maintainers ("Manuel Alonso" . "manuteali@gmail.com")) (:maintainer "Manuel Alonso" . "manuteali@gmail.com"))])
 (gotest . [(0 16 0) ((emacs (24 3)) (s (1 11 0)) (f (0 19 0))) "Launch GO unit tests" tar ((:url . "https://github.com/nlamirault/gotest.el") (:commit . "490189e68d743a851bfb42d0017428a7550e8615") (:revdesc . "490189e68d74") (:keywords "languages" "go" "tests") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (gotham-theme . [(1 1 9) ((emacs (24 1))) "A very dark Emacs color theme" tar ((:url . "https://depp.brause.cc/gotham-theme.git") (:commit . "4b8214df0851bb69b44c3e864568b7e0030a95d2") (:revdesc . "4b8214df0851") (:authors ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainers ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainer "Vasilij Schneidermann" . "mail@vasilij.de"))])
 (goto-char-preview . [(0 1 0) ((emacs (24 3))) "Preview character when executing `goto-char` command" tar ((:url . "https://github.com/emacs-vs/goto-char-preview") (:commit . "6209973933bec4081145dbcb8e3e442cb29a8c52") (:revdesc . "6209973933be") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (goto-chg . [(1 7 5) ((emacs (24 1))) "Go to last change" tar ((:url . "https://github.com/emacs-evil/goto-chg") (:commit . "278cd3e6d5107693aa2bb33189ca503f22f227d0") (:revdesc . "278cd3e6d510") (:keywords "convenience" "matching") (:authors ("David Andersson" . "l.david.anderssonsverige.nu")) (:maintainers ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainer "Vasilij Schneidermann" . "mail@vasilij.de"))])
 (goto-last-change . [(1 2 1) nil "Move point through buffer-undo-list positions" tar ((:url . "https://github.com/camdez/goto-last-change.el") (:commit . "58b0928bc255b47aad318cd183a5dce8f62199cc") (:revdesc . "v1.2.1-0-g58b0928bc255") (:keywords "convenience") (:authors ("Kevin Rodgers" . "ihs_4664@yahoo.com")) (:maintainers ("Kevin Rodgers" . "ihs_4664@yahoo.com")) (:maintainer "Kevin Rodgers" . "ihs_4664@yahoo.com"))])
 (goto-line-preview . [(0 1 1) ((emacs (25))) "Preview line when executing `goto-line` command" tar ((:url . "https://github.com/emacs-vs/goto-line-preview") (:commit . "66817b66ce124b2961df3521faa3adc87943d0d9") (:revdesc . "66817b66ce12") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (govc . [(0 46 2) ((emacs (24 3)) (dash (1 5 0)) (s (1 9 0)) (magit-popup (2 0 50)) (json-mode (1 6 0))) "Interface to govc for managing VMware ESXi and vCenter" tar ((:url . "https://github.com/vmware/govmomi") (:commit . "c3916ff7728451023ce84c2eaf726b1d23e623b6") (:revdesc . "v0.46.2-0-gc3916ff77284") (:keywords "convenience"))])
 (gpastel . [(0 5 0) ((emacs (25 1))) "Integrates GPaste with the kill-ring" tar ((:url . "https://github.com/DamienCassou/gpastel") (:commit . "8a5522b274f79d55d7c9a0b2aaf062526f9253c7") (:revdesc . "8a5522b274f7") (:keywords "tools") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (gpt-commit . [(0 0 2) ((emacs (27 1)) (magit (2 90)) (request (0 3 2))) "Commit messages with GPT in Emacs" tar ((:url . "https://github.com/ywkim/gpt-commit") (:commit . "e3bdc836c7f423622e5c7984735a7dab2c2f342b") (:revdesc . "e3bdc836c7f4") (:authors ("Youngwook Kim" . "youngwook.kim@gmail.com")) (:maintainers ("Youngwook Kim" . "youngwook.kim@gmail.com")) (:maintainer "Youngwook Kim" . "youngwook.kim@gmail.com"))])
 (gptai . [(1 0 5) ((emacs (24 1))) "Integrate with the OpenAI API" tar ((:url . "https://github.com/antonhibl/gptai") (:commit . "e2fb58785e1e8ae2956d0786d77821a5c2d2b326") (:revdesc . "e2fb58785e1e") (:keywords "comm" "convenience") (:authors ("Anton Hibl" . "antonhibl11@gmail.com")) (:maintainers ("Anton Hibl" . "antonhibl11@gmail.com")) (:maintainer "Anton Hibl" . "antonhibl11@gmail.com"))])
 (gptel . [(0 9 7) ((emacs (27 1)) (transient (0 4 0)) (compat (29 1 4 1))) "Interact with ChatGPT or other LLMs" tar ((:url . "https://github.com/karthink/gptel") (:commit . "5a5cddb93d610bd59ec52a070b0f89a9ec842152") (:revdesc . "5a5cddb93d61") (:keywords "convenience") (:authors ("Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com")) (:maintainers ("Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com")) (:maintainer "Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com"))])
 (gpx . [(0 1 0) ((emacs (27 1))) "Major mode for GPX files" tar ((:url . "https://github.com/mkcms/gpx-mode") (:commit . "b79baf93040fb5c89e803848e8aff31331ea03b8") (:revdesc . "v0.1.0-0-gb79baf93040f") (:keywords "data" "tools") (:authors ("Michał Krzywkowski" . "k.michal@zoho.com")) (:maintainers ("Michał Krzywkowski" . "k.michal@zoho.com")) (:maintainer "Michał Krzywkowski" . "k.michal@zoho.com"))])
 (grab-mac-link . [(0 3) ((emacs (24))) "Grab link from Mac Apps and insert it into Emacs" tar ((:url . "https://github.com/xuchunyang/grab-mac-link.el") (:commit . "9b47cbe126a0735fa447a3c5e1e8ba80a7ef8d26") (:revdesc . "9b47cbe126a0") (:keywords "mac" "hyperlink"))])
 (grab-x-link . [(0 5) ((emacs (24)) (cl-lib (0 5))) "Grab links from X11 apps and insert into Emacs" tar ((:url . "https://github.com/xuchunyang/grab-x-link") (:commit . "d19f0c0da0ddc55005a4c1cdc2b8c5de8bea1e8c") (:revdesc . "d19f0c0da0dd") (:keywords "hyperlink") (:authors ("Xu Chunyang" . "mail@xuchunyang.me")) (:maintainers ("Xu Chunyang" . "mail@xuchunyang.me")) (:maintainer "Xu Chunyang" . "mail@xuchunyang.me"))])
 (gradle-mode . [(0 5 5) ((s (1 8 0))) "Gradle integration with Emacs' compile" tar ((:url . "https://github.com/scubacabra/emacs-gradle-mode") (:commit . "579de06674551919cddac9cfe42129f4fb0155c9") (:revdesc . "579de0667455") (:keywords "gradle") (:authors ("Daniel Mijares" . "daniel.j.mijares@gmail.com")) (:maintainers ("Daniel Mijares" . "daniel.j.mijares@gmail.com")) (:maintainer "Daniel Mijares" . "daniel.j.mijares@gmail.com"))])
 (grails . [(0 5 1) ((emacs (24))) "Minor mode for Grails projects" tar ((:url . "https://github.com/lifeisfoo/emacs-grails") (:commit . "3019f86e555ee94388795a0475cfa213e3897bbb") (:revdesc . "3019f86e555e"))])
 (grails-mode . [(2 1) nil "Minor-mode that adds some Grails project management to a grails project" tar ((:url . "https://github.com/Groovy-Emacs-Modes/groovy-emacs-modes") (:commit . "99eaf70720e4a6337fbd5acb68ae45cc1779bdc4") (:revdesc . "99eaf70720e4") (:keywords "languages") (:authors ("Jim Morris" . "morris@wolfman.com")) (:maintainers ("Russel Winder" . "russel@winder.org.uk")) (:maintainer "Russel Winder" . "russel@winder.org.uk"))])
 (grammarly . [(0 3 0) ((emacs (24 4)) (s (1 12 0)) (request (0 3 0)) (websocket (1 6))) "Grammarly API interface" tar ((:url . "https://github.com/emacs-grammarly/grammarly") (:commit . "1fd3ed0fad915d3c5c1a2eb055bb3b91a949be21") (:revdesc . "1fd3ed0fad91") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (grandshell-theme . [(1 3) nil "Dark color theme for Emacs > 24 with intensive colors" tar ((:url . "https://framagit.org/steckerhalter/grandshell-theme.git") (:commit . "22c8df52c0fb8899fa748fa2980947ab38b53380") (:revdesc . "22c8df52c0fb") (:keywords "color" "theme" "grand" "shell" "faces"))])
 (graphene . [(1 0 0) ((dash (2 10 0)) (exec-path-from-shell (1 9)) (ppd-sr-speedbar (0 0 6)) (sr-speedbar (20140505)) (ido-completing-read+ (4 3)) (smex (3 0)) (web-mode (11 2)) (smartparens (1 8 0)) (graphene-meta-theme (0 0 2)) (flycheck (0 23)) (company (0 8 12))) "Friendly Emacs defaults" tar ((:url . "https://github.com/rdallasgray/graphene") (:commit . "cc8477fcfb7771ea4e5bbaf3c01f9e679234c1c1") (:revdesc . "1.0.0-0-gcc8477fcfb77") (:keywords "defaults") (:authors ("Robert Dallas Gray" . "mail@robertdallasgray.com")) (:maintainers ("Robert Dallas Gray" . "mail@robertdallasgray.com")) (:maintainer "Robert Dallas Gray" . "mail@robertdallasgray.com"))])
 (graphene-meta-theme . [(0 0 6) nil "Integrated theming for common packages" tar ((:url . "https://github.com/rdallasgray/graphene-meta-theme") (:commit . "8e75528529f460b1b5910467c4fc1f516e1a57b9") (:revdesc . "0.0.6-0-g8e75528529f4") (:keywords "defaults") (:authors ("Robert Dallas Gray" . "mail@robertdallasgray.com")) (:maintainers ("Robert Dallas Gray" . "mail@robertdallasgray.com")) (:maintainer "Robert Dallas Gray" . "mail@robertdallasgray.com"))])
 (graphql . [(0 1 1) ((emacs (25))) "GraphQL utilities" tar ((:url . "https://github.com/vermiculus/graphql.el") (:commit . "672dd9ebd7e67d8089388b0c484cd650e76565f3") (:revdesc . "0.1.1-0-g672dd9ebd7e6") (:keywords "hypermedia" "tools" "lisp") (:authors ("Sean Allred" . "code@seanallred.com")) (:maintainers ("Sean Allred" . "code@seanallred.com")) (:maintainer "Sean Allred" . "code@seanallred.com"))])
 (graphql-doc . [(0 2 1) ((emacs (26 1)) (request (0 3 2)) (promise (1 1))) "GraphQL Documentation Explorer" tar ((:url . "https://github.com/ifitzpatrick/graphql-doc.el") (:commit . "6ba7961fc9c5c9818bd60abce6ba9dfef2dad452") (:revdesc . "6ba7961fc9c5"))])
 (graphviz-dot-mode . [(0 4 2) ((emacs (25 0))) "Mode for the dot-language used by graphviz (att)" tar ((:url . "https://github.com/ppareit/graphviz-dot-mode") (:commit . "80b9c5e7f464c70cfa423e5ee3237581bc69d643") (:revdesc . "v0.4.2-0-g80b9c5e7f464") (:keywords "mode" "dot" "dot-language" "dotlanguage" "graphviz" "graphs" "att") (:maintainers ("Pieter Pareit" . "pieter.pareit@gmail.com")) (:maintainer "Pieter Pareit" . "pieter.pareit@gmail.com"))])
 (grapnel . [(0 5 3) nil "HTTP request lib with flexible callback dispatch" tar ((:url . "https://github.com/leathekd/grapnel") (:commit . "7387234eb3f0285a490fddb1e06a4bf029719fb7") (:revdesc . "7387234eb3f0") (:authors ("David Leatherman" . "leathekd@gmail.com")) (:maintainers ("David Leatherman" . "leathekd@gmail.com")) (:maintainer "David Leatherman" . "leathekd@gmail.com"))])
 (grass-mode . [(0 1) ((cl-lib (0 2))) "Provides Emacs modes for interacting with the GRASS GIS program" tar ((:url . "https://github.com/plantarum/grass-mode") (:commit . "23ca856ca979fec0f90196b357f2b74fe1cc3a73") (:revdesc . "23ca856ca979") (:keywords "grass" "gis") (:authors ("Tyler Smith" . "tyler@plantarum.ca")) (:maintainers ("Tyler Smith" . "tyler@plantarum.ca")) (:maintainer "Tyler Smith" . "tyler@plantarum.ca"))])
 (green-is-the-new-black-theme . [(1 0 0) nil "A cool and minimalist green blackened theme engine" tar ((:url . "https://github.com/fredcamps/green-is-the-new-black-emacs") (:commit . "9b682c0000bc732e4c55e876ac968877eada0402") (:revdesc . "9b682c0000bc") (:keywords "faces" "themes") (:authors ("Fred Campos" . "fred.tecnologia@gmail.com")) (:maintainers ("Fred Campos" . "fred.tecnologia@gmail.com")) (:maintainer "Fred Campos" . "fred.tecnologia@gmail.com"))])
 (green-screen-theme . [(1 0 26) nil "A nice color theme for those who miss green CRTs" tar ((:url . "https://github.com/rbanffy/green-screen-emacs") (:commit . "774e8f6c033786406267f71ec07319d906a30b75") (:revdesc . "774e8f6c0337") (:keywords "faces" "theme") (:authors ("Ricardo Banffy" . "rbanffy@gmail.com")) (:maintainers ("Ricardo Banffy" . "rbanffy@gmail.com")) (:maintainer "Ricardo Banffy" . "rbanffy@gmail.com"))])
 (grip-mode . [(2 3 3) ((emacs (24 4))) "Instant GitHub-flavored Markdown/Org preview using grip" tar ((:url . "https://github.com/seagle0128/grip-mode") (:commit . "378de9609614448ca29e2add91f2d0059f963d8c") (:revdesc . "378de9609614") (:keywords "convenience" "markdown" "preview") (:authors ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainers ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainer "Vincent Zhang" . "seagle0128@gmail.com"))])
 (grizzl . [(0 1 1) nil "Fuzzy Search Library & Completing Read" tar ((:url . "https://github.com/grizzl/grizzl") (:commit . "c775de1c34d1e5a374e2f40c1ae2396b4b003fe7") (:revdesc . "v0.1.1-0-gc775de1c34d1") (:keywords "convenience" "usability") (:authors ("Chris Corbyn" . "chris@w3style.co.uk")) (:maintainers ("Chris Corbyn" . "chris@w3style.co.uk")) (:maintainer "Chris Corbyn" . "chris@w3style.co.uk"))])
 (groovy-imports . [(1 0 1) ((emacs (24 4)) (s (1 10 0)) (pcache (0 3 2))) "Code for dealing with Groovy imports" tar ((:url . "https://github.com/mbezjak/emacs-groovy-imports") (:commit . "a60c3202973e3185091db623d960f71840a22205") (:revdesc . "a60c3202973e") (:keywords "groovy"))])
 (groovy-mode . [(2 1) ((s (1 12 0)) (emacs (24 3)) (dash (2 13 0))) "Major mode for Groovy source files" tar ((:url . "https://github.com/Groovy-Emacs-Modes/groovy-emacs-modes") (:commit . "99eaf70720e4a6337fbd5acb68ae45cc1779bdc4") (:revdesc . "99eaf70720e4") (:keywords "languages") (:authors ("Russel Winder" . "russel@winder.org.uk") ("Jim Morris" . "morris@wolfman.com") ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Russel Winder" . "russel@winder.org.uk")) (:maintainer "Russel Winder" . "russel@winder.org.uk"))])
 (gruber-darker-theme . [(0 6) nil "Gruber Darker color theme for Emacs 24" tar ((:url . "https://github.com/rexim/gruber-darker-theme") (:commit . "0c08d77e615aceb9e6e1ca66b1fbde275200cfe4") (:revdesc . "0c08d77e615a") (:authors ("Alexey Kutepov" . "reximkut@gmail.com")) (:maintainers ("Alexey Kutepov" . "reximkut@gmail.com")) (:maintainer "Alexey Kutepov" . "reximkut@gmail.com"))])
 (grugru . [(1 22 0) ((emacs (24 4))) "Rotate text at point" tar ((:url . "https://github.com/ROCKTAKEY/grugru") (:commit . "2c743b7a981daf86cdfa3deab88a6c68a8d4e5a2") (:revdesc . "2c743b7a981d") (:keywords "convenience" "abbrev" "tools") (:authors ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainers ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainer "ROCKTAKEY" . "rocktakey@gmail.com"))])
 (grunt . [(1 3 2) ((dash (2 9 0)) (ansi-color (3 4 2))) "Some glue to stick Emacs and Gruntfiles together" tar ((:url . "https://github.com/gempesaw/grunt.el") (:commit . "e27dbb6b3de9b36c7fb28f69aa06b4b2ea32d4b9") (:revdesc . "1.3.2-0-ge27dbb6b3de9") (:keywords "convenience" "grunt") (:authors ("Daniel Gempesaw" . "dgempesaw@sharecare.com")) (:maintainers ("Daniel Gempesaw" . "dgempesaw@sharecare.com")) (:maintainer "Daniel Gempesaw" . "dgempesaw@sharecare.com"))])
 (gruvbox-theme . [(1 30 1) ((autothemer (0 2))) "A retro-groove colour theme for Emacs" tar ((:url . "https://github.com/greduan/emacs-theme-gruvbox") (:commit . "3177b458dcbd5db6135a8d57fd5b765131e4da6a") (:revdesc . "3177b458dcbd") (:authors ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainers ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainer "Jason Milkins" . "jasonm23@gmail.com"))])
 (gscholar-bibtex . [(0 3 3) nil "Retrieve BibTeX from Google Scholar and other online sources(ACM, IEEE, DBLP)" tar ((:url . "https://github.com/cute-jumper/gscholar-bibtex") (:commit . "ba4ce159e385d695d8560e8b06b3cbe48424861c") (:revdesc . "ba4ce159e385") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (gsettings . [(1 0 0) ((emacs (24 3)) (dash (2 16 0)) (gvariant (1 0 0)) (s (1 12 0))) "GSettings (Gnome) helpers" tar ((:url . "https://github.com/wbolster/emacs-gsettings") (:commit . "1dd9a6a3036d76d8e680b2764c35b31bf5e6aff7") (:revdesc . "1.0.0-0-g1dd9a6a3036d") (:keywords "languages") (:authors ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainers ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainer "wouter bolsterlee" . "wouter@bolsterl.ee"))])
 (gsnip . [(0 1 0) ((emacs (26)) (aio (1 0)) (log4e (0 3 3))) "A gitlab snippet client" tar ((:url . "https://github.com/kaiwk/gsnip") (:commit . "c8bff61b10cd33de9d6f5fd84e4b27f48c772304") (:revdesc . "c8bff61b10cd") (:keywords "extensions" "tools") (:authors ("Wang Kai" . "kaiwkx@gmail.com")) (:maintainers ("Wang Kai" . "kaiwkx@gmail.com")) (:maintainer "Wang Kai" . "kaiwkx@gmail.com"))])
 (gtk-variant . [(1 0 4) ((emacs (25 1))) "Set the GTK theme variant (titlebar color)" tar ((:url . "https://github.com/bepvte/gtk-variant.el") (:commit . "a60af277fbb52306c17663074cf9954dd6cea024") (:revdesc . "a60af277fbb5") (:keywords "frames" "gtk" "titlebar"))])
 (guide-key . [(1 2 5) ((popwin (0 3 0))) "Guide the following key bindings automatically and dynamically" tar ((:url . "https://github.com/kai2nenobu/guide-key") (:commit . "626f3aacfe4561eddc46617570426246b88e9cab") (:revdesc . "v1.2.5-0-g626f3aacfe45") (:keywords "help" "convenience") (:authors ("Tsunenobu Kai" . "kai2nenobu@gmail.com")) (:maintainers ("Tsunenobu Kai" . "kai2nenobu@gmail.com")) (:maintainer "Tsunenobu Kai" . "kai2nenobu@gmail.com"))])
 (guide-key-tip . [(0 0 1) ((guide-key (1 2 3)) (pos-tip (0 4 5))) "Show guide-key.el hints using pos-tip.el" tar ((:url . "https://github.com/aki2o/guide-key-tip") (:commit . "e08b2585228529aeaae5e0ae0948f898e83a6200") (:revdesc . "e08b25852285") (:keywords "help" "convenience" "tooltip") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (guru-mode . [(1 0) nil "Become an Emacs guru" tar ((:url . "https://github.com/bbatsov/guru-mode") (:commit . "9d0aff6cda6d3d78d5102f07f813b9fca6f0ab7b") (:revdesc . "9d0aff6cda6d") (:keywords "convenience"))])
 (gvariant . [(1 0 0) ((emacs (24)) (parsec (0 1 3))) "GVariant (GLib) helpers" tar ((:url . "https://github.com/wbolster/emacs-gvariant") (:commit . "79c34d11ee6a34f190f1641a133d34b0808a1143") (:revdesc . "1.0.0-0-g79c34d11ee6a") (:keywords "languages") (:authors ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainers ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainer "wouter bolsterlee" . "wouter@bolsterl.ee"))])
 (gxref . [(0 1) ((emacs (25))) "Xref backend using GNU Global" tar ((:url . "https://github.com/dedi/gxref") (:commit . "15723a9d910d7dd9ea18cab0336332cf988aeceb") (:revdesc . "v0.1-0-g15723a9d910d") (:keywords "xref" "global" "tools"))])
 (hack-mode . [(1 3) ((emacs (25 1)) (s (1 11 0))) "Major mode for the Hack programming language" tar ((:url . "https://github.com/hhvm/hack-mode") (:commit . "d0f6e8dfdf6fa8cc33e3fe75f0f2de9407b98ce8") (:revdesc . "d0f6e8dfdf6f") (:authors ("John Allen" . "jallen@fb.com") ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("John Allen" . "jallen@fb.com") ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "John Allen" . "jallen@fb.com"))])
 (hacker-typer . [(1 0 6) ((emacs (24))) "Pretend to write code like a pro" tar ((:url . "https://github.com/dieggsy/emacs-hacker-typer") (:commit . "d5a23714a4ccc5071580622f278597d5973f40bd") (:revdesc . "d5a23714a4cc") (:keywords "hacker" "typer" "multimedia" "games") (:authors ("Diego A. Mundo" . "diegoamundo@gmail.com")) (:maintainers ("Diego A. Mundo" . "diegoamundo@gmail.com")) (:maintainer "Diego A. Mundo" . "diegoamundo@gmail.com"))])
 (hackernews . [(0 7 0) nil "Hacker News Client for Emacs" tar ((:url . "https://github.com/clarete/hackernews.el") (:commit . "38ad768e95ca651d836ee2fa2d795ac2e84e8e03") (:revdesc . "v0.7.0-0-g38ad768e95ca") (:keywords "comm" "hypermedia" "news") (:authors ("Lincoln de Sousa" . "lincoln@comum.org")) (:maintainers ("Basil L. Contovounesios" . "contovob@tcd.ie")) (:maintainer "Basil L. Contovounesios" . "contovob@tcd.ie"))])
 (halloweenie-theme . [(0 1 1) ((emacs (27 1)) (autothemer (0 2))) "Dark and spooky Halloween color theme" tar ((:url . "https://cicadas.surf/cgit/halloweenie-theme.git") (:commit . "db39ff0516e071aa890585c39fe411ea355e8b06") (:revdesc . "db39ff0516e0") (:keywords "faces" "theme" "halloween" "pumpkin") (:authors ("Colin Okay" . "colin@cicadas.surf")) (:maintainers ("Colin Okay" . "colin@cicadas.surf")) (:maintainer "Colin Okay" . "colin@cicadas.surf"))])
 (ham-mode . [(1 1 2) ((html-to-markdown (1 2)) (markdown-mode (2 0))) "Html As Markdown. Transparently edit an html file using markdown" tar ((:url . "https://github.com/Malabarba/ham-mode") (:commit . "3a141986a21c2aa6eefb428983352abb8b7907d2") (:revdesc . "3a141986a21c") (:keywords "convenience" "emulation" "wp") (:authors ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainers ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainer "Artur Malabarba" . "bruce.connor.am@gmail.com"))])
 (hamburger-menu . [(1 0 6) ((emacs (28 1))) "Mode line hamburger menu" tar ((:url . "https://gitlab.com/iain/hamburger-menu-mode") (:commit . "06bc9d6872007a31226d7410d497a0acd98b272b") (:revdesc . "v1.0.6-0-g06bc9d687200") (:keywords "hamburger" "menu"))])
 (haml-mode . [(3 1 9) ((ruby-mode (1 0))) "Major mode for editing Haml files" tar ((:url . "https://github.com/nex3/haml-mode") (:commit . "5e0baf7b795b9e41ac03b55f8feff6b51027c43b") (:revdesc . "5e0baf7b795b") (:keywords "markup" "language" "html"))])
 (hammy . [(0 3) ((emacs (28 1)) (svg-lib (0 2 5)) (ts (0 2 2))) "Programmable, interactive interval timers" tar ((:url . "https://github.com/alphapapa/hammy.el") (:commit . "d5d154060bb13e9b61d74a83b25a12238973099d") (:revdesc . "v0.3-0-gd5d154060bb1") (:keywords "convenience") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (haproxy-mode . [(0 9) ((emacs (24 3))) "Major mode for editing HAProxy config files" tar ((:url . "https://github.com/port19x/haproxy-mode") (:commit . "eafb1144751493c33dc005a317236ec3e84aeb07") (:revdesc . "eafb11447514") (:keywords "haproxy" "languages" "tools") (:authors ("port19" . "port19@port19.xyz")) (:maintainers ("port19" . "port19@port19.xyz")) (:maintainer "port19" . "port19@port19.xyz"))])
 (hardcore-mode . [(0 1 0) nil "Disable arrow keys + optionally backspace and return" tar ((:url . "https://github.com/magnars/hardcore-mode.el") (:commit . "5ab75594a7a0ca236e2ac87882ee439ff6155d96") (:revdesc . "0.1.0-0-g5ab75594a7a0") (:authors ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (hardhat . [(0 4 6) ((ignoramus (0 7 0))) "Protect against clobbering user-writable files" tar ((:url . "https://github.com/rolandwalker/hardhat") (:commit . "9038a49ab55cd4c502cf7f07ed0d1b9b6bc3626e") (:revdesc . "v0.4.6-0-g9038a49ab55c") (:keywords "convenience") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (hardtime . [(0 1) ((emacs (26 3))) "Prevents overuse of specified commands" tar ((:url . "https://github.com/ichernyshovvv/hardtime.el") (:commit . "a14df12bda3951e53553426629f4af7a638f6eee") (:revdesc . "0.1-0-ga14df12bda39") (:keywords "navigation" "convenience") (:authors ("Ilya Chernyshov" . "ichernyshovvv@gmail.com")) (:maintainers ("Ilya Chernyshov" . "ichernyshovvv@gmail.com")) (:maintainer "Ilya Chernyshov" . "ichernyshovvv@gmail.com"))])
 (harvest . [(0 3 8) ((swiper (0 7 0)) (hydra (0 13 0)) (s (1 11 0))) "Harvest integration" tar ((:url . "https://github.com/kostajh/harvest.el") (:commit . "69041907bdca68d3ab6802e08ec698c3448f28a1") (:revdesc . "69041907bdca") (:keywords "harvest") (:authors ("Kosta Harlan" . "kosta@kostaharlan.net")) (:maintainers ("Kosta Harlan" . "kosta@kostaharlan.net")) (:maintainer "Kosta Harlan" . "kosta@kostaharlan.net"))])
 (haskell-emacs . [(4 0 3) nil "Write emacs extensions in haskell" tar ((:url . "https://github.com/knupfer/haskell-emacs") (:commit . "a2c6a079175904689eed7c6c200754bfa85d1ed9") (:revdesc . "a2c6a0791759") (:keywords "haskell" "emacs" "ffi"))])
 (haskell-emacs-base . [(4 0 3) ((haskell-emacs (2 4 0))) "Haskell functions from Prelude" tar ((:url . "https://github.com/knupfer/haskell-emacs") (:commit . "a2c6a079175904689eed7c6c200754bfa85d1ed9") (:revdesc . "a2c6a0791759") (:keywords "haskell" "emacs" "ffi"))])
 (haskell-emacs-text . [(4 0 3) ((haskell-emacs (2 4 0))) "Haskell functions from Data.Text" tar ((:url . "https://github.com/knupfer/haskell-emacs") (:commit . "a2c6a079175904689eed7c6c200754bfa85d1ed9") (:revdesc . "a2c6a0791759") (:keywords "haskell" "emacs" "ffi"))])
 (haskell-mode . [(17 5) ((emacs (25 1))) "A Haskell editing mode" tar ((:url . "https://github.com/haskell/haskell-mode") (:commit . "8d0f44bfe2a9ab6b0969c9bafb75089f315ff5ae") (:revdesc . "8d0f44bfe2a9") (:keywords "haskell" "cabal" "ghc" "repl" "languages"))])
 (haskell-snippets . [(0 1 0) ((yasnippet (0 8 0))) "Yasnippets for Haskell" tar ((:url . "https://github.com/haskell/haskell-snippets") (:commit . "bcf12cf33a67ddc2f023a55072859e637fe4fa25") (:revdesc . "bcf12cf33a67") (:keywords "snippets" "haskell") (:authors ("Luke Hoersten" . "luke@hoersten.org")) (:maintainers ("Luke Hoersten" . "luke@hoersten.org")) (:maintainer "Luke Hoersten" . "luke@hoersten.org"))])
 (haskell-tab-indent . [(0 3) nil "Tab-based indentation for haskell-mode" tar ((:url . "https://git.spwhitton.name/haskell-tab-indent") (:commit . "1127f46eca40a48be9cd2380df2cfc5f0b694e63") (:revdesc . "0.3-0-g1127f46eca40") (:keywords "indentation" "haskell") (:authors ("Sean Whitton" . "spwhitton@spwhitton.name")) (:maintainers ("Sean Whitton" . "spwhitton@spwhitton.name")) (:maintainer "Sean Whitton" . "spwhitton@spwhitton.name"))])
 (hasklig-mode . [(0 2) ((emacs (25))) "Hasklig ligatures" tar ((:url . "https://github.com/minad/hasklig-mode") (:commit . "4b73d61f4ef1c73733f7201fbf0b49ba9e3395b6") (:revdesc . "4b73d61f4ef1"))])
 (hass . [(3 0 2) ((emacs (25 1)) (request (0 3 3)) (websocket (1 13))) "Interact with Home Assistant" tar ((:url . "https://github.com/purplg/hass") (:commit . "033d11b07e0f8bb68b348a12d5ae13fabea56c73") (:revdesc . "033d11b07e0f"))])
 (haxe-mode . [(0 3 3) nil "Major mode for editing Haxe files" tar ((:url . "https://github.com/emacsorphanage/haxe-mode") (:commit . "5e8183a275babdc7604ae01fc94853e60cb04a32") (:revdesc . "5e8183a275ba") (:maintainers ("Jen-Chieh Shen" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh Shen" . "jcs090218@gmail.com"))])
 (haxor-mode . [(0 7 0) ((emacs (24 0))) "Major mode for editing Haxor Assembly Files" tar ((:url . "https://github.com/krzysztof-magosa/haxor-mode") (:commit . "6fa25a8e6b6a59481bc0354c2fe1e0ed53cbdc91") (:revdesc . "6fa25a8e6b6a") (:keywords "haxor") (:authors ("Krzysztof Magosa" . "krzysztof@magosa.pl")) (:maintainers ("Krzysztof Magosa" . "krzysztof@magosa.pl")) (:maintainer "Krzysztof Magosa" . "krzysztof@magosa.pl"))])
 (hcl-mode . [(0 3) ((emacs (24 3))) "Major mode for Hashicorp" tar ((:url . "https://github.com/hcl-emacs/hcl-mode") (:commit . "6a6daf37522188a2f2fcdebc60949fc3bdabbc06") (:revdesc . "6a6daf375221") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (heaven-and-hell . [(0 0 5) ((emacs (24 4))) "Easy toggle light/dark themes" tar ((:url . "https://github.com/valignatev/heaven-and-hell") (:commit . "e1febfd60d060c110a1e43c5f093cd8537251308") (:revdesc . "e1febfd60d06") (:keywords "faces") (:authors ("Valentin Ignatev" . "valentignatev@gmail.com")) (:maintainers ("Valentin Ignatev" . "valentignatev@gmail.com")) (:maintainer "Valentin Ignatev" . "valentignatev@gmail.com"))])
 (helm . [(4 0) ((helm-core (4 0)) (wfnames (1 2))) "Helm is an Emacs incremental and narrowing framework" tar ((:url . "https://github.com/emacs-helm/helm") (:commit . "e0d028081f1f24da8e649f6ea3ecea42216d4632") (:revdesc . "v4.0-0-ge0d028081f1f") (:keywords "helm" "convenience" "files" "buffers" "grep" "completion" "lisp" "matching" "tools" "help") (:authors ("Thierry Volpiatto" . "thievol@posteo.net")) (:maintainers ("Thierry Volpiatto" . "thievol@posteo.net")) (:maintainer "Thierry Volpiatto" . "thievol@posteo.net"))])
 (helm-ack . [(0 13) ((helm (1 0)) (cl-lib (0 5))) "Ack command with helm interface" tar ((:url . "https://github.com/emacsorphanage/helm-ack") (:commit . "5982f3cb6ec9f460ebbe06ec0ce7b3590bca3118") (:revdesc . "5982f3cb6ec9") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (helm-ag . [(0 64) ((emacs (25 1)) (helm (2 0))) "The silver searcher with helm interface" tar ((:url . "https://github.com/emacsorphanage/helm-ag") (:commit . "6a3e738c1bb5e80c7ea80f7166fda34a714284d8") (:revdesc . "6a3e738c1bb5") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (helm-apt . [(1 1) ((helm (3 9 5)) (emacs (25 1))) "Helm interface for Debian/Ubuntu packages (apt-*)" tar ((:url . "https://github.com/emacs-helm/helm-apt") (:commit . "f020465c18908efe00807e1e0f828a3766fc6916") (:revdesc . "v1.1-0-gf020465c1890") (:authors ("Thierry Volpiatto" . "thievol@posteo.net")) (:maintainers ("Thierry Volpiatto" . "thievol@posteo.net")) (:maintainer "Thierry Volpiatto" . "thievol@posteo.net"))])
 (helm-aws . [(1 0 0) ((helm (1 5 3))) "Manage AWS EC2 server instances directly from Emacs" tar ((:url . "https://github.com/istib/helm-aws") (:commit . "172a4a3427d31c999e27e9ee06aa8e3822364a8c") (:revdesc . "1.0.0-0-g172a4a3427d3"))])
 (helm-backup . [(1 1 1) ((helm (1 5 5)) (s (1 8 0)) (cl-lib (0))) "Backup each file change using git" tar ((:url . "https://github.com/antham/helm-backup") (:commit . "45a86a41ac44f90d4db2c0e9339233ee7f0be0b8") (:revdesc . "45a86a41ac44") (:keywords "backup" "convenience" "files" "tools" "vc") (:authors ("Anthony HAMON" . "hamon.anth@gmail.com")) (:maintainers ("Anthony HAMON" . "hamon.anth@gmail.com")) (:maintainer "Anthony HAMON" . "hamon.anth@gmail.com"))])
 (helm-bbdb . [(1 1) ((helm (1 5)) (bbdb (3 1 2))) "Helm interface for bbdb" tar ((:url . "https://github.com/emacs-helm/helm-bbdb") (:commit . "20513422102fea4c08a0433d728a7783bb4968c8") (:revdesc . "v1.1-0-g20513422102f"))])
 (helm-bibtex . [(2 0 0) ((helm (1 5 5)) (parsebib (1 0)) (s (1 9 0)) (dash (2 6 0)) (f (0 16 2)) (cl-lib (0 5)) (biblio (0 2))) "A BibTeX bibliography manager based on Helm" tar ((:url . "https://github.com/tmalsburg/helm-bibtex") (:commit . "d6a98ac6f28d2a6a05e203115211c98333d40aca") (:revdesc . "d6a98ac6f28d") (:authors ("Titus von der Malsburg" . "malsburg@posteo.de")) (:maintainers ("Titus von der Malsburg" . "malsburg@posteo.de")) (:maintainer "Titus von der Malsburg" . "malsburg@posteo.de"))])
 (helm-bitbucket . [(0 1 4) ((emacs (24)) (helm-core (3 6 0))) "Search Bitbucket with Helm" tar ((:url . "https://github.com/dragonwasrobot/helm-bitbucket") (:commit . "9d07a274584ad364a2620c6389f86d90502f2640") (:revdesc . "9d07a274584a") (:keywords "matching") (:authors ("Peter Urbak" . "tolowercase@gmail.com")) (:maintainers ("Peter Urbak" . "tolowercase@gmail.com")) (:maintainer "Peter Urbak" . "tolowercase@gmail.com"))])
 (helm-bm . [(0 3) ((bm (1 0)) (cl-lib (0 5)) (helm (1 9 3)) (s (1 11 0))) "helm sources for bm.el" tar ((:commit . "d66341f5646c23178d4d8bffb6cfebe3fb73f1d7") (:authors ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainers ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainer "Yasuyuki Oka" . "yasuyk@gmail.com") (:keywords "helm" "bookmark") (:url . "https://github.com/yasuyk/helm-bm"))])
 (helm-books . [(1 0 1) ((helm (1 7 7))) "Helm interface for searching books" tar ((:url . "https://github.com/grugrut/helm-books") (:commit . "b4c57d2aed596faad41a753dccbcd0a31a717b76") (:revdesc . "b4c57d2aed59") (:authors ("grugrut" . "grugruglut+github@gmail.com")) (:maintainers ("grugrut" . "grugruglut+github@gmail.com")) (:maintainer "grugrut" . "grugruglut+github@gmail.com"))])
 (helm-bufler . [(0 3) ((emacs (26 3)) (bufler (0 2 -1)) (helm (1 9 4))) "Helm source for Bufler" tar ((:url . "https://github.com/alphapapa/bufler.el") (:commit . "3a6176d0e074bb00ea8b3fef4f7e03957a3ea058") (:revdesc . "v0.3-0-g3a6176d0e074") (:keywords "convenience") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (helm-bundle-show . [(1 1 6) ((emacs (24)) (helm (1 8 0))) "Bundle show with helm interface" tar ((:url . "https://github.com/masutaka/emacs-helm-bundle-show") (:commit . "70f1ca7d1847c7d5cd5a3e488562cd4a295b809f") (:revdesc . "1.1.6-0-g70f1ca7d1847") (:authors ("Takashi Masuda" . "masutaka.net@gmail.com")) (:maintainers ("Takashi Masuda" . "masutaka.net@gmail.com")) (:maintainer "Takashi Masuda" . "masutaka.net@gmail.com"))])
 (helm-c-yasnippet . [(0 6 7) ((helm-core (1 7 7)) (yasnippet (0 8 0)) (cl-lib (0 3))) "Helm source for yasnippet.el" tar ((:url . "https://github.com/emacs-jp/helm-c-yasnippet") (:commit . "1fa400233ba8e990066c47cca1e2af64bd192d4d") (:revdesc . "0.6.7-0-g1fa400233ba8") (:keywords "convenience" "emulation") (:authors ("Kenji.I" . "ken.imakaado@gmail.com")) (:maintainers ("Kenji.I" . "ken.imakaado@gmail.com")) (:maintainer "Kenji.I" . "ken.imakaado@gmail.com"))])
 (helm-cider . [(0 5 0) ((emacs (26)) (cider (1 0)) (helm-core (2 8))) "Helm interface to CIDER" tar ((:url . "https://github.com/clojure-emacs/helm-cider") (:commit . "00809e45de919c82753f332f29358f0ddbf21936") (:revdesc . "00809e45de91") (:keywords "cider" "clojure" "helm" "languages") (:authors ("Tianxiang Xiong" . "tianxiang.xiong@gmail.com")) (:maintainers ("Tianxiang Xiong" . "tianxiang.xiong@gmail.com")) (:maintainer "Tianxiang Xiong" . "tianxiang.xiong@gmail.com"))])
 (helm-circe . [(0 4) ((emacs (24)) (helm (0 0)) (circe (0 0)) (cl-lib (0 5))) "Helm circe buffer management" tar ((:url . "https://github.com/lesharris/helm-circe") (:commit . "9091651d9fdd8d49d8ff6f9dcf3a2ae416c9f15a") (:revdesc . "v0.4-0-g9091651d9fdd") (:keywords "helm" "circe") (:authors ("Les Harris" . "les@lesharris.com")) (:maintainers ("Les Harris" . "les@lesharris.com")) (:maintainer "Les Harris" . "les@lesharris.com"))])
 (helm-codesearch . [(0 6 0) ((emacs (25 1)) (s (1 11 0)) (dash (2 12 0)) (helm (1 7 7)) (cl-lib (0 5))) "Helm interface for codesearch" tar ((:url . "https://github.com/youngker/helm-codesearch.el") (:commit . "bd5a7e3ece98f2940cb09be56d3e56da97d4c865") (:revdesc . "bd5a7e3ece98") (:keywords "tools") (:authors ("Youngjoo Lee" . "youngker@gmail.com")) (:maintainers ("Youngjoo Lee" . "youngker@gmail.com")) (:maintainer "Youngjoo Lee" . "youngker@gmail.com"))])
 (helm-commandlinefu . [(0 3) ((emacs (24 1)) (helm (1 7 0)) (json (1 3)) (let-alist (1 0 3))) "Search and browse commandlinefu.com from helm" tar ((:url . "https://github.com/xuchunyang/helm-commandlinefu") (:commit . "e11cd3e961c1c4c973b51d8d12592e7235a4971b") (:revdesc . "e11cd3e961c1") (:keywords "commandlinefu.com") (:authors ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainers ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainer "Chunyang Xu" . "xuchunyang56@gmail.com"))])
 (helm-company . [(0 2 8) ((helm (1 5 9)) (company (0 10 0))) "Helm interface for company-mode" tar ((:url . "https://github.com/Sodel-the-Vociferous/helm-company") (:commit . "4622b82353220ee6cc33468f710fa5b6b253b7f1") (:revdesc . "4622b8235322") (:authors ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainers ("Daniel Ralston" . "Sodel-the-Vociferous@users.noreply.github.com")) (:maintainer "Daniel Ralston" . "Sodel-the-Vociferous@users.noreply.github.com"))])
 (helm-core . [(4 0) ((emacs (25 1)) (async (1 9 8))) "Development files for Helm" tar ((:url . "https://github.com/emacs-helm/helm") (:commit . "e0d028081f1f24da8e649f6ea3ecea42216d4632") (:revdesc . "v4.0-0-ge0d028081f1f") (:authors ("Thierry Volpiatto" . "thievol@posteo.net")) (:maintainers ("Thierry Volpiatto" . "thievol@posteo.net")) (:maintainer "Thierry Volpiatto" . "thievol@posteo.net"))])
 (helm-cscope . [(0 1 1) ((xcscope (1 0)) (helm (1 6 7)) (cl-lib (0 5)) (emacs (24 1))) "Helm interface for xcscope.el" tar ((:url . "https://github.com/alpha22jp/helm-cscope.el") (:commit . "b82db54071bd2d1c77db2e648f8b4e61b1abe288") (:revdesc . "b82db54071bd") (:keywords "cscope" "helm") (:authors ("alpha22jp" . "alpha22jp@gmail.com")) (:maintainers ("alpha22jp" . "alpha22jp@gmail.com")) (:maintainer "alpha22jp" . "alpha22jp@gmail.com"))])
 (helm-dash . [(1 3 0) ((helm (1 9 2)) (cl-lib (0 5))) "Offline documentation browser for +150 APIs using Dash docsets" tar ((:url . "https://github.com/dash-docs-el/helm-dash") (:commit . "9a230125a7a11f5fa90aa048b61abd95eb78ddfe") (:revdesc . "9a230125a7a1") (:keywords "docs") (:authors ("Raimon Grau" . "raimonster@gmail.com") ("Toni Reina" . "areina0@gmail.com")) (:maintainers ("Raimon Grau" . "raimonster@gmail.com") ("Toni Reina" . "areina0@gmail.com")) (:maintainer "Raimon Grau" . "raimonster@gmail.com"))])
 (helm-descbinds . [(1 13) ((helm (1 5))) "A convenient `describe-bindings' with `helm'" tar ((:url . "https://github.com/emacs-helm/helm-descbinds") (:commit . "6d5ddc11e6cef86548bd6b3e0d840112d602659c") (:revdesc . "v1.13-0-g6d5ddc11e6ce") (:keywords "helm" "help") (:authors ("Taiki SUGAWARA" . "buzz.taiki@gmail.com")) (:maintainers ("Taiki SUGAWARA" . "buzz.taiki@gmail.com")) (:maintainer "Taiki SUGAWARA" . "buzz.taiki@gmail.com"))])
 (helm-directory . [(0 6 4) ((emacs (24 4)) (helm (2 0))) "Selecting directory before select the file" tar ((:url . "https://github.com/masasam/emacs-helm-directory") (:commit . "2c6d45404506ba744888dcdb65e9f63878f2da16") (:revdesc . "2c6d45404506"))])
 (helm-dogears . [(0 1) ((emacs (26 3)) (dogears (0 1 -1)) (helm (3 6))) "Helm source for Dogears" tar ((:url . "https://github.com/alphapapa/dogears.el") (:commit . "7ba83bd8924cec66fe3ede3334e98b1845e6852e") (:revdesc . "v0.1-0-g7ba83bd8924c") (:keywords "convenience") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (helm-emms . [(1 3) ((helm (1 5)) (emms (0 0)) (cl-lib (0 5)) (emacs (24 1))) "Emms for Helm" tar ((:url . "https://github.com/emacs-helm/helm-emms") (:commit . "d7da090af0f63b92c5d735197992c732adbeef3d") (:revdesc . "v1.3-0-gd7da090af0f6"))])
 (helm-esa . [(1 1 0) ((emacs (26 2)) (helm (3 2)) (request (0 3 0))) "Esa with helm interface" tar ((:url . "https://github.com/masutaka/emacs-helm-esa") (:commit . "d93b4af404346870cb2cf9c257d055332ef3f577") (:revdesc . "1.1.0-0-gd93b4af40434") (:authors ("Takashi Masuda" . "masutaka.net@gmail.com")) (:maintainers ("Takashi Masuda" . "masutaka.net@gmail.com")) (:maintainer "Takashi Masuda" . "masutaka.net@gmail.com"))])
 (helm-evil-markers . [(1 0 0) ((emacs (24 4)) (helm (2 0 0)) (evil (1 2 10))) "Show evil markers with helm" tar ((:url . "https://github.com/xueeinstein/helm-evil-markers") (:commit . "29f9288a73370f26fe431db1472ed948bd63190d") (:revdesc . "29f9288a7337") (:keywords "extensions"))])
 (helm-eww . [(1 2) ((emacs (24 4)) (helm (2 8 6)) (seq (1 8))) "Helm UI wrapper for EWW" tar ((:url . "https://github.com/emacs-helm/helm-eww") (:commit . "76ba59fda8dd6f32a1bc7c6df0b43c6f76169911") (:revdesc . "76ba59fda8dd") (:keywords "helm" "packages") (:authors ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainers ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz"))])
 (helm-ext . [(0 1 2) ((emacs (24 4)) (helm (2 5 3))) "A few extensions to Helm" tar ((:url . "https://github.com/cute-jumper/helm-ext") (:commit . "c8ac56918b200239b3f73a4e6a031deecc2c5646") (:revdesc . "c8ac56918b20") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (helm-exwm . [(0 0 2) ((emacs (25 2)) (helm (2 8 5)) (exwm (0 15))) "Helm for EXWM buffers" tar ((:url . "https://github.com/emacs-helm/helm-exwm") (:commit . "00ddb4d2a127087a0b99f0a440562bd54408572d") (:revdesc . "00ddb4d2a127") (:keywords "helm" "exwm") (:authors ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainers ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz"))])
 (helm-file-preview . [(0 1 5) ((emacs (25 1)) (helm (2 0))) "Preview the current helm file selection" tar ((:url . "https://github.com/jcs-legacy/helm-file-preview") (:commit . "59adbf2d3c67b174a354f0dd64f647b4391ab8d0") (:revdesc . "59adbf2d3c67") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (helm-firefox . [(1 3) ((helm (1 5)) (cl-lib (0 5)) (emacs (24 1))) "Firefox bookmarks" tar ((:url . "https://github.com/emacs-helm/helm-firefox") (:commit . "0ad34b7b5abc485a86cae6920c14de861cbeb085") (:revdesc . "v1.3-0-g0ad34b7b5abc"))])
 (helm-fish-completion . [(0 6) ((emacs (25)) (helm (3)) (fish-completion (1 2))) "Helm interface for fish completion" tar ((:url . "https://github.com/emacs-helm/helm-fish-completion") (:commit . "2a2001b3a876da3c468ffec8935572509c485aac") (:revdesc . "2a2001b3a876") (:authors ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainers ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz"))])
 (helm-flycheck . [(0 4) ((dash (2 12 1)) (flycheck (28)) (helm-core (1 9 8))) "Show flycheck errors with helm" tar ((:url . "https://github.com/yasuyk/helm-flycheck") (:commit . "a15e62a6432c165c4f2c17388686873383400d7d") (:revdesc . "a15e62a6432c") (:keywords "helm" "flycheck") (:authors ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainers ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainer "Yasuyuki Oka" . "yasuyk@gmail.com"))])
 (helm-fuz . [(1 3 0) ((emacs (25 1)) (fuz (1 3 0)) (helm (3 2))) "Integrate Helm and Fuz" tar ((:url . "https://github.com/rustify-emacs/fuz.el") (:commit . "90ca9207a9c1decda24a552b94ff41169ecccb14") (:revdesc . "1.3.0-0-g90ca9207a9c1") (:keywords "convenience") (:authors ("Zhu Zihao" . "all_but_last@163.com")) (:maintainers ("Zhu Zihao" . "all_but_last@163.com")) (:maintainer "Zhu Zihao" . "all_but_last@163.com"))])
 (helm-fuzzy . [(0 1 6) ((emacs (24 4)) (helm (1 7 9)) (flx (0 5))) "Fuzzy matching for helm source" tar ((:url . "https://github.com/jcs-legacy/helm-fuzzy") (:commit . "72d618f95d6531854a60322d88b242825016f8e6") (:revdesc . "72d618f95d65") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (helm-ghq . [(1 8 1) ((emacs (24)) (helm (3 8 0))) "Ghq with helm interface" tar ((:url . "https://github.com/masutaka/emacs-helm-ghq") (:commit . "7b47ac91e42762f2ecbbceeaadc05b86c9fe5f14") (:revdesc . "1.8.1-0-g7b47ac91e427") (:authors ("Takashi Masuda" . "masutaka.net@gmail.com")) (:maintainers ("Takashi Masuda" . "masutaka.net@gmail.com")) (:maintainer "Takashi Masuda" . "masutaka.net@gmail.com"))])
 (helm-git-grep . [(0 10 1) ((helm-core (2 2 0))) "Helm for git grep, an incremental git-grep(1)" tar ((:url . "https://github.com/yasuyk/helm-git-grep") (:commit . "744cea07dba6e6a5effbdba83f1b786c78fd86d3") (:revdesc . "744cea07dba6") (:maintainers ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainer "Yasuyuki Oka" . "yasuyk@gmail.com"))])
 (helm-github-stars . [(1 3 7) ((helm (1 6 8)) (emacs (24 4))) "Helm interface for your github's stars" tar ((:url . "https://github.com/Sliim/helm-github-stars") (:commit . "c891690218b0d8b957ea6cb45b1b6cffd15a6950") (:revdesc . "1.3.7-0-gc891690218b0") (:keywords "helm" "github" "stars") (:authors ("Sliim" . "sliim@mailoo.org") ("xuchunyang" . "xuchunyang56@gmail.com")) (:maintainers ("Sliim" . "sliim@mailoo.org") ("xuchunyang" . "xuchunyang56@gmail.com")) (:maintainer "Sliim" . "sliim@mailoo.org"))])
 (helm-gitlab . [(0 8 0) ((s (1 9 0)) (dash (2 9 0)) (helm (1 0)) (gitlab (0 8 0))) "Helm interface to Gitlab" tar ((:url . "https://github.com/nlamirault/emacs-gitlab") (:commit . "a1c1441ff5ffb290e695eb9ac05431e9385578f4") (:revdesc . "a1c1441ff5ff") (:keywords "gitlab" "helm") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (helm-go-package . [(0 3 0) ((emacs (24 4)) (helm-core (2 2 1)) (go-mode (1 4 0)) (deferred (0 4 0))) "Helm sources for Go programming language's package" tar ((:url . "https://github.com/yasuyk/helm-go-package") (:commit . "7db5ea9ce97502152a6bb1fe38f8fabb5a49abd2") (:revdesc . "7db5ea9ce975") (:authors ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainers ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainer "Yasuyuki Oka" . "yasuyk@gmail.com"))])
 (helm-grepint . [(1 6 1) ((helm (2 9 7)) (emacs (24 4))) "Generic helm interface to grep" tar ((:url . "https://github.com/kopoli/helm-grepint") (:commit . "9aec98428823b749eb14d2c8512b46b59ca9f8ca") (:revdesc . "1.6.1-0-g9aec98428823") (:keywords "grep" "grepping" "searching" "helm" "tools" "convenience") (:authors ("Kalle Kankare" . "kalle.kankare@iki.fi")) (:maintainers ("Kalle Kankare" . "kalle.kankare@iki.fi")) (:maintainer "Kalle Kankare" . "kalle.kankare@iki.fi"))])
 (helm-gtags . [(1 5 7) ((emacs (24 4)) (helm (2 0))) "GNU GLOBAL helm interface" tar ((:url . "https://github.com/emacsorphanage/helm-gtags") (:commit . "a15fe1dd272d252ad933d8129db1dce02fd41adb") (:revdesc . "a15fe1dd272d") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (helm-hatena-bookmark . [(2 4 4) ((emacs (24)) (helm (2 8 2))) "Hatena::Bookmark with helm interface" tar ((:url . "https://github.com/masutaka/emacs-helm-hatena-bookmark") (:commit . "a6a2b37370ac84ca2cae5ef65b2b144a010b1584") (:revdesc . "2.4.4-0-ga6a2b37370ac") (:authors ("Takashi Masuda" . "masutaka.net@gmail.com")) (:maintainers ("Takashi Masuda" . "masutaka.net@gmail.com")) (:maintainer "Takashi Masuda" . "masutaka.net@gmail.com"))])
 (helm-hayoo . [(0 0 5) ((helm (1 6 0)) (json (1 2)) (haskell-mode (13 7))) "Source and configured helm for searching hayoo" tar ((:url . "https://github.com/markus1189/helm-hayoo") (:commit . "f49a77e8b8704bb7eb0d1097eefb8010a6617664") (:revdesc . "0.0.5-0-gf49a77e8b870") (:keywords "helm") (:authors ("Markus Hauck" . "markus1189@gmail.com")) (:maintainers ("Markus Hauck" . "markus1189@gmail.com")) (:maintainer "Markus Hauck" . "markus1189@gmail.com"))])
 (helm-ispell . [(0 1) ((helm-core (1 7 7))) "Ispell-complete-word with helm interface" tar ((:url . "https://github.com/emacsorphanage/helm-ispell") (:commit . "640723ace794d21b8a5892012db99f963149415b") (:revdesc . "640723ace794") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (helm-lobsters . [(0 8 0) ((helm (1 0)) (cl-lib (0 5))) "Helm front-end for lobste.rs" tar ((:url . "https://github.com/julienXX/helm-lobste.rs") (:commit . "3a1af0d063ca24fe0187daff12110171b942c7d3") (:revdesc . "0.8.0-0-g3a1af0d063ca") (:authors ("Julien BLANCHARD" . "julien@sideburns.eu")) (:maintainers ("Julien BLANCHARD" . "julien@sideburns.eu")) (:maintainer "Julien BLANCHARD" . "julien@sideburns.eu"))])
 (helm-ls-git . [(1 9 4) ((helm (1 7 8))) "List git files" tar ((:url . "https://github.com/emacs-helm/helm-ls-git") (:commit . "dd9ef9ffffcd7d2fa76a838f16edb5ccf86abdf2") (:revdesc . "v1.9.4-0-gdd9ef9ffffcd"))])
 (helm-ls-hg . [(1 8 0) ((helm (1 7 8))) "List hg files in hg project" tar ((:url . "https://github.com/emacs-helm/helm-ls-hg") (:commit . "61b91a22fcfb62d0fc56e361ec01ce96973c7165") (:revdesc . "v1.8.0-0-g61b91a22fcfb"))])
 (helm-lsp . [(0 3) ((emacs (27 1)) (dash (2 14 1)) (lsp-mode (5 0)) (helm (2 0))) "LSP helm integration" tar ((:url . "https://github.com/emacs-lsp/helm-lsp") (:commit . "e740efb2abbc0ffd43f6dbcdb4527bc55723b842") (:revdesc . "e740efb2abbc") (:keywords "languages" "debug") (:authors ("Ivan Yonchovski" . "yyoncho@gmail.com")) (:maintainers ("Ivan Yonchovski" . "yyoncho@gmail.com")) (:maintainer "Ivan Yonchovski" . "yyoncho@gmail.com"))])
 (helm-lxc . [(0 2 0) ((emacs (25)) (cl-lib (0 5)) (helm (2 9 4)) (lxc-tramp (0 2 0))) "Helm interface to manage LXC containers" tar ((:url . "https://github.com/montag451/helm-lxc") (:commit . "02812daf09d5ffb02abef7a8e0fa1f7b7c472d67") (:revdesc . "02812daf09d5") (:keywords "helm" "lxc" "convenience"))])
 (helm-make . [(0 1 0) ((helm (1 5 3)) (projectile (0 11 0))) "Select a Makefile target with helm" tar ((:url . "https://github.com/abo-abo/helm-make") (:commit . "6558a79d20d04465419b312da198190be6832647") (:revdesc . "6558a79d20d0") (:keywords "makefile") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com"))])
 (helm-migemo . [(1 22) ((helm-core (1 7 8)) (migemo (1 9)) (cl-lib (0 5))) "Migemo plug-in for helm" tar ((:url . "https://github.com/emacs-jp/helm-migemo") (:commit . "2d964309a5415cf47f5154271e6fe7b6a7fffec7") (:revdesc . "2d964309a541") (:keywords "matching" "convenience" "tools" "i18n") (:authors ("rubikitch" . "rubikitch@ruby-lang.org")) (:maintainers ("Yuhei Maeda" . "yuhei.maeda_at_gmail.com")) (:maintainer "Yuhei Maeda" . "yuhei.maeda_at_gmail.com"))])
 (helm-mode-manager . [(1 0 0) ((helm (1 5 3))) "Select and toggle major and minor modes with helm" tar ((:url . "https://github.com/istib/helm-mode-manager") (:commit . "1fc1d65a27bc57d3a5bbd359f3eb77a6353fa4a5") (:revdesc . "1.0.0-0-g1fc1d65a27bc"))])
 (helm-mt . [(0 9) ((emacs (24)) (helm (0 0)) (multi-term (0 0)) (cl-lib (0 5))) "Helm multi-term management" tar ((:url . "https://github.com/dfdeshom/helm-mt") (:commit . "d2bff4100118483bc398c56d0ff095294209265b") (:revdesc . "d2bff4100118") (:keywords "helm" "multi-term") (:authors ("Didier Deshommes" . "dfdeshom@gmail.com")) (:maintainers ("Didier Deshommes" . "dfdeshom@gmail.com")) (:maintainer "Didier Deshommes" . "dfdeshom@gmail.com"))])
 (helm-nixos-options . [(0 0 1) ((nixos-options (0 0 1)) (helm (1 5 6))) "Helm Interface for nixos-options" tar ((:url . "https://github.com/nix-community/nix-emacs") (:commit . "5fc8fa29bea9dd8e9c822af92f9bc6ddc223635f") (:revdesc . "5fc8fa29bea9") (:keywords "unix") (:authors ("Diego Berrocal" . "cestdiego@gmail.com") ("Travis B. Hartwell" . "nafai@travishartwell.net")) (:maintainers ("Diego Berrocal" . "cestdiego@gmail.com") ("Travis B. Hartwell" . "nafai@travishartwell.net")) (:maintainer "Diego Berrocal" . "cestdiego@gmail.com"))])
 (helm-notmuch . [(1 2) ((helm (1 9 3)) (notmuch (0 21))) "Search emails with Notmuch and Helm" tar ((:url . "https://github.com/emacs-helm/helm-notmuch") (:commit . "97a01497e079a7b6505987e9feba6b603bbec288") (:revdesc . "97a01497e079") (:keywords "mail") (:authors ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainers ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainer "Chunyang Xu" . "mail@xuchunyang.me"))])
 (helm-open-github . [(0 15) ((emacs (24 4)) (helm-core (1 7 7)) (gh (0 8 2))) "Utilities of Opening Github Page" tar ((:url . "https://github.com/emacsorphanage/helm-open-github") (:commit . "553f3ab0fe0a028015e9b6cb7c35fb139ec222fc") (:revdesc . "553f3ab0fe0a") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (helm-org . [(1 0) ((helm (3 3)) (emacs (24 4))) "Helm for org headlines and keywords completion" tar ((:url . "https://github.com/emacs-helm/helm-org") (:commit . "3a20d0eca0e95943cd9fdd40882cec65628f4a67") (:revdesc . "v1.0-0-g3a20d0eca0e9") (:authors ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainers ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainer "Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))])
 (helm-org-multi-wiki . [(0 4 0) ((emacs (25 1)) (org-multi-wiki (0 3)) (org-ql (0 4)) (dash (2 12))) "Helm interface to org-multi-wiki" tar ((:url . "https://github.com/akirak/org-multi-wiki") (:commit . "80791ea872939df0578dc3a2992a2f7fd5618971") (:revdesc . "80791ea87293") (:keywords "org" "outlines") (:authors ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainers ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainer "Akira Komamura" . "akira.komamura@gmail.com"))])
 (helm-org-ql . [(0 8 10) ((emacs (26 1)) (dash (2 18 1)) (s (1 12 0)) (helm-org (1 0)) (org-ql (0 6 -1))) "Helm support for org-ql" tar ((:url . "https://github.com/alphapapa/org-ql") (:commit . "9c53c1bddfcbda3475ffd8810f012be6de07d963") (:revdesc . "v0.8.10-0-g9c53c1bddfcb") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (helm-org-rifle . [(1 7 1) ((emacs (24 4)) (dash (2 12)) (f (0 18 1)) (helm (1 9 4)) (s (1 10 0))) "Rifle through your Org files" tar ((:url . "https://github.com/alphapapa/org-rifle") (:commit . "263f56d70112f5d0496684c89a2aa07959e0a95f") (:revdesc . "1.7.1-0-g263f56d70112") (:keywords "hypermedia" "outlines") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (helm-orgcard . [(0 2) ((helm-core (1 7 7))) "Browse the orgcard by helm" tar ((:url . "https://github.com/emacs-jp/helm-orgcard") (:commit . "9655ac340d1ccc5f3d1c0f7c49be8dd3556d4d0d") (:revdesc . "0.2-0-g9655ac340d1c") (:keywords "convenience" "helm" "org") (:authors ("Yuhei Maeda" . "yuhei.maeda_at_gmail.com")))])
 (helm-pages . [(0 1 1) ((helm (1 6 5)) (emacs (24)) (cl-lib (0 5))) "Pages in current buffer as Helm datasource" tar ((:url . "https://github.com/david-christiansen/helm-pages") (:commit . "e334ca3312e51d6fdfa989df5d3ebe683d673c0e") (:revdesc . "e334ca3312e5") (:keywords "convenience" "helm" "outlines") (:authors ("David Christiansen" . "david@davidchristiansen.dk")) (:maintainers ("David Christiansen" . "david@davidchristiansen.dk")) (:maintainer "David Christiansen" . "david@davidchristiansen.dk"))])
 (helm-pass . [(0 4) ((emacs (25)) (helm (0)) (password-store (0)) (auth-source-pass (4 0 0))) "Helm interface of pass, the standard Unix password manager" tar ((:url . "https://github.com/emacs-helm/helm-pass") (:commit . "4ce46f1801f2e76e53482c65aa0619d427a3fbf9") (:revdesc . "4ce46f1801f2") (:authors ("J. Alexander Branham" . "branham@utexas.edu")) (:maintainers ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz"))])
 (helm-perldoc . [(0 7) ((helm (1 0)) (deferred (0 3 1)) (cl-lib (0 5))) "Perldoc with helm interface" tar ((:url . "https://github.com/emacsorphanage/helm-perldoc") (:commit . "18645f2065a07acce2c6b50a2f9d7a2554e532a3") (:revdesc . "18645f2065a0") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (helm-perspeen . [(0 1 2) ((perspeen (0 1 0)) (helm (2 5 0))) "Helm interface for perspeen" tar ((:url . "https://github.com/jimo1001/helm-perspeen") (:commit . "aec145d5196aed1689563d138a2aa37b139e1759") (:revdesc . "aec145d5196a") (:keywords "projects" "lisp"))])
 (helm-proc . [(0 0 5) ((helm (1 6 0))) "Helm interface for managing system processes" tar ((:url . "https://github.com/markus1189/helm-proc") (:commit . "0a75a86e4f381143134e0cdcd8c84c5b5b0fb2d6") (:revdesc . "0.0.5-0-g0a75a86e4f38") (:keywords "helm") (:authors ("Markus Hauck" . "markus1189@gmail.com")) (:maintainers ("Markus Hauck" . "markus1189@gmail.com")) (:maintainer "Markus Hauck" . "markus1189@gmail.com"))])
 (helm-project-persist . [(1 0 0) ((helm (1 5 2)) (project-persist (0 1 4))) "Helm integration for project-persist package" tar ((:url . "https://github.com/Sliim/helm-project-persist") (:commit . "df63a21b9118f9639f0f4a336127b4fb8ec6deec") (:revdesc . "1.0.0-0-gdf63a21b9118") (:keywords "project-persist" "project" "helm") (:authors ("Sliim" . "sliim@mailoo.org")) (:maintainers ("Sliim" . "sliim@mailoo.org")) (:maintainer "Sliim" . "sliim@mailoo.org"))])
 (helm-projectile . [(1 0 0) ((helm (1 9 9)) (projectile (2 1 0)) (cl-lib (0 3))) "Helm integration for Projectile" tar ((:url . "https://github.com/bbatsov/helm-projectile") (:commit . "5eb861b77d8e6697733def65288039df5be81a0e") (:revdesc . "5eb861b77d8e") (:keywords "project" "convenience"))])
 (helm-pt . [(0 2) ((helm (1 5 6))) "Helm interface to the platinum searcher" tar ((:url . "https://github.com/punassuming/helm-pt") (:commit . "03e35e2bb5b683d79897d07acb57ee67009cc6cd") (:revdesc . "03e35e2bb5b6"))])
 (helm-purpose . [(0 1) ((emacs (24)) (helm (1 9 2)) (window-purpose (1 4))) "Helm Interface for Purpose" tar ((:url . "https://github.com/bmag/helm-purpose") (:commit . "115a9d612aa07bb6f7f7b18f42b34918699660b9") (:revdesc . "115a9d612aa0"))])
 (helm-pydoc . [(0 7) ((helm-core (1 7 4)) (cl-lib (0 5))) "Pydoc with helm interface" tar ((:url . "https://github.com/emacsorphanage/helm-pydoc") (:commit . "30f1814b5b16db0413ffe74b0d0420b38e153df9") (:revdesc . "30f1814b5b16") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (helm-qiita . [(1 1 3) ((emacs (24)) (helm (2 8 2))) "Qiita with helm interface" tar ((:url . "https://github.com/masutaka/emacs-helm-qiita") (:commit . "5f82010c595f8e122aa3f68148ba8d8ccb1333d8") (:revdesc . "1.1.3-0-g5f82010c595f") (:authors ("Takashi Masuda" . "masutaka.net@gmail.com")) (:maintainers ("Takashi Masuda" . "masutaka.net@gmail.com")) (:maintainer "Takashi Masuda" . "masutaka.net@gmail.com"))])
 (helm-rdefs . [(1 0 1) ((emacs (24)) (helm (1 6 4))) "Rdefs with helm interface" tar ((:url . "https://github.com/saidie/emacs-helm-rdefs") (:commit . "cd3a6b3af3015ee58ef30cb7c81c79ebe5fc867b") (:revdesc . "cd3a6b3af301") (:keywords "matching" "tools") (:authors ("Hiroshi Saito" . "monodie@gmail.com")) (:maintainers ("Hiroshi Saito" . "monodie@gmail.com")) (:maintainer "Hiroshi Saito" . "monodie@gmail.com"))])
 (helm-recoll . [(1 2) ((helm (3 3)) (emacs (24 4))) "Helm interface for the recoll desktop search tool" tar ((:url . "https://github.com/emacs-helm/helm-recoll") (:commit . "8548b157f40f5e7a4940a54abe5ca0016fd9bdee") (:revdesc . "1.2-0-g8548b157f40f") (:keywords "convenience") (:authors ("Thierry Volpiatto" . "thierry.volpiattoatgmail.com")) (:maintainers ("Thierry Volpiatto" . "thierry.volpiattoatgmail.com")) (:maintainer "Thierry Volpiatto" . "thierry.volpiattoatgmail.com"))])
 (helm-rg . [(0 1) ((emacs (25)) (helm (2 8 8)) (cl-lib (0 5)) (dash (2 13 0))) "A helm interface to ripgrep" tar ((:url . "https://github.com/cosmicexplorer/helm-rg") (:commit . "96dcbeb366caa0b158668384113458ee5f7c4dfd") (:revdesc . "96dcbeb366ca") (:keywords "find" "file" "files" "helm" "fast" "rg" "ripgrep" "grep" "search"))])
 (helm-roam . [(1 0 2) ((emacs (24 1)) (org (9 3)) (helm (3 9 9)) (org-roam (2 2 2))) "Helm command for org-roam" tar ((:url . "https://github.com/vhqr0/helm-roam") (:commit . "85222a9ea50c69b18c1e31a66cc70adb851967d5") (:revdesc . "85222a9ea50c") (:keywords "org-mode" "roam" "helm" "convenience") (:authors ("VHQR" . "zq_cmd@163.com")) (:maintainers ("VHQR" . "zq_cmd@163.com")) (:maintainer "VHQR" . "zq_cmd@163.com"))])
 (helm-robe . [(0 2) ((helm (1 7 7))) "Completing read function for robe" tar ((:url . "https://github.com/emacsorphanage/helm-robe") (:commit . "7348d0bc0251b51979554ea678b970fd01c0efe9") (:revdesc . "7348d0bc0251") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (helm-rtags . [(3 23) ((helm (2 0)) (rtags (2 10))) "A front-end for rtags" tar ((:url . "https://github.com/Andersbakken/rtags") (:commit . "7169ed577d676690a3c6f0025b54e8477d80eacf") (:revdesc . "v3.23-0-g7169ed577d67") (:authors ("Jan Erik Hanssen" . "jhanssen@gmail.com") ("Anders Bakken" . "agbakken@gmail.com")) (:maintainers ("Jan Erik Hanssen" . "jhanssen@gmail.com") ("Anders Bakken" . "agbakken@gmail.com")) (:maintainer "Jan Erik Hanssen" . "jhanssen@gmail.com"))])
 (helm-rubygems-org . [(0 0 1) ((emacs (24)) (helm (1 6 3)) (cl-lib (0 5))) "Use helm to search rubygems.org" tar ((:url . "https://github.com/neomantic/helm-rubygems-org") (:commit . "6aaed984f698cbdf9f9aceb0221404563e28764d") (:revdesc . "6aaed984f698") (:keywords "ruby" "rubygems" "gemfile" "helm") (:authors ("Chad Albers" . "calbers@neomantic.com")) (:maintainers ("Chad Albers" . "calbers@neomantic.com")) (:maintainer "Chad Albers" . "calbers@neomantic.com"))])
 (helm-sage . [(0 0 4) ((cl-lib (0 5)) (helm (1 5 6)) (sage-shell-mode (0 0 8))) "A helm extension for sage-shell-mode" tar ((:url . "https://github.com/sagemath/helm-sage") (:commit . "b42b4ba5fd1b17c4b54c30376a053281686beeb8") (:revdesc . "b42b4ba5fd1b") (:keywords "sage" "math" "helm") (:authors ("Sho Takemori" . "stakemorii@gmail.com")) (:maintainers ("Sho Takemori" . "stakemorii@gmail.com")) (:maintainer "Sho Takemori" . "stakemorii@gmail.com"))])
 (helm-searcher . [(0 2 5) ((emacs (25 1)) (helm (2 0)) (searcher (0 1 8)) (s (1 12 0)) (f (0 20 0))) "Helm interface to use searcher" tar ((:url . "https://github.com/emacs-helm/helm-searcher") (:commit . "3c0e4997126b5e7ba2db2dba8f1dbc5cb92d2459") (:revdesc . "3c0e4997126b") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (helm-selector . [(0 6 1) ((emacs (26 1)) (helm (3))) "Helm buffer selector" tar ((:url . "https://github.com/emacs-helm/helm-selector") (:commit . "4da4711c4cfd14527abe20d66787beeb49171b26") (:revdesc . "4da4711c4cfd") (:authors ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainers ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz"))])
 (helm-slime . [(0 4 0) ((emacs (24)) (helm (3 2)) (slime (2 18)) (cl-lib (0 5))) "Helm-sources and some utilities for SLIME" tar ((:url . "https://github.com/emacs-helm/helm-slime") (:commit . "e0dbf04d447098a1d074bc04e125764ff82091b7") (:revdesc . "e0dbf04d4470") (:keywords "convenience" "helm" "slime") (:authors ("Takeshi Banse" . "takebi@laafc.net")) (:maintainers ("Takeshi Banse" . "takebi@laafc.net")) (:maintainer "Takeshi Banse" . "takebi@laafc.net"))])
 (helm-sly . [(0 7 2) ((emacs (25 1)) (helm (3 2)) (cl-lib (0 5)) (sly (0 0))) "Helm sources and some utilities for SLY" tar ((:url . "https://github.com/emacs-helm/helm-sly") (:commit . "3691626c80620e992a338c3222283d9149f1ecb5") (:revdesc . "3691626c8062") (:keywords "convenience" "helm" "sly" "lisp") (:authors ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainers ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz"))])
 (helm-smex . [(0 3) ((emacs (24)) (smex (3 0)) (helm (1 7 7))) "Helm interface for smex" tar ((:url . "https://github.com/ptrv/helm-smex") (:commit . "2269375dfa452b88b5170d1a5d5849ebb2c1e413") (:revdesc . "2269375dfa45") (:keywords "convenience") (:authors ("Peter Vasil" . "mail@petervasil.net")) (:maintainers ("Peter Vasil" . "mail@petervasil.net")) (:maintainer "Peter Vasil" . "mail@petervasil.net"))])
 (helm-spaces . [(0 4) ((helm-core (2 2)) (spaces (0 1 0))) "Helm sources for spaces" tar ((:url . "https://github.com/yasuyk/helm-spaces") (:commit . "877e2b5178926308d6a7c2a37477bb12c33a96d4") (:revdesc . "877e2b517892") (:keywords "helm" "frames" "convenience") (:authors ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainers ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainer "Yasuyuki Oka" . "yasuyk@gmail.com"))])
 (helm-switch-to-repl . [(0 1 2) ((emacs (26 1)) (helm (3))) "Helm action to switch directory in REPLs" tar ((:url . "https://github.com/emacs-helm/helm-switch-to-repl") (:commit . "f0e732e7217fc0373b0805245fa15920cf676619") (:revdesc . "f0e732e7217f") (:authors ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainers ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz"))])
 (helm-swoop . [(3 0 0) ((emacs (25 1)) (helm (3 6))) "Efficiently hopping squeezed lines powered by helm interface" tar ((:url . "https://github.com/emacsorphanage/helm-swoop") (:commit . "533dcd14198b61fd2fbf8c6f286f65feae5b6bd2") (:revdesc . "533dcd14198b") (:keywords "convenience" "helm" "swoop" "inner" "buffer" "search"))])
 (helm-system-packages . [(1 10 2) ((emacs (24 4)) (helm (2 8 7)) (seq (1 8))) "Helm UI wrapper for system package managers" tar ((:url . "https://github.com/emacs-helm/helm-system-packages") (:commit . "c331c69de0a37d2bc4d6f882cc021a905e7e56f9") (:revdesc . "c331c69de0a3") (:keywords "helm" "packages") (:authors ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainers ("Pierre Neidhardt" . "mail@ambrevar.xyz")) (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz"))])
 (helm-taskswitch . [(1 0 4) ((emacs (24)) (helm (3 0))) "Use helm to switch windows and buffers" tar ((:url . "https://github.com/bdc34/helm-taskswitch") (:commit . "de494738f8e5f7d6e681199dd3aad91e5bdb7691") (:revdesc . "de494738f8e5") (:keywords "desktop" "windows") (:authors ("Brian Caruso" . "briancaruso@gmail.com")) (:maintainers ("Brian Caruso" . "briancaruso@gmail.com")) (:maintainer "Brian Caruso" . "briancaruso@gmail.com"))])
 (helm-themes . [(0 5) ((helm (1 0))) "Color theme selection with helm interface" tar ((:url . "https://github.com/emacsorphanage/helm-themes") (:commit . "8c979f4efc6174eed7df5f3b62db955246202818") (:revdesc . "8c979f4efc61") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (helm-tramp . [(1 3 11) ((emacs (24 3)) (helm (2 0))) "Tramp helm interface for ssh, docker, vagrant" tar ((:url . "https://github.com/masasam/emacs-helm-tramp") (:commit . "6683eae65a106d5afd5575b2b05cdb5529ddc926") (:revdesc . "6683eae65a10"))])
 (helm-unicode . [(0 0 3) ((helm (1 6)) (emacs (24 4))) "Helm command for unicode characters" tar ((:url . "https://github.com/bomgar/helm-unicode") (:commit . "3b2a61dd9d4c9e85946567e07d8e70e276c5136b") (:revdesc . "3b2a61dd9d4c"))])
 (helm-w32-launcher . [(0 1 6) ((emacs (24)) (helm (1 6 5)) (cl-lib (0 5))) "Start Menu entry launcher using Helm" tar ((:url . "https://github.com/Fanael/helm-w32-launcher") (:commit . "01aa370a32900e7521330fba495474f2aa435e19") (:revdesc . "01aa370a3290") (:authors ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Fanael Linithien" . "fanael4@gmail.com"))])
 (helm-w3m . [(1 0) ((helm (1 5)) (w3m (0 0)) (cl-lib (0 5)) (emacs (24 1))) "W3m bookmark - helm interface" tar ((:url . "https://github.com/emacs-helm/helm-w3m") (:commit . "280673470672c9fbc57fd6a91defeb9f6641fc8a") (:revdesc . "v1.0-0-g280673470672"))])
 (helm-xref . [(1 0) ((emacs (25 1)) (helm (1 9 4))) "Helm interface for xref results" tar ((:url . "https://github.com/brotzeit/helm-xref") (:commit . "9764eabd50c40b009073c7ef64e3a71d0d066d0b") (:revdesc . "9764eabd50c4") (:authors ("Fritz Stelzer" . "brotzeitmacher@gmail.com")) (:maintainers ("Fritz Stelzer" . "brotzeitmacher@gmail.com")) (:maintainer "Fritz Stelzer" . "brotzeitmacher@gmail.com"))])
 (helm-zhihu-daily . [(0 3) ((helm (1 0)) (cl-lib (0 5)) (emacs (24 4))) "Helm interface for 知乎日报 (http://daily.zhihu.com)" tar ((:url . "https://github.com/xuchunyang/helm-zhihu-daily") (:commit . "be27dcc6be1eb97663b65581a9a5c0fc81cfaba7") (:revdesc . "be27dcc6be1e") (:authors ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainers ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainer "Chunyang Xu" . "xuchunyang56@gmail.com"))])
 (help-find-org-mode . [(1 0 0) ((emacs (24 4))) "Advise help to find org source over tangled code" tar ((:url . "https://github.com/emacsorphanage/help-find-org-mode") (:commit . "c6fa2c8a8e9381572190010a9fa01f2be78f2790") (:revdesc . "c6fa2c8a8e93") (:keywords "convenience") (:authors ("Eric Crosson" . "eric.s.crosson@utexas.com")) (:maintainers ("Eric Crosson" . "eric.s.crosson@utexas.com")) (:maintainer "Eric Crosson" . "eric.s.crosson@utexas.com"))])
 (helpful . [(0 21) ((emacs (25)) (dash (2 18 0)) (s (1 11 0)) (f (0 20 0)) (elisp-refs (1 2))) "A better *help* buffer" tar ((:url . "https://github.com/Wilfred/helpful") (:commit . "ced07fe0d48ce1111d7a8376fdbfef34d927c967") (:revdesc . "ced07fe0d48c") (:keywords "help" "lisp") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (hercules . [(0 3 1) ((emacs (24 4)) (which-key (3 3 2))) "An auto-magical, which-key-based hydra banisher" tar ((:url . "https://github.com/cyruseuros/hercules") (:commit . "557da39878d0637395fdded91243b340c37eff7b") (:revdesc . "557da39878d0") (:keywords "convenience"))])
 (heroku . [(1 0 1) ((emacs (27 2)) (transient (0 3 7)) (dash (2 19 1)) (s (1 13 0)) (ts (0 2 2))) "Like Magit but for Heroku CLI" tar ((:url . "https://github.com/licht1stein/heroku.el") (:commit . "b76db3801d759baece7865b238e99e494506dbeb") (:revdesc . "b76db3801d75") (:keywords "heroku" "devops" "convenience"))])
 (hfst-mode . [(0 4 0) nil "Major mode for editing HFST files" tar ((:url . "https://github.com/unhammer/hfst-mode") (:commit . "ac1bb9dd92545d3e7fdc05c83996c227cc15c6b8") (:revdesc . "0.4.0-0-gac1bb9dd9254") (:keywords "languages") (:authors ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainers ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainer "Kevin Brubeck Unhammer" . "unhammer@fsfe.org"))])
 (hi2 . [(1 0) nil "Indentation module for Haskell Mode" tar ((:url . "https://github.com/nilcons/hi2") (:commit . "c9d199727b5cdcb9e36a972b38131ce4611fd6c8") (:revdesc . "c9d199727b5c") (:keywords "indentation" "haskell") (:authors ("Gergely Risko" . "gergely@risko.hu")) (:maintainers ("Gergely Risko" . "gergely@risko.hu")) (:maintainer "Gergely Risko" . "gergely@risko.hu"))])
 (hiccup-cli . [(0 1 0) ((emacs (26 1))) "Convert HTML to Hiccup syntax" tar ((:url . "https://github.com/kwrooijen/hiccup-cli") (:commit . "cfbb957a1f86bc1d28e778bfdffdeaaa2ae79286") (:revdesc . "cfbb957a1f86") (:keywords "tools"))])
 (hide-mode-line . [(1 0 3) ((emacs (24 4))) "Minor mode that hides/masks your modeline" tar ((:url . "https://github.com/hlissner/emacs-hide-mode-line") (:commit . "bc5d293576c5e08c29e694078b96a5ed85631942") (:revdesc . "v1.0.3-0-gbc5d293576c5") (:keywords "frames" "mode-line") (:authors ("Henrik Lissner" . "http://github/hlissner")) (:maintainers ("Henrik Lissner" . "git@henrik.io")) (:maintainer "Henrik Lissner" . "git@henrik.io"))])
 (highlight-blocks . [(0 1 17) ((emacs (24))) "Highlight the blocks point is in" tar ((:url . "https://github.com/Fanael/highlight-blocks") (:commit . "33cf3d36662faa36c86c8d53e4d5a3922efa3eb8") (:revdesc . "33cf3d36662f") (:authors ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Fanael Linithien" . "fanael4@gmail.com"))])
 (highlight-context-line . [(2 0) nil "Improve orientation when scrolling" tar ((:url . "https://github.com/ska2342/highlight-context-line") (:commit . "c3257c0ca9dba76167bbd7e0718a65ecd26ef26f") (:revdesc . "c3257c0ca9db") (:keywords "faces" "services" "user") (:authors ("Stefan Kamphausen" . "www.skamphausen.de")) (:maintainers ("Stefan Kamphausen" . "www.skamphausen.de")) (:maintainer "Stefan Kamphausen" . "www.skamphausen.de"))])
 (highlight-defined . [(0 1 6) ((emacs (24))) "Syntax highlighting of known Elisp symbols" tar ((:url . "https://github.com/Fanael/highlight-defined") (:commit . "4420bdda419875dacb065468aafe273b2022580e") (:revdesc . "4420bdda4198") (:authors ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Fanael Linithien" . "fanael4@gmail.com"))])
 (highlight-function-calls . [(0 1) ((emacs (24 4))) "Highlight function/macro calls" tar ((:url . "https://github.com/alphapapa/highlight-function-calls") (:commit . "b56956c2b6ed1e87d0f8f49088ead3221244b53d") (:revdesc . "v0.1-0-gb56956c2b6ed") (:keywords "faces" "highlighting") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (highlight-indentation . [(0 7 0) nil "Minor modes for highlighting indentation" tar ((:url . "https://github.com/antonj/Highlight-Indentation-for-Emacs") (:commit . "cd6d8168ccb04c6c0394f42e9512c58f23c01689") (:revdesc . "cd6d8168ccb0") (:authors ("Anton Johansson - http://antonj.se" . "anton.johansson@gmail.com")) (:maintainers ("Anton Johansson - http://antonj.se" . "anton.johansson@gmail.com")) (:maintainer "Anton Johansson - http://antonj.se" . "anton.johansson@gmail.com"))])
 (highlight-numbers . [(0 2 3) ((emacs (24)) (parent-mode (2 0))) "Highlight numbers in source code" tar ((:url . "https://github.com/Fanael/highlight-numbers") (:commit . "b7adef0286aaa5bca8e98a12d0ffed3a880e25aa") (:revdesc . "b7adef0286aa") (:authors ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Fanael Linithien" . "fanael4@gmail.com"))])
 (highlight-parentheses . [(2 2 2) ((emacs (24 3))) "Highlight surrounding parentheses" tar ((:url . "https://git.sr.ht/~tsdh/highlight-parentheses.el") (:commit . "965b18dd69eff4457e17c9e84b3cbfdbfca2ddfb") (:revdesc . "965b18dd69ef") (:keywords "faces" "matching") (:authors ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainers ("Tassilo Horn" . "tsdh@gnu.org")) (:maintainer "Tassilo Horn" . "tsdh@gnu.org"))])
 (highlight-quoted . [(0 1) ((emacs (24))) "Highlight Lisp quotes and quoted symbols" tar ((:url . "https://github.com/Fanael/highlight-quoted") (:commit . "cdd7164f9ad3a9929387c08af641ef6f5f013f4f") (:revdesc . "cdd7164f9ad3") (:authors ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Fanael Linithien" . "fanael4@gmail.com"))])
 (highlight-symbol . [(1 3) nil "Automatic and manual symbol highlighting" tar ((:url . "https://github.com/nschum/highlight-symbol.el") (:commit . "6136dac6d4328c19077a838dfbae2efc4caa4db2") (:revdesc . "1.3-0-g6136dac6d432") (:keywords "faces" "matching") (:authors ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainers ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainer "Nikolaj Schumacher" . "bugs*nschumde"))])
 (highlight2clipboard . [(0 0 3) ((htmlize (1 47))) "Copy text to clipboard with highlighting" tar ((:url . "https://github.com/Lindydancer/highlight2clipboard") (:commit . "6564fafd09a9c676b4d393f2260a0c73daac7257") (:revdesc . "6564fafd09a9") (:keywords "tools"))])
 (himalaya . [(0 3) ((emacs (27 1))) "Interface for the himalaya email client" tar ((:url . "https://github.com/dantecatalfamo/himalaya-emacs") (:commit . "3e4e9dc3697434efd3f25ea8e800bf81d75de9d8") (:revdesc . "v0.3-0-g3e4e9dc36974") (:keywords "mail" "comm") (:authors ("soywod" . "clement.douin@posteo.net")) (:maintainers ("soywod" . "clement.douin@posteo.net")) (:maintainer "soywod" . "clement.douin@posteo.net"))])
 (hindent . [(6 2 1) ((cl-lib (0 5))) "Indent haskell code using the \"hindent\" program" tar ((:url . "https://github.com/mihaimaruseac/hindent") (:commit . "beafb2610fb9a724bdd78339375e6673d46c23fe") (:revdesc . "beafb2610fb9") (:authors ("Chris Done" . "chrisdone@gmail.com")) (:maintainers ("Chris Done" . "chrisdone@gmail.com")) (:maintainer "Chris Done" . "chrisdone@gmail.com"))])
 (hippie-expand-slime . [(0 1) nil "Hook slime's completion into hippie-expand" tar ((:url . "https://github.com/purcell/hippie-expand-slime") (:commit . "de31fbc9f9d55891a006463bcee7670b47084015") (:revdesc . "de31fbc9f9d5") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (hippie-namespace . [(0 5 8) nil "Special treatment for namespace prefixes in hippie-expand" tar ((:url . "https://github.com/rolandwalker/hippie-namespace") (:commit . "79a662dfe9e61341e071b879f4f9101ca027ad10") (:revdesc . "v0.5.8-0-g79a662dfe9e6") (:keywords "convenience" "lisp" "tools" "completion") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (history . [(1 0 0) ((emacs (24 3))) "History utility for source code navigation" tar ((:url . "https://github.com/tcw165/history") (:commit . "adef53ecc2f6067bb61f020a2b66c5185a51632d") (:revdesc . "adef53ecc2f6"))])
 (historyf . [(0 0 9) nil "File history library like browser" tar ((:url . "https://github.com/k1LoW/emacs-historyf") (:commit . "64ab6c9d2cd6dec6982622bf675326e011373cd2") (:revdesc . "64ab6c9d2cd6") (:authors (nil . "k1low[at]101000lab[dot]org")) (:maintainers (nil . "k1low[at]101000lab[dot]org")) (:maintainer nil . "k1low[at]101000lab[dot]org"))])
 (hl-anything . [(0 0 9) ((emacs (24 3))) "Highlight symbols, selections, enclosing parens and more" tar ((:url . "https://github.com/hl-anything/hl-anything-emacs") (:commit . "de631c87d3a6602cdbf84c1623558334fda354fa") (:revdesc . "de631c87d3a6"))])
 (hl-sentence . [(3) nil "Highlight a sentence based on customizable face" tar ((:url . "https://github.com/milkypostman/hl-sentence") (:commit . "f88882772f1a29fabb54194cc8aacd80d7f5b085") (:revdesc . "f88882772f1a") (:keywords "highlighting") (:authors ("Donald Ephraim Curtis" . "dcurtis@milkbox.net")) (:maintainers ("Donald Ephraim Curtis" . "dcurtis@milkbox.net")) (:maintainer "Donald Ephraim Curtis" . "dcurtis@milkbox.net"))])
 (hl-todo . [(3 8 1) ((emacs (26 1)) (compat (30 0 0 0))) "Highlight TODO and similar keywords" tar ((:url . "https://github.com/tarsius/hl-todo") (:commit . "82eba6b8f7b5a4cbcf22436d5c5b88fb3134f57e") (:revdesc . "v3.8.1-0-g82eba6b8f7b5") (:keywords "convenience") (:authors ("Jonas Bernoulli" . "emacs.hl-todo@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.hl-todo@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.hl-todo@jonas.bernoulli.dev"))])
 (hmac . [(1 0) ((emacs (25 1))) "Hash-based message authentication code" tar ((:url . "https://github.com/grimnebulin/emacs-hmac") (:commit . "f2b99a9a10becfff207cf9418c6dce78364b1a4b") (:revdesc . "f2b99a9a10be"))])
 (home-end . [(1 0) ((emacs (24 3)) (keypress-multi-event (1 0))) "Smart multi-purpose home / end keys" tar ((:url . "https://github.com/Boruch-Baum/emacs-home-end") (:commit . "30676ceec0d4ad84038cd0d65ee45ae810ab185c") (:revdesc . "30676ceec0d4") (:keywords "abbrev" "convenience" "wp" "keyboard") (:authors ("Boruch Baum" . "boruch_baum@gmx.com")) (:maintainers ("Boruch Baum" . "boruch_baum@gmx.com")) (:maintainer "Boruch Baum" . "boruch_baum@gmx.com"))])
 (hookify . [(0 2 1) ((s (1 9 0)) (dash (1 5 0))) "Interactive commands to create temporary hooks" tar ((:url . "https://github.com/Silex/hookify") (:commit . "e76127230716f7fab6662410c03c3872d17a172b") (:revdesc . "0.2.1-0-ge76127230716") (:keywords "hook" "convenience") (:authors ("Philippe Vaucher" . "philippe.vaucher@gmail.com")) (:maintainers ("Philippe Vaucher" . "philippe.vaucher@gmail.com")) (:maintainer "Philippe Vaucher" . "philippe.vaucher@gmail.com"))])
 (hotfuzz . [(1 0) ((emacs (27 1))) "Fuzzy completion style" tar ((:url . "https://github.com/axelf4/hotfuzz") (:commit . "cb0ce382d98cbc35ea55f4533b3c321119ed18b7") (:revdesc . "cb0ce382d98c") (:keywords "matching") (:authors ("Axel Forsman" . "axel@axelf.se")) (:maintainers ("Axel Forsman" . "axel@axelf.se")) (:maintainer "Axel Forsman" . "axel@axelf.se"))])
 (hound . [(1 1 0) ((request (0 2 0)) (cl-lib (0 5))) "Display hound search results in a compilation window" tar ((:url . "https://github.com/ryoung786/hound.el") (:commit . "28cb804d99f9240d690d60098644e4300336b5fa") (:revdesc . "v1.1.0-0-g28cb804d99f9"))])
 (hover . [(1 2 3) ((emacs (25 2)) (dash (2 14 1))) "Package to use hover with flutter" tar ((:url . "https://github.com/ericdallo/hover.el") (:commit . "cd362d80b72f45707e95f08824a5d7e7ae91d956") (:revdesc . "cd362d80b72f") (:keywords "hover" "flutter" "mobile" "tools"))])
 (howm . [(1 5 1) ((cl-lib (0 5))) "Wiki-like note-taking tool" tar ((:url . "https://github.com/kaorahi/howm") (:commit . "fc61c312be7cd23c654a02f1f81355d562cd627e") (:revdesc . "fc61c312be7c") (:authors ("HIRAOKA Kazuyuki" . "kakkokakko@gmail.com")) (:maintainers ("HIRAOKA Kazuyuki" . "kakkokakko@gmail.com")) (:maintainer "HIRAOKA Kazuyuki" . "kakkokakko@gmail.com"))])
 (ht . [(2 3) ((dash (2 12 0))) "The missing hash table library for Emacs" tar ((:url . "https://github.com/Wilfred/ht.el") (:commit . "2eddb85a66508ad607e94fd8384b18feb07a2449") (:revdesc . "2eddb85a6650") (:keywords "hash table" "hash map" "hash") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (html-script-src . [(0 0 2) nil "Insert <script src=\"..\"> for popular JavaScript libraries" tar ((:url . "https://github.com/rejeep/html-script-src.el") (:commit . "52da4421ec4a0603d5cf9e2278e36a614f871dd2") (:revdesc . "52da4421ec4a") (:keywords "tools" "convenience") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (html-to-markdown . [(1 5 1) nil "HTML to Markdown converter written in Emacs-lisp" tar ((:url . "https://github.com/Malabarba/html-to-markdown") (:commit . "0fa0effd71acd8981a425ef11e0e63d53aea3199") (:revdesc . "0fa0effd71ac") (:keywords "tools" "wp" "languages") (:authors ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainers ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainer "Artur Malabarba" . "bruce.connor.am@gmail.com"))])
 (htmlize . [(1 58) ((emacs (25 1))) "Convert buffer text and decorations to HTML" tar ((:url . "https://github.com/hniksic/emacs-htmlize") (:commit . "5d2751c4ca101fa0884ce8662f5566736f8257fe") (:revdesc . "release/1.58-0-g5d2751c4ca10") (:keywords "hypermedia" "extensions") (:authors ("Hrvoje Niksic" . "hniksic@gmail.com")) (:maintainers ("Hrvoje Niksic" . "hniksic@gmail.com")) (:maintainer "Hrvoje Niksic" . "hniksic@gmail.com"))])
 (htmltagwrap . [(0 0 3) ((emacs (24 4))) "Wraps a chunk of HTML code in tags" tar ((:url . "https://github.com/emacs-vs/htmltagwrap") (:commit . "8cb33f9513d79e44a602927f35d5a3bb0dccbb92") (:revdesc . "8cb33f9513d7") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (httpcode . [(0 1) nil "Explains the meaning of an HTTP status code" tar ((:url . "https://github.com/rspivak/httpcode.el") (:commit . "2c8eb3b5455254ba70fb71f7178886bfc2d3af90") (:revdesc . "2c8eb3b54552") (:authors ("Ruslan Spivak" . "ruslan.spivak@gmail.com")) (:maintainers ("Ruslan Spivak" . "ruslan.spivak@gmail.com")) (:maintainer "Ruslan Spivak" . "ruslan.spivak@gmail.com"))])
 (httprepl . [(1 1) ((s (1 9 0)) (dash (2 5 0)) (emacs (24))) "An HTTP REPL" tar ((:url . "https://github.com/gregsexton/httprepl.el") (:commit . "d2de8a676544deed1a5e084631a7799e487dbe55") (:revdesc . "d2de8a676544") (:keywords "http" "repl") (:authors ("Greg Sexton" . "gregsexton@gmail.com")) (:maintainers ("Greg Sexton" . "gregsexton@gmail.com")) (:maintainer "Greg Sexton" . "gregsexton@gmail.com"))])
 (huecycle . [(1 0 0) ((emacs (27 1))) "Idle color animation" tar ((:url . "https://github.com/pnor/huecycle") (:commit . "c343b2085dea11b820d4da6c6183e1102ec08698") (:revdesc . "c343b2085dea") (:keywords "faces") (:authors ("Phillip O'Reggio" . "https://github.com/pnor")))])
 (hugsql-ghosts . [(0 1 4) ((s (1 9 0)) (dash (2 10 0)) (cider (0 14 0))) "Display hugsql defqueries in clojure code as an overlay" tar ((:url . "https://github.com/rkaercher/hugsql-ghosts") (:commit . "f9ab314b6a10140041233e65a23e924dcab9a7a3") (:revdesc . "f9ab314b6a10") (:authors ("Roland Kaercher" . "roland.kaercher@gmail.com")) (:maintainers ("Roland Kaercher" . "roland.kaercher@gmail.com")) (:maintainer "Roland Kaercher" . "roland.kaercher@gmail.com"))])
 (humanoid-themes . [(0 4) ((emacs (27 1))) "Color themes with a dark and light variant" tar ((:url . "https://github.com/humanoid-colors/emacs-humanoid-themes") (:commit . "7dd4fe1211e0af187ae9ad4db6d5bea9e3e944f9") (:revdesc . "0.4-0-g7dd4fe1211e0") (:keywords "faces" "color" "theme"))])
 (hungry-delete . [(1 1 5) nil "Hungry delete minor mode" tar ((:url . "https://github.com/nflath/hungry-delete") (:commit . "78a787a87aceb821818bbe2a322fbf2e5cbf80c3") (:revdesc . "78a787a87ace") (:authors ("Nathaniel Flath" . "flat0103@gmail.com")) (:maintainers ("Nathaniel Flath" . "flat0103@gmail.com")) (:maintainer "Nathaniel Flath" . "flat0103@gmail.com"))])
 (hush . [(0 1 4) ((emacs (27 1))) "Pluggable secret manager (auth-source alternative)" tar ((:url . "https://github.com/tirimia/hush") (:commit . "51c7960820de0576bbf0c3c286cb1264854d20aa") (:revdesc . "51c7960820de") (:keywords "extensions" "lisp" "local" "tools"))])
 (hy-mode . [(1 0 4) ((dash (2 13 0)) (dash-functional (1 2 0)) (s (1 11 0)) (emacs (24))) "Major mode for Hylang" tar ((:url . "https://github.com/hylang/hy-mode") (:commit . "e2d5fecdaec602788aa7123ed13651c888b8d94b") (:revdesc . "e2d5fecdaec6") (:keywords "languages" "lisp" "python"))])
 (hyai . [(1 0 0) ((cl-lib (0 5)) (emacs (24))) "Haskell Yet Another Indentation" tar ((:url . "https://github.com/iquiw/hyai") (:commit . "7c644d31f62943c75ccf5a772e43450b462cc08f") (:revdesc . "7c644d31f629") (:authors ("Iku Iwasa" . "iku.iwasa@gmail.com")) (:maintainers ("Iku Iwasa" . "iku.iwasa@gmail.com")) (:maintainer "Iku Iwasa" . "iku.iwasa@gmail.com"))])
 (hydandata-light-theme . [(0 9 0) nil "A light color theme that is easy on your eyes" tar ((:url . "https://github.com/chkhd/hydandata-light-theme") (:commit . "3b9bb5f213029a8331818b1d670194ef26d9505a") (:revdesc . "3b9bb5f21302") (:keywords "color-theme" "theme") (:authors ("David Chkhikvadze" . "david.chk@outlook.com")) (:maintainers ("David Chkhikvadze" . "david.chk@outlook.com")) (:maintainer "David Chkhikvadze" . "david.chk@outlook.com"))])
 (hyde . [(0 2) nil "[No description available]" tar ((:url . "https://github.com/nibrahim/Hyde") (:commit . "181f9d2f91c2678a22243c5485162fa7999fd893") (:revdesc . "0.2-0-g181f9d2f91c2"))])
 (hydra . [(0 15 0) ((cl-lib (0 5)) (lv (0))) "Make bindings that stick around" tar ((:url . "https://github.com/abo-abo/hydra") (:commit . "f27fce1b2f0a9162e159557bdeb2c0c94defb4d2") (:revdesc . "f27fce1b2f0a") (:keywords "bindings") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com"))])
 (hyperbole . [(9 0 1) ((emacs (27 1))) "GNU Hyperbole: The Everyday Hypertextual Information Manager" tar ((:url . "https://git.savannah.gnu.org/git/hyperbole.git") (:commit . "b36debbea873c2360a6782abcce084f78c0c9ff2") (:revdesc . "b36debbea873") (:keywords "comm" "convenience" "files" "frames" "hypermedia" "languages" "mail" "matching" "mouse" "multimedia" "outlines" "tools" "wp") (:maintainers ("Mats Lidell" . "matsl@gnu.org")) (:maintainer "Mats Lidell" . "matsl@gnu.org"))])
 (hyperdrive . [(0 4 2) ((emacs (28 1)) (map (3 0)) (compat (30 0 0 0)) (org (9 7 6)) (plz (0 9 1)) (persist (0 6 1)) (taxy-magit-section (0 14)) (transient (0 7 4))) "P2P filesystem" tar ((:url . "https://git.sr.ht/~ushin/hyperdrive.el") (:commit . "6b70954da945664ca798bf483f1d60e9d5859409") (:revdesc . "v0.4.2-0-g6b70954da945") (:authors ("Joseph Turner" . "joseph@ushin.org")) (:maintainers ("Joseph Turner" . "~ushin/ushin@lists.sr.ht")) (:maintainer "Joseph Turner" . "~ushin/ushin@lists.sr.ht"))])
 (hyperdrive-org-transclusion . [(0 3 1) ((emacs (28 1)) (hyperdrive (0 4 2)) (org-transclusion (1 4 0))) "Tranclude hyperdrive content" tar ((:url . "https://git.sr.ht/~ushin/hyperdrive-org-transclusion") (:commit . "25570c6e4b90dce0858b80b7f557db19744b3955") (:revdesc . "v0.3.1-0-g25570c6e4b90") (:authors ("Joseph Turner" . "joseph@ushin.org")) (:maintainers ("Joseph Turner" . "~ushin/ushin@lists.sr.ht")) (:maintainer "Joseph Turner" . "~ushin/ushin@lists.sr.ht"))])
 (hyperkitty . [(0 0 2) ((request (0 3 2)) (emacs (25 1))) "Emacs interface for Hyperkitty archives" tar ((:url . "https://github.com/maxking/hyperkitty.el") (:commit . "fcb923616e69d8f72c2f4a666d381a6a66bc12bc") (:revdesc . "v0.0.2-0-gfcb923616e69") (:keywords "mail" "hyperkitty" "mailman") (:authors ("Abhilash Raj" . "maxking@asynchronous.in")) (:maintainers ("Abhilash Raj" . "maxking@asynchronous.in")) (:maintainer "Abhilash Raj" . "maxking@asynchronous.in"))])
 (hyperspace . [(0 8 4) ((emacs (25)) (s (1 12 0))) "Get there from here" tar ((:url . "https://codeberg.org/emacs-weirdware/hyperspace") (:commit . "5fdd680dc2e7b8a064cfdf93d6948546ff51afc2") (:revdesc . "0.8.4-0-g5fdd680dc2e7") (:keywords "tools" "convenience") (:authors ("Ian Eure" . "ian@retrospec.tv")) (:maintainers ("Ian Eure" . "ian@retrospec.tv")) (:maintainer "Ian Eure" . "ian@retrospec.tv"))])
 (hyperstitional-themes . [(1 2 0) ((emacs (24 1))) "Weird themes with incremental palettes" tar ((:url . "https://github.com/precompute/hyperstitional-themes") (:commit . "e87e4ca39384c75398c64c920bf4cbc253f6740b") (:revdesc . "e87e4ca39384") (:authors ("precompute" . "git@precompute.net")) (:maintainers ("precompute" . "git@precompute.net")) (:maintainer "precompute" . "git@precompute.net"))])
 (ialign . [(0 5 0) ((emacs (25 1))) "Visual align-regexp" tar ((:url . "https://github.com/mkcms/interactive-align") (:commit . "fd1ad6bae74961e0b6bdf0bd15e6d9679186aaed") (:revdesc . "v0.5.0-0-gfd1ad6bae749") (:keywords "tools" "editing" "align" "interactive") (:authors ("Michał Krzywkowski" . "k.michal@zoho.com")) (:maintainers ("Michał Krzywkowski" . "k.michal@zoho.com")) (:maintainer "Michał Krzywkowski" . "k.michal@zoho.com"))])
 (ibrowse . [(0 2 3) ((emacs (27 1))) "Interact with your browser" tar ((:url . "https://git.sr.ht/~ngraves/ibrowse.el") (:commit . "0ace95c948b8fae87aaf08cc2b80ceb0b1713835") (:revdesc . "0ace95c948b8") (:keywords "comm" "data" "files" "tools") (:authors ("Nicolas Graves" . "ngraves@ngraves.fr")) (:maintainers ("Nicolas Graves" . "ngraves@ngraves.fr")) (:maintainer "Nicolas Graves" . "ngraves@ngraves.fr"))])
 (ibuffer-project . [(2 1) ((emacs (25 1))) "Group ibuffer's list by project or any function" tar ((:url . "https://github.com/muffinmad/emacs-ibuffer-project") (:commit . "2483d2dbd715c4bd892d1fbc968a17a01888cb2d") (:revdesc . "2483d2dbd715") (:keywords "tools") (:authors ("Andrii Kolomoiets" . "andreyk.mad@gmail.com")) (:maintainers ("Andrii Kolomoiets" . "andreyk.mad@gmail.com")) (:maintainer "Andrii Kolomoiets" . "andreyk.mad@gmail.com"))])
 (ibuffer-projectile . [(0 4) ((projectile (0 11 0)) (emacs (25 1)) (seq (2))) "Group ibuffer's list by projectile root" tar ((:url . "https://github.com/purcell/ibuffer-projectile") (:commit . "710ecac1578273bf31debe52870f5844472e3428") (:revdesc . "710ecac15782") (:keywords "convenience") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (ibuffer-tramp . [(1 0 0) nil "Group ibuffer's list by TRAMP connection" tar ((:url . "https://github.com/svend/ibuffer-tramp") (:commit . "bcad0bda3a67f55d1be936bf8fa9ef735fe1e3f3") (:revdesc . "1.0.0-0-gbcad0bda3a67") (:keywords "convenience") (:authors ("Svend Sorensen" . "svend@ciffer.net")) (:maintainers ("Svend Sorensen" . "svend@ciffer.net")) (:maintainer "Svend Sorensen" . "svend@ciffer.net"))])
 (ibuffer-vc . [(0 12) ((emacs (25 1)) (seq (2))) "Group ibuffer's list by VC project, or show VC status" tar ((:url . "https://github.com/purcell/ibuffer-vc") (:commit . "1388d2ea18287c74a79d053619dbdfa9090c26a2") (:revdesc . "1388d2ea1828") (:keywords "convenience") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (iceberg-theme . [(1 0 0) ((emacs (26 1)) (solarized-theme (1 3))) "Well-designed, eye-friendly, dark blue color scheme" tar ((:url . "https://github.com/conao3/iceberg-theme.el") (:commit . "04b8d04c30276a471b37ff93d73409508e88d295") (:revdesc . "04b8d04c3027") (:keywords "convenience") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (icomplete-vertical . [(0 3) ((emacs (25 1))) "Display icomplete candidates vertically" tar ((:url . "https://github.com/oantolin/icomplete-vertical") (:commit . "a4c65f213bd3d8be94fe8cb28ecf7ff3b44405d1") (:revdesc . "a4c65f213bd3") (:keywords "convenience" "completion") (:authors ("Omar Antolín Camarena" . "omar@matem.unam.mx")) (:maintainers ("Omar Antolín Camarena" . "omar@matem.unam.mx")) (:maintainer "Omar Antolín Camarena" . "omar@matem.unam.mx"))])
 (icsql . [(0 8) ((emacs (26)) (choice-program (0 13)) (buffer-manage (0 12))) "Interactive iSQL iteraface to ciSQL" tar ((:url . "https://github.com/plandes/icsql") (:commit . "4521e9d2debef7687bfd26a664479f0c46688a36") (:revdesc . "v0.8-0-g4521e9d2debe") (:keywords "isql" "sql" "rdbms" "data"))])
 (identica-mode . [(1 3 1) nil "Major mode API client for status.net open microblogging" tar ((:url . "https://github.com/gabrielsaldana/Emacs-Identica-mode") (:commit . "cf9183ee11ac922e85c7c908f04e2d00b03111b3") (:revdesc . "v1.3.1-0-gcf9183ee11ac") (:keywords "identica" "web") (:authors ("Gabriel Saldana" . "gsaldana@gmail.com")) (:maintainers ("Gabriel Saldana" . "gsaldana@gmail.com")) (:maintainer "Gabriel Saldana" . "gsaldana@gmail.com"))])
 (idle-highlight-in-visible-buffers-mode . [(0 2 0) nil "Highlight the word the point is on" tar ((:url . "https://github.com/ignacy/idle-highlight-in-visible-buffers-mode") (:commit . "8d8de309d5bd4b035c01bf7f0cfc6e079c79d898") (:revdesc . "8d8de309d5bd") (:keywords "convenience"))])
 (ido-at-point . [(1 0 0) ((emacs (24))) "Ido-style completion-at-point" tar ((:url . "https://github.com/katspaugh/ido-at-point") (:commit . "e5907bbe8a3d148d07698b76bd994dc3076e16ee") (:revdesc . "e5907bbe8a3d") (:keywords "convenience" "abbrev"))])
 (ido-complete-space-or-hyphen . [(1 3) nil "Allow spaces to also match hyphens in ido" tar ((:url . "https://github.com/DarwinAwardWinner/ido-complete-space-or-hyphen") (:commit . "d1244243e042b8d5b6b991db752a17a44ea169bc") (:revdesc . "d1244243e042") (:keywords "ido" "completion" "convenience") (:authors ("Ryan C. Thompson" . "rct@thompsonclan.org") ("Ian Yang" . "meiany.me")) (:maintainers ("Ryan C. Thompson" . "rct@thompsonclan.org")) (:maintainer "Ryan C. Thompson" . "rct@thompsonclan.org"))])
 (ido-completing-read+ . [(4 14) ((emacs (24 4)) (seq (0 5)) (memoize (1 1))) "A completing-read-function using ido" tar ((:url . "https://github.com/DarwinAwardWinner/ido-completing-read-plus") (:commit . "c97f0d0c314fe4b49a3c1e58144e97c72926172c") (:revdesc . "c97f0d0c314f") (:keywords "ido" "completion" "convenience") (:authors ("Ryan C. Thompson" . "rct@thompsonclan.org")) (:maintainers ("Ryan C. Thompson" . "rct@thompsonclan.org")) (:maintainer "Ryan C. Thompson" . "rct@thompsonclan.org"))])
 (ido-grid-mode . [(1 1 5) ((emacs (24 4))) "Display ido-prospects in the minibuffer in a grid" tar ((:url . "https://github.com/larkery/ido-grid-mode.el") (:commit . "8bbd66e365d4f6f352bbb17673be5869ab26d7ab") (:revdesc . "8bbd66e365d4") (:keywords "convenience") (:maintainers ("Tom Hinton" . "t@larkery.com")) (:maintainer "Tom Hinton" . "t@larkery.com"))])
 (ido-load-library . [(0 2 0) ((persistent-soft (0 8 8)) (pcache (0 2 3))) "Load-library alternative using ido-completing-read" tar ((:url . "https://github.com/rolandwalker/ido-load-library") (:commit . "8589cb1e4303066eb333f1cfc789835d1cbe21df") (:revdesc . "v0.2.0-0-g8589cb1e4303") (:keywords "maint" "completion") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (ido-vertical-mode . [(0 1 6) nil "Makes ido-mode display vertically" tar ((:url . "https://github.com/creichert/ido-vertical-mode.el") (:commit . "c3e0514405ba5c15b5527e7f8e2d42dff259788f") (:revdesc . "c3e0514405ba") (:keywords "convenience") (:maintainers ("Daniel Gempesaw" . "gempesaw@gmail.com")) (:maintainer "Daniel Gempesaw" . "gempesaw@gmail.com"))])
 (ido-yes-or-no . [(1 4) ((ido-completing-read+ (0))) "Use Ido to answer yes-or-no questions" tar ((:url . "https://github.com/DarwinAwardWinner/ido-yes-or-no") (:commit . "9ddee9e878ad62d58c9f4b3a7685f22b8e36e420") (:revdesc . "9ddee9e878ad"))])
 (idomenu . [(0 1) nil "Imenu tag selection with ido" tar ((:url . "https://github.com/birkenfeld/idomenu") (:commit . "5daaf7e06e4704ae43c825488109d7eb8c049321") (:revdesc . "5daaf7e06e47") (:keywords "extensions" "convenience") (:authors ("Georg Brandl" . "georg@python.org")) (:maintainers ("Georg Brandl" . "georg@python.org")) (:maintainer "Georg Brandl" . "georg@python.org"))])
 (idris-mode . [(1 0) ((emacs (24)) (prop-menu (0 1)) (cl-lib (0 5))) "Major mode for editing Idris code" tar ((:url . "https://github.com/idris-hackers/idris-mode") (:commit . "b77eadd8ac2048d5c882b4464bd9673e45dd6a59") (:revdesc . "b77eadd8ac20") (:keywords "languages"))])
 (iedit . [(0 9 9 9 9) nil "Edit multiple regions in the same way simultaneously" tar ((:url . "https://github.com/victorhge/iedit") (:commit . "699e179dac18c78698cba1a2052bee6f0bbc6bf7") (:revdesc . "699e179dac18") (:keywords "occurrence" "region" "simultaneous" "refactoring") (:authors ("Victor Ren" . "victorhge@gmail.com")) (:maintainers ("Victor Ren" . "victorhge@gmail.com")) (:maintainer "Victor Ren" . "victorhge@gmail.com"))])
 (iflipb . [(1 6) nil "Interactively flip between recently visited buffers" tar ((:url . "https://github.com/jrosdahl/iflipb") (:commit . "67e33073b4f42de9fc4df76bc04ec8b31aca02ea") (:revdesc . "1.6-0-g67e33073b4f4") (:authors ("Joel Rosdahl" . "joel@rosdahl.net")) (:maintainers ("Joel Rosdahl" . "joel@rosdahl.net")) (:maintainer "Joel Rosdahl" . "joel@rosdahl.net"))])
 (igist . [(1 6 4) ((emacs (27 1)) (ghub (3 6 0)) (transient (0 4 1))) "List, create, update and delete GitHub gists" tar ((:url . "https://github.com/KarimAziev/igist") (:commit . "13193a29544dc50a442a1a336e5d82c50f6663c0") (:revdesc . "v1.6.4-0-g13193a29544d") (:keywords "tools") (:authors ("Karim Aziiev" . "karim.aziiev@gmail.com")) (:maintainers ("Karim Aziiev" . "karim.aziiev@gmail.com")) (:maintainer "Karim Aziiev" . "karim.aziiev@gmail.com"))])
 (ignoramus . [(0 7 4) nil "Ignore backups, build files, et al" tar ((:url . "https://github.com/rolandwalker/ignoramus") (:commit . "00385fcd0d42de3a470f61c1fdbe7e19fbef9c5b") (:revdesc . "v0.7.4-0-g00385fcd0d42") (:keywords "convenience" "tools") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (image+ . [(0 6 2) ((cl-lib (0 3))) "Image manipulate extensions for Emacs" tar ((:url . "https://github.com/emacsorphanage/image-plus") (:commit . "967508a6c151e6ab6e97d3ac332dc5599011830d") (:revdesc . "967508a6c151") (:keywords "multimedia" "extensions") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (image-archive . [(0 0 7) ((emacs (24)) (cl-lib (0 5))) "Image thumbnails in archive file with non-blocking" tar ((:url . "https://github.com/mhayashi1120/Emacs-image-archive") (:commit . "699e967fa7b1dfcce2bf2ec878e74f4238bb6e45") (:revdesc . "699e967fa7b1") (:keywords "multimedia") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (image-dired+ . [(0 7 2) ((cl-lib (0 3))) "Image-dired extensions" tar ((:url . "https://github.com/mhayashi1120/Emacs-image-diredx") (:commit . "b68094625d963056ad64e0e44af0e2266b2eadc7") (:revdesc . "b68094625d96") (:keywords "extensions" "multimedia") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (imake . [(1 2 3) ((emacs (26 1)) (compat (30 0 0 0))) "Simple, opinionated make target runner" tar ((:url . "https://github.com/tarsius/imake") (:commit . "21951b7081e4b36641bf87793b064e06670943d1") (:revdesc . "v1.2.3-0-g21951b7081e4") (:keywords "convenience") (:authors ("Jonas Bernoulli" . "emacs.imake@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.imake@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.imake@jonas.bernoulli.dev"))])
 (imapfilter . [(1 0 3) nil "Run the imapfilter executable" tar ((:url . "https://github.com/tarsius/imapfilter") (:commit . "79bbbe918319bc1e8f42a0bef53dc7c77fe868ea") (:revdesc . "v1.0.3-0-g79bbbe918319") (:keywords "mail") (:authors ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainers ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li"))])
 (imenu-anywhere . [(1 1 6) ((cl-lib (0 5)) (emacs (25))) "Ido/ivy/helm imenu across same mode/project/etc buffers" tar ((:url . "https://github.com/vspinu/imenu-anywhere") (:commit . "06ec33d79e33edf01b9118aead1eabeae8ee08b1") (:revdesc . "06ec33d79e33") (:keywords "ido" "imenu" "tags") (:authors ("Vitalie Spinu" . "spinuvit.list[aaattt]gmail[dot]com")) (:maintainers ("Vitalie Spinu" . "spinuvit.list[aaattt]gmail[dot]com")) (:maintainer "Vitalie Spinu" . "spinuvit.list[aaattt]gmail[dot]com"))])
 (imenu-extra . [(0 0 1) ((emacs (25 1))) "Add extra items into existing imenu items" tar ((:url . "https://github.com/redguardtoo/imenu-extra") (:commit . "2bd6d28fa25ef8f9b477cad9d8d806ce9fbb9d52") (:revdesc . "2bd6d28fa25e") (:keywords "convenience") (:authors ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainers ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainer "Chen Bin" . "chenbinDOTshATgmailDOTcom"))])
 (imenu-list . [(0 9) ((cl-lib (0 5))) "Show imenu entries in a separate buffer" tar ((:url . "https://github.com/bmag/imenu-list") (:commit . "6cded436010a39592175238e4d02263a7cdb44c4") (:revdesc . "6cded436010a"))])
 (imenus . [(0 2) ((cl-lib (0 5))) "Imenu for multiple buffers and without subgroups" tar ((:url . "https://github.com/alezost/imenus.el") (:commit . "ee1bbd2228dbb86df2865dc9004d375421b171ba") (:revdesc . "ee1bbd2228db") (:keywords "tools" "convenience") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (imgur . [(1 1 0) ((emacs (27 1))) "Imgur client" tar ((:url . "https://github.com/KeyWeeUsr/imgur") (:commit . "3eb96d58909c5c62613ee57495bdfe7e92d0c4b7") (:revdesc . "1.1.0-0-g3eb96d58909c") (:keywords "convenience" "imgur" "client") (:authors ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainers ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainer "Peter Badida" . "keyweeusr@gmail.com"))])
 (immaterial-theme . [(0 9 2) ((emacs (25))) "A flexible theme based on material design principles" tar ((:url . "https://github.com/petergardfjall/emacs-immaterial-theme") (:commit . "f1c1c3c49f114dcb93b4068c034641eeaa2a23af") (:revdesc . "f1c1c3c49f11") (:keywords "themes"))])
 (immutant-server . [(1 2 0) nil "Run your Immutant server in Emacs" tar ((:url . "https://github.com/leathekd/immutant-server.el") (:commit . "6f3d303354a229780a33e6bae64460a95bfefe60") (:revdesc . "6f3d303354a2") (:authors ("David Leatherman" . "leathekd@gmail.com")) (:maintainers ("David Leatherman" . "leathekd@gmail.com")) (:maintainer "David Leatherman" . "leathekd@gmail.com"))])
 (impatient-mode . [(1 1) ((cl-lib (0 3)) (simple-httpd (1 4 0)) (htmlize (1 40))) "Serve buffers live over HTTP" tar ((:url . "https://github.com/skeeto/impatient-mode") (:commit . "96c068d5add95595dc5be42115d100cf99f908ba") (:revdesc . "1.1-0-g96c068d5add9") (:authors ("Brian Taylor" . "el.wubo@gmail.com")) (:maintainers ("Brian Taylor" . "el.wubo@gmail.com")) (:maintainer "Brian Taylor" . "el.wubo@gmail.com"))])
 (impatient-showdown . [(0 1 2) ((emacs (24 3)) (impatient-mode (1 1))) "Preview markdown buffer live over HTTP using showdown" tar ((:url . "https://github.com/jcs-elpa/impatient-showdown") (:commit . "b0c2da8e5936809f534c055beb6540b4f8721ed4") (:revdesc . "b0c2da8e5936") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (import-js . [(3 0 0) ((grizzl (0 1 0)) (emacs (24))) "Import Javascript dependencies" tar ((:url . "https://github.com/Galooshi/emacs-import-js") (:commit . "d2bbb53f96395415f9f01de4fa88d82c1f59ba63") (:revdesc . "d2bbb53f9639") (:keywords "javascript") (:authors ("Kevin Kehl" . "kevin.kehl@gmail.com")) (:maintainers ("Kevin Kehl" . "kevin.kehl@gmail.com")) (:maintainer "Kevin Kehl" . "kevin.kehl@gmail.com"))])
 (import-popwin . [(0 10) ((emacs (24 3)) (popwin (0 6))) "Popwin buffer near by import statements with popwin" tar ((:url . "https://github.com/emacsorphanage/import-popwin") (:commit . "6a21efc7fd44f8c2484d22eadf298e4bfd4bc003") (:revdesc . "6a21efc7fd44") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (importmagic . [(1 1) ((f (0 11 0)) (epc (0 1 0)) (emacs (24 3))) "Fix Python imports using importmagic" tar ((:url . "https://github.com/anachronic/importmagic.el") (:commit . "c0360a8146ca65565a7fa66c6d72986edd916dd5") (:revdesc . "v1.1-0-gc0360a8146ca") (:keywords "languages" "convenience") (:authors ("Nicolás Salas V." . "nikosalas@gmail.com")) (:maintainers ("Nicolás Salas V." . "nikosalas@gmail.com")) (:maintainer "Nicolás Salas V." . "nikosalas@gmail.com"))])
 (impostman . [(0 2 0) ((emacs (27 1))) "Import Postman collections" tar ((:url . "https://github.com/flashcode/impostman") (:commit . "fe8646959223a8b4dbd733aa66cf1a675332d9cf") (:revdesc . "v0.2.0-0-gfe8646959223") (:keywords "tools") (:authors ("Sébastien Helleu" . "flashcode@flashtux.org")) (:maintainers ("Sébastien Helleu" . "flashcode@flashtux.org")) (:maintainer "Sébastien Helleu" . "flashcode@flashtux.org"))])
 (incus-tramp . [(1 1) ((emacs (24 4))) "TRAMP integration for Incus containers" tar ((:url . "https://gitlab.com/lckarssen/incus-tramp") (:commit . "dfeb8381bcde28209bafb45b03bb8d6795aedb61") (:revdesc . "v1.1-0-gdfeb8381bcde") (:keywords "incus" "convenience") (:authors ("Lennart C. Karssen" . "lennart@karssen.org")) (:maintainers ("Lennart C. Karssen" . "lennart@karssen.org")) (:maintainer "Lennart C. Karssen" . "lennart@karssen.org"))])
 (indent-control . [(0 3 4) ((emacs (26 1))) "Management for indentation level" tar ((:url . "https://github.com/jcs-elpa/indent-control") (:commit . "2594740d8e8b324722d133a2db051ba4941eb170") (:revdesc . "2594740d8e8b") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (indent-guide . [(20160630) nil "Show vertical lines to guide indentation" tar ((:url . "https://github.com/zk-phi/indent-guide") (:commit . "feb207cb5610f351c7cdcf266e0c99117b2f786c") (:revdesc . "feb207cb5610"))])
 (indent-info . [(1 0 0) ((emacs (24 3))) "Show indentation information in status bar" tar ((:url . "https://github.com/terlar/indent-info.el") (:commit . "05a787afeb9946714d8b0c724868195a678db49e") (:revdesc . "05a787afeb99") (:keywords "convenience" "tools") (:authors ("Terje Larsen" . "terlar@gmail.com")) (:maintainers ("Terje Larsen" . "terlar@gmail.com")) (:maintainer "Terje Larsen" . "terlar@gmail.com"))])
 (indent-lint . [(1 0 0) ((emacs (26 1)) (async-await (1 0)) (async (1 9 4))) "Async indentation checker" tar ((:url . "https://github.com/conao3/indent-lint.el") (:commit . "5601a716d4daeb444642736ddef420cbc1047968") (:revdesc . "5601a716d4da") (:keywords "tools") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (indium . [(2 1 7) ((emacs (25)) (seq (2 16)) (js2-mode (20140114)) (js2-refactor (0 9 0)) (company (0 9 0)) (json-process-client (0 2 0))) "JavaScript Awesome Development Environment" tar ((:url . "https://github.com/NicolasPetton/Indium") (:commit . "7211c9f18b397c3dde713c33495a39de3fcd9998") (:revdesc . "7211c9f18b39") (:keywords "tools" "javascript") (:authors ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainers ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainer "Nicolas Petton" . "nicolas@petton.fr"))])
 (inf-clojure . [(3 2 1) ((emacs (25 1)) (clojure-mode (5 11))) "Run an external Clojure process in an Emacs buffer" tar ((:url . "https://github.com/clojure-emacs/inf-clojure") (:commit . "151b20ba9d3ae39b88f91aecbab98bd5a5215f1a") (:revdesc . "151b20ba9d3a") (:keywords "processes" "comint" "clojure") (:maintainers ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.dev"))])
 (inf-crystal . [(0 1 0) ((emacs (24 3)) (crystal-mode (0 1 0))) "Run a Inferior-Crystal process in a buffer" tar ((:url . "https://github.com/brantou/inf-crystal.el") (:commit . "71a330f2d29e2fb4f51d223cf6230b88620a80af") (:revdesc . "71a330f2d29e") (:keywords "languages" "crystal") (:authors ("Brantou" . "brantou89@gmail.com")) (:maintainers ("Brantou" . "brantou89@gmail.com")) (:maintainer "Brantou" . "brantou89@gmail.com"))])
 (inf-elixir . [(2 2 0) ((emacs (25 1))) "Run an interactive Elixir shell" tar ((:url . "https://github.com/J3RN/inf-elixir") (:commit . "5b45f5bd346446d87c629794b3c3e586c3eefd9c") (:revdesc . "5b45f5bd3464") (:keywords "languages" "processes" "tools") (:authors ("Jonathan Arnett" . "jonathan.arnett@protonmail.com")) (:maintainers ("Jonathan Arnett" . "jonathan.arnett@protonmail.com")) (:maintainer "Jonathan Arnett" . "jonathan.arnett@protonmail.com"))])
 (inf-ruby . [(2 8 1) ((emacs (26 1))) "Run a Ruby process in a buffer" tar ((:url . "https://github.com/nonsequitur/inf-ruby") (:commit . "8116b3b8336819a9838dd73e6926b5ba6d57c05e") (:revdesc . "8116b3b83368") (:keywords "languages" "ruby") (:authors ("Cornelius Mika" . "cornelius.mika@gmail.com") ("Dmitry Gutov" . "dgutov@yandex.ru") ("Kyle Hargraves" . "pd@krh.me")) (:maintainers ("Dmitry Gutov" . "dmitry@gutov.dev")) (:maintainer "Dmitry Gutov" . "dmitry@gutov.dev"))])
 (inferior-islisp . [(0 3 1) ((emacs (26 3)) (islisp-mode (0 2))) "Run inferior ISLisp processes" tar ((:url . "https://gitlab.com/sasanidas/islisp-mode") (:commit . "18258f7134cfd8e0bd12538351b3cd23ae44cec1") (:revdesc . "18258f7134cf") (:keywords "islisp" "lisp" "programming") (:maintainers ("Fermin Munoz" . "fmfs@posteo.net")) (:maintainer "Fermin Munoz" . "fmfs@posteo.net"))])
 (inflections . [(2 6) ((cl-lib (0 5)) (emacs (24))) "Convert english words between singular and plural" tar ((:url . "https://github.com/eschulte/jump.el") (:commit . "55caa66a7cc6e0b1a76143fd40eff38416928941") (:revdesc . "55caa66a7cc6") (:keywords "languages" "tools" "wp"))])
 (info-beamer . [(0 1) ((emacs (24 4))) "Utilities for working with info-beamer" tar ((:url . "https://github.com/dakra/info-beamer.el") (:commit . "f65e89ad0c2a7acdef1dc182947d59287f371783") (:revdesc . "0.1-0-gf65e89ad0c2a") (:keywords "tools" "processes" "comm") (:authors ("Daniel Kraus" . "daniel@kraus.my")) (:maintainers ("Daniel Kraus" . "daniel@kraus.my")) (:maintainer "Daniel Kraus" . "daniel@kraus.my"))])
 (info-buffer . [(0 2) nil "Display info topics in separate buffers" tar ((:url . "https://gitlab.com/llvilanova/info-buffer") (:commit . "d35dad6e766c6e2ddb8dc6acb4ce5b6e10fbcaa7") (:revdesc . "d35dad6e766c") (:keywords "docs" "info") (:authors ("Lluís Vilanova" . "vilanova@ac.upc.edu")) (:maintainers ("Lluís Vilanova" . "vilanova@ac.upc.edu")) (:maintainer "Lluís Vilanova" . "vilanova@ac.upc.edu"))])
 (info-colors . [(0 2) ((emacs (24))) "Extra colors for Info-mode" tar ((:url . "https://github.com/ubolonton/info-colors") (:commit . "13dd9b6a7288e6bb692b210bcb9cd72016658dae") (:revdesc . "13dd9b6a7288") (:keywords "faces") (:authors ("Tuấn-Anh Nguyễn" . "ubolonton@gmail.com")) (:maintainers ("Tuấn-Anh Nguyễn" . "ubolonton@gmail.com")) (:maintainer "Tuấn-Anh Nguyễn" . "ubolonton@gmail.com"))])
 (inform . [(1 3) ((emacs (25 1))) "Symbol links in Info buffers to their help documentation" tar ((:url . "https://github.com/dieter-wilhelm/inform") (:commit . "5e096549632b2691fe1f975394d07a31cf603fc6") (:revdesc . "1.3-0-g5e096549632b") (:keywords "help" "docs" "convenience") (:authors ("H. Dieter Wilhelm" . "dieter@duenenhof-wilhelm.de")))])
 (inform7 . [(0 1 1) ((emacs (24 3)) (s (1 12 0))) "Major mode for working with Inform 7 files" tar ((:url . "https://github.com/GuiltyDolphin/inform7-mode") (:commit . "a409bbc6f04264f7f00616a995fa6ecf59d33d0d") (:revdesc . "a409bbc6f042") (:keywords "languages") (:authors ("Ben Moon" . "software@guiltydolphin.com")) (:maintainers ("Ben Moon" . "software@guiltydolphin.com")) (:maintainer "Ben Moon" . "software@guiltydolphin.com"))])
 (inherit-local . [(1 1 1) ((emacs (24 3))) "Inherited buffer-local variables" tar ((:url . "https://github.com/shlevy/inherit-local") (:commit . "b1f4ff9c41f9d64e4adaf5adcc280b82f084cdc7") (:revdesc . "b1f4ff9c41f9"))])
 (inheritenv . [(0 2) ((emacs (24 4))) "Make temp buffers inherit buffer-local environment variables" tar ((:url . "https://github.com/purcell/inheritenv") (:commit . "00106bb208d06e5f1ec25d0c2f41c000cbb25076") (:revdesc . "00106bb208d0") (:keywords "unix") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (inhibit-mouse . [(1 0 0) ((emacs (24 1))) "Deactivate mouse input during editing" tar ((:url . "https://github.com/jamescherti/inhibit-mouse.el") (:commit . "ce8180dd631d4aadd8b3c434ecbb77c2f5e31012") (:revdesc . "1.0.0-0-gce8180dd631d") (:keywords "convenience"))])
 (ini-mode . [(0 0 7) ((emacs (24 1))) "Major mode for Windows-style ini files" tar ((:url . "https://github.com/Lindydancer/ini-mode") (:commit . "5472abc94e564edc6b469c48d2324519a044a77c") (:revdesc . "5472abc94e56") (:keywords "languages" "faces"))])
 (init-dir . [(0 2 1) ((emacs (27 1)) (benchmark-init (1 2))) "Init directory instead of just a single file" tar ((:url . "https://github.com/chaosemer/init-dir") (:commit . "fd3da1d7a4caf337eebf53de5cd6f5cadad00537") (:revdesc . "fd3da1d7a4ca") (:keywords "extensions" "internal") (:authors ("Jared Finder" . "jared@finder.org")) (:maintainers ("Jared Finder" . "jared@finder.org")) (:maintainer "Jared Finder" . "jared@finder.org"))])
 (init-loader . [(0 2) nil "Loader for configuration files" tar ((:url . "https://github.com/emacs-jp/init-loader") (:commit . "128ee76adbf431f0b8c30a3a29cb20c9c5100cde") (:revdesc . "128ee76adbf4") (:authors ("IMAKADO" . "ken.imakado@gmail.com")) (:maintainers ("IMAKADO" . "ken.imakado@gmail.com")) (:maintainer "IMAKADO" . "ken.imakado@gmail.com"))])
 (init-open-recentf . [(0 2 1) ((emacs (24 4))) "Invoke a command immediately after startup" tar ((:url . "https://github.com/zonuexe/init-open-recentf.el") (:commit . "369304d6adb6875948c4534419c4f303ac23c4f6") (:revdesc . "369304d6adb6") (:keywords "files" "recentf" "after-init-hook") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (initsplit . [(1 6) nil "[No description available]" tar ((:url . "https://github.com/dabrahams/initsplit") (:commit . "950bdc568e3fd08e6106170953caf98ac582a431") (:revdesc . "950bdc568e3f") (:keywords "lisp") (:authors ("John Wiegley" . "johnw@gnu.org")) (:maintainers ("John Wiegley" . "johnw@gnu.org")) (:maintainer "John Wiegley" . "johnw@gnu.org"))])
 (ink-mode . [(0 3 2) ((emacs (26 1))) "Major mode for writing interactive fiction in Ink" tar ((:url . "https://github.com/Kungsgeten/ink-mode") (:commit . "71d215712067729eb92e766a3b2067e7f3254183") (:revdesc . "71d215712067") (:keywords "languages" "wp" "hypermedia"))])
 (inline-crypt . [(0 1 4) nil "Simple inline encryption via openssl" tar ((:url . "https://github.com/Sodel-the-Vociferous/inline-crypt-el") (:commit . "497ce9dc29a8ccac0b6dd6854f5d120514350282") (:revdesc . "497ce9dc29a8") (:keywords "crypt") (:authors ("Daniel Ralston" . "Wubbulous@gmail.com")) (:maintainers ("Daniel Ralston" . "Wubbulous@gmail.com")) (:maintainer "Daniel Ralston" . "Wubbulous@gmail.com"))])
 (insert-esv . [(0 1 0) ((emacs (24 3))) "Insert ESV Bible passages" tar ((:url . "https://github.com/sam030820/insert-esv") (:commit . "8a09629bfafa87f8cd75e92fee6655cfa8be67f2") (:revdesc . "8a09629bfafa") (:keywords "convenience"))])
 (insert-shebang . [(0 9 7) nil "Insert shebang line automatically" tar ((:url . "https://github.com/psachin/insert-shebang") (:commit . "d5cf5bad3ea3e5dc86fb19eb3545149935e10dbd") (:revdesc . "d5cf5bad3ea3") (:keywords "shebang" "tool" "convenience") (:authors ("Sachin Patil" . "iclcoolster@gmail.com")) (:maintainers ("Sachin Patil" . "iclcoolster@gmail.com")) (:maintainer "Sachin Patil" . "iclcoolster@gmail.com"))])
 (instapaper . [(0 9 5) nil "[No description available]" tar ((:url . "https://git.carcosa.net/jmcbray/emacs-instapaper.git") (:commit . "4714ed1b014615f8213e6f93637e4ec1d9d5a37a") (:revdesc . "4714ed1b0146") (:authors ("Jason F. McBrayer" . "jmcbray@carcosa.net")) (:maintainers ("Jason F. McBrayer" . "jmcbray@carcosa.net")) (:maintainer "Jason F. McBrayer" . "jmcbray@carcosa.net"))])
 (intel-hex-mode . [(0 1 3) nil "Mode for Intel Hex files" tar ((:url . "https://github.com/mschuldt/intel-hex-mode") (:commit . "e83c94e1c31a8435a88b3ae395f2bc842ef83217") (:revdesc . "e83c94e1c31a") (:keywords "tools" "hex") (:maintainers ("Michael Schuldt" . "mbschuldt@gmail.com")) (:maintainer "Michael Schuldt" . "mbschuldt@gmail.com"))])
 (intellij-theme . [(1 3) nil "Inspired by IntelliJ's default theme" tar ((:url . "https://gitlab.com/fommil/emacs-intellij-theme") (:commit . "1bbfff8e6742d18e9b77ed796f44da3b7bd10606") (:revdesc . "1bbfff8e6742") (:keywords "faces") (:authors ("Vladimir Polushin" . "vovapolu@gmail.com")) (:maintainers ("Vladimir Polushin" . "vovapolu@gmail.com")) (:maintainer "Vladimir Polushin" . "vovapolu@gmail.com"))])
 (iosevka-theme . [(0 2) ((emacs (28 1))) "Theme using various stylistic sets of Iosevka font" tar ((:url . "https://codeberg.org/mekeor/iosevka-theme") (:commit . "4b4fecee994b62c4b2b3d7bc34c181937c41eafc") (:revdesc . "4b4fecee994b") (:keywords "faces" "theme") (:authors ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainers ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainer "Mekeor Melire" . "mekeor@posteo.de"))])
 (iota . [(1 0 2) nil "Replace marker with increasing integers" tar ((:url . "https://git.sr.ht/~mango/iota.el") (:commit . "9dbf2741a2471044e58ccee6635ae8c6e311b7a8") (:revdesc . "v1.0.2-0-g9dbf2741a247") (:keywords "abbrev" "data" "wp") (:authors ("Thomas Voss" . "mail@thomasvoss.com")) (:maintainers ("Thomas Voss" . "mail@thomasvoss.com")) (:maintainer "Thomas Voss" . "mail@thomasvoss.com"))])
 (iplayer . [(0 1) nil "Browse and download BBC TV/radio shows" tar ((:url . "https://github.com/csrhodes/iplayer-el") (:commit . "48b664e36e1a8e37eeb3eee80b91ff7126ed449a") (:revdesc . "v0.1-0-g48b664e36e1a") (:keywords "multimedia" "bbc") (:authors ("Christophe Rhodes" . "csr21@cantab.net")) (:maintainers ("Christophe Rhodes" . "csr21@cantab.net")) (:maintainer "Christophe Rhodes" . "csr21@cantab.net"))])
 (ipp . [(0 7) ((cl-lib (0 5)) (emacs (24 1))) "Implementation of the Internet Printing Protocol" tar ((:url . "https://github.com/emarsden/ipp-el") (:commit . "4203ecdbf49443412d5a1fb16f6d7ad19f519577") (:revdesc . "4203ecdbf494") (:keywords "printing" "hardware") (:authors ("Eric Marsden" . "eric.marsden@risk-engineering.org")) (:maintainers ("Eric Marsden" . "eric.marsden@risk-engineering.org")) (:maintainer "Eric Marsden" . "eric.marsden@risk-engineering.org"))])
 (ipython-shell-send . [(1 1 1) ((emacs (24))) "Send code (including magics) to ipython shell" tar ((:url . "https://github.com/jackkamm/ipython-shell-send-el") (:commit . "0faed86faff02a361f23ce5fc923d0e9b09bb2da") (:revdesc . "0faed86faff0") (:keywords "tools" "processes") (:authors ("Jack Kamm" . "jackkamm@gmail.com")) (:maintainers ("Jack Kamm" . "jackkamm@gmail.com")) (:maintainer "Jack Kamm" . "jackkamm@gmail.com"))])
 (ir-black-theme . [(1 0 1) nil "Port of ir-black theme" tar ((:url . "https://github.com/jmdeldin/ir-black-theme.el") (:commit . "b1ca1d0778e3e6228ff756e7fdaf5f5982000fa2") (:revdesc . "b1ca1d0778e3") (:keywords "faces") (:authors ("Jon-Michael Deldin" . "dev@jmdeldin.com")) (:maintainers ("Jon-Michael Deldin" . "dev@jmdeldin.com")) (:maintainer "Jon-Michael Deldin" . "dev@jmdeldin.com"))])
 (irony . [(1 6 1) ((cl-lib (0 5)) (json (1 2))) "C/C++ minor mode powered by libclang" tar ((:url . "https://github.com/Sarcasm/irony-mode") (:commit . "40e0ce19eb850bdf1f77225f11713cc816250d95") (:revdesc . "v1.6.1-0-g40e0ce19eb85") (:keywords "c" "convenience" "tools") (:authors ("Guillaume Papin" . "guillaume.papin@epitech.eu")) (:maintainers ("Guillaume Papin" . "guillaume.papin@epitech.eu")) (:maintainer "Guillaume Papin" . "guillaume.papin@epitech.eu"))])
 (isearch-project . [(0 2 6) ((emacs (26 1)) (f (0 20 0))) "Incremental search through the whole project" tar ((:url . "https://github.com/jcs-elpa/isearch-project") (:commit . "1077b395e1c34a734120faf1f3a7feae6dc4d9c5") (:revdesc . "1077b395e1c3") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (isgd . [(1 1) nil "Shorten URLs using the isgd.com shortener service" tar ((:url . "https://github.com/chmouel/isgd.el") (:commit . "764306dadd5a9213799081a48aba22f7c75cca9a") (:revdesc . "764306dadd5a") (:authors ("Chmouel Boudjnah" . "chmouel@chmouel.com")) (:maintainers ("Chmouel Boudjnah" . "chmouel@chmouel.com")) (:maintainer "Chmouel Boudjnah" . "chmouel@chmouel.com"))])
 (islisp-mode . [(0 3 1) ((emacs (26 3))) "Major mode for ISLisp programming" tar ((:url . "https://gitlab.com/sasanidas/islisp-mode") (:commit . "18258f7134cfd8e0bd12538351b3cd23ae44cec1") (:revdesc . "18258f7134cf") (:keywords "islisp" "lisp" "programming") (:maintainers ("Fermin Munoz" . "fmfs@posteo.net")) (:maintainer "Fermin Munoz" . "fmfs@posteo.net"))])
 (iso-639 . [(1 0 0) ((emacs (25 1)) (levenshtein (20090830 1040))) "ISO 639" tar ((:url . "https://codeberg.org/WammKD/emacs-iso-639") (:commit . "e1bfde31c0af34f2fcaed8ca6726e17f2401edf1") (:revdesc . "e1bfde31c0af") (:keywords "tools" "multilingual" "language" "iso-639") (:authors ("Wamm K. D." . "jaft.r@outlook.com")) (:maintainers ("Wamm K. D." . "jaft.r@outlook.com")) (:maintainer "Wamm K. D." . "jaft.r@outlook.com"))])
 (iter2 . [(1 4) ((emacs (25 1))) "Reimplementation of Elisp generators" tar ((:url . "https://github.com/doublep/iter2") (:commit . "37913b80fb7a2b6c265378c55ea50d502f2cce77") (:revdesc . "37913b80fb7a") (:keywords "elisp" "extensions") (:authors ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainers ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainer "Paul Pogonyshev" . "pogonyshev@gmail.com"))])
 (ivy . [(0 14 2) ((emacs (24 5))) "Incremental Vertical completYon" tar ((:url . "https://github.com/abo-abo/swiper") (:commit . "8c30f4cab5948aa8d942a3b2bbf5fb6a94d9441d") (:revdesc . "0.14.2-0-g8c30f4cab594") (:keywords "matching") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Basil L. Contovounesios" . "contovob@tcd.ie")) (:maintainer "Basil L. Contovounesios" . "contovob@tcd.ie"))])
 (ivy-avy . [(0 14 2) ((emacs (24 5)) (ivy (0 14 2)) (avy (0 5 0))) "Avy integration for Ivy" tar ((:url . "https://github.com/abo-abo/swiper") (:commit . "8c30f4cab5948aa8d942a3b2bbf5fb6a94d9441d") (:revdesc . "0.14.2-0-g8c30f4cab594") (:keywords "convenience") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Basil L. Contovounesios" . "contovob@tcd.ie")) (:maintainer "Basil L. Contovounesios" . "contovob@tcd.ie"))])
 (ivy-bibtex . [(2 0 0) ((swiper (0 7 0)) (parsebib (1 0)) (s (1 9 0)) (dash (2 6 0)) (f (0 16 2)) (cl-lib (0 5)) (biblio (0 2))) "A BibTeX bibliography manager based on Ivy" tar ((:url . "https://github.com/tmalsburg/helm-bibtex") (:commit . "d6a98ac6f28d2a6a05e203115211c98333d40aca") (:revdesc . "d6a98ac6f28d") (:authors ("Justin Burkett" . "justin@burkett.cc")) (:maintainers ("Titus von der Malsburg" . "malsburg@posteo.de")) (:maintainer "Titus von der Malsburg" . "malsburg@posteo.de"))])
 (ivy-erlang-complete . [(0 3 2) ((async (1 9)) (counsel (0 11 0)) (ivy (0 11 0)) (erlang (19 2)) (emacs (25 1))) "Erlang context sensitive completion at point using ivy. It also support xref and eldoc" tar ((:url . "https://github.com/s-kostyaev/ivy-erlang-complete") (:commit . "7d60ed111dbfd34ab6ec1b07c06e2d16a5380b9a") (:revdesc . "7d60ed111dbf") (:keywords "languages" "tools") (:authors ("Sergey Kostyaev" . "feo.me@ya.ru")) (:maintainers ("Sergey Kostyaev" . "feo.me@ya.ru")) (:maintainer "Sergey Kostyaev" . "feo.me@ya.ru"))])
 (ivy-explorer . [(0 3 2) ((emacs (25)) (ivy (0 10 0))) "Dynamic file browsing grid using ivy" tar ((:url . "https://github.com/clemera/ivy-explorer") (:commit . "14adb6164f1d1646f503c3e4bd9aa559805f93d7") (:revdesc . "14adb6164f1d") (:keywords "convenience" "files" "matching") (:authors ("Clemens Radermacher" . "clemera@posteo.net")) (:maintainers ("Clemens Radermacher" . "clemera@posteo.net")) (:maintainer "Clemens Radermacher" . "clemera@posteo.net"))])
 (ivy-file-preview . [(0 4 5) ((emacs (25 1)) (ivy (0 8 0)) (s (1 12 0)) (f (0 20 0))) "Preview the current ivy file selection" tar ((:url . "https://github.com/jcs-legacy/ivy-file-preview") (:commit . "b237ee8e9fd2fd1b52254ef84cd06a0bb6c10a24") (:revdesc . "b237ee8e9fd2") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (ivy-fuz . [(1 0 0) ((emacs (25 1)) (fuz (1 3 0)) (ivy (0 13 0))) "Integration between fuz and ivy" tar ((:url . "https://github.com/Silex/ivy-fuz.el") (:commit . "f171ac73422a4bae1503d63d804e691482ed35b2") (:revdesc . "1.0.0-0-gf171ac73422a") (:keywords "convenience") (:authors ("Zhu Zihao" . "all_but_last@163.com")) (:maintainers ("Philippe Vaucher" . "philippe.vaucher@gmail.com")) (:maintainer "Philippe Vaucher" . "philippe.vaucher@gmail.com"))])
 (ivy-gitlab . [(0 8 0) ((s (1 9 0)) (dash (2 9 0)) (ivy (0 8 0)) (gitlab (0 8))) "Ivy interface to Gitlab" tar ((:url . "https://github.com/nlamirault/emacs-gitlab") (:commit . "a1c1441ff5ffb290e695eb9ac05431e9385578f4") (:revdesc . "a1c1441ff5ff") (:keywords "gitlab" "ivy") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (ivy-hoogle . [(0 1 1) ((emacs (28 1)) (async (1 9)) (ivy (0 13 2))) "Search Hoogle using ivy" tar ((:url . "https://github.com/aartamonau/ivy-hoogle") (:commit . "4b080018175b5770fd3571265bc846a4a845cdca") (:revdesc . "0.1.1-0-g4b080018175b") (:keywords "matching" "haskell" "hoogle") (:authors ("Aliaksei Artamonau" . "aliaksiej.artamonau@gmail.com")) (:maintainers ("Aliaksei Artamonau" . "aliaksiej.artamonau@gmail.com")) (:maintainer "Aliaksei Artamonau" . "aliaksiej.artamonau@gmail.com"))])
 (ivy-hydra . [(0 14 2) ((emacs (24 5)) (ivy (0 14 2)) (hydra (0 14 0))) "Additional key bindings for Ivy" tar ((:url . "https://github.com/abo-abo/swiper") (:commit . "8c30f4cab5948aa8d942a3b2bbf5fb6a94d9441d") (:revdesc . "0.14.2-0-g8c30f4cab594") (:keywords "convenience") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Basil L. Contovounesios" . "contovob@tcd.ie")) (:maintainer "Basil L. Contovounesios" . "contovob@tcd.ie"))])
 (ivy-migemo . [(1 4 0) ((emacs (24 3)) (ivy (0 13 0)) (migemo (1 9 2)) (nadvice (0 3))) "Use migemo on ivy" tar ((:url . "https://github.com/ROCKTAKEY/ivy-migemo") (:commit . "2d44f7bbc1eb5f95162db889b889488b65bc0042") (:revdesc . "2d44f7bbc1eb") (:keywords "matching") (:authors ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainers ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainer "ROCKTAKEY" . "rocktakey@gmail.com"))])
 (ivy-mpdel . [(1 0 0) ((emacs (25 1)) (ivy (0 10 0)) (libmpdel (1 0 0)) (mpdel (1 0 0))) "Ivy interface to navigate MPD" tar ((:url . "https://github.com/mpdel/ivy-mpdel") (:commit . "a42dcc943914c71975c115195d38c739f25e475c") (:revdesc . "v1.0.0-0-ga42dcc943914") (:keywords "multimedia") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (ivy-posframe . [(0 5 5) ((emacs (26 0)) (posframe (0 8 0)) (ivy (0 13 0))) "Using posframe to show Ivy" tar ((:url . "https://github.com/tumashu/ivy-posframe") (:commit . "83047d440ff132d5a45acde5955f71853edeefb9") (:revdesc . "83047d440ff1") (:keywords "abbrev" "convenience" "matching" "ivy") (:authors ("Feng Shu" . "tumashu@163.com") ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Feng Shu" . "tumashu@163.com")) (:maintainer "Feng Shu" . "tumashu@163.com"))])
 (ivy-prescient . [(6 3 1) ((emacs (25 1)) (prescient (6 1 0)) (ivy (0 11 0))) "Prescient.el + Ivy" tar ((:url . "https://github.com/radian-software/prescient.el") (:commit . "2b8a8b41228bddb2e11eb1c200e98a9edd04797c") (:revdesc . "2b8a8b41228b") (:keywords "extensions") (:authors ("Radian LLC" . "contact+prescient@radian.codes")) (:maintainers ("Radian LLC" . "contact+prescient@radian.codes")) (:maintainer "Radian LLC" . "contact+prescient@radian.codes"))])
 (ivy-purpose . [(0 1) ((emacs (24)) (ivy (0 8)) (window-purpose (1 5))) "Ivy Interface for Purpose" tar ((:url . "https://github.com/bmag/ivy-purpose") (:commit . "0495f2f3aed64d7e0028125e76a9a68f8fc4107e") (:revdesc . "0495f2f3aed6"))])
 (ivy-rich . [(0 1 7) ((emacs (25 1)) (ivy (0 13 0))) "More friendly display transformer for ivy" tar ((:url . "https://github.com/Yevgnen/ivy-rich") (:commit . "aff9b6bd53e0fdcf350ab83c90e64e651b47dba4") (:revdesc . "aff9b6bd53e0") (:keywords "convenience" "ivy") (:authors ("Yevgnen Koh" . "wherejoystarts@gmail.com")) (:maintainers ("Yevgnen Koh" . "wherejoystarts@gmail.com")) (:maintainer "Yevgnen Koh" . "wherejoystarts@gmail.com"))])
 (ivy-rtags . [(3 23) ((ivy (0 7 0)) (rtags (2 10))) "RTags completion back-end for ivy" tar ((:url . "https://github.com/Andersbakken/rtags") (:commit . "7169ed577d676690a3c6f0025b54e8477d80eacf") (:revdesc . "v3.23-0-g7169ed577d67") (:authors ("Jan Erik Hanssen" . "jhanssen@gmail.com") ("Anders Bakken" . "agbakken@gmail.com")) (:maintainers ("Jan Erik Hanssen" . "jhanssen@gmail.com") ("Anders Bakken" . "agbakken@gmail.com")) (:maintainer "Jan Erik Hanssen" . "jhanssen@gmail.com"))])
 (ivy-searcher . [(0 3 10) ((emacs (25 1)) (ivy (0 8 0)) (searcher (0 1 8)) (s (1 12 0)) (f (0 20 0))) "Ivy interface to use searcher" tar ((:url . "https://github.com/jcs-legacy/ivy-searcher") (:commit . "46a461eb873083bc53d7fd3a15b266c52b3cbfb4") (:revdesc . "46a461eb8730") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (ivy-youtube . [(0 3 2) ((request (0 2 0)) (ivy (0 8 0)) (cl-lib (0 5))) "Query YouTube and play videos in your browser" tar ((:url . "https://github.com/squiter/ivy-youtube") (:commit . "23e1089d4c4fc32db20df14ba10078aabf117e87") (:revdesc . "23e1089d4c4f") (:keywords "youtube" "multimedia" "mpv" "vlc"))])
 (ix . [(0 7) ((grapnel (0 5 3))) "Emacs client for http://ix.io pastebin" tar ((:url . "https://github.com/theanalyst/ix.el") (:commit . "498dac674f4f1910d39087b1457c5da5465a0614") (:revdesc . "0.7-0-g498dac674f4f") (:authors ("Abhishek L" . "abhishekl.2006@gmail.com")) (:maintainers ("Abhishek L" . "abhishekl.2006@gmail.com")) (:maintainer "Abhishek L" . "abhishekl.2006@gmail.com"))])
 (j-mode . [(1 1 1) nil "Major mode for editing J programs" tar ((:url . "https://github.com/zellio/j-mode") (:commit . "caa55dfaae01d1875380929826952c2b3ef8a653") (:revdesc . "v1.1.1-0-gcaa55dfaae01") (:keywords "j" "langauges"))])
 (jack . [(1 0) ((emacs (26 1))) "HTML renderer library" tar ((:url . "https://github.com/tonyaldon/jack") (:commit . "7e4b1a1c732fdc8ccda4bb78c0aa8697bdf43491") (:revdesc . "7e4b1a1c732f") (:keywords "lisp" "html") (:authors ("Tony Aldon" . "tony.aldon.adm@gmail.com")) (:maintainers ("Tony Aldon" . "tony.aldon.adm@gmail.com")) (:maintainer "Tony Aldon" . "tony.aldon.adm@gmail.com"))])
 (jade-mode . [(1 0 0) nil "Major mode for editing .jade files" tar ((:url . "https://github.com/brianc/jade-mode") (:commit . "4e7a20db492719062f40b225ed730ed50be5db56") (:revdesc . "v1.0.0-0-g4e7a20db4927"))])
 (jami-bot . [(0 0 2) ((emacs (27 1))) "An extendable chat bot for the private messenger GNU Jami" tar ((:url . "https://gitlab.com/hperrey/jami-bot") (:commit . "1da4d471587f55599686f97e143dfdb80d080fd5") (:revdesc . "1da4d471587f") (:keywords "comm" "jami" "messenger" "chat bot" "dbus") (:authors ("Hanno Perrey" . "http://gitlab.com/hperrey")) (:maintainers ("Hanno Perrey" . "hanno@hoowl.se")) (:maintainer "Hanno Perrey" . "hanno@hoowl.se"))])
 (java-imports . [(0 1 0) ((emacs (24 4)) (s (1 10 0)) (pcache (0 3 2))) "Code for dealing with Java imports" tar ((:url . "https://github.com/dakrone/emacs-java-imports") (:commit . "275f354c245df741b45e88d085660722e81a12be") (:revdesc . "0.1.0-0-g275f354c245d") (:keywords "java") (:authors ("Lee Hinman" . "lee@writequit.org")) (:maintainers ("Lee Hinman" . "lee@writequit.org")) (:maintainer "Lee Hinman" . "lee@writequit.org"))])
 (javadoc-lookup . [(1 1 0) ((cl-lib (0 3))) "Javadoc Emacs integration with Maven" tar ((:url . "https://github.com/skeeto/javadoc-lookup") (:commit . "507a2dd443d60b537b8f779c1847e2cd0ccd1382") (:revdesc . "1.1.0-0-g507a2dd443d6") (:authors ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainers ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainer "Christopher Wellons" . "wellons@nullprogram.com"))])
 (jdecomp . [(0 2 0) ((emacs (24 5))) "Interface to Java decompilers" tar ((:url . "https://github.com/xiongtx/jdecomp") (:commit . "1590b06f139f036c1041e1ce5c0acccaa24b31a7") (:revdesc . "1590b06f139f") (:keywords "decompile" "java" "languages" "tools") (:authors ("Tianxiang Xiong" . "tianxiang.xiong@gmail.com")) (:maintainers ("Tianxiang Xiong" . "tianxiang.xiong@gmail.com")) (:maintainer "Tianxiang Xiong" . "tianxiang.xiong@gmail.com"))])
 (jdee . [(2 4 2) ((emacs (24 3)) (flycheck (30)) (memoize (1 0 1)) (dash (2 13 0)) (s (1 12 0))) "Java Development Environment for Emacs" tar ((:url . "https://github.com/jdee-emacs/jdee") (:commit . "b510a29f1fc1bea218a6230fb219922775687c78") (:revdesc . "b510a29f1fc1") (:keywords "java" "tools") (:authors ("Paul Kinnucan" . "pkinnucan@attbi.com")))])
 (jedi . [(0 2 8) ((emacs (24)) (jedi-core (0 2 2)) (auto-complete (1 4))) "A Python auto-completion for Emacs" tar ((:url . "https://github.com/tkf/emacs-jedi") (:commit . "9d5f29116c4d42cae561a9d69e6fba2b61e2cf43") (:revdesc . "v0.2.8-0-g9d5f29116c4d") (:authors ("Takafumi Arakaki" . "aka.tkfatgmail.com")) (:maintainers ("Takafumi Arakaki" . "aka.tkfatgmail.com")) (:maintainer "Takafumi Arakaki" . "aka.tkfatgmail.com"))])
 (jedi-core . [(0 2 8) ((emacs (24)) (epc (0 1 0)) (python-environment (0 0 2)) (cl-lib (0 5))) "Common code of jedi.el and company-jedi.el" tar ((:url . "https://github.com/tkf/emacs-jedi") (:commit . "9d5f29116c4d42cae561a9d69e6fba2b61e2cf43") (:revdesc . "v0.2.8-0-g9d5f29116c4d") (:authors ("Takafumi Arakaki" . "aka.tkfatgmail.com")) (:maintainers ("Takafumi Arakaki" . "aka.tkfatgmail.com")) (:maintainer "Takafumi Arakaki" . "aka.tkfatgmail.com"))])
 (jeison . [(1 0 0) ((emacs (25 1)) (dash (2 16 0))) "A library for declarative JSON parsing" tar ((:url . "https://github.com/SavchenkoValeriy/jeison") (:commit . "4b68ba9e001594f3e33d98cf89580d0aee02b258") (:revdesc . "4b68ba9e0015") (:keywords "lisp" "json" "data-types"))])
 (jet . [(1 2 0) ((emacs (27 1)) (transient (0 3 7))) "Emacs integration for jet Clojure tool" tar ((:url . "https://github.com/ericdallo/jet.el") (:commit . "67ded216a0a6af0bb8d6874a7faea538912c0345") (:revdesc . "67ded216a0a6") (:keywords "tools") (:authors ("Eric Dallo" . "ercdll1337@gmail.com")) (:maintainers ("Eric Dallo" . "ercdll1337@gmail.com")) (:maintainer "Eric Dallo" . "ercdll1337@gmail.com"))])
 (jetbrains . [(0 0 2) ((emacs (24 3)) (cl-lib (0 5)) (f (0 17))) "JetBrains IDE bridge" tar ((:url . "https://github.com/emacs-php/jetbrains.el") (:commit . "38e136079f3f2ddbe0e8b7dec01cf6b515e897d8") (:revdesc . "38e136079f3f") (:keywords "tools" "php") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (jetbrains-darcula-theme . [(1 0 0) nil "A complete port of the default JetBrains Darcula theme" tar ((:url . "https://github.com/ianyepan/jetbrains-darcula-emacs-theme") (:commit . "05ee1876d58e7858b4526bdcd3ed5ef5e0a67ddf") (:revdesc . "05ee1876d58e"))])
 (jinja2-mode . [(0 2) nil "A major mode for jinja2" tar ((:url . "https://github.com/paradoxxxzero/jinja2-mode") (:commit . "cfaa7bbe7bb290cc500440124ce89686f3e26f86") (:revdesc . "cfaa7bbe7bb2"))])
 (jinx . [(1 10) ((emacs (27 1)) (compat (30))) "Enchanted Spell Checker" tar ((:url . "https://github.com/minad/jinx") (:commit . "4c89699db3851c3ecfa5d007ab56c810e8e3ffeb") (:revdesc . "4c89699db385") (:keywords "convenience" "text") (:authors ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainers ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de"))])
 (jirascope . [(1 0 0) ((emacs (25 1))) "A Jira client" tar ((:url . "https://github.com/Duckonaut/jirascope") (:commit . "61acd8d6adbd6b25ebcc5436b4dce6d5c6d2981c") (:revdesc . "61acd8d6adbd") (:keywords "tools") (:authors ("Stanisław Zagórowski" . "duckonaut@gmail.com")) (:maintainers ("Stanisław Zagórowski" . "duckonaut@gmail.com")) (:maintainer "Stanisław Zagórowski" . "duckonaut@gmail.com"))])
 (journalctl-mode . [(1 1) ((emacs (27 1))) "Sample major mode for  viewing output journalctl" tar ((:url . "https://github.com/SebastianMeisel/journalctl-mode") (:commit . "aef9162171118ef8e6ab411b26b763c9c6ea9e2f") (:revdesc . "aef916217111") (:keywords "unix") (:authors ("Sebastian Meisel" . "sebastian.meisel@gmail.com")) (:maintainers ("Sebastian Meisel" . "sebastian.meisel@gmail.com")) (:maintainer "Sebastian Meisel" . "sebastian.meisel@gmail.com"))])
 (jpop . [(3 2 3) ((emacs (24)) (dash (2 11 0))) "Lightweight project cacheing and navigation framework" tar ((:url . "https://github.com/domtronn/jpop.el") (:commit . "f3eed65e54dc2daaa7678e6eb169d35c4a7d1e63") (:revdesc . "f3eed65e54dc") (:keywords "project" "convenience") (:authors ("Dom Charlesworth" . "dgc336@gmail.com")) (:maintainers ("Dom Charlesworth" . "dgc336@gmail.com")) (:maintainer "Dom Charlesworth" . "dgc336@gmail.com"))])
 (jq-format . [(1 0 0) ((emacs (24)) (reformatter (0 3))) "Reformat JSON and JSONLines using jq" tar ((:url . "https://github.com/wbolster/emacs-jq-format") (:commit . "47e1c5adb89b37b4d53fe01302d8c675913c20e7") (:revdesc . "1.0.0-0-g47e1c5adb89b") (:keywords "languages") (:authors ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainers ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainer "wouter bolsterlee" . "wouter@bolsterl.ee"))])
 (jq-mode . [(0 5 0) ((emacs (25 1))) "Edit jq scripts" tar ((:url . "https://github.com/ljos/jq-mode") (:commit . "3bda2d1085d5ac28fc6e7e8093ca7e74d3719f56") (:revdesc . "3bda2d1085d5") (:authors ("Bjarte Johansen" . "BjartedotJohansenatgmaildotcom")) (:maintainers ("Bjarte Johansen" . "BjartedotJohansenatgmaildotcom")) (:maintainer "Bjarte Johansen" . "BjartedotJohansenatgmaildotcom"))])
 (js-auto-format-mode . [(1 1 1) ((emacs (24))) "Minor mode for auto-formatting JavaScript code" tar ((:url . "https://github.com/ybiquitous/js-auto-format-mode") (:commit . "29d245b4d126a5fc5153a4d8f17396be4165b4a6") (:revdesc . "1.1.1-0-g29d245b4d126") (:keywords "languages") (:authors ("Masafumi Koba" . "ybiquitous@gmail.com")) (:maintainers ("Masafumi Koba" . "ybiquitous@gmail.com")) (:maintainer "Masafumi Koba" . "ybiquitous@gmail.com"))])
 (js-comint . [(1 2 0) ((emacs (24 3))) "JavaScript interpreter in window" tar ((:url . "https://github.com/redguardtoo/js-comint") (:commit . "0dedaf4753fbe8cdbab14aa85f05d7673cbee8b6") (:revdesc . "0dedaf4753fb") (:keywords "javascript" "node" "inferior-mode" "convenience") (:authors ("Paul Huff" . "paul.huff@gmail.com") ("Stefano Mazzucco" . "MYFIRSTNAME-AT-CURSO-DOT-RE")) (:maintainers ("Chen Bin" . "chenbin.shATgmailDOTcom")) (:maintainer "Chen Bin" . "chenbin.shATgmailDOTcom"))])
 (js2-closure . [(2 2 1) ((js2-mode (20150909))) "Google Closure dependency manager" tar ((:url . "https://github.com/jart/js2-closure") (:commit . "74a75f001a8bc2b9c02b9e8b4557f7ee3c5f84fb") (:revdesc . "74a75f001a8b") (:keywords "javascript" "closure") (:authors ("Justine Tunney" . "jart@google.com")) (:maintainers ("Justine Tunney" . "jart@google.com")) (:maintainer "Justine Tunney" . "jart@google.com"))])
 (js2-highlight-vars . [(0 1 0) ((js2-mode (20150909))) "Highlight occurrences of the variable under cursor" tar ((:url . "https://github.com/unhammer/js2-highlight-vars.el") (:commit . "bf38d12cf65eebc8b81866fd03f6a0389bb2a9ed") (:revdesc . "v0.1.0-0-gbf38d12cf65e") (:authors ("Mihai Bazon" . "mihai.bazon@gmail.com")) (:maintainers ("Mihai Bazon" . "mihai.bazon@gmail.com")) (:maintainer "Mihai Bazon" . "mihai.bazon@gmail.com"))])
 (js2-mode . [(20231224) ((emacs (24 1)) (cl-lib (0 5))) "Improved JavaScript editing mode" tar ((:url . "https://github.com/mooz/js2-mode") (:commit . "010a536da6df345a0b9a55bbd892f5f4d0d9fdfc") (:revdesc . "010a536da6df") (:keywords "languages" "javascript") (:authors ("Steve Yegge" . "steve.yegge@gmail.com") ("mooz" . "stillpedant@gmail.com") ("Dmitry Gutov" . "dgutov@yandex.ru")) (:maintainers ("Steve Yegge" . "steve.yegge@gmail.com") ("mooz" . "stillpedant@gmail.com") ("Dmitry Gutov" . "dgutov@yandex.ru")) (:maintainer "Steve Yegge" . "steve.yegge@gmail.com"))])
 (js2-refactor . [(0 9 0) ((js2-mode (20101228)) (s (1 9 0)) (multiple-cursors (1 0 0)) (dash (1 0 0)) (s (1 0 0)) (yasnippet (0 9 0 1))) "A JavaScript refactoring library for emacs" tar ((:url . "https://github.com/js-emacs/js2-refactor.el") (:commit . "089c7800e3e7b0a89ee2392037ac07851bcee298") (:revdesc . "0.9.0-0-g089c7800e3e7") (:keywords "conveniences") (:authors ("Magnar Sveen" . "magnars@gmail.com") ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com") ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (js2hl . [(0 0 4) ((emacs (24 4)) (js2-mode (20190219))) "Highlight/rename things using js2-mode parser" tar ((:url . "https://github.com/redguardtoo/js2hl") (:commit . "334028e4c8df957a55986566fe099bb4e325cb00") (:revdesc . "334028e4c8df") (:keywords "convenience") (:authors ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainers ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainer "Chen Bin" . "chenbinDOTshATgmailDOTcom"))])
 (js3-mode . [(1 1 0) nil "An improved JavaScript editing mode" tar ((:url . "https://github.com/tamzinblake/js3-mode") (:commit . "5ccda46ba39998a74bd724fdffb34634be5b6563") (:revdesc . "v1.1.0-0-g5ccda46ba399") (:keywords "javascript" "languages") (:authors ("Thom Blake" . "(webmaster@thomblake.com)")) (:maintainers ("Thom Blake" . "(webmaster@thomblake.com)")) (:maintainer "Thom Blake" . "(webmaster@thomblake.com)"))])
 (jsfmt . [(0 2 0) nil "[No description available]" tar ((:url . "https://github.com/brettlangdon/jsfmt.el") (:commit . "c5d9742872509143db0250a77db705ef78f02cd0") (:revdesc . "c5d974287250") (:authors ("Brett Langdon" . "brett@blangdon.com")) (:maintainers ("Brett Langdon" . "brett@blangdon.com")) (:maintainer "Brett Langdon" . "brett@blangdon.com"))])
 (json-mode . [(1 9 2) ((json-snatcher (1 0 0)) (emacs (24 4))) "Major mode for editing JSON files" tar ((:url . "https://github.com/json-emacs/json-mode") (:commit . "77125b01c0ddce537085201098bea9b4b8ba6be3") (:revdesc . "77125b01c0dd"))])
 (json-navigator . [(1 0 0) ((emacs (28 1))) "View and navigate JSON structures" tar ((:url . "https://github.com/DamienCassou/json-navigator") (:commit . "8ab49b066bc23de731a29ef07bbafa29999e1852") (:revdesc . "v1.0.0-0-g8ab49b066bc2") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (json-par . [(5 0 0) ((emacs (24 4)) (json-mode (1 7 0))) "Minor mode for structural editing of JSON" tar ((:url . "https://github.com/taku0/json-par") (:commit . "7b346b0f0db62d65f382ce48a9b2ecd9e180b0d7") (:revdesc . "7b346b0f0db6") (:keywords "abbrev" "convenience" "files") (:authors ("taku0" . "mxxouy6x3m_github@tatapa.org")) (:maintainers ("taku0" . "mxxouy6x3m_github@tatapa.org")) (:maintainer "taku0" . "mxxouy6x3m_github@tatapa.org"))])
 (json-process-client . [(0 2 0) ((emacs (25 1))) "Interact with a TCP process using JSON" tar ((:url . "https://github.com/DamienCassou/json-process-client") (:commit . "1d4a1fe2ecc682890dfc75e40054c9697c3046f6") (:revdesc . "v0.2.0-0-g1d4a1fe2ecc6") (:authors ("Nicolas Petton" . "nicolas@petton.fr") ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Nicolas Petton" . "nicolas@petton.fr") ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Nicolas Petton" . "nicolas@petton.fr"))])
 (json-reformat . [(0 0 7) ((emacs (24 3))) "Reformatting tool for JSON" tar ((:url . "https://github.com/gongo/json-reformat") (:commit . "e9999b1f1fc933c02ff44f4136602b6a45ed59c6") (:revdesc . "e9999b1f1fc9") (:keywords "json") (:authors ("Wataru MIYAGUNI" . "gonngo@gmail.com")) (:maintainers ("Wataru MIYAGUNI" . "gonngo@gmail.com")) (:maintainer "Wataru MIYAGUNI" . "gonngo@gmail.com"))])
 (json-rpc . [(0 0 1) ((emacs (24 1)) (cl-lib (0 5))) "JSON-RPC library" tar ((:url . "https://github.com/skeeto/elisp-json-rpc") (:commit . "81a5a520072e20d18aeab2aac4d66c046b031e56") (:revdesc . "0.0.1-0-g81a5a520072e") (:authors ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainers ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainer "Christopher Wellons" . "wellons@nullprogram.com"))])
 (json-rpc-server . [(0 3 1) ((emacs (26))) "Server-side JSON-RPC library" tar ((:url . "https://github.com/jcaw/json-rpc-server.el") (:commit . "349e1f4722474bf1f75dbc8eb9d9c59d790b8083") (:revdesc . "349e1f472247") (:keywords "tools" "comm" "json" "rpc"))])
 (json-snatcher . [(1 0 0) ((emacs (24))) "Grabs the path to JSON values in a JSON file" tar ((:url . "https://github.com/Sterlingg/json-snatcher") (:commit . "c4cecc0a5051bd364373aa499c47a1bb7a5ac51c") (:revdesc . "c4cecc0a5051") (:authors ("Sterling Graham" . "sterlingrgraham@gmail.com")) (:maintainers ("Sterling Graham" . "sterlingrgraham@gmail.com")) (:maintainer "Sterling Graham" . "sterlingrgraham@gmail.com"))])
 (jsonian . [(0 1 0) ((emacs (27 1))) "A major mode for editing JSON files" tar ((:url . "https://github.com/iwahbe/jsonian") (:commit . "43ab410a017f01bff89f83de3b450da46691e6a2") (:revdesc . "43ab410a017f"))])
 (jsonnet-mode . [(0 1 3) ((emacs (24)) (dash (2 17 0))) "Major mode for editing jsonnet files" tar ((:url . "https://github.com/tminor/jsonnet-mode") (:commit . "54a89b0aaba7a68782008c5e1ab00d5ec757316a") (:revdesc . "54a89b0aaba7") (:keywords "languages"))])
 (jtsx . [(0 5 1) ((emacs (29 1))) "Extends JSX/TSX built-in support" tar ((:url . "https://github.com/llemaitre19/jtsx") (:commit . "e81259a7584619ce3266a2d532f674ef45ee4274") (:revdesc . "e81259a75846") (:keywords "languages") (:authors ("Loïc Lemaître" . "loic.lemaitre@gmail.com")) (:maintainers ("Loïc Lemaître" . "loic.lemaitre@gmail.com")) (:maintainer "Loïc Lemaître" . "loic.lemaitre@gmail.com"))])
 (julia-mode . [(0 4) ((emacs (24 3))) "Major mode for editing Julia source code" tar ((:url . "https://github.com/JuliaEditorSupport/julia-emacs") (:commit . "8bfc709716a257521cb386f20b8932e83db930a9") (:revdesc . "8bfc709716a2") (:keywords "languages"))])
 (julia-repl . [(1 3 0) ((emacs (25 1)) (s (1 12))) "A minor mode for a Julia REPL" tar ((:url . "https://github.com/tpapp/julia-repl") (:commit . "7ce38a9caf2a9c105afe66f464a2f30e816d69f3") (:revdesc . "7ce38a9caf2a") (:keywords "languages") (:authors ("Tamas Papp" . "tkpapp@gmail.com")) (:maintainers ("Tamas Papp" . "tkpapp@gmail.com")) (:maintainer "Tamas Papp" . "tkpapp@gmail.com"))])
 (julia-snail . [(1 3 1) ((emacs (26 2)) (dash (2 16 0)) (julia-mode (0 3)) (s (1 12 0)) (spinner (1 7 3)) (popup (0 5 9))) "Julia Snail" tar ((:url . "https://github.com/gcv/julia-snail") (:commit . "cd08e6edcd8bf5e3b44cb4deb7117e37d7e2061a") (:revdesc . "1.3.1-0-gcd08e6edcd8b"))])
 (julia-ts-mode . [(0 2 5) ((emacs (29)) (julia-mode (0 4))) "Major mode for Julia source code using tree-sitter" tar ((:url . "https://github.com/JuliaEditorSupport/julia-ts-mode") (:commit . "1c5b01753bee57de2d480a80c2b267009ac93e9a") (:revdesc . "1c5b01753bee") (:keywords "julia" "languages" "tree-sitter"))])
 (julia-vterm . [(0 25) ((emacs (25 1)) (vterm (0 0 1))) "A mode for Julia REPL using vterm" tar ((:url . "https://github.com/shg/julia-vterm.el") (:commit . "5e94f761be563db1f537ce37508ffa2cc33fc567") (:revdesc . "5e94f761be56") (:keywords "languages" "julia"))])
 (jump . [(2 6) ((findr (0 7)) (inflections (2 4)) (cl-lib (0 5))) "Build functions which contextually jump between files" tar ((:url . "https://github.com/eschulte/jump.el") (:commit . "55caa66a7cc6e0b1a76143fd40eff38416928941") (:revdesc . "55caa66a7cc6") (:keywords "project" "convenience" "navigation"))])
 (jump-to-line . [(0 2 0) nil "Jump to line number at point" tar ((:url . "https://github.com/ongaeshi/jump-to-line") (:commit . "01ef8c3529d85e6c59cc20840acbc4a8e8325bc8") (:revdesc . "01ef8c3529d8") (:keywords "jump" "line" "back" "file" "ruby" "csharp" "python" "perl"))])
 (jupyter . [(1 0) ((emacs (26)) (cl-lib (0 5)) (org (9 1 6)) (zmq (0 10 10)) (simple-httpd (1 5 0)) (websocket (1 9))) "Jupyter" tar ((:url . "https://github.com/emacs-jupyter/jupyter") (:commit . "2059d79b2fecf6d25a6c796b69ab954645ec37d1") (:revdesc . "2059d79b2fec") (:authors ("Nathaniel Nicandro" . "nathanielnicandro@gmail.com")) (:maintainers ("Nathaniel Nicandro" . "nathanielnicandro@gmail.com")) (:maintainer "Nathaniel Nicandro" . "nathanielnicandro@gmail.com"))])
 (just-mode . [(0 1 8) ((emacs (26 1))) "Justfile editing mode" tar ((:url . "https://github.com/leon-barrett/just-mode.el") (:commit . "d7f52eab8fa3828106f80acb1e2176e5877b7191") (:revdesc . "d7f52eab8fa3") (:keywords "files" "languages" "tools") (:authors ("Leon Barrett" . "(leon@barrettnexus.com)")) (:maintainers ("Leon Barrett" . "(leon@barrettnexus.com)")) (:maintainer "Leon Barrett" . "(leon@barrettnexus.com)"))])
 (justl . [(0 14) ((transient (0 1 0)) (emacs (27 1)) (s (1 2 0)) (f (0 20 0)) (inheritenv (0 2))) "Major mode for driving just files" tar ((:url . "https://github.com/psibi/justl.el") (:commit . "1b16ca44b227dc761a2c8631690140f62e024f98") (:revdesc . "v0.14-0-g1b16ca44b227") (:keywords "just" "justfile" "tools" "processes"))])
 (jvm-mode . [(0 2 0) ((dash (2 6 0)) (emacs (24))) "Monitor and manage your JVMs" tar ((:url . "https://github.com/martintrojer/jvm-mode.el") (:commit . "16d84c8c80bb214367bae6ed30b08756521c27d6") (:revdesc . "16d84c8c80bb") (:keywords "convenience") (:authors ("Martin Trojer" . "martin.trojer@gmail.com")) (:maintainers ("Martin Trojer" . "martin.trojer@gmail.com")) (:maintainer "Martin Trojer" . "martin.trojer@gmail.com"))])
 (jwt . [(0 2 0) ((emacs (29 1))) "Interact with JSON Web Tokens" tar ((:url . "https://github.com/joshbax189/jwt-el") (:commit . "d7deb62f8c2df58d5cfebf087a147c75207964e8") (:revdesc . "d7deb62f8c2d") (:keywords "tools" "convenience"))])
 (k8s-mode . [(0 2 0) ((emacs (24 3)) (yaml-mode (0 0 10))) "Major mode for Kubernetes configuration file" tar ((:url . "https://github.com/TxGVNN/emacs-k8s-mode") (:commit . "430e9d698f1411efe3f8f2bb4c8f8857e0321a8d") (:revdesc . "430e9d698f14") (:authors ("Giap Tran" . "txgvnn@gmail.com")) (:maintainers ("Giap Tran" . "txgvnn@gmail.com")) (:maintainer "Giap Tran" . "txgvnn@gmail.com"))])
 (kaesar . [(0 9 5) ((emacs (24 3)) (kaesar-pbkdf2 (0 9 0))) "AES algorithm encrypt/decrypt" tar ((:url . "https://github.com/mhayashi1120/Emacs-kaesar") (:commit . "75655238e0dcdb77a74d685cc4f3368fcd284020") (:revdesc . "75655238e0dc") (:keywords "data") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (kaesar-file . [(0 9 2) ((emacs (24 3)) (kaesar (0 1 1))) "AES encrypt/decrypt file" tar ((:url . "https://github.com/mhayashi1120/Emacs-kaesar") (:commit . "75655238e0dcdb77a74d685cc4f3368fcd284020") (:revdesc . "75655238e0dc") (:keywords "data" "files") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (kaesar-mode . [(0 9 4) ((emacs (24 3)) (kaesar (0 1 4))) "AES encrypt/decrypt buffer" tar ((:url . "https://github.com/mhayashi1120/Emacs-kaesar") (:commit . "75655238e0dcdb77a74d685cc4f3368fcd284020") (:revdesc . "75655238e0dc") (:keywords "data" "convenience") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (kaesar-pbkdf2 . [(0 9 1) ((emacs (25 1))) "PBKDF2 extension for kaesar.el" tar ((:url . "https://github.com/mhayashi1120/Emacs-kaesar") (:commit . "75655238e0dcdb77a74d685cc4f3368fcd284020") (:revdesc . "75655238e0dc") (:keywords "data") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (kagi . [(0 6) ((emacs (29 1)) (markdown-mode (2 6)) (shell-maker (0 46 1))) "Kagi API integration" tar ((:url . "https://codeberg.org/bram85/kagi.el") (:commit . "9e48fc96d513f863acde3689077197306e3d205c") (:revdesc . "0.6-0-g9e48fc96d513") (:keywords "terminals" "wp") (:authors ("Bram Schoenmakers" . "me@bramschoenmakers.nl")) (:maintainers ("Bram Schoenmakers" . "me@bramschoenmakers.nl")) (:maintainer "Bram Schoenmakers" . "me@bramschoenmakers.nl"))])
 (kakapo-mode . [(1 2) ((cl-lib (0 5))) "TABS (hard or soft) for indentation (leading whitespace), and SPACES for alignment" tar ((:url . "https://github.com/listx/kakapo-mode") (:commit . "fe3d579867f7465cd3ad04f29b4b2b3b820edc01") (:revdesc . "v1.2-0-gfe3d579867f7") (:keywords "indentation"))])
 (kaocha-runner . [(0 3 2) ((emacs (26)) (s (1 4 0)) (cider (0 21 0)) (parseedn (0 1 0))) "A package for running Kaocha tests via CIDER" tar ((:url . "https://github.com/magnars/kaocha-runner.el") (:commit . "e5071ce09ec2d8c700bac91c902318035c5489bf") (:revdesc . "e5071ce09ec2") (:authors ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (kaolin-themes . [(1 7 1) ((emacs (25 1)) (autothemer (0 2 2)) (cl-lib (0 6))) "A set of eye pleasing themes" tar ((:url . "https://github.com/ogdenwebb/emacs-kaolin-themes") (:commit . "343ad8cd73c7509af2ea7af5eb856ece97dee7a3") (:revdesc . "343ad8cd73c7") (:keywords "dark" "light" "teal" "blue" "violet" "purple" "brown" "theme" "faces") (:authors ("Ogden Webb" . "ogdenwebb@gmail.com")) (:maintainers ("Ogden Webb" . "ogdenwebb@gmail.com")) (:maintainer "Ogden Webb" . "ogdenwebb@gmail.com"))])
 (karma . [(0 1 0) nil "Karma Test Runner Emacs Integration" tar ((:url . "https://github.com/tonini/karma.el") (:commit . "f4ee856e7f59649e9d9021c46f872f9b4f5b7e6e") (:revdesc . "f4ee856e7f59") (:keywords "javascript" "js" "karma" "testing"))])
 (keepass-mode . [(0 0 5) ((emacs (27))) "Mode for KeePass DB" tar ((:url . "https://github.com/ifosch/keepass-mode") (:commit . "f432bb60f9f3bd027025140d723906dcabeefaef") (:revdesc . "f432bb60f9f3") (:keywords "data" "files" "tools") (:authors ("Ignasi Fosch" . "natx@y10k.ws")) (:maintainers ("Ignasi Fosch" . "natx@y10k.ws")) (:maintainer "Ignasi Fosch" . "natx@y10k.ws"))])
 (kele . [(0 6 0) ((emacs (29 1)) (async (1 9 7)) (dash (2 19 1)) (f (0 20 0)) (ht (2 3)) (memoize (0)) (plz (0 8 0)) (s (1 13 0)) (yaml (0 5 1))) "Spritzy Kubernetes cluster management" tar ((:url . "https://github.com/jinnovation/kele.el") (:commit . "beec4a76c090101d8a98e631c292207be3c3a6a1") (:revdesc . "beec4a76c090") (:keywords "kubernetes" "tools") (:authors ("Jonathan Jin" . "me@jonathanj.in")) (:maintainers ("Jonathan Jin" . "me@jonathanj.in")) (:maintainer "Jonathan Jin" . "me@jonathanj.in"))])
 (key-assist . [(1 0) ((emacs (24 3))) "Minibuffer keybinding cheatsheet and launcher" tar ((:url . "https://github.com/Boruch-Baum/emacs-key-assist") (:commit . "dda02615b45a86c806d61e0484e08aa51343f8d8") (:revdesc . "dda02615b45a") (:keywords "abbrev" "convenience" "docs" "help") (:authors ("Boruch Baum" . "boruch_baum@gmx.com")) (:maintainers ("Boruch Baum" . "boruch_baum@gmx.com")) (:maintainer "Boruch Baum" . "boruch_baum@gmx.com"))])
 (key-chord . [(0 7 1) ((emacs (24))) "Map pairs of simultaneously pressed keys to commands" tar ((:url . "https://github.com/emacsorphanage/key-chord") (:commit . "fc75b1451759121601110da8ddfadcf5156318af") (:revdesc . "0.7.1-0-gfc75b1451759") (:keywords "keyboard" "chord" "input") (:authors ("David Andersson" . "l.david.anderssonsverige.nu")) (:maintainers ("David Andersson" . "l.david.anderssonsverige.nu")) (:maintainer "David Andersson" . "l.david.anderssonsverige.nu"))])
 (key-combo . [(1 6) nil "Map key sequence to commands" tar ((:url . "https://github.com/uk-ar/key-combo") (:commit . "0bc0cf6466a4257047a21a6d01913e92e6862165") (:revdesc . "0bc0cf6466a4") (:keywords "keyboard" "input") (:authors ("Yuuki Arisawa" . "yuuki.ari@gmail.com")) (:maintainers ("Vitalie Spinu" . "spinuvit@gmail.com")) (:maintainer "Vitalie Spinu" . "spinuvit@gmail.com"))])
 (key-seq . [(1 0 1) ((key-chord (0 6))) "Map pairs of sequentially pressed keys to commands" tar ((:url . "https://github.com/vlevit/key-seq.el") (:commit . "e29b083a6427d061638749194fc249ef69ad2cc0") (:revdesc . "e29b083a6427") (:keywords "convenience" "keyboard" "keybindings") (:authors ("Vyacheslav Levit" . "dev@vlevit.org")) (:maintainers ("Vyacheslav Levit" . "dev@vlevit.org")) (:maintainer "Vyacheslav Levit" . "dev@vlevit.org"))])
 (keycast . [(1 4 1) ((emacs (26 1)) (compat (30 0 0 0))) "Show current command and its binding" tar ((:url . "https://github.com/tarsius/keycast") (:commit . "c44618d2867fc2410e5061fef2a805e974198cf2") (:revdesc . "v1.4.1-0-gc44618d2867f") (:keywords "multimedia") (:authors ("Jonas Bernoulli" . "emacs.keycast@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.keycast@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.keycast@jonas.bernoulli.dev"))])
 (keychain-environment . [(2 4 1) nil "Load keychain environment variables" tar ((:url . "https://github.com/tarsius/keychain-environment") (:commit . "d3643196de6dc79ea77f9f4805028350fd76100b") (:revdesc . "2.4.1-0-gd3643196de6d") (:keywords "gnupg" "pgp" "ssh") (:authors ("Paul Tipper" . "bluefooatgooglemaildotcom")) (:maintainers ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li"))])
 (keydef . [(1 15) nil "A simpler way to define keys, with kbd syntax" tar ((:url . "https://github.com/emacsorphanage/keydef") (:commit . "dff2be9f58d12d8c6a490ad0c1b2b10b55528dc0") (:revdesc . "1.15-0-gdff2be9f58d1") (:keywords "convenience" "lisp" "customization" "keyboard" "keys") (:authors ("Michael John Downes" . "mjd@ams.org")) (:maintainers ("Michael John Downes" . "mjd@ams.org")) (:maintainer "Michael John Downes" . "mjd@ams.org"))])
 (keyfreq . [(1 8) nil "Track command frequencies" tar ((:url . "https://github.com/dacap/keyfreq") (:commit . "f3a96693e2e4c6893198a0223e3f3c648ae09cec") (:revdesc . "f3a96693e2e4"))])
 (keymap-utils . [(4 0 2) ((emacs (26 1)) (compat (30 0 0 0))) "Keymap utilities" tar ((:url . "https://github.com/tarsius/keymap-utils") (:commit . "a1ea60ce0adfbb4b47cdd7f29943e5ee362b71ce") (:revdesc . "v4.0.2-0-ga1ea60ce0adf") (:keywords "convenience" "extensions") (:authors ("Jonas Bernoulli" . "emacs.keymap-utils@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.keymap-utils@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.keymap-utils@jonas.bernoulli.dev"))])
 (keypress-multi-event . [(1 0) ((emacs (24 3))) "Perform different actions for the same keypress" tar ((:url . "https://github.com/Boruch-Baum/emacs-keypress-multi-event") (:commit . "9de65a27e10d8ae47aa6d28c02c3eb82ee8c0b2e") (:revdesc . "9de65a27e10d") (:keywords "abbrev" "convenience" "wp" "keyboard") (:authors ("Boruch Baum" . "boruch_baum@gmx.com")) (:maintainers ("Boruch Baum" . "boruch_baum@gmx.com")) (:maintainer "Boruch Baum" . "boruch_baum@gmx.com"))])
 (keyset . [(0 1 2) ((dash (2 8 0)) (cl-lib (0 5))) "A small library for structuring key bindings" tar ((:url . "https://github.com/HKey/keyset") (:commit . "25658ef79d26971ce41d9df207dff58d38daa091") (:revdesc . "25658ef79d26") (:authors ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainers ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainer "Hiroki YAMAKAWA" . "s06139@gmail.com"))])
 (keytar . [(0 1 2) ((emacs (24 4))) "Emacs Lisp interface for node-keytar" tar ((:url . "https://github.com/emacs-grammarly/keytar") (:commit . "17972320ef140bd56e551842d89f5d8c2d979f83") (:revdesc . "17972320ef14") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (khalel . [(0 1 12) ((emacs (27 1))) "Import, edit and create calendar events through khal" tar ((:url . "https://gitlab.com/hperrey/khalel") (:commit . "14ef50352394cd1d62b80bc17ab14f4f801f47cd") (:revdesc . "v0.1.12-0-g14ef50352394") (:keywords "event" "calendar" "ics" "khal") (:authors ("Hanno Perrey" . "http://gitlab.com/hperrey")) (:maintainers ("Hanno Perrey" . "hanno@hoowl.se")) (:maintainer "Hanno Perrey" . "hanno@hoowl.se"))])
 (khardel . [(2 0 0) ((emacs (27 1)) (yaml-mode (0 0 13))) "Integrate with khard" tar ((:url . "https://github.com/DamienCassou/khardel") (:commit . "205e374b36252183a146a7a8f857bcf95a77edc3") (:revdesc . "v2.0.0-0-g205e374b3625") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (khoj . [(1 31 0) ((emacs (27 1)) (transient (0 3 0)) (dash (2 19 1))) "Your Second Brain" tar ((:url . "https://github.com/khoj-ai/khoj") (:commit . "e43341fdcc566c2dfb6086d8baf78f250f48c022") (:revdesc . "e43341fdcc56") (:keywords "search" "chat" "ai" "org-mode" "outlines" "markdown" "pdf" "image") (:authors ("Debanjum Singh Solanky" . "debanjum@khoj.dev") ("Saba Imran" . "saba@khoj.dev")) (:maintainers ("Debanjum Singh Solanky" . "debanjum@khoj.dev") ("Saba Imran" . "saba@khoj.dev")) (:maintainer "Debanjum Singh Solanky" . "debanjum@khoj.dev"))])
 (kibit-helper . [(0 1 1) ((s (0 8)) (emacs (24))) "Conveniently use the Kibit Leiningen plugin from Emacs" tar ((:url . "https://github.com/brunchboy/kibit-helper") (:commit . "ec5f154db3bb0c838e86f527353f08644cede926") (:revdesc . "ec5f154db3bb") (:keywords "languages" "clojure" "kibit") (:authors ("James Elliott" . "james@brunchboy.com")) (:maintainers ("James Elliott" . "james@brunchboy.com")) (:maintainer "James Elliott" . "james@brunchboy.com"))])
 (kill-or-bury-alive . [(0 1 3) ((emacs (24 4)) (cl-lib (0 5))) "Precise control over buffer killing in Emacs" tar ((:url . "https://github.com/mrkkrp/kill-or-bury-alive") (:commit . "51daf55565034b8cb6aa3ca2aa0a827e31751041") (:revdesc . "51daf5556503") (:keywords "buffer" "killing" "convenience") (:authors ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainers ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainer "Mark Karpov" . "markkarpov92@gmail.com"))])
 (kill-ring-search . [(1 1) nil "Incremental search for the kill ring" tar ((:url . "https://github.com/nschum/kill-ring-search.el") (:commit . "3a5bc1767f742c91aa788df79ecec836a0946edb") (:revdesc . "1.1-0-g3a5bc1767f74") (:keywords "convenience" "matching") (:authors ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainers ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainer "Nikolaj Schumacher" . "bugs*nschumde"))])
 (killer . [(1 0 0) nil "Kill and delete text" tar ((:url . "https://github.com/tarsius/killer") (:commit . "ace0547944933440384ceeb5876b1f68c082d540") (:revdesc . "v1.0.0-0-gace054794493") (:keywords "convenience") (:authors ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainers ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li"))])
 (kivy-mode . [(2 3 0) nil "Emacs major mode for editing Kivy files" tar ((:url . "https://github.com/kivy/kivy") (:commit . "9ef218027178115a66b417ae34b21f488bdd3617") (:revdesc . "2.3.0-0-g9ef218027178") (:authors ("Dean Serenevy" . "dean@serenevy.net")) (:maintainers ("Dean Serenevy" . "dean@serenevy.net")) (:maintainer "Dean Serenevy" . "dean@serenevy.net"))])
 (klondike . [(1 2 0) ((emacs (28 1))) "Klondike" tar ((:url . "https://codeberg.org/WammKD/Emacs-Klondike") (:commit . "9f454b7145a0831c1508b87012ef085743c5e015") (:revdesc . "9f454b7145a0") (:keywords "games" "cards" "solitaire" "klondike") (:authors ("Wamm K. D." . "jaft.r@outlook.com")) (:maintainers ("Wamm K. D." . "jaft.r@outlook.com")) (:maintainer "Wamm K. D." . "jaft.r@outlook.com"))])
 (know-your-http-well . [(0 6 0) nil "Look up the meaning of HTTP headers, methods, relations, status codes" tar ((:url . "https://github.com/for-GET/know-your-http-well") (:commit . "2ff1548a6d59f2b59cfbdd2697fcf202625cc248") (:revdesc . "2ff1548a6d59"))])
 (ksp-cfg-mode . [(0 6) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing KSP CFG files" tar ((:url . "https://github.com/lashtear/ksp-cfg-mode") (:commit . "faec8bd8456c67276d065eb68c88a30efcef59ef") (:revdesc . "faec8bd8456c") (:keywords "data") (:authors ("Emily Backes" . "lucca@accela.net")) (:maintainers ("Emily Backes" . "lucca@accela.net")) (:maintainer "Emily Backes" . "lucca@accela.net"))])
 (ksp-mode . [(0 1 1) ((emacs (27 1))) "Major mode for editing ksp files" tar ((:url . "https://github.com/youngker/ksp-mode.el") (:commit . "89b91b8ed6753867e30aa494e5d80325dfe25569") (:revdesc . "89b91b8ed675") (:keywords "ksp" "languages") (:maintainers ("YoungJoo Lee" . "youngker@gmail.com")) (:maintainer "YoungJoo Lee" . "youngker@gmail.com"))])
 (kubectx-mode . [(1 2 0) ((emacs (24))) "Change kubectl context/namespace and show in mode line" tar ((:url . "https://github.com/terjesannum/emacs-kubectx-mode") (:commit . "f08687ae5403eb18bbeffc6dafdfde469bdb9a36") (:revdesc . "f08687ae5403") (:keywords "tools" "kubernetes") (:authors ("Terje Sannum" . "terje@offpiste.org")) (:maintainers ("Terje Sannum" . "terje@offpiste.org")) (:maintainer "Terje Sannum" . "terje@offpiste.org"))])
 (kubel . [(3 0) ((transient (0 1 0)) (emacs (25 3)) (dash (2 12 0)) (s (1 2 0)) (yaml-mode (0 0 14))) "Control Kubernetes with limited permissions" tar ((:url . "https://github.com/abrochard/kubel") (:commit . "1b405d8756ffc7c8f1e11450d6f07ffde38fe351") (:revdesc . "1b405d8756ff") (:keywords "kubernetes" "k8s" "tools" "processes"))])
 (kubel-evil . [(3 0) ((kubel (1 0)) (evil (1 0)) (emacs (25 3))) "Extension for kubel to provide evil keybindings" tar ((:url . "https://github.com/abrochard/kubel") (:commit . "1b405d8756ffc7c8f1e11450d6f07ffde38fe351") (:revdesc . "1b405d8756ff") (:keywords "kubernetes" "k8s" "tools" "processes" "evil" "keybindings"))])
 (kubernetes . [(0 18 0) ((emacs (25 1)) (dash (2 12 0)) (magit-section (3 1 1)) (magit-popup (2 13 0)) (with-editor (3 0 4)) (request (0 3 2)) (s (1 12 0)) (transient (0 3 0))) "Magit-like porcelain for Kubernetes" tar ((:url . "https://github.com/kubernetes-el/kubernetes-el") (:commit . "b155d64aa72bd1175770db3518a67a347caa36dd") (:revdesc . "b155d64aa72b") (:keywords "kubernetes") (:authors ("Chris Barrett" . "chris+emacs@walrus.cool")) (:maintainers ("Chris Barrett" . "chris+emacs@walrus.cool") ("Noorul Islam K M" . "noorul@noorul.com") ("Jonathan Jin" . "me@jonathanj.in")) (:maintainer "Chris Barrett" . "chris+emacs@walrus.cool"))])
 (kubernetes-evil . [(0 18 0) ((kubernetes (0 18 0)) (evil (1 2 12))) "Kubernetes keybindings for evil-mode" tar ((:url . "https://github.com/kubernetes-el/kubernetes-el") (:commit . "b155d64aa72bd1175770db3518a67a347caa36dd") (:revdesc . "b155d64aa72b") (:authors ("Chris Barrett" . "chris+emacs@walrus.cool")) (:maintainers ("Chris Barrett" . "chris+emacs@walrus.cool")) (:maintainer "Chris Barrett" . "chris+emacs@walrus.cool"))])
 (kurecolor . [(1 7 1) ((emacs (24 4)) (s (1 12))) "Color editing goodies" tar ((:url . "https://github.com/emacsfodder/kurecolor") (:commit . "ac67ceba85839ab1ced96fad605bf023b697263f") (:revdesc . "ac67ceba8583") (:authors ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainers ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainer "Jason Milkins" . "jasonm23@gmail.com"))])
 (kuronami-theme . [(2 0) ((emacs (24 1))) "A deep blue theme with cool autumnal colors" tar ((:url . "https://github.com/inj0h/kuronami") (:commit . "4d0a9e5f789e5768a0c2ea7dec31f98ea95c7372") (:revdesc . "4d0a9e5f789e") (:authors ("inj0h" . "")) (:maintainers ("inj0h" . "")) (:maintainer "inj0h" . ""))])
 (laas . [(1 1) ((emacs (26 3)) (auctex (11 88)) (aas (1 1)) (yasnippet (0 14))) "A bundle of as-you-type LaTeX snippets" tar ((:url . "https://github.com/tecosaur/LaTeX-auto-activating-snippets") (:commit . "b372f9a44bea03cce09b20cd2409e3ae3fa2d651") (:revdesc . "b372f9a44bea") (:keywords "tools" "tex") (:maintainers ("Yoav Marco" . "yoavm448@gmail.com")) (:maintainer "Yoav Marco" . "yoavm448@gmail.com"))])
 (lab . [(2 0 0) ((emacs (27 1)) (memoize (1 1)) (request (0 3 2)) (s (1 10 0)) (f (0 20 0)) (compat (29 1 4 4)) (promise (1 1)) (async-await (1 1))) "An interface for GitLab" tar ((:url . "https://github.com/isamert/lab.el") (:commit . "bd88c08c02203a66048412672b894c0d7dab3da3") (:revdesc . "v2.0.0-0-gbd88c08c0220") (:authors ("Isa Mert Gurbuz" . "isamertgurbuz@gmail.com")) (:maintainers ("Isa Mert Gurbuz" . "isamertgurbuz@gmail.com")) (:maintainer "Isa Mert Gurbuz" . "isamertgurbuz@gmail.com"))])
 (labburn-theme . [(1 0 0) nil "A lab color space zenburn theme" tar ((:url . "https://github.com/ksjogo/labburn-theme") (:commit . "bfa1d9f1c7e107cb45754fe57e4e72a9be70e9d1") (:revdesc . "bfa1d9f1c7e1") (:keywords "theme" "zenburn"))])
 (lacquer . [(1 2 2) ((emacs (25 2))) "Switch theme/font by selecting from a cache" tar ((:url . "https://github.com/zakudriver/lacquer") (:commit . "ebdb531f5b7cb691751e468942e28921a9dcc98f") (:revdesc . "ebdb531f5b7c") (:keywords "tools") (:authors ("zakudriver" . "zy.hua1122@gmail.com")) (:maintainers ("zakudriver" . "zy.hua1122@gmail.com")) (:maintainer "zakudriver" . "zy.hua1122@gmail.com"))])
 (lambdapi-mode . [(2 5 1) ((eglot (1 6)) (math-symbol-lists (1 2 1)) (highlight (20190710 1527))) "A major mode to edit Lambdapi files" tar ((:url . "https://github.com/Deducteam/lambdapi") (:commit . "230d5726b91d11d4b356235f37445ead0a99f3f5") (:revdesc . "230d5726b91d") (:keywords "languages") (:maintainers ("Deducteam" . "dedukti-dev@inria.fr")) (:maintainer "Deducteam" . "dedukti-dev@inria.fr"))])
 (langtool . [(2 3 7) ((emacs (24 3))) "Grammar check utility using LanguageTool" tar ((:url . "https://github.com/mhayashi1120/Emacs-langtool") (:commit . "fc6c046af1c5e4e55331414387865f65afb1bd3c") (:revdesc . "fc6c046af1c5") (:keywords "docs") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (langtool-popup . [(1 1 0) ((emacs (25 1)) (popup (0 5 9)) (langtool (2 3 2))) "Popup message extension for langtool.el" tar ((:url . "https://github.com/mhayashi1120/Emacs-langtool") (:commit . "e0666f000c11571f96582f0a1dd75d6e29e74703") (:revdesc . "e0666f000c11") (:keywords "docs") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (language-id . [(0 20) ((emacs (24 3))) "Library to work with programming language identifiers" tar ((:url . "https://github.com/lassik/emacs-language-id") (:commit . "1ad782d7e448c1e8d8652861f01f4a58315826c3") (:revdesc . "1ad782d7e448") (:keywords "languages" "util") (:authors ("Lassi Kortela" . "lassi@lassi.io")) (:maintainers ("Lassi Kortela" . "lassi@lassi.io")) (:maintainer "Lassi Kortela" . "lassi@lassi.io"))])
 (languagetool . [(1 3 0) ((emacs (27 1))) "LanguageTool integration for grammar and spell check" tar ((:url . "https://github.com/PillFall/languagetool.el") (:commit . "b136d531129eb488dc4134784e34c4afedcb0c2f") (:revdesc . "v1.3.0-0-gb136d531129e") (:keywords "grammar" "text" "docs" "tools" "convenience" "checker") (:authors ("Joar Buitrago" . "jebuitragoc@unal.edu.co")) (:maintainers ("Joar Buitrago" . "jebuitragoc@unal.edu.co")) (:maintainer "Joar Buitrago" . "jebuitragoc@unal.edu.co"))])
 (lastfm . [(1 2) ((emacs (26 1)) (request (0 3 0)) (anaphora (1 0 4)) (memoize (1 1)) (elquery (0 1 0)) (s (1 12 0))) "Last.fm API for Emacs Lisp" tar ((:url . "https://github.com/mihaiolteanu/lastfm.el") (:commit . "96568f07324ba32804be9352016956694923f5f3") (:revdesc . "96568f07324b") (:keywords "multimedia" "api") (:authors ("Mihai Olteanu" . "mihai_olteanu@fastmail.fm")) (:maintainers ("Mihai Olteanu" . "mihai_olteanu@fastmail.fm")) (:maintainer "Mihai Olteanu" . "mihai_olteanu@fastmail.fm"))])
 (latex-extra . [(1 14) ((auctex (11 86 1)) (cl-lib (0 5))) "Adds several useful functionalities to LaTeX-mode" tar ((:url . "https://github.com/Malabarba/latex-extra") (:commit . "82d99b8b0c2db20e5270749582e03bcc2443ffb5") (:revdesc . "82d99b8b0c2d") (:keywords "tex") (:authors ("Artur Malabarba" . "artur@endlessparentheses.com")) (:maintainers ("Artur Malabarba" . "artur@endlessparentheses.com")) (:maintainer "Artur Malabarba" . "artur@endlessparentheses.com"))])
 (latex-labeler . [(3 0 0) ((emacs (28 1))) "Simplify equation labeling in LaTeX" tar ((:url . "https://github.com/X9hRRDys/latex-labeler") (:commit . "6ca15d7dea4f8b2fc0878f6be19438e84061e894") (:revdesc . "v3.0.0-0-g6ca15d7dea4f") (:keywords "tools"))])
 (latex-math-preview . [(0 7 3) nil "Preview LaTeX mathematical expressions" tar ((:url . "https://gitlab.com/latex-math-preview/latex-math-preview") (:commit . "90fd86da2d9514882146a5db40cb916fc533cf55") (:revdesc . "90fd86da2d95") (:keywords "latex" "tex") (:authors ("Takayuki YAMAGUCHI" . "d@ytak.info")) (:maintainers ("Takayuki YAMAGUCHI" . "d@ytak.info")) (:maintainer "Takayuki YAMAGUCHI" . "d@ytak.info"))])
 (latex-table-wizard . [(1 5 0) ((emacs (27 1)) (auctex (12 1)) (transient (0 3 7))) "Magic editing of LaTeX tables" tar ((:url . "https://github.com/enricoflor/latex-table-wizard") (:commit . "b41aac096b96aeb446346c3cbd6537cc0eb1f70d") (:revdesc . "b41aac096b96") (:keywords "convenience") (:authors ("Enrico Flor" . "enrico@eflor.net")) (:maintainers ("Enrico Flor" . "enrico@eflor.net")) (:maintainer "Enrico Flor" . "enrico@eflor.net"))])
 (latex-unicode-math-mode . [(0 3 2) nil "Input method for Unicode math symbols" tar ((:url . "https://github.com/Christoph-D/latex-unicode-math-mode") (:commit . "af6a28c3c7e8652f1e9c124beeccaa81133b1d88") (:revdesc . "af6a28c3c7e8") (:authors ("Christoph Dittmann" . "github@christoph-d.de")) (:maintainers ("Christoph Dittmann" . "github@christoph-d.de")) (:maintainer "Christoph Dittmann" . "github@christoph-d.de"))])
 (launch . [(1 1 0) nil "Launch files with OS-standard associated applications" tar ((:url . "https://github.com/sfllaw/emacs-launch") (:commit . "e7c3b573fc05fe4d3d322389079909311542e799") (:revdesc . "v1.1.0-0-ge7c3b573fc05") (:keywords "convenience" "processes") (:authors ("Simon Law" . "sfllaw@sfllaw.ca")) (:maintainers ("Simon Law" . "sfllaw@sfllaw.ca")) (:maintainer "Simon Law" . "sfllaw@sfllaw.ca"))])
 (lavenderless-theme . [(0 2) ((colorless-themes (0 1))) "A mostly colorless version of lavender-theme" tar ((:url . "https://git.sr.ht/~lthms/colorless-themes.el") (:commit . "8e539097185704444a5dd5545924de92c11ba767") (:revdesc . "0.2-0-g8e5390971857") (:keywords "faces" "theme") (:authors ("Thomas Letan" . "contact@thomasletan.fr")) (:maintainers ("Thomas Letan" . "contact@thomasletan.fr")) (:maintainer "Thomas Letan" . "contact@thomasletan.fr"))])
 (lazy-ruff . [(0 3 1) ((emacs (24 3)) (org (9 1))) "Integration with the Ruff Python linter/formatter" tar ((:url . "https://github.com/christophermadsen/emacs-lazy-ruff") (:commit . "4eeea363a133e0e7ed7c02a5e2f1f7b63a78c3f4") (:revdesc . "4eeea363a133") (:keywords "languages" "tools"))])
 (lcb-mode . [(0 1 1) ((emacs (24))) "LiveCode Builder major mode" tar ((:url . "https://github.com/peter-b/lcb-mode") (:commit . "be0768e9aa6f9b8e76f2230f4f7f4d152a766b9a") (:revdesc . "v0.1.1-0-gbe0768e9aa6f") (:keywords "languages") (:authors ("Peter TB Brett" . "peter@peter-b.co.uk")) (:maintainers ("Peter TB Brett" . "peter@peter-b.co.uk")) (:maintainer "Peter TB Brett" . "peter@peter-b.co.uk"))])
 (lcr . [(1 5) ((dash (2 12 0)) (emacs (25 1))) "Lightweight coroutines" tar ((:url . "https://github.com/jyp/lcr") (:commit . "6c345112ffb59f3e7babca6c83942f686b5f554b") (:revdesc . "6c345112ffb5") (:keywords "tools") (:authors ("Jean-Philippe Bernardy" . "jeanphilippe.bernardy@gmail.com")) (:maintainers ("Jean-Philippe Bernardy" . "jeanphilippe.bernardy@gmail.com")) (:maintainer "Jean-Philippe Bernardy" . "jeanphilippe.bernardy@gmail.com"))])
 (leaf . [(4 1 0) ((emacs (24 4))) "Simplify your init.el configuration, extended use-package" tar ((:url . "https://github.com/conao3/leaf.el") (:commit . "0841ab466a1542868b5448bb375ac9f0c33e2b3f") (:revdesc . "0841ab466a15") (:keywords "lisp" "settings") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (leaf-keywords . [(1 1 0) ((emacs (24 4))) "Additional keywords for leaf.el" tar ((:url . "https://github.com/conao3/leaf-keywords.el") (:commit . "9352716f153582cdf801a13e17dc04cfcd2bb951") (:revdesc . "9352716f1535") (:keywords "lisp" "settings") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (leaf-manager . [(1 0 0) ((emacs (26 1)) (leaf (4 1)) (leaf-convert (1 0)) (ppp (2 1))) "Configuration manager for leaf based init.el" tar ((:url . "https://github.com/conao3/leaf-manager.el") (:commit . "f2ae35e02ebe218daa3076a0e9d83b4feadfbb0a") (:revdesc . "f2ae35e02ebe") (:keywords "convenience" "leaf") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (leaf-tree . [(1 0 0) ((emacs (25 1)) (imenu-list (0 8))) "Interactive side-bar feature for init.el using leaf" tar ((:url . "https://github.com/conao3/leaf-tree.el") (:commit . "22f6c116cf1465c28d4a35d8a4587a8b614be175") (:revdesc . "22f6c116cf14") (:keywords "convenience" "leaf") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (leanote . [(0 4 0) ((emacs (24 4)) (cl-lib (0 5)) (request (0 2)) (let-alist (1 0 3)) (pcache (0 4 0)) (s (1 10 0)) (async (1 9))) "A minor mode writing markdown leanote" tar ((:url . "https://github.com/aborn/leanote-emacs") (:commit . "1bd49fdf13ef707bae7edaa724a1592aa7fb002f") (:revdesc . "1bd49fdf13ef") (:keywords "leanote" "note" "markdown") (:authors ("Aborn Jiang" . "aborn.jiang@gmail.com")) (:maintainers ("Aborn Jiang" . "aborn.jiang@gmail.com")) (:maintainer "Aborn Jiang" . "aborn.jiang@gmail.com"))])
 (ledger-import . [(1 1 0) ((emacs (25 1)) (ledger-mode (3 1 1))) "Fetch OFX files from bank and push them to Ledger" tar ((:url . "https://github.com/DamienCassou/ledger-import") (:commit . "2c199fcc8671c2ec82e62cea7716289426b7407c") (:revdesc . "v1.1.0-0-g2c199fcc8671") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (ledger-mode . [(4 0 0) ((emacs (24 3))) "Helper code for use with the \"ledger\" command-line tool" tar ((:url . "https://github.com/ledger/ledger-mode") (:commit . "964630f80e0e80dad83134a3660f56948390173a") (:revdesc . "964630f80e0e"))])
 (leetcode . [(0 1 27) ((emacs (26 1)) (dash (2 16 0)) (graphql (0 1 1)) (spinner (1 7 3)) (aio (1 0)) (log4e (0 3 3))) "An leetcode client" tar ((:url . "https://github.com/kaiwk/leetcode.el") (:commit . "b95221179bd51b43bb2c5e810e1a2de88ef54d82") (:revdesc . "b95221179bd5") (:keywords "extensions" "tools") (:authors ("Wang Kai" . "kaiwkx@gmail.com")) (:maintainers ("Wang Kai" . "kaiwkx@gmail.com")) (:maintainer "Wang Kai" . "kaiwkx@gmail.com"))])
 (lem . [(0 22) ((emacs (29 1)) (fedi (0 2)) (markdown-mode (2 5))) "A lemmy client" tar ((:url . "https://codeberg.org/martianh/lem.el") (:commit . "0e7372d4ce133aff7d0a2b79d1f66e5e1e9efc07") (:revdesc . "0e7372d4ce13") (:keywords "multimedia" "comm" "web" "fediverse") (:authors ("martian hiatus" . "martianhiatus[at]riseup[dot]net")) (:maintainers ("martian hiatus" . "martianhiatus[at]riseup[dot]net")) (:maintainer "martian hiatus" . "martianhiatus[at]riseup[dot]net"))])
 (lentic . [(0 11) ((emacs (24 4)) (m-buffer (0 13)) (dash (2 5 0)) (f (0 17 2)) (s (1 9 0))) "One buffer as a view of another" tar ((:url . "https://github.com/phillord/lentic") (:commit . "8655ecd51e189bbdd6a4d8405dc3ea2e689c709a") (:revdesc . "8655ecd51e18") (:authors ("Phillip Lord" . "phillip.lord@newcastle.ac.uk")) (:maintainers ("Phillip Lord" . "phillip.lord@newcastle.ac.uk")) (:maintainer "Phillip Lord" . "phillip.lord@newcastle.ac.uk"))])
 (less-css-mode . [(0 21) nil "Major mode for editing LESS CSS files (lesscss.org)" tar ((:url . "https://github.com/purcell/less-css-mode") (:commit . "59bf174c4e9f053ec2a7ef8c8a8198490390f6fb") (:revdesc . "59bf174c4e9f") (:keywords "less" "css" "mode") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (letcheck . [(0 4) nil "Check the erroneous assignments in let forms" tar ((:url . "https://github.com/Fuco1/letcheck") (:commit . "e85b185993a2eaeec6490709f4c131fde2edd672") (:revdesc . "e85b185993a2") (:keywords "convenience") (:authors ("Matus Goljer" . "matus.goljer@gmail.com")) (:maintainers ("Matus Goljer" . "matus.goljer@gmail.com")) (:maintainer "Matus Goljer" . "matus.goljer@gmail.com"))])
 (leuven-theme . [(1 2 1) nil "Elegant Emacs color theme for a white background" tar ((:url . "https://github.com/fniessen/emacs-leuven-theme") (:commit . "4f355a9832095c49ec109cfc5b8f82cd8c469572") (:revdesc . "v1.2.1-0-g4f355a983209") (:keywords "color" "theme") (:authors ("Fabrice Niessen" . "")) (:maintainers ("Fabrice Niessen" . "")) (:maintainer "Fabrice Niessen" . ""))])
 (lfe-mode . [(2 1 5) nil "Lisp Flavoured Erlang mode" tar ((:url . "https://github.com/rvirding/lfe") (:commit . "6616ce0127b564eadf05c2e8ef654668528fc675") (:revdesc . "6616ce0127b5"))])
 (libbcel . [(0 4 0) ((emacs (26 1)) (request (0 3 1))) "Library to connect to basecamp 3 API" tar ((:url . "https://github.com/DamienCassou/libbcel") (:commit . "d02a38898016bba314802b1f6a07317e52ea6c63") (:revdesc . "v0.4.0-0-gd02a38898016") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (libelcouch . [(0 11 0) ((emacs (26 1)) (request (0 3 0))) "Communication with CouchDB" tar ((:url . "https://github.com/DamienCassou/libelcouch") (:commit . "5ae35266c9a2eb33f0c708bc8c0687339cee9133") (:revdesc . "5ae35266c9a2") (:keywords "tools") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (liberime . [(0 0 6) ((emacs (24 1))) "Rime elisp binding" tar ((:url . "https://github.com/merrickluo/liberime") (:commit . "f13a98ddd7be658e742b0f42988b02db9d779e85") (:revdesc . "f13a98ddd7be") (:keywords "input method" "rime"))])
 (liblouis . [(0 2) ((emacs (26 1))) "Mode for editing liblouis braille translation tables" tar ((:url . "https://github.com/liblouis/liblouis-mode") (:commit . "36ec3f98c0a3a84669444a9b3726824f1aaa9682") (:revdesc . "v0.2-0-g36ec3f98c0a3") (:keywords "languages") (:authors ("Christian Egli" . "christian.egli@sbs.ch")) (:maintainers ("Christian Egli" . "christian.egli@sbs.ch")) (:maintainer "Christian Egli" . "christian.egli@sbs.ch"))])
 (libmpdel . [(2 0 0) ((emacs (25 1))) "Communication with an MPD server" tar ((:url . "https://github.com/mpdel/libmpdel") (:commit . "e7d35ba9254ead1516133f182a01f6161ae26388") (:revdesc . "v2.0.0-0-ge7d35ba9254e") (:keywords "multimedia") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (lice . [(0 3) nil "License And Header Template" tar ((:url . "https://github.com/buzztaiki/lice-el") (:commit . "0b69ba54057146f1473e85c0760029e584e3eb13") (:revdesc . "0b69ba540571") (:keywords "template" "license" "tools") (:authors ("Taiki Sugawara" . "buzz.taiki@gmail.com")) (:maintainers ("Taiki Sugawara" . "buzz.taiki@gmail.com")) (:maintainer "Taiki Sugawara" . "buzz.taiki@gmail.com"))])
 (license-templates . [(0 1 3) ((emacs (24 3)) (request (0 3 0))) "Create LICENSE using GitHub API" tar ((:url . "https://github.com/jcs-elpa/license-templates") (:commit . "ef80eff8b7be117f9c48bdc6d9a62e56b0a93554") (:revdesc . "ef80eff8b7be") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (line-reminder . [(0 5 2) ((emacs (25 1)) (indicators (0 0 4)) (fringe-helper (1 0 1)) (ov (1 0 6)) (ht (2 0))) "Line annotation for changed and saved lines" tar ((:url . "https://github.com/emacs-vs/line-reminder") (:commit . "8b63b6ad6733363b24a8f5472f71eab301044b43") (:revdesc . "8b63b6ad6733") (:keywords "convenience" "annotation") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (line-up-words . [(1 0 0) nil "Align words in an intelligent way" tar ((:url . "https://github.com/janestreet/line-up-words") (:commit . "54d2c51c1c3da7e06be47b829bf465bf467ab53f") (:revdesc . "1.0.0-0-g54d2c51c1c3d"))])
 (lingr . [(0 2) nil "Lingr Client for GNU Emacs" tar ((:url . "https://github.com/lugecy/lingr-el") (:commit . "c9c20dd9b4967aa2f8873d6890d6797e6a498d23") (:revdesc . "v0.2-0-gc9c20dd9b496") (:keywords "chat" "client" "internet") (:authors ("lugecy" . "lugecy@gmail.com")) (:maintainers ("lugecy" . "lugecy@gmail.com")) (:maintainer "lugecy" . "lugecy@gmail.com"))])
 (linguistic . [(0 2) nil "A package for basic linguistic analysis" tar ((:url . "https://github.com/andcarnivorous/linguistic") (:commit . "18e28a7e54efb140c17e16836bc5dac766c9522e") (:revdesc . "18e28a7e54ef") (:keywords "linguistics" "text analysis" "matching") (:authors ("Andrew Favia" . "drewlinguistics01atgmaildotcom")) (:maintainers ("Andrew Favia" . "drewlinguistics01atgmaildotcom")) (:maintainer "Andrew Favia" . "drewlinguistics01atgmaildotcom"))])
 (link . [(1 11) nil "Hypertext links in text buffers" tar ((:url . "https://github.com/myrkr/dictionary-el") (:commit . "c9cad101100975e88873636bfd426b7a19304ebd") (:revdesc . "c9cad1011009") (:keywords "interface" "hypermedia") (:authors ("Torsten Hilbrich" . "torsten.hilbrich@gmx.net")) (:maintainers ("Torsten Hilbrich" . "torsten.hilbrich@gmx.net")) (:maintainer "Torsten Hilbrich" . "torsten.hilbrich@gmx.net"))])
 (linum-relative . [(0 6) nil "Display relative line number in emacs" tar ((:url . "https://github.com/coldnew/linum-relative") (:commit . "896df4b40c1e1eb59f55fcee48a1543f0ccd724e") (:revdesc . "896df4b40c1e") (:keywords "converience") (:authors ("coldnew" . "coldnew.tw@gmail.com")) (:maintainers ("coldnew" . "coldnew.tw@gmail.com")) (:maintainer "coldnew" . "coldnew.tw@gmail.com"))])
 (liquidmetal . [(1 3 0) ((emacs (24 4))) "Quicksilver scoring algorithm, essentially LiquidMetal" tar ((:url . "https://github.com/jcs-legacy/liquidmetal") (:commit . "32ddd9b52875a6fa403104ed271e15d86d215463") (:revdesc . "32ddd9b52875") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (lisp-butt-mode . [(2 0 4) ((emacs (25))) "Slim Lisp Butts" tar ((:url . "https://gitlab.com/marcowahl/lisp-butt-mode") (:commit . "2b719baf0ccba79e28fcb3c2633c4849d976ac23") (:revdesc . "2.0.4-0-g2b719baf0ccb") (:keywords "lisp") (:authors ("Marco Wahl" . "marcowahlsoft@gmail.com")) (:maintainers ("Marco Wahl" . "marcowahlsoft@gmail.com")) (:maintainer "Marco Wahl" . "marcowahlsoft@gmail.com"))])
 (lisp-local . [(0 1) ((emacs (24 3)) (cl-lib (0 5))) "Allow different Lisp indentation in each buffer" tar ((:url . "https://github.com/lispunion/emacs-lisp-local") (:commit . "ff745a937f79df51cac0209b3cc3c35ce1d1fc61") (:revdesc . "0.1-0-gff745a937f79") (:keywords "languages" "lisp") (:authors ("Lassi Kortela" . "lassi@lassi.io")) (:maintainers ("Lassi Kortela" . "lassi@lassi.io")) (:maintainer "Lassi Kortela" . "lassi@lassi.io"))])
 (lispy . [(0 27 0) ((emacs (24 3)) (ace-window (0 9 0)) (iedit (0 9 9)) (swiper (0 11 0)) (hydra (0 14 0)) (zoutline (0 1 0))) "Vi-like Paredit" tar ((:url . "https://github.com/abo-abo/lispy") (:commit . "9c41bc011ae570283cb286659f75d12d38d437ea") (:revdesc . "9c41bc011ae5") (:keywords "lisp") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com"))])
 (list-packages-ext . [(0 1 0) ((s (1 6 0)) (ht (1 5 0)) (persistent-soft (0 8 6))) "Extras for list-packages" tar ((:url . "https://github.com/laynor/list-packages-ext") (:commit . "344719b313c208c644490f8f1130e21405402f05") (:revdesc . "344719b313c2") (:keywords "convenience" "tools") (:authors ("Alessandro Piras" . "laynor@gmail.com")) (:maintainers ("Alessandro Piras" . "laynor@gmail.com")) (:maintainer "Alessandro Piras" . "laynor@gmail.com"))])
 (list-unicode-display . [(0 1) ((cl-lib (0 5))) "Search for and list unicode characters by name" tar ((:url . "https://github.com/purcell/list-unicode-display") (:commit . "59770cf3572bd36c3e9ba044846dc420c0dca09b") (:revdesc . "59770cf3572b") (:keywords "convenience") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (list-utils . [(0 4 7) nil "List-manipulation utility functions" tar ((:url . "https://github.com/rolandwalker/list-utils") (:commit . "bbea0e7cc7ab7d96e7f062014bde438aa8ffcd43") (:revdesc . "v0.4.7-0-gbbea0e7cc7ab") (:keywords "extensions") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (lister . [(0 9 6) ((emacs (26 1))) "Yet another list printer" tar ((:url . "https://github.com/publicimageltd/lister") (:commit . "84fbba7450ac02cbb844727a28b6f245f553df7b") (:revdesc . "84fbba7450ac") (:keywords "lisp") (:authors (nil . "joerg@joergvolbers.de")) (:maintainers (nil . "joerg@joergvolbers.de")) (:maintainer nil . "joerg@joergvolbers.de"))])
 (lit-mode . [(0 1 1) nil "Major mode for lit" tar ((:url . "https://github.com/HectorAE/lit-mode") (:commit . "c61c403afc8333a5649c5421ab1a6341dc1c7d92") (:revdesc . "0.1.1-0-gc61c403afc83") (:keywords "languages" "tools") (:authors ("Hector A Escobedo" . "ninjahector.escobedo@gmail.com")) (:maintainers ("Hector A Escobedo" . "ninjahector.escobedo@gmail.com")) (:maintainer "Hector A Escobedo" . "ninjahector.escobedo@gmail.com"))])
 (litanize . [(0 2) ((emacs (24 1)) (enlive (0 0 1)) (s (1 12 0))) "Generate \"Latour Litanies\"" tar ((:url . "https://github.com/zzkt/litanizer") (:commit . "ce74f10540d6b335c4d0966cbabcf5099531280e") (:revdesc . "ce74f10540d6") (:keywords "tools" "latour litany" "alien phenomenology" "ontography" "metaphorism" "carpentry") (:authors ("nik gaffney" . "nik@fo.am")) (:maintainers ("nik gaffney" . "nik@fo.am")) (:maintainer "nik gaffney" . "nik@fo.am"))])
 (literal-string . [(0 5) ((emacs (25)) (edit-indirect (0 1 5))) "Edit string literals in a dedicated buffer" tar ((:url . "https://github.com/joodie/literal-string-mode") (:commit . "afffa86e626798ee9f9188ea3be2d5ee6ad17c39") (:revdesc . "0.5-0-gafffa86e6267") (:keywords "lisp" "tools" "docs") (:authors ("Joost Diepenmaat" . "joost@zeekat.nl")) (:maintainers ("Joost Diepenmaat" . "joost@zeekat.nl")) (:maintainer "Joost Diepenmaat" . "joost@zeekat.nl"))])
 (literate-coffee-mode . [(0 4) ((coffee-mode (0 5 0))) "Major-mode for Literate CoffeeScript" tar ((:url . "https://github.com/emacsorphanage/literate-coffee-mode") (:commit . "39fe3bfa1f68a7b8b91160875589219b214a2cd6") (:revdesc . "39fe3bfa1f68") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (literate-elisp . [(0 8) ((cl-lib (0 6)) (emacs (24 4))) "Literate program to write elisp codes in org mode" tar ((:url . "https://github.com/jingtaozf/literate-elisp") (:commit . "af7256e46b42cb954e16f9dec3511687697d9704") (:revdesc . "af7256e46b42") (:keywords "lisp" "docs" "extensions" "tools") (:authors ("Jingtao Xu" . "jingtaozf@gmail.com")) (:maintainers ("Jingtao Xu" . "jingtaozf@gmail.com")) (:maintainer "Jingtao Xu" . "jingtaozf@gmail.com"))])
 (litex-mode . [(0 3 0) ((cl-lib (0 5)) (emacs (24 1))) "Minor mode for converting lisp to LaTeX" tar ((:url . "https://github.com/Atreyagaurav/litex-mode") (:commit . "bad847232a9453db76a9a1de024bdcf4ed1e97e2") (:revdesc . "bad847232a94") (:keywords "calculator" "lisp" "latex") (:authors ("Gaurav Atreya" . "allmanpride@gmail.com")) (:maintainers ("Gaurav Atreya" . "allmanpride@gmail.com")) (:maintainer "Gaurav Atreya" . "allmanpride@gmail.com"))])
 (live-code-talks . [(0 2 1) ((emacs (24)) (cl-lib (0 5)) (narrowed-page-navigation (0 1))) "Support for slides with live code in them" tar ((:url . "https://github.com/david-christiansen/live-code-talks") (:commit . "3a2ecdb49b2651d87999d4cad56ba8f1004c7a99") (:revdesc . "3a2ecdb49b26") (:keywords "docs" "multimedia") (:authors ("David Raymond Christiansen" . "david@davidchristiansen.dk")) (:maintainers ("David Raymond Christiansen" . "david@davidchristiansen.dk")) (:maintainer "David Raymond Christiansen" . "david@davidchristiansen.dk"))])
 (live-preview . [(0 1 2) ((emacs (24 4))) "Live preview by any shell command while editing" tar ((:url . "https://github.com/lassik/emacs-live-preview") (:commit . "603a4a1759fbec92e7a1cabc249517c78e59ce7e") (:revdesc . "0.1.2-0-g603a4a1759fb") (:keywords "languages" "util") (:authors ("Lassi Kortela" . "lassi@lassi.io")) (:maintainers ("Lassi Kortela" . "lassi@lassi.io")) (:maintainer "Lassi Kortela" . "lassi@lassi.io"))])
 (live-py-mode . [(4 12 0) ((emacs (24 3))) "Live Coding in Python" tar ((:url . "https://github.com/donkirkby/live-py-plugin") (:commit . "b417ad93191e8eecaca347f5407dd4bb4c07b6f8") (:revdesc . "b417ad93191e") (:keywords "live" "coding"))])
 (lively . [(0 2) nil "Interactively updating text" tar ((:url . "https://github.com/purcell/lively") (:commit . "6ec648fcde85e81393db1ed1364860f960179c92") (:revdesc . "6ec648fcde85"))])
 (llama . [(0 4 0) ((emacs (26 1))) "Compact syntax for short lambda" tar ((:url . "https://github.com/tarsius/llama") (:commit . "f4e80a582f7ec857783274bee6614560ce49d497") (:revdesc . "v0.4.0-0-gf4e80a582f7e") (:keywords "extensions"))])
 (lms . [(1 1) ((emacs (25 1))) "Squeezebox / Logitech Media Server frontend" tar ((:url . "https://hg.serna.eu/emacs/lms") (:commit . "29593b4c18a570dfb2e60b196f24d407a1277daa") (:revdesc . "29593b4c18a570dfb2e60b196f24d407a1277daa") (:keywords "multimedia") (:authors ("Iñigo Serna" . "inigoserna@gmx.com")) (:maintainers ("Iñigo Serna" . "inigoserna@gmx.com")) (:maintainer "Iñigo Serna" . "inigoserna@gmx.com"))])
 (load-relative . [(1 3 2) nil "Relative file load (within a multi-file Emacs package)" tar ((:url . "https://github.com/rocky/emacs-load-relative") (:commit . "b7987c265a64435299d6b02f960ed2c894c4a145") (:revdesc . "1.3.2-0-gb7987c265a64") (:keywords "internal") (:authors ("Rocky Bernstein" . "rocky@gnu.org")) (:maintainers ("Rocky Bernstein" . "rocky@gnu.org")) (:maintainer "Rocky Bernstein" . "rocky@gnu.org"))])
 (loc-changes . [(1 1) nil "Helps users and programs keep track of positions even after buffer changes" tar ((:url . "https://github.com/rocky/emacs-loc-changes") (:commit . "8447baff7cb4839ef8d1d747a14e5da85d0cee5b") (:revdesc . "8447baff7cb4"))])
 (loco . [(0 1 15) ((emacs (29 1))) "Enter complex key sequences with ease!" tar ((:url . "https://github.com/csmclaren/loco") (:commit . "fc590068204ae27eef0addfe89071bff2cfe117c") (:revdesc . "fc590068204a") (:keywords "abbrev" "convenience") (:authors ("Chris McLaren" . "csmclaren@me.com")) (:maintainers ("Chris McLaren" . "csmclaren@me.com")) (:maintainer "Chris McLaren" . "csmclaren@me.com"))])
 (log4e . [(0 4 1) nil "Provide logging framework for elisp" tar ((:url . "https://github.com/aki2o/log4e") (:commit . "6d71462df9bf595d3861bfb328377346aceed422") (:revdesc . "6d71462df9bf") (:keywords "log") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (log4j-mode . [(1 7 1) ((emacs (25 1))) "Major mode for viewing log files" tar ((:url . "https://github.com/dykstrom/log4j-mode") (:commit . "45d5e3ee918f502a160c3a131ce75fd3c38e5c6e") (:revdesc . "1.7.1-0-g45d5e3ee918f") (:keywords "tools"))])
 (logalimacs . [(1 0 0) nil "Front-end to logaling-command for Ruby gems" tar ((:url . "https://github.com/logaling/logalimacs") (:commit . "cfd7aaa925934f876eee6e8c550cf6e7a239a2ac") (:revdesc . "1.0.0-0-gcfd7aaa92593") (:authors ("Yuta Yamada" . "yamada@clear-code.com")) (:maintainers ("Yuta Yamada" . "yamada@clear-code.com")) (:maintainer "Yuta Yamada" . "yamada@clear-code.com"))])
 (logito . [(0 2 0) ((emacs (25 1))) "Logging library for Emacs" tar ((:url . "https://github.com/sigma/logito") (:commit . "d5934ce10ba3a70d3fcfb94d742ce3b9136ce124") (:revdesc . "d5934ce10ba3") (:keywords "lisp" "extensions") (:authors ("Yann Hodique" . "yann.hodique@gmail.com")) (:maintainers ("Yann Hodique" . "yann.hodique@gmail.com")) (:maintainer "Yann Hodique" . "yann.hodique@gmail.com"))])
 (logms . [(0 3 1) ((emacs (27 1)) (f (0 20 0)) (s (1 9 0)) (ht (2 3))) "Log message with clickable links to context" tar ((:url . "https://github.com/jcs-elpa/logms") (:commit . "68bab96a13d64efdf4f5951d931d0862e6861fb5") (:revdesc . "68bab96a13d6") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (lognav-mode . [(0 0 8) ((emacs (24 3))) "Navigate Log Error Messages" tar ((:commit . "5b2ae4f9941d8584f456cc921b56c7c610a683eb") (:authors ("Shawn Ellis" . "shawn.ellis17@gmail.com")) (:maintainers ("Shawn Ellis" . "shawn.ellis17@gmail.com")) (:maintainer "Shawn Ellis" . "shawn.ellis17@gmail.com") (:keywords "log" "error" "lognav-mode" "convenience") (:url . "https://hg.osdn.net/view/lognav-mode/lognav-mode"))])
 (logstash-conf . [(0 4) nil "Basic mode for editing logstash configuration" tar ((:url . "https://github.com/Wilfred/logstash-conf.el") (:commit . "652dddecf19f3e39a36055823e44fcffc5b44aeb") (:revdesc . "652dddecf19f") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (logview . [(0 19) ((emacs (25 1)) (datetime (0 8)) (extmap (1 0))) "Major mode for viewing log files" tar ((:url . "https://github.com/doublep/logview") (:commit . "50f0b12f9cb3b8bdc9b28c16187495770ff6dff6") (:revdesc . "50f0b12f9cb3") (:keywords "files" "tools") (:authors ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainers ("Paul Pogonyshev" . "pogonyshev@gmail.com")) (:maintainer "Paul Pogonyshev" . "pogonyshev@gmail.com"))])
 (loop . [(1 3) nil "Friendly imperative loop structures" tar ((:url . "https://github.com/Wilfred/loop.el") (:commit . "c3598bd3ad0677f66e061b3ba51a05d05275283e") (:revdesc . "c3598bd3ad06") (:keywords "loop" "while" "for each" "break" "continue") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (loophole . [(0 8 3) ((emacs (27 1))) "Manage temporary key bindings" tar ((:url . "https://github.com/0x60df/loophole") (:commit . "24acca1a45d987093561f7294b7b1d1f738f23af") (:revdesc . "24acca1a45d9") (:keywords "convenience") (:authors ("0x60DF" . "0x60df@gmail.com")) (:maintainers ("0x60DF" . "0x60df@gmail.com")) (:maintainer "0x60DF" . "0x60df@gmail.com"))])
 (loopy . [(0 13 0) ((emacs (27 1)) (map (3 3 1)) (seq (2 22)) (compat (29 1 3)) (stream (2 3 0))) "A looping macro" tar ((:url . "https://github.com/okamsn/loopy") (:commit . "80a30903628bc8de36c51c966e6cf5b114001e47") (:revdesc . "80a30903628b") (:keywords "extensions"))])
 (loopy-dash . [(0 13 0) ((emacs (25 1)) (loopy (0 13 0)) (dash (2 19))) "Dash destructuring for `loopy'" tar ((:url . "https://github.com/okamsn/loopy") (:commit . "80a30903628bc8de36c51c966e6cf5b114001e47") (:revdesc . "80a30903628b") (:keywords "extensions"))])
 (lox-mode . [(1 3) ((emacs (24 3))) "Major mode for the Lox programming language" tar ((:url . "https://github.com/timmyjose-projects/lox-mode") (:commit . "083a2299e188a516d1e46ef2dd1cbb89db1aec49") (:revdesc . "083a2299e188") (:keywords "languages" "lox") (:authors ("Timmy Jose" . "zoltan.jose@gmail.com")) (:maintainers ("Timmy Jose" . "zoltan.jose@gmail.com")) (:maintainer "Timmy Jose" . "zoltan.jose@gmail.com"))])
 (lsp-dart . [(1 24 3) ((emacs (26 3)) (lsp-treemacs (0 3)) (lsp-mode (7 0 1)) (dap-mode (0 6)) (f (0 20 0)) (dash (2 14 1)) (dart-mode (1 0 5)) (jsonrpc (1 0 15)) (ht (2 2))) "Dart support lsp-mode" tar ((:url . "https://github.com/emacs-lsp/lsp-dart") (:commit . "f51c80f5458d8ba4db9dd3781d190c6c32213250") (:revdesc . "f51c80f5458d") (:keywords "languages" "extensions"))])
 (lsp-focus . [(1 0 1) ((focus (0 1 1)) (lsp-mode (6 1))) "Focus.el support for lsp-mode" tar ((:url . "https://github.com/emacs-lsp/lsp-focus") (:commit . "30a19e9d616b341e41469b141e86ff825070cb67") (:revdesc . "30a19e9d616b") (:keywords "languages" "lsp-mode"))])
 (lsp-grammarly . [(0 3 0) ((emacs (27 1)) (lsp-mode (6 1)) (grammarly (0 3 0)) (request (0 3 0)) (s (1 12 0)) (ht (2 3))) "LSP Clients for Grammarly" tar ((:url . "https://github.com/emacs-grammarly/lsp-grammarly") (:commit . "fe47a75700dc4f16ec4ff77d6d0306f39566464b") (:revdesc . "fe47a75700dc") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (lsp-ivy . [(0 5) ((emacs (25 1)) (dash (2 14 1)) (lsp-mode (6 2 1)) (ivy (0 13 0))) "LSP ivy integration" tar ((:url . "https://github.com/emacs-lsp/lsp-ivy") (:commit . "3e87441a625d65ced5a208a0b0442d573596ffa3") (:revdesc . "3e87441a625d") (:keywords "languages" "debug"))])
 (lsp-java . [(3 1) ((emacs (25 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 14 1)) (f (0 20 0)) (ht (2 0)) (dash-functional (1 2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) "Java support for lsp-mode" tar ((:url . "https://github.com/emacs-lsp/lsp-java") (:commit . "260016236fa0520b5b6ec7f51ca2086288524cba") (:revdesc . "260016236fa0") (:keywords "languague" "tools"))])
 (lsp-jedi . [(1 2 2) ((emacs (25 1)) (lsp-mode (6 0))) "Lsp client plugin for Python Jedi Language Server" tar ((:url . "https://github.com/fredcamps/lsp-jedi") (:commit . "5e3eb3e160c2d38b8bd2b5cd3b86fa4f823f9330") (:revdesc . "5e3eb3e160c2") (:keywords "language-server" "tools" "python" "jedi" "ide") (:authors ("Fred Campos" . "fred.tecnologia@gmail.com")))])
 (lsp-julia . [(0 7 2) ((emacs (25 1)) (lsp-mode (6 3)) (julia-mode (0 3))) "Julia support for lsp-mode" tar ((:url . "https://github.com/gdkrmr/lsp-julia") (:commit . "c584f79c7fee6176bbb6120f4cb0f1001bcf8113") (:revdesc . "c584f79c7fee") (:keywords "languages" "tools") (:authors ("Martin Wolke" . "vibhavp@gmail.com") ("Adam Beckmeyer" . "adam_git@thebeckmeyers.xyz") ("Guido Kraemer" . "gdkrmr@users.noreply.github.com")) (:maintainers ("Guido Kraemer" . "gdkrmr@users.noreply.github.com")) (:maintainer "Guido Kraemer" . "gdkrmr@users.noreply.github.com"))])
 (lsp-latex . [(3 7 1) ((emacs (27 1)) (lsp-mode (6 0)) (consult (0 35))) "LSP-mode client for LaTeX, on texlab" tar ((:url . "https://github.com/ROCKTAKEY/lsp-latex") (:commit . "30e5ee2a387bee7b320564d402b3e587cdae536c") (:revdesc . "v3.7.1-0-g30e5ee2a387b") (:keywords "languages" "tex") (:authors ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainers ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainer "ROCKTAKEY" . "rocktakey@gmail.com"))])
 (lsp-ltex . [(0 2 1) ((emacs (26 1)) (lsp-mode (6 1)) (f (0 20 0)) (s (1 12 0))) "LSP Clients for LTEX" tar ((:url . "https://github.com/emacs-languagetool/lsp-ltex") (:commit . "7ff60400f23efe4916778e7b21a238114e5cdba7") (:revdesc . "7ff60400f23e") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (lsp-metals . [(1 2 0) ((emacs (26 1)) (scala-mode (1 1)) (lsp-mode (7 0)) (lsp-treemacs (0 2)) (dap-mode (0 3)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (treemacs (2 5))) "Scala Client settings" tar ((:url . "https://github.com/emacs-lsp/lsp-metals") (:commit . "5aea52dfe08b8f5936ea3982be6c25339f652eba") (:revdesc . "5aea52dfe08b") (:keywords "languages" "extensions") (:authors ("Ross A. Baker" . "ross@rossabaker.com") ("Evgeny Kurnevsky" . "kurnevsky@gmail.com")) (:maintainers ("Ross A. Baker" . "ross@rossabaker.com") ("Evgeny Kurnevsky" . "kurnevsky@gmail.com")) (:maintainer "Ross A. Baker" . "ross@rossabaker.com"))])
 (lsp-mode . [(9 0 0) ((emacs (27 1)) (dash (2 18 0)) (f (0 20 0)) (ht (2 3)) (spinner (1 7 3)) (markdown-mode (2 3)) (lv (0)) (eldoc (1 11))) "LSP mode" tar ((:url . "https://github.com/emacs-lsp/lsp-mode") (:commit . "a478e03cd1a5dc84ad496234fd57241ff9dca57a") (:revdesc . "a478e03cd1a5") (:keywords "languages"))])
 (lsp-origami . [(1 0 0) ((origami (1 0)) (lsp-mode (6 1))) "Origami.el support for lsp-mode" tar ((:url . "https://github.com/emacs-lsp/lsp-origami") (:commit . "110c40eafde81179ec7a78aab94b0b2059689374") (:revdesc . "110c40eafde8") (:keywords "languages" "lsp-mode"))])
 (lsp-p4 . [(0 1) ((lsp-mode (3 0))) "P4 support for lsp-mode" tar ((:url . "https://github.com/dmakarov/p4ls") (:commit . "9ebc597ba37e6f8fccbc08327cf57ca8ec793ffe") (:revdesc . "9ebc597ba37e") (:keywords "p4"))])
 (lsp-pyright . [(0 3 0) ((emacs (26 1)) (lsp-mode (7 0)) (dash (2 18 0)) (ht (2 0))) "Python LSP client using Pyright" tar ((:url . "https://github.com/emacs-lsp/lsp-pyright") (:commit . "bf27f1959460661648ecaaee4b5701bc003e3003") (:revdesc . "bf27f1959460") (:keywords "languages" "tools" "lsp"))])
 (lsp-python-ms . [(0 7 3) ((emacs (25 1)) (lsp-mode (6 1))) "The lsp-mode client for Microsoft python-language-server" tar ((:url . "https://github.com/emacs-lsp/lsp-python-ms") (:commit . "7bda327bec7b219d140c34dab4b1e1fbd41bc516") (:revdesc . "7bda327bec7b") (:keywords "languages" "tools"))])
 (lsp-scheme . [(0 1 1) ((emacs (25 1)) (f (0 20 0)) (lsp-mode (8 0 0))) "Scheme support for lsp-mode" tar ((:url . "https://codeberg.org/rgherdt/emacs-lsp-scheme") (:commit . "c18afd39c841201c811583ff449a495d835b4773") (:revdesc . "c18afd39c841") (:keywords "languages" "lisp" "tools") (:authors ("Ricardo G. Herdt" . "r.herdt@posteo.de")) (:maintainers ("Ricardo G. Herdt" . "r.herdt@posteo.de")) (:maintainer "Ricardo G. Herdt" . "r.herdt@posteo.de"))])
 (lsp-shader . [(0 0 1) ((emacs (27 1)) (lsp-mode (6 1))) "LSP Clients for ShaderLab" tar ((:url . "https://github.com/shader-ls/lsp-shader") (:commit . "ac0de807b52d32b0e7ed3b216ab6d539bbb328de") (:revdesc . "ac0de807b52d") (:keywords "convenience" "shader") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (lsp-sonarlint . [(0 1 0) ((emacs (25)) (dash (2 12 0)) (lsp-mode (6 3)) (ht (2 3))) "Emacs Sonarlint lsp client" tar ((:url . "https://github.com/emacs-lsp/lsp-sonarlint") (:commit . "a429be2aea7797369a3c751ef54e3554733117be") (:revdesc . "a429be2aea77") (:keywords "languages" "tools" "php" "javascript" "xml" "ruby" "html" "scala" "java" "python") (:authors ("Fermin MF" . "fmfs@posteo.net")) (:maintainers ("Fermin MF" . "fmfs@posteo.net")) (:maintainer "Fermin MF" . "fmfs@posteo.net"))])
 (lsp-tailwindcss . [(0 2) ((lsp-mode (7 1)) (emacs (26 1))) "A lsp-mode client for tailwindcss" tar ((:url . "https://github.com/merrickluo/lsp-tailwindcss") (:commit . "5250c4305f2334796d65779c7b61442e17d7c69b") (:revdesc . "5250c4305f23") (:keywords "language" "tools") (:authors ("A.I." . "merrick@luois.me")) (:maintainers ("A.I." . "merrick@luois.me")) (:maintainer "A.I." . "merrick@luois.me"))])
 (lsp-treemacs . [(0 5) ((emacs (27 1)) (dash (2 18 0)) (f (0 20 0)) (ht (2 0)) (treemacs (2 5)) (lsp-mode (6 0))) "LSP treemacs" tar ((:url . "https://github.com/emacs-lsp/lsp-treemacs") (:commit . "b90c95e3d1e709ab1e1f8332977ba49384571566") (:revdesc . "b90c95e3d1e7") (:keywords "languages"))])
 (lsp-ui . [(9 0 0) ((emacs (27 1)) (dash (2 18 0)) (lsp-mode (6 0)) (markdown-mode (2 3))) "UI modules for lsp-mode" tar ((:url . "https://github.com/emacs-lsp/lsp-ui") (:commit . "8aa8b175fc4cdf2d16f6f3fdb2904e8874610c8a") (:revdesc . "8aa8b175fc4c") (:keywords "languages" "tools") (:authors ("Sebastien Chapuis" . "sebastien@chapu.is") ("Fangrui Song" . "i@maskray.me")) (:maintainers ("Sebastien Chapuis" . "sebastien@chapu.is") ("Fangrui Song" . "i@maskray.me")) (:maintainer "Sebastien Chapuis" . "sebastien@chapu.is"))])
 (lua-mode . [(20210802) ((emacs (24 3))) "A major-mode for editing Lua scripts" tar ((:url . "https://github.com/immerrr/lua-mode") (:commit . "7ee3febab01aeacfd33357124e7f605e1e110d99") (:revdesc . "v20210802-0-g7ee3febab01a") (:keywords "languages" "processes" "tools") (:authors ("2011-2013 immerrr" . "immerrr+lua@gmail.com") ("2010-2011 Reuben Thomas" . "rrt@sc3d.org") ("2006 Juergen Hoetzel" . "juergen@hoetzel.info") ("2001 Christian Vogler" . "cvogler@gradient.cis.upenn.edu") ("1997 Bret Mogilefsky starting from" . "mogul-lua@gelatinous.com") ("tcl-mode by Gregor Schmid" . "schmid@fb3-s7.math.tu-berlin.de") ("Paul Du Bois and" . "pld-lua@gelatinous.com") ("Aaron Smith" . "aaron-lua@gelatinous.com")) (:maintainers ("2011-2013 immerrr" . "immerrr+lua@gmail.com") ("2010-2011 Reuben Thomas" . "rrt@sc3d.org") ("2006 Juergen Hoetzel" . "juergen@hoetzel.info") ("2001 Christian Vogler" . "cvogler@gradient.cis.upenn.edu") ("1997 Bret Mogilefsky starting from" . "mogul-lua@gelatinous.com") ("tcl-mode by Gregor Schmid" . "schmid@fb3-s7.math.tu-berlin.de") ("Paul Du Bois and" . "pld-lua@gelatinous.com") ("Aaron Smith" . "aaron-lua@gelatinous.com")) (:maintainer "2011-2013 immerrr" . "immerrr+lua@gmail.com"))])
 (lusty-explorer . [(3 0 1) nil "Dynamic filesystem explorer and buffer switcher" tar ((:url . "https://github.com/sjbach/lusty-emacs") (:commit . "8ece9b1379a73e7dc0b6e682dd5a573f88a5cb32") (:revdesc . "8ece9b1379a7") (:keywords "convenience" "files" "matching"))])
 (lv . [(0 15 0) nil "Other echo area" tar ((:url . "https://github.com/abo-abo/hydra") (:commit . "f27fce1b2f0a9162e159557bdeb2c0c94defb4d2") (:revdesc . "f27fce1b2f0a"))])
 (lxc-tramp . [(1 1 1) ((emacs (24)) (cl-lib (0 6))) "TRAMP integration for LXC containers" tar ((:url . "https://github.com/montag451/lxc-tramp") (:commit . "57559701334bb5635b82a252bd00298d06d794fe") (:revdesc . "57559701334b") (:keywords "lxc" "convenience"))])
 (lyrics-fetcher . [(0 2 0) ((emacs (27)) (emms (7 5)) (f (0 20 0)) (request (0 3 2))) "Fetch song lyrics and album covers" tar ((:url . "https://github.com/SqrtMinusOne/lyrics-fetcher.el") (:commit . "06bd0293dfa759df48faefd73be60d43d1febd17") (:revdesc . "06bd0293dfa7") (:authors ("Korytov Pavel" . "thexcloud@gmail.com")) (:maintainers ("Korytov Pavel" . "thexcloud@gmail.com")) (:maintainer "Korytov Pavel" . "thexcloud@gmail.com"))])
 (m-buffer . [(0 15) ((seq (2 14))) "List-Oriented, Functional Buffer Manipulation" tar ((:url . "https://github.com/phillord/m-buffer-el") (:commit . "6eb1d2535a82707a83733173bc400a0d8e520c80") (:revdesc . "6eb1d2535a82") (:authors ("Phillip Lord" . "phillip.lord@russet.org.uk")) (:maintainers ("Phillip Lord" . "phillip.lord@russet.rg.uk")) (:maintainer "Phillip Lord" . "phillip.lord@russet.rg.uk"))])
 (mac-pseudo-daemon . [(2 2) ((cl-lib (0 1))) "Daemon mode that plays nice with Mac OS" tar ((:url . "https://github.com/DarwinAwardWinner/mac-pseudo-daemon") (:commit . "564b006835facc4a8df247d8a47ab1030d7e7beb") (:revdesc . "564b006835fa") (:keywords "convenience" "osx" "mac"))])
 (macro-math . [(1 0) nil "In-buffer mathematical operations" tar ((:url . "https://github.com/nschum/macro-math.el") (:commit . "105e03c80290d1b88984b2d265a149a13d722920") (:revdesc . "1.0-0-g105e03c80290") (:keywords "convenience") (:authors ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainers ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainer "Nikolaj Schumacher" . "bugs*nschumde"))])
 (macrostep . [(0 9 4) ((cl-lib (0 5)) (compat (29))) "Interactive macro expander" tar ((:url . "https://github.com/emacsorphanage/macrostep") (:commit . "31d4adcca4f08cfd7a45f85e691aaa7a9316b355") (:revdesc . "31d4adcca4f0") (:keywords "lisp" "languages" "macro" "debugging") (:authors ("Jon Oddie" . "j.j.oddie@gmail.com")) (:maintainers ("Jon Oddie" . "j.j.oddie@gmail.com")) (:maintainer "Jon Oddie" . "j.j.oddie@gmail.com"))])
 (magic-filetype . [(0 3 0) ((emacs (24)) (s (1 9 0))) "Enhance filetype major mode" tar ((:url . "https://github.com/emacs-php/magic-filetype.el") (:commit . "019494add5ff02dd36cb3f500142fc51125522cc") (:revdesc . "019494add5ff") (:keywords "emulations" "vim" "ft" "file" "magic-mode") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (magik-mode . [(0 3 2) ((emacs (24 4)) (compat (28 1))) "Emacs major mode for Smallworld Magik files" tar ((:url . "https://github.com/roadrunner1776/magik") (:commit . "dfbb5482b18633adf9790599f415aa5c507228ca") (:revdesc . "dfbb5482b186") (:keywords "languages"))])
 (magit . [(4 1 3) ((emacs (26 1)) (compat (30 0 0 0)) (dash (2 19 1)) (magit-section (4 1 3)) (seq (2 24)) (transient (0 8 0)) (with-editor (3 4 3))) "A Git porcelain inside Emacs" tar ((:url . "https://github.com/magit/magit") (:commit . "7adad8c8d3bd61ae36659638751223cfa2c7d720") (:revdesc . "v4.1.3-0-g7adad8c8d3bd") (:keywords "git" "tools" "vc") (:authors ("Marius Vollmer" . "marius.vollmer@gmail.com") ("Jonas Bernoulli" . "emacs.magit@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.magit@jonas.bernoulli.dev") ("Kyle Meyer" . "kyle@kyleam.com")) (:maintainer "Jonas Bernoulli" . "emacs.magit@jonas.bernoulli.dev"))])
 (magit-annex . [(1 9 0) ((emacs (26 1)) (magit (4 0 0))) "Control git-annex from Magit" tar ((:url . "https://github.com/magit/magit-annex") (:commit . "9db0bc61461f222106c7ae3d8cd6d3de1f1b143f") (:revdesc . "v1.9.0-0-g9db0bc61461f") (:keywords "vc" "tools") (:authors ("Kyle Meyer" . "kyle@kyleam.com") ("Rémi Vanicat" . "vanicat@debian.org")) (:maintainers ("Kyle Meyer" . "kyle@kyleam.com") ("Rémi Vanicat" . "vanicat@debian.org")) (:maintainer "Kyle Meyer" . "kyle@kyleam.com"))])
 (magit-file-icons . [(2 0 0) ((emacs (24 3)) (magit (3 3 0)) (nerd-icons (0 1 0)) (el-patch (3 1))) "Icons for file entries in Magit buffers" tar ((:url . "https://github.com/gekoke/magit-file-icons") (:commit . "861670d448df4fba6fb993941d41953cee230a7b") (:revdesc . "v2.0.0-0-g861670d448df") (:authors ("Gregor Grigorjan" . "gregor@grigorjan.net")) (:maintainers ("Gregor Grigorjan" . "gregor@grigorjan.net")) (:maintainer "Gregor Grigorjan" . "gregor@grigorjan.net"))])
 (magit-filenotify . [(0 1) ((magit (1 3 0)) (emacs (24 4))) "Refresh status buffer when git tree changes" tar ((:url . "https://github.com/ruediger/magit-filenotify") (:commit . "575c4321f61fb8f25e4779f9ffd4514ac086ae96") (:revdesc . "575c4321f61f") (:keywords "tools") (:authors ("Rüdiger Sonderfeld" . "ruediger@c-plusplus.de")) (:maintainers ("Rüdiger Sonderfeld" . "ruediger@c-plusplus.de")) (:maintainer "Rüdiger Sonderfeld" . "ruediger@c-plusplus.de"))])
 (magit-find-file . [(2 1 0) ((magit (2 1 0)) (dash (2 8 0))) "Completing-read over all files in Git" tar ((:url . "https://github.com/bradwright/magit-find-file.el") (:commit . "035da838b1a19e7a5ee135b4ca8475f4e235b61e") (:revdesc . "2.1.0-0-g035da838b1a1") (:keywords "git") (:authors ("Bradley Wright" . "brad@intranation.com")) (:maintainers ("Bradley Wright" . "brad@intranation.com")) (:maintainer "Bradley Wright" . "brad@intranation.com"))])
 (magit-gerrit . [(0 4) ((emacs (25 1)) (magit (2 90 1)) (transient (0 3 0))) "Magit plugin for Gerrit Code Review" tar ((:url . "https://github.com/emacsorphanage/magit-gerrit") (:commit . "4f6212e1b19d65e422da1a3c8f54a1a5ab396a2c") (:revdesc . "v0.4-0-g4f6212e1b19d") (:authors ("Brian Fransioli" . "assem@terranpro.org")) (:maintainers ("Brian Fransioli" . "assem@terranpro.org")) (:maintainer "Brian Fransioli" . "assem@terranpro.org"))])
 (magit-gh-pulls . [(0 5 3) ((emacs (24 4)) (gh (0 9 1)) (magit (2 1 0)) (pcache (0 2 3)) (s (1 6 1))) "GitHub pull requests extension for Magit" tar ((:url . "https://github.com/sigma/magit-gh-pulls") (:commit . "d526f4c9ee1709c79f8a4630699ce1f25ae054e7") (:revdesc . "d526f4c9ee17") (:keywords "git" "tools") (:authors ("Yann Hodique" . "yann.hodique@gmail.com")) (:maintainers ("Yann Hodique" . "yann.hodique@gmail.com")) (:maintainer "Yann Hodique" . "yann.hodique@gmail.com"))])
 (magit-gitflow . [(2 2 3) ((magit (2 1 0)) (magit-popup (2 2 0))) "Gitflow extension for magit" tar ((:url . "https://github.com/jtatarik/magit-gitflow") (:commit . "cc41b561ec6eea947fe9a176349fb4f771ed865b") (:revdesc . "cc41b561ec6e") (:keywords "vc" "tools") (:authors ("Jan Tatarik" . "Jan.Tatarik@gmail.com")) (:maintainers ("Jan Tatarik" . "Jan.Tatarik@gmail.com")) (:maintainer "Jan Tatarik" . "Jan.Tatarik@gmail.com"))])
 (magit-gitlab . [(0 1 0) ((emacs (26 1)) (magit (3 3 0)) (ghub (3 6 0)) (transient (0 6 0))) "Magit plugin for manipulating GitLab merge requests" tar ((:url . "https://gitlab.com/arvidnl/magit-gitlab") (:commit . "cca91ae8b192bb5b50361aab1f94f4ff2bf9e969") (:revdesc . "0.1.0-0-gcca91ae8b192") (:authors ("Arvid Jakobsson" . "arvid.jakobsson@gmail.com")) (:maintainers ("Arvid Jakobsson" . "arvid.jakobsson@gmail.com")) (:maintainer "Arvid Jakobsson" . "arvid.jakobsson@gmail.com"))])
 (magit-imerge . [(1 3 0) ((emacs (26 1)) (magit (4 0 0))) "Magit extension for git-imerge" tar ((:url . "https://github.com/magit/magit-imerge") (:commit . "a4981f6944ff341c1b60b7b47babea625ec37d99") (:revdesc . "v1.3.0-0-ga4981f6944ff") (:keywords "vc" "tools") (:authors ("Kyle Meyer" . "kyle@kyleam.com")) (:maintainers ("Kyle Meyer" . "kyle@kyleam.com")) (:maintainer "Kyle Meyer" . "kyle@kyleam.com"))])
 (magit-lfs . [(0 4 1) ((emacs (24 4)) (magit (2 10 3)) (dash (2 13 0))) "Magit plugin for Git LFS" tar ((:url . "https://github.com/Ailrun/magit-lfs") (:commit . "ee005580c1441cce4251734dd239c84d9e88639e") (:revdesc . "ee005580c144") (:keywords "magit" "git" "lfs" "tools" "vc") (:authors ("Junyoung/Clare Jang" . "jjc9310@gmail.com")) (:maintainers ("Junyoung/Clare Jang" . "jjc9310@gmail.com")) (:maintainer "Junyoung/Clare Jang" . "jjc9310@gmail.com"))])
 (magit-org-todos . [(0 1 2) ((magit (2 0 0)) (emacs (24))) "Add local todo items to the magit status buffer" tar ((:url . "https://github.com/danielma/magit-org-todos.el") (:commit . "0bfa36bbc50e62de0a3406031cb93e2f57dcdc55") (:revdesc . "0bfa36bbc50e") (:keywords "org-mode" "magit" "tools"))])
 (magit-p4 . [(1 2 1) ((emacs (25 1)) (magit (2 1)) (magit-popup (2 1)) (p4 (12 0)) (cl-lib (0 5))) "Git-p4 plug-in for Magit" tar ((:url . "https://github.com/emacsorphanage/magit-p4") (:commit . "0fd0f882eb14510714393c15c2ccb8d2c259f01e") (:revdesc . "v1.2.1-0-g0fd0f882eb14") (:keywords "vc" "tools") (:authors ("Damian T. Dobroczyński" . "qoocku@gmail.com")) (:maintainers ("Aleksey Fedotov" . "lexa@cfotr.com")) (:maintainer "Aleksey Fedotov" . "lexa@cfotr.com"))])
 (magit-popup . [(2 13 3) ((emacs (24 4)) (dash (2 13 0))) "Define prefix-infix-suffix command combos" tar ((:url . "https://github.com/magit/magit-popup") (:commit . "d8585fa39f88956963d877b921322530257ba9f5") (:revdesc . "v2.13.3-0-gd8585fa39f88") (:keywords "bindings") (:authors ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainers ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li"))])
 (magit-section . [(4 1 3) ((emacs (26 1)) (compat (30 0 0 0)) (dash (2 19 1)) (seq (2 24))) "Sections for read-only buffers" tar ((:url . "https://github.com/magit/magit") (:commit . "7adad8c8d3bd61ae36659638751223cfa2c7d720") (:revdesc . "v4.1.3-0-g7adad8c8d3bd") (:keywords "tools") (:authors ("Jonas Bernoulli" . "emacs.magit@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.magit@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.magit@jonas.bernoulli.dev"))])
 (magit-stgit . [(2 2 1) ((emacs (24 4)) (magit (2 12 0)) (magit-popup (2 12 0))) "StGit extension for Magit" tar ((:url . "https://github.com/stacked-git/magit-stgit") (:commit . "cd1e04e63002ea47f7b858dbe475e90150ae6c00") (:revdesc . "2.2.1-0-gcd1e04e63002") (:keywords "vc" "tools") (:authors ("Lluís Vilanova" . "vilanova@ac.upc.edu")))])
 (magit-svn . [(2 2 3) ((emacs (25 1)) (magit (2 90 1)) (transient (0 3 2))) "Git-Svn extension for Magit" tar ((:url . "https://github.com/emacsorphanage/magit-svn") (:commit . "350493217afdb7637564e089f475909adecd9208") (:revdesc . "2.2.3-0-g350493217afd") (:keywords "vc" "tools") (:authors ("Phil Jackson" . "phil@shellarchive.co.uk")) (:maintainers ("Phil Jackson" . "phil@shellarchive.co.uk")) (:maintainer "Phil Jackson" . "phil@shellarchive.co.uk"))])
 (magit-tbdiff . [(1 2 0) ((emacs (26 1)) (magit (4 0 0))) "Magit extension for range diffs" tar ((:url . "https://github.com/magit/magit-tbdiff") (:commit . "e8219d2db176bfccb1aa485c9ae91743c33ada0e") (:revdesc . "v1.2.0-0-ge8219d2db176") (:keywords "vc" "tools") (:authors ("Kyle Meyer" . "kyle@kyleam.com")) (:maintainers ("Kyle Meyer" . "kyle@kyleam.com")) (:maintainer "Kyle Meyer" . "kyle@kyleam.com"))])
 (magit-todos . [(1 8) ((emacs (26 1)) (async (1 9 2)) (dash (2 13 0)) (f (0 17 2)) (hl-todo (1 9 0)) (magit (2 13 0)) (pcre2el (1 8)) (s (1 12 0)) (transient (0 2 0))) "Show source file TODOs in Magit" tar ((:url . "https://github.com/alphapapa/magit-todos") (:commit . "4c17b73355ad0f6537bec5776154ee7465a4c2f8") (:revdesc . "v1.8-0-g4c17b73355ad") (:keywords "magit" "vc") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (magit-topgit . [(2 1 2) ((emacs (24 4)) (magit (2 1 0))) "TopGit extension for Magit" tar ((:url . "https://github.com/greenrd/magit-topgit") (:commit . "11489ea798bc88d0ea5244bbf725285eedfefbef") (:revdesc . "2.1.2-0-g11489ea798bc") (:keywords "vc" "tools") (:authors ("Yann Hodique" . "yann.hodique@gmail.com")) (:maintainers ("Robin Green" . "greenrd@greenrd.org")) (:maintainer "Robin Green" . "greenrd@greenrd.org"))])
 (magithub . [(0 1 7) ((emacs (25)) (magit (2 12)) (s (1 12 0)) (ghub+ (0 3)) (git-commit (2 12)) (markdown-mode (2 3))) "Magit interfaces for GitHub" tar ((:url . "https://github.com/vermiculus/magithub") (:commit . "81e75cbbbac820a3297e6b6a1e5dc6d9cfe091d0") (:revdesc . "0.1.7-0-g81e75cbbbac8") (:keywords "git" "tools" "vc") (:authors ("Sean Allred" . "code@seanallred.com")) (:maintainers ("Sean Allred" . "code@seanallred.com")) (:maintainer "Sean Allred" . "code@seanallred.com"))])
 (major-mode-hydra . [(0 2 2) ((dash (2 15 0)) (pretty-hydra (0 2 2)) (emacs (25))) "Major mode keybindings managed by Hydra" tar ((:url . "https://github.com/jerrypnz/major-mode-hydra.el") (:commit . "bba876b86f0b80495004bf185b2b1f6083a1ff3a") (:revdesc . "0.2.2-0-gbba876b86f0b") (:authors ("Jerry Peng" . "pr2jerry@gmail.com")) (:maintainers ("Jerry Peng" . "pr2jerry@gmail.com")) (:maintainer "Jerry Peng" . "pr2jerry@gmail.com"))])
 (make-color . [(0 4) nil "Alternative to picking color - update fg/bg color by pressing r/g/b/... keys" tar ((:url . "https://github.com/alezost/make-color.el") (:commit . "b19cb40c0619e267f2948ed37aff67b712a6deed") (:revdesc . "b19cb40c0619") (:keywords "color") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (makey . [(0 3) ((cl-lib (0 2))) "Interactive commandline mode" tar ((:url . "https://github.com/mickeynp/makey") (:commit . "a61781e69d3b451551e269446e1c5f624ab81137") (:revdesc . "a61781e69d3b") (:authors ("Mickey Petersen" . "mickey@masteringemacs.org")) (:maintainers ("Mickey Petersen" . "mickey@masteringemacs.org")) (:maintainer "Mickey Petersen" . "mickey@masteringemacs.org"))])
 (malinka . [(0 3 1) ((s (1 9 0)) (dash (2 4 0)) (f (0 11 0)) (cl-lib (0 3)) (rtags (0 0)) (projectile (0 11 0))) "A C/C++ project configuration package for Emacs" tar ((:url . "https://github.com/LefterisJP/malinka") (:commit . "81cf7dd81fbf124ceda31ee963cce8c3616f28f1") (:revdesc . "v0.3.1-0-g81cf7dd81fbf") (:keywords "c" "c++" "project-management") (:authors ("Lefteris Karapetsas" . "lefteris@refu.co")) (:maintainers ("Lefteris Karapetsas" . "lefteris@refu.co")) (:maintainer "Lefteris Karapetsas" . "lefteris@refu.co"))])
 (mallard-mode . [(0 3 0) nil "Major mode for editing Mallard files" tar ((:url . "https://github.com/jhradilek/emacs-mallard-mode") (:commit . "152cd44d53c881457fe57c1aba77e8e2fca4d1b0") (:revdesc . "v0.3.0-0-g152cd44d53c8") (:keywords "xml" "mallard") (:authors ("Jaromir Hradilek" . "jhradilek@gmail.com")) (:maintainers ("Jaromir Hradilek" . "jhradilek@gmail.com")) (:maintainer "Jaromir Hradilek" . "jhradilek@gmail.com"))])
 (manage-minor-mode . [(1 1) ((emacs (24 3))) "Manage your minor-modes easily" tar ((:url . "https://github.com/emacsorphanage/manage-minor-mode") (:commit . "d07d269586233787b4bea4c40df43d6357a40f58") (:revdesc . "d07d26958623") (:keywords "tools" "minor-mode" "manage" "emacs"))])
 (manage-minor-mode-table . [(0 1 3) ((emacs (25 1)) (manage-minor-mode (1 1))) "Manage minor-modes in table" tar ((:url . "https://github.com/jcs-elpa/manage-minor-mode-table") (:commit . "d377094c4ff5e93321e12f53892113083148bdaf") (:revdesc . "d377094c4ff5") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (map-progress . [(1 0 0) ((cl-lib (0 6 1))) "Mapping macros that report progress" tar ((:url . "https://github.com/tarsius/map-progress") (:commit . "1fb916159cd054c233ce3c80d9d01adfae640297") (:revdesc . "v1.0.0-0-g1fb916159cd0") (:keywords "convenience") (:authors ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainers ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li"))])
 (map-regexp . [(1 0 0) ((cl-lib (0 6 1))) "Map over matches of a regular expression" tar ((:url . "https://github.com/tarsius/map-regexp") (:commit . "ae2d1c22f786ad987aef3e319925e80160a887a0") (:revdesc . "v1.0.0-0-gae2d1c22f786") (:keywords "convenience") (:authors ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainers ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li"))])
 (marcopolo . [(0 3 0) ((s (1 9 0)) (dash (2 9 0)) (pkg-info (0 5 0)) (request (0 1 0))) "Emacs client for Docker API" tar ((:url . "https://github.com/nlamirault/marcopolo") (:commit . "ce6ad40d7feab0568924e3bd9659b76e3eecd55e") (:revdesc . "0.3.0-0-gce6ad40d7fea") (:keywords "docker") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (marginalia . [(1 7) ((emacs (27 1)) (compat (30))) "Enrich existing commands with completion annotations" tar ((:url . "https://github.com/minad/marginalia") (:commit . "7a7f3363d042d1bf43ae697f4401638ed18230a5") (:revdesc . "7a7f3363d042") (:keywords "docs" "help" "matching" "completion") (:authors ("Omar Antolín Camarena" . "omar@matem.unam.mx") ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainers ("Omar Antolín Camarena" . "omar@matem.unam.mx") ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Omar Antolín Camarena" . "omar@matem.unam.mx"))])
 (mark-thing-at . [(1 0 0) ((emacs (26)) (choice-program (0 14))) "Mark a pattern at the current point" tar ((:url . "https://github.com/plandes/mark-thing-at") (:commit . "22ce137450890421c8dce79943c96dec79a65d77") (:revdesc . "v1.0.0-0-g22ce13745089") (:keywords "mark" "point" "lisp"))])
 (mark-tools . [(0 3) nil "Some simple tools to access the mark-ring in Emacs" tar ((:url . "https://github.com/stsquad/emacs-mark-tools") (:commit . "0e7ac2522ac84155cab341dc49f7f0b81067133c") (:revdesc . "0e7ac2522ac8") (:authors ("Alex Bennée" . "alex@bennee.com")) (:maintainers ("Alex Bennée" . "alex@bennee.com")) (:maintainer "Alex Bennée" . "alex@bennee.com"))])
 (markdown-changelog . [(0 0 2) ((emacs (26)) (dash (2 13 0))) "Maintain changelog entries" tar ((:url . "https://github.com/plandes/markdown-changelog") (:commit . "403d2cd1cff932ae135692d57062824892e01d13") (:revdesc . "v0.0.2-0-g403d2cd1cff9") (:keywords "markdown" "changelog" "files"))])
 (markdown-mode . [(2 6) ((emacs (27 1))) "Major mode for Markdown-formatted text" tar ((:url . "https://github.com/jrblevin/markdown-mode") (:commit . "193b61605f44c85d261b8bd82e0a213fd8f1ff32") (:revdesc . "193b61605f44") (:keywords "markdown" "github flavored markdown" "itex") (:authors ("Jason R. Blevins" . "jblevins@xbeta.org")) (:maintainers ("Jason R. Blevins" . "jblevins@xbeta.org")) (:maintainer "Jason R. Blevins" . "jblevins@xbeta.org"))])
 (markdown-preview-mode . [(0 9 4) ((emacs (24 4)) (websocket (1 6)) (markdown-mode (2 0)) (cl-lib (0 5)) (web-server (0 1 1))) "Markdown realtime preview minor mode" tar ((:url . "https://github.com/ancane/markdown-preview-mode") (:commit . "dde87b96de9e81dd01d174da67ef68687b3a5eb5") (:revdesc . "dde87b96de9e") (:keywords "markdown" "gfm" "convenience") (:authors ("Igor Shymko" . "igor.shimko@gmail.com")) (:maintainers ("Igor Shymko" . "igor.shimko@gmail.com")) (:maintainer "Igor Shymko" . "igor.shimko@gmail.com"))])
 (markdown-soma . [(0 4 0) ((emacs (25)) (s (1 11 0)) (dash (2 19 1)) (f (0 20 0))) "Live preview for Markdown" tar ((:url . "https://github.com/jasonm23/markdown-soma") (:commit . "a80ed319a835efeaf7d71f49df0be143939bcc13") (:revdesc . "a80ed319a835") (:keywords "wp" "docs" "text" "markdown") (:authors ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainers ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainer "Jason Milkins" . "jasonm23@gmail.com"))])
 (markdown-toc . [(0 1 5) ((s (1 9 0)) (dash (2 11 0)) (markdown-mode (2 1))) "A simple TOC generator for markdown file" tar ((:url . "https://github.com/ardumont/markdown-toc") (:commit . "9565eeaa1d26bc0ab83eb65bd30470888f724044") (:revdesc . "0.1.5-0-g9565eeaa1d26") (:keywords "markdown" "toc" "tools") (:authors ("Antoine R. Dumont" . "(@ardumont)")) (:maintainers ("Antoine R. Dumont" . "(@ardumont)")) (:maintainer "Antoine R. Dumont" . "(@ardumont)"))])
 (markup . [(2 0 1) ((cl-lib (0 5))) "Simple markup generation helpers" tar ((:url . "https://github.com/leoc/markup.el") (:commit . "876da2d3f23473475bb0fd0a1480ae11d2671291") (:revdesc . "876da2d3f234") (:keywords "convenience" "markup" "html") (:authors ("Arthur Leonard Andersen" . "leoc.git@gmail.com")) (:maintainers ("Arthur Leonard Andersen" . "leoc.git@gmail.com")) (:maintainer "Arthur Leonard Andersen" . "leoc.git@gmail.com"))])
 (markup-faces . [(1 0 0) nil "Collection of faces for markup language modes" tar ((:url . "https://github.com/sensorflo/markup-faces") (:commit . "c43612633c6c161857a3bab5752ae192bb03f5f3") (:revdesc . "c43612633c6c") (:keywords "wp" "faces") (:authors ("Florian Kaufmann" . "sensorflo@gmail.com")) (:maintainers ("Florian Kaufmann" . "sensorflo@gmail.com")) (:maintainer "Florian Kaufmann" . "sensorflo@gmail.com"))])
 (marquee-header . [(0 1 0) ((emacs (26 1))) "Code interface for displaying marquee in header" tar ((:url . "https://github.com/jcs-elpa/marquee-header") (:commit . "1fee5bbec486d0755954f5cafda67f342dc7daa1") (:revdesc . "1fee5bbec486") (:keywords "wp" "animation" "marquee") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (marshal . [(0 9 1) ((emacs (25 1)) (ht (2 0))) "Eieio extension for automatic (un)marshalling" tar ((:url . "https://github.com/sigma/marshal.el") (:commit . "490496d974d03906f784707ecc2e0ac36ed84b96") (:revdesc . "490496d974d0") (:keywords "extensions") (:authors ("Yann Hodique" . "yann.hodique@gmail.com")) (:maintainers ("Yann Hodique" . "yann.hodique@gmail.com")) (:maintainer "Yann Hodique" . "yann.hodique@gmail.com"))])
 (mastodon . [(1 1 7) ((emacs (28 1)) (request (0 3 0)) (persist (0 4)) (tp (0 6))) "Client for fediverse services using the Mastodon API" tar ((:url . "https://codeberg.org/martianh/mastodon.el") (:commit . "10be1f9c2845a6012cee84b68dc566ea92df40a6") (:revdesc . "10be1f9c2845") (:authors ("Johnson Denen" . "johnson.denen@gmail.com") ("Marty Hiatt" . "mousebot@disroot.org")) (:maintainers ("Marty Hiatt" . "mousebot@disroot.org")) (:maintainer "Marty Hiatt" . "mousebot@disroot.org"))])
 (material-theme . [(1 4) ((emacs (24 1))) "A Theme based on the colors of the Google Material Design" tar ((:url . "https://github.com/cpaulik/emacs-material-theme") (:commit . "67a496c937542f6ee7c4a2164d23f0296ef3a645") (:revdesc . "67a496c93754") (:keywords "themes") (:authors ("Christoph Paulik" . "cpaulik@gmail.com")) (:maintainers ("Christoph Paulik" . "cpaulik@gmail.com")) (:maintainer "Christoph Paulik" . "cpaulik@gmail.com"))])
 (math-preview . [(5 1 1) ((emacs (26 1)) (json (1 4)) (dash (2 18 0)) (s (1 12 0))) "Preview TeX math equations inline" tar ((:url . "https://gitlab.com/matsievskiysv/math-preview") (:commit . "620de35fc8cf940eba5a567767eac2288708d8cb") (:revdesc . "620de35fc8cf") (:keywords "convenience"))])
 (math-symbol-lists . [(1 3) nil "Lists of Unicode math symbols and latex commands" tar ((:url . "https://github.com/vspinu/math-symbol-lists") (:commit . "590d9f09f8ad9aab747b97f077396a2035dcf50f") (:revdesc . "590d9f09f8ad") (:keywords "unicode" "symbols" "mathematics") (:authors ("Vitalie Spinu" . "spinuvit@gmail.com")) (:maintainers ("Vitalie Spinu" . "spinuvit@gmail.com")) (:maintainer "Vitalie Spinu" . "spinuvit@gmail.com"))])
 (math-tex-convert . [(0 2 0) ((emacs (26 1)) (math-symbol-lists (1 3)) (auctex (12 1))) "Convert LaTeX macros to unicode and back" tar ((:url . "https://github.com/enricoflor/math-tex-convert") (:commit . "8b174d05e8e5269322a1ee90f94cf1ed018d4976") (:revdesc . "8b174d05e8e5") (:authors ("Enrico Flor" . "enrico@eflor.net")) (:maintainers ("Enrico Flor" . "enrico@eflor.net")) (:maintainer "Enrico Flor" . "enrico@eflor.net"))])
 (matlab-mode . [(6 2) ((emacs (27 2))) "Major mode for MATLAB(R) dot-m files" tar ((:url . "https://github.com/mathworks/Emacs-MATLAB-Mode") (:commit . "390bca3fd9ac440e6c3dcdc524e77c7590423f08") (:revdesc . "390bca3fd9ac") (:keywords "matlab(r)") (:authors ("Matt Wette" . "mwette@alumni.caltech.edu") ("Eric M. Ludlam" . "eludlam@mathworks.com")) (:maintainers ("Eric M. Ludlam" . "eludlam@mathworks.com")) (:maintainer "Eric M. Ludlam" . "eludlam@mathworks.com"))])
 (maven-test-mode . [(0 1 5) ((s (1 9)) (emacs (24))) "Utilities for navigating test files and running maven test tasks" tar ((:url . "https://github.com/rranelli/maven-test-mode") (:commit . "f79409907375591283291eb96af4754b1ccc0e6f") (:revdesc . "f79409907375") (:keywords "java" "maven" "test"))])
 (maxframe . [(0 5) nil "[No description available]" tar ((:url . "https://github.com/rmm5t/maxframe.el") (:commit . "4f1dbbe68048864037eae277b9280b90fd701ff1") (:revdesc . "4f1dbbe68048") (:keywords "display" "frame" "window" "maximize"))])
 (maxima . [(0 8 1) ((emacs (25 1)) (s (1 11 0)) (test-simple (1 3 0))) "Major mode for Maxima" tar ((:url . "https://gitlab.com/sasanidas/maxima") (:commit . "1334f44725bd80a265de858d652f3fde4ae401fa") (:revdesc . "1334f44725bd") (:keywords "maxima" "tools" "math") (:maintainers ("Fermin Munoz" . "fmfs@posteo.net")) (:maintainer "Fermin Munoz" . "fmfs@posteo.net"))])
 (mb-url . [(0 12 0) ((emacs (25))) "Multiple Backends for Emacs URL package" tar ((:url . "https://github.com/dochang/mb-url") (:commit . "a9f1e8ab46858c35a600ce304748a7db65400bef") (:revdesc . "0.12.0-0-ga9f1e8ab4685") (:keywords "comm" "data" "processes" "hypermedia") (:authors ("ZHANG Weiyi" . "dochang@gmail.com")) (:maintainers ("ZHANG Weiyi" . "dochang@gmail.com")) (:maintainer "ZHANG Weiyi" . "dochang@gmail.com"))])
 (mbe . [(0 1) ((emacs (24)) (cl-lib (0 5))) "Macros by Example" tar ((:url . "https://github.com/ijp/mbe.el") (:commit . "b022030d6e26198bb8a93a5b0bfe7aa891cd59ec") (:revdesc . "v0.1-0-gb022030d6e26") (:keywords "tools" "macros") (:authors ("Ian Price" . "ianprice90@googlemail.com")) (:maintainers ("Ian Price" . "ianprice90@googlemail.com")) (:maintainer "Ian Price" . "ianprice90@googlemail.com"))])
 (mc-extras . [(1 3 0) ((multiple-cursors (1 2 1))) "Extra functions for multiple-cursors mode" tar ((:url . "https://github.com/knu/mc-extras.el") (:commit . "8718cbdaa7bf3dd5c0f30c66a36a6bfbdf7f07c1") (:revdesc . "8718cbdaa7bf") (:keywords "editing" "cursors") (:authors ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (md4rd . [(0 3 1) ((emacs (25 1)) (hierarchy (0 7 0)) (request (0 3 0)) (cl-lib (0 6 1)) (dash (2 12 0)) (s (1 12 0)) (tree-mode (1 0 0))) "Mode for reddit (browse it)" tar ((:url . "https://github.com/ahungry/md4rd") (:commit . "443c8059af4925d11c93a1293663165c52472f08") (:revdesc . "443c8059af49") (:keywords "ahungry" "reddit" "browse" "news") (:authors ("Matthew Carter" . "m@ahungry.com")) (:maintainers ("Matthew Carter" . "m@ahungry.com")) (:maintainer "Matthew Carter" . "m@ahungry.com"))])
 (mediawiki . [(2 3 1) nil "Mediawiki frontend" tar ((:url . "https://github.com/hexmode/mediawiki-el") (:commit . "5178a1a1dbe37a144d9c82622eb683bd3c61bef1") (:revdesc . "5178a1a1dbe3") (:keywords "mediawiki" "wikipedia" "network" "wiki") (:authors ("Mark A. Hershberger" . "mah@everybody.org")) (:maintainers ("Mark A. Hershberger" . "mah@everybody.org")) (:maintainer "Mark A. Hershberger" . "mah@everybody.org"))])
 (meghanada . [(1 3 2) ((emacs (24 3)) (yasnippet (0 6 1)) (company (0 9 0)) (flycheck (0 23))) "A better java development mode" tar ((:url . "https://github.com/mopemope/meghanada-emacs") (:commit . "59c46cabb7eee715fe810ce59424934a1286df84") (:revdesc . "59c46cabb7ee") (:keywords "languages" "java") (:authors ("Yutaka Matsubara" . "(yutaka.matsubara@gmail.com)")) (:maintainers ("Yutaka Matsubara" . "(yutaka.matsubara@gmail.com)")) (:maintainer "Yutaka Matsubara" . "(yutaka.matsubara@gmail.com)"))])
 (melpa-upstream-visit . [(1 0 0) ((s (1 6 0))) "A set of kludges to visit a melpa-hosted package's homepage" tar ((:url . "https://github.com/laynor/melpa-upstream-visit") (:commit . "7310c74fdead3c0f86ad6eff76cf989e63f70f66") (:revdesc . "7310c74fdead") (:keywords "convenience") (:authors ("Alessandro Piras" . "laynor@gmail.com")) (:maintainers ("Alessandro Piras" . "laynor@gmail.com")) (:maintainer "Alessandro Piras" . "laynor@gmail.com"))])
 (memento-mori . [(0 3 1) ((emacs (24 3))) "Reminder of our mortality" tar ((:url . "https://github.com/gvol/emacs-memento-mori") (:commit . "5dce0fcd3a2c2becf72e8691d0f66e851b8597a1") (:revdesc . "5dce0fcd3a2c") (:keywords "help") (:authors ("Lassi Kortela" . "lassi@lassi.io")) (:maintainers ("Ivan Andrus" . "darthandrus@gmail.com")) (:maintainer "Ivan Andrus" . "darthandrus@gmail.com"))])
 (memoize . [(1 1) nil "Memoization functions" tar ((:url . "https://github.com/skeeto/emacs-memoize") (:commit . "636defefa9168f90bce6fc27431352ac7d01a890") (:revdesc . "1.1-0-g636defefa916") (:authors ("Christopher Wellons" . "mosquitopsu@gmail.com")) (:maintainers ("Christopher Wellons" . "mosquitopsu@gmail.com")) (:maintainer "Christopher Wellons" . "mosquitopsu@gmail.com"))])
 (mentor . [(0 5) ((emacs (25 1)) (xml-rpc (1 6 15)) (seq (1 11)) (async (1 9 3)) (url-scgi (0 7))) "Frontend for the rTorrent bittorrent client" tar ((:url . "https://github.com/skangas/mentor") (:commit . "480602f2ec5467aa2418ee98b328fb85d3b58d0c") (:revdesc . "0.5-0-g480602f2ec54") (:keywords "comm" "processes" "bittorrent") (:authors ("Stefan Kangas" . "stefankangas@gmail.com")) (:maintainers ("Stefan Kangas" . "stefankangas@gmail.com")) (:maintainer "Stefan Kangas" . "stefankangas@gmail.com"))])
 (meow . [(1 5 0) ((emacs (27 1))) "Yet Another modal editing" tar ((:url . "https://github.com/meow-edit/meow") (:commit . "ebf7ebb5eb3ac7bb3cfaca9c32d9063f385aee9a") (:revdesc . "ebf7ebb5eb3a") (:keywords "convenience" "modal-editing"))])
 (meow-tree-sitter . [(2 0 0) ((emacs (29 1)) (meow (1 2 0))) "Tree-sitter powered motions for Meow" tar ((:url . "https://github.com/skissue/meow-tree-sitter") (:commit . "d8dce964fac631a6d44b650a733075e14854159c") (:revdesc . "d8dce964fac6") (:keywords "convenience" "files" "languages" "tools") (:authors ("Ad" . "me@skissue.xyz")) (:maintainers ("Ad" . "me@skissue.xyz")) (:maintainer "Ad" . "me@skissue.xyz"))])
 (merlin . [(4 1) nil "Mode for Merlin, an assistant for OCaml" tar ((:url . "https://github.com/ocaml/merlin") (:commit . "ab02f60994c81166820791b5f465f467d752b8dc") (:revdesc . "v4.1-0-gab02f60994c8") (:keywords "ocaml" "languages") (:authors ("Frédéric Bour" . "frederic.bourlakaban.net")) (:maintainers ("Frédéric Bour" . "frederic.bourlakaban.net")) (:maintainer "Frédéric Bour" . "frederic.bourlakaban.net"))])
 (merlin-ac . [(4 1) nil "Merlin and auto-complete integration" tar ((:url . "https://github.com/ocaml/merlin") (:commit . "ab02f60994c81166820791b5f465f467d752b8dc") (:revdesc . "v4.1-0-gab02f60994c8") (:keywords "ocaml" "languages") (:authors ("Simon Castellan" . "simon.castellaniuwt.fr") ("Frédéric Bour" . "frederic.bourlakaban.net") ("Thomas Refis" . "thomas.refisgmail.com")) (:maintainers ("Simon Castellan" . "simon.castellaniuwt.fr") ("Frédéric Bour" . "frederic.bourlakaban.net") ("Thomas Refis" . "thomas.refisgmail.com")) (:maintainer "Simon Castellan" . "simon.castellaniuwt.fr"))])
 (merlin-company . [(4 1) nil "Merlin and company mode integration" tar ((:url . "https://github.com/ocaml/merlin") (:commit . "ab02f60994c81166820791b5f465f467d752b8dc") (:revdesc . "v4.1-0-gab02f60994c8") (:keywords "ocaml" "languages") (:authors ("Simon Castellan" . "simon.castellaniuwt.fr") ("Frédéric Bour" . "frederic.bourlakaban.net") ("Thomas Refis" . "thomas.refisgmail.com")) (:maintainers ("Simon Castellan" . "simon.castellaniuwt.fr") ("Frédéric Bour" . "frederic.bourlakaban.net") ("Thomas Refis" . "thomas.refisgmail.com")) (:maintainer "Simon Castellan" . "simon.castellaniuwt.fr"))])
 (merlin-eldoc . [(1 3) ((emacs (24 4)) (merlin (3 0))) "Eldoc for OCaml and Reason" tar ((:url . "https://github.com/Khady/merlin-eldoc") (:commit . "bbb1a10f2131c09a7f7f844d4da98efd77f927ae") (:revdesc . "bbb1a10f2131") (:keywords "merlin" "ocaml" "languages" "eldoc") (:authors ("Louis Roché" . "louis@louisroche.net")) (:maintainers ("Louis Roché" . "louis@louisroche.net")) (:maintainer "Louis Roché" . "louis@louisroche.net"))])
 (merlin-iedit . [(4 1) nil "Merlin and iedit integration" tar ((:url . "https://github.com/ocaml/merlin") (:commit . "ab02f60994c81166820791b5f465f467d752b8dc") (:revdesc . "v4.1-0-gab02f60994c8") (:keywords "ocaml" "languages") (:authors ("Simon Castellan" . "simon.castellaniuwt.fr") ("Frédéric Bour" . "frederic.bourlakaban.net") ("Thomas Refis" . "thomas.refisgmail.com")) (:maintainers ("Simon Castellan" . "simon.castellaniuwt.fr") ("Frédéric Bour" . "frederic.bourlakaban.net") ("Thomas Refis" . "thomas.refisgmail.com")) (:maintainer "Simon Castellan" . "simon.castellaniuwt.fr"))])
 (mermaid-docker-mode . [(2 0 2) ((emacs (26 1)) (mermaid-mode (20230517 1527 -4))) "Render mermaid graphs with Docker service" tar ((:url . "https://github.com/KeyWeeUsr/mermaid-docker-mode") (:commit . "92dd790c099f2d90899622421d76cbcc29e36c10") (:revdesc . "2.0.2-0-g92dd790c099f") (:keywords "convenience" "docker" "mermaid" "mmd" "graph" "design" "jpg" "image" "api") (:authors ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainers ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainer "Peter Badida" . "keyweeusr@gmail.com"))])
 (meson-mode . [(0 3) ((emacs (26 1))) "Major mode for the Meson build system files" tar ((:url . "https://github.com/wentasah/meson-mode") (:commit . "70c35d7a303a66cada554c89d02ebd97d45c2a06") (:revdesc . "v0.3-0-g70c35d7a303a") (:keywords "languages" "tools") (:authors ("Michal Sojka" . "sojkam1@fel.cvut.cz")) (:maintainers ("Michal Sojka" . "sojkam1@fel.cvut.cz")) (:maintainer "Michal Sojka" . "sojkam1@fel.cvut.cz"))])
 (meta-presenter . [(1 1 0) nil "A simple multi-file presentation tool for Emacs" tar ((:url . "https://github.com/myTerminal/meta-presenter") (:commit . "3d8c762a7dd7ac39032a3601bd6a717f206e670d") (:revdesc . "3d8c762a7dd7") (:keywords "productivity" "presentation") (:authors ("Mohammed Ismail Ansari" . "team.terminal@gmail.com")) (:maintainers ("Mohammed Ismail Ansari" . "team.terminal@gmail.com")) (:maintainer "Mohammed Ismail Ansari" . "team.terminal@gmail.com"))])
 (metamorph . [(1 0 0) ((emacs (26 1))) "Transform your buffers with lisp" tar ((:url . "https://github.com/AdamNiederer/metamorph") (:commit . "3633e32a9601c491df32d6c2212dbe63dc6484f4") (:revdesc . "3633e32a9601") (:keywords "metaprogramming" "wp") (:authors ("Adam Niederer" . "adam.niederer@gmail.com")) (:maintainers ("Adam Niederer" . "adam.niederer@gmail.com")) (:maintainer "Adam Niederer" . "adam.niederer@gmail.com"))])
 (metaweblog . [(1 1 16) ((emacs (27 1))) "An XML-RPC MetaWeblog and WordPress API client" tar ((:url . "https://github.com/org2blog/org2blog") (:commit . "0d435af91c237351f0880536cb3cf21a91041ba4") (:revdesc . "0d435af91c23") (:keywords "comm") (:authors ("Puneeth Chaganti" . "punchagan+org2blog@gmail.com")) (:maintainers ("Grant Rettke" . "grant@wisdomandwonder.com")) (:maintainer "Grant Rettke" . "grant@wisdomandwonder.com"))])
 (mew . [(6 9) nil "Messaging in the Emacs World" tar ((:url . "https://github.com/kazu-yamamoto/Mew") (:commit . "69a395ec481c66fece53ec07e6a02d82f9e403ee") (:revdesc . "69a395ec481c"))])
 (meyvn . [(1 4) ((emacs (25 1)) (cider (0 23)) (projectile (2 1)) (s (1 12)) (dash (2 17)) (parseedn (1 1 0)) (parseclj (1 1 0)) (geiser (0 12))) "Meyvn client" tar ((:url . "https://github.com/danielsz/meyvn-el") (:commit . "62802ab42ee021f89f980bd3de3e1336ad760944") (:revdesc . "62802ab42ee0") (:authors ("Daniel Szmulewicz" . "daniel.szmulewicz@gmail.com")) (:maintainers ("Daniel Szmulewicz" . "daniel.szmulewicz@gmail.com")) (:maintainer "Daniel Szmulewicz" . "daniel.szmulewicz@gmail.com"))])
 (mgmtconfig-mode . [(0 0 26) ((emacs (24 3))) "Mgmt configuration management language" tar ((:url . "https://github.com/purpleidea/mgmt") (:commit . "1b00af6926d8699d9d04062f28fddd43c6340bac") (:revdesc . "0.0.26-0-g1b00af6926d8") (:keywords "languages") (:authors ("Peter Oliver" . "mgmtconfig@mavit.org.uk")) (:maintainers ("Mgmt contributors" . "https://github.com/purpleidea/mgmt")) (:maintainer "Mgmt contributors" . "https://github.com/purpleidea/mgmt"))])
 (mhc . [(1 2 7) ((calfw (20150703))) "Message Harmonized Calendaring system" tar ((:url . "https://github.com/yoshinari-nomura/mhc") (:commit . "b527a88748651d06222ad24f7417941088515275") (:revdesc . "v1.2.7-0-gb527a8874865") (:keywords "calendar") (:authors ("Yoshinari Nomura" . "nom@quickhack.net")) (:maintainers ("Yoshinari Nomura" . "nom@quickhack.net")) (:maintainer "Yoshinari Nomura" . "nom@quickhack.net"))])
 (miasma-theme . [(1 4 0) nil "Miasma: color theme inspired by the woods" tar ((:url . "https://github.com/daut/miasma-theme.el") (:commit . "c7a424832aaf982cdb2853b269f2b6fc43685195") (:revdesc . "c7a424832aaf"))])
 (mic . [(0 36 0) ((emacs (26 1))) "Minimal and combinable configuration manager" tar ((:url . "https://github.com/ROCKTAKEY/mic") (:commit . "fcb51a8171354d1d912c29095488ed8536b89bb0") (:revdesc . "v0.36.0-0-gfcb51a817135") (:keywords "convenience") (:authors ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainers ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainer "ROCKTAKEY" . "rocktakey@gmail.com"))])
 (migemo . [(1 9 2) ((cl-lib (0 5))) "Japanese incremental search through dynamic pattern expansion" tar ((:url . "https://github.com/emacs-jp/migemo") (:commit . "f42832c8ac462ecbec9a16eb781194f876fba64a") (:revdesc . "f42832c8ac46") (:authors ("Satoru Takabayashi" . "satoru-t@is.aist-nara.ac.jp")) (:maintainers ("Satoru Takabayashi" . "satoru-t@is.aist-nara.ac.jp")) (:maintainer "Satoru Takabayashi" . "satoru-t@is.aist-nara.ac.jp"))])
 (milkode . [(0 4) nil "Command line search and direct jump with Milkode" tar ((:url . "https://github.com/ongaeshi/emacs-milkode") (:commit . "ba97e2aeefa1d9d0b3835bf08edd0de248b0c513") (:revdesc . "ba97e2aeefa1") (:keywords "milkode" "search" "grep" "jump" "keyword"))])
 (mindstream . [(1 0) ((emacs (25 1)) (magit (3 3 0))) "Start writing, stay focused, don't worry" tar ((:url . "https://github.com/countvajhula/mindstream") (:commit . "f95e7fc2c6d529533709ae63a55e8ace9287ec0b") (:revdesc . "v1.0-0-gf95e7fc2c6d5") (:keywords "convenience" "files" "languages" "outlines" "tools" "vc" "wp") (:authors ("Siddhartha Kasivajhula" . "sid@countvajhula.com")) (:maintainers ("Siddhartha Kasivajhula" . "sid@countvajhula.com")) (:maintainer "Siddhartha Kasivajhula" . "sid@countvajhula.com"))])
 (mini-echo . [(0 14 0) ((emacs (29 1)) (dash (2 19 1)) (hide-mode-line (1 0 3))) "Echo buffer status in minibuffer window" tar ((:url . "https://github.com/liuyinz/mini-echo.el") (:commit . "95d1abc3cb7d468dccf6b624fac574e6cffe6e5e") (:revdesc . "95d1abc3cb7d") (:keywords "frames") (:authors ("liuyinz" . "liuyinz95@gmail.com")) (:maintainers ("liuyinz" . "liuyinz95@gmail.com")) (:maintainer "liuyinz" . "liuyinz95@gmail.com"))])
 (mini-modeline . [(20200408 729) ((emacs (25 1)) (dash (2 12 0))) "Display modeline in minibuffer" tar ((:url . "https://github.com/kiennq/emacs-mini-modeline") (:commit . "b761e41479a2564e801ac6c427956203de3d62ca") (:revdesc . "b761e41479a2") (:keywords "convenience" "tools") (:authors ("Kien Nguyen" . "kien.n.quang@gmail.com")) (:maintainers ("Kien Nguyen" . "kien.n.quang@gmail.com")) (:maintainer "Kien Nguyen" . "kien.n.quang@gmail.com"))])
 (minibuffer-complete-cycle . [(1 25 20130814) nil "Cycle through the *Completions* buffer" tar ((:url . "https://github.com/knu/minibuffer-complete-cycle") (:commit . "3df80135887d0169e02294a948711f6dfeca4a6f") (:revdesc . "3df80135887d") (:keywords "completion") (:authors ("Akinori MUSHA" . "knu@iDaemons.org") ("Kevin Rodgers" . "ihs_4664@yahoo.com")) (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (minibuffer-cua . [(1 0 0) nil "Make CUA mode's S-up/S-down work in minibuffer" tar ((:url . "https://github.com/knu/minibuffer-cua.el") (:commit . "e8dcddc24d4f2e8d7987336fb58259e3cc78bbcb") (:revdesc . "e8dcddc24d4f") (:keywords "completion" "editing") (:authors ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (miniedit . [(2 0) nil "Enhanced editing for minibuffer fields" tar ((:url . "https://github.com/emacsorphanage/miniedit") (:commit . "e12bf659c3eb92dd8a4cb77642dc0865c54667a3") (:revdesc . "2.0-0-ge12bf659c3eb"))])
 (minimal-session-saver . [(0 6 2) nil "Very lean session saver" tar ((:url . "https://github.com/rolandwalker/minimal-session-saver") (:commit . "aaba48a8525e1310b221eeb96763304c22e9a4b4") (:revdesc . "v0.6.2-0-gaaba48a8525e") (:keywords "tools" "frames" "project") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (minions . [(1 0 2) ((emacs (26 1)) (compat (30 0 0 0))) "A minor-mode menu for the mode line" tar ((:url . "https://github.com/tarsius/minions") (:commit . "413b95a0d1c7c10d0f8d440d1982062b73d5ea4a") (:revdesc . "v1.0.2-0-g413b95a0d1c7") (:keywords "convenience") (:authors ("Jonas Bernoulli" . "emacs.minions@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.minions@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.minions@jonas.bernoulli.dev"))])
 (minitest . [(0 9 2) ((dash (1 0 0))) "An Emacs mode for ruby minitest files" tar ((:url . "https://github.com/arthurnn/minitest-emacs") (:commit . "97d7d1760b24e117ffd163531b0f57fd4321677b") (:revdesc . "97d7d1760b24"))])
 (mint-mode . [(2 0 0) ((emacs (25 1))) "Major mode for the Mint programming language" tar ((:url . "https://github.com/creatorrr/emacs-mint-mode") (:commit . "7bb0f9946f5833eada199e880fdc4efa6df09e0b") (:revdesc . "7bb0f9946f58") (:keywords "mint" "languages" "processes" "convenience" "tools" "files") (:authors ("Diwank Tomer" . "singh@diwank.name")) (:maintainers ("jgart" . "jgart@dismail.de")) (:maintainer "jgart" . "jgart@dismail.de"))])
 (mips-mode . [(1 2 0) ((emacs (25 1))) "Major-mode for MIPS assembly" tar ((:url . "https://github.com/hlissner/emacs-mips-mode") (:commit . "98795cdc81979821ac35d9f94ce354cd99780c67") (:revdesc . "v1.2.0-0-g98795cdc8197") (:keywords "languages" "mips" "assembly") (:authors ("Henrik Lissner" . "http://github/hlissner")) (:maintainers ("Henrik Lissner" . "contact@henrik.io")) (:maintainer "Henrik Lissner" . "contact@henrik.io"))])
 (mise . [(0 3 0) ((emacs (29 1)) (inheritenv (0 2)) (dash (2 19 1))) "Support for `mise' cli" tar ((:url . "https://github.com/liuyinz/mise.el") (:commit . "20179a58132e5518a0868eac01dcd1d72db2e254") (:revdesc . "20179a58132e") (:keywords "tools" "processes") (:authors ("liuyinz" . "liuyinz95@gmail.com")) (:maintainers ("Liuyinz" . "liuyinz95@gmail.com")) (:maintainer "Liuyinz" . "liuyinz95@gmail.com"))])
 (mistty . [(1 2) ((emacs (29 1))) "Shell/Comint alternative based on term.el" tar ((:url . "https://github.com/szermatt/mistty") (:commit . "f70ea7f5c91f5df6ac0d3a09eaccc283fbdbce70") (:revdesc . "f70ea7f5c91f") (:keywords "convenience" "unix") (:authors ("Stephane Zermatten" . "szermatt@gmx.net")) (:maintainers ("Stephane Zermatten" . "szermatt@gmx.net")) (:maintainer "Stephane Zermatten" . "szermatt@gmx.net"))])
 (mixed-pitch . [(1 1 1) ((emacs (24 3))) "Use a variable pitch, keeping fixed pitch where it's sensible" tar ((:url . "https://gitlab.com/jabranham/mixed-pitch") (:commit . "beb22e85f6073a930f7338a78bd186e3090abdd7") (:revdesc . "beb22e85f607") (:authors ("J. Alexander Branham" . "branham@utexas.edu")) (:maintainers ("J. Alexander Branham" . "branham@utexas.edu")) (:maintainer "J. Alexander Branham" . "branham@utexas.edu"))])
 (mlscroll . [(0 2 2) ((emacs (27 1))) "A scroll bar for the modeline" tar ((:url . "https://github.com/jdtsmith/mlscroll") (:commit . "c1bc37709c27d005190d7fcd6a17376b9413381f") (:revdesc . "c1bc37709c27") (:keywords "convenience"))])
 (mmm-jinja2 . [(0 1) ((mmm-mode (0 5 4))) "MMM submode class for Jinja2 Templates" tar ((:url . "https://github.com/glynnforrest/mmm-jinja2") (:commit . "c8cb763174fa2fb61b9a0e5e0ff8cb0210f8492f") (:revdesc . "c8cb763174fa") (:authors ("Ben Hayden" . "hayden767@gmail.com")) (:maintainers ("Ben Hayden" . "hayden767@gmail.com")) (:maintainer "Ben Hayden" . "hayden767@gmail.com"))])
 (mmm-mode . [(0 5 11) ((emacs (25 1)) (cl-lib (0 2))) "Allow Multiple Major Modes in a buffer" tar ((:url . "https://github.com/dgutov/mmm-mode") (:commit . "b1f5c7dbdc405e6e10d9ddd99a43a6b2ad61b176") (:revdesc . "b1f5c7dbdc40") (:keywords "convenience" "faces" "languages" "tools") (:authors ("Michael Abraham Shulman" . "viritrilbia@gmail.com")) (:maintainers ("Dmitry Gutov" . "dmitry@gutov.dev")) (:maintainer "Dmitry Gutov" . "dmitry@gutov.dev"))])
 (mmt . [(0 2 0) ((emacs (24 1)) (cl-lib (0 3))) "Missing macro tools for Emacs Lisp" tar ((:url . "https://github.com/mrkkrp/mmt") (:commit . "f7db836a10720ee50217012e7e2597ebcf624f90") (:revdesc . "f7db836a1072") (:keywords "macro" "emacs-lisp") (:authors ("Mark Karpov" . "markkarpov@openmailbox.org")) (:maintainers ("Mark Karpov" . "markkarpov@openmailbox.org")) (:maintainer "Mark Karpov" . "markkarpov@openmailbox.org"))])
 (mocha . [(1 1) ((js2-mode (20150909))) "Run Mocha or Jasmine tests" tar ((:url . "https://github.com/scottaj/mocha.el") (:commit . "4ca9495d4b00b753f055152bd4256c07d7b208f4") (:revdesc . "v1.1-0-g4ca9495d4b00") (:keywords "javascript" "mocha" "jasmine"))])
 (mocha-snippets . [(2 0 0) ((yasnippet (0 8 0))) "Yasnippets for the Mocha JS Testing Framework" tar ((:url . "https://github.com/cowboyd/mocha-snippets.el") (:commit . "361a3809f755577406e109b9e44d473dfa7c08e0") (:revdesc . "361a3809f755") (:keywords "test" "javascript") (:authors ("Charles Lowell" . "cowboyd@frontside.io")) (:maintainers ("Charles Lowell" . "cowboyd@frontside.io")) (:maintainer "Charles Lowell" . "cowboyd@frontside.io"))])
 (mocker . [(0 5 0) ((emacs (25 1))) "Mocking framework for emacs" tar ((:url . "https://github.com/sigma/mocker.el") (:commit . "5d739d5170ff42e841cd2755b68151918052da2b") (:revdesc . "5d739d5170ff") (:keywords "lisp" "testing") (:authors ("Yann Hodique" . "yann.hodique@gmail.com")) (:maintainers ("Yann Hodique" . "yann.hodique@gmail.com")) (:maintainer "Yann Hodique" . "yann.hodique@gmail.com"))])
 (modaled . [(0 9 1) ((emacs (25 1))) "Build your own minor modes for modal editing" tar ((:url . "https://github.com/DCsunset/modaled") (:commit . "9a60234760b937728ebdec42b378edf99f29a484") (:revdesc . "v0.9.1-0-g9a60234760b9") (:keywords "convenience" "modal-editing"))])
 (modalka . [(0 1 5) ((emacs (24 4))) "Easily introduce native modal editing of your own design" tar ((:url . "https://github.com/mrkkrp/modalka") (:commit . "1259afa084f58d143d133aac56a6c0c10bc460f2") (:revdesc . "1259afa084f5") (:keywords "modal" "editing") (:authors ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainers ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainer "Mark Karpov" . "markkarpov92@gmail.com"))])
 (mode-icons . [(0 4 0) ((emacs (24)) (cl-lib (0 5))) "Show icons for modes" tar ((:url . "https://github.com/ryuslash/mode-icons") (:commit . "37581ed911e4469f773ddfb7b40a85592d323b76") (:revdesc . "0.4.0-0-g37581ed911e4") (:keywords "multimedia") (:authors ("Tom Willemse" . "tom@ryuslash.org")) (:maintainers ("Tom Willemse" . "tom@ryuslash.org")) (:maintainer "Tom Willemse" . "tom@ryuslash.org"))])
 (mode-line-bell . [(0 2) nil "Flash the mode line instead of ringing the bell" tar ((:url . "https://github.com/purcell/mode-line-bell") (:commit . "4985ba42f5a19f46ddbf9b3622453a9694995ce5") (:revdesc . "4985ba42f5a1") (:keywords "convenience") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (mode-line-debug . [(1 4 4) ((emacs (26 1)) (compat (30 0 0 0))) "Show status of debug-on-error in mode-line" tar ((:url . "https://github.com/tarsius/mode-line-debug") (:commit . "a88406d1a999107610a765550c3bc4d64850f8a0") (:revdesc . "v1.4.4-0-ga88406d1a999") (:keywords "convenience" "lisp") (:authors ("Jonas Bernoulli" . "emacs.mode-line-debug@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.mode-line-debug@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.mode-line-debug@jonas.bernoulli.dev"))])
 (modelica-mode . [(2 0 0) ((emacs (27 1))) "Major mode for editing Modelica files" tar ((:url . "https://github.com/modelica-tools/modelica-mode") (:commit . "291f1bb8147693e21054722757f1e2cef4b27d12") (:revdesc . "291f1bb81476") (:keywords "languages" "continuous system modeling"))])
 (modern-cpp-font-lock . [(0 1 3) nil "Font-locking for \"Modern C++\"" tar ((:url . "https://github.com/ludwigpacifici/modern-cpp-font-lock") (:commit . "3e9c18b5a2ade485565f5191f12a724f1969dbb0") (:revdesc . "3e9c18b5a2ad") (:keywords "languages" "c++" "cpp" "font-lock") (:authors ("Ludwig PACIFICI" . "ludwig@lud.cc")) (:maintainers ("Ludwig PACIFICI" . "ludwig@lud.cc")) (:maintainer "Ludwig PACIFICI" . "ludwig@lud.cc"))])
 (modern-fringes . [(4 5) nil "Replaces default fringe bitmaps with better looking ones" tar ((:url . "https://github.com/SpecialBomb/emacs-modern-fringes") (:commit . "98473694a33922cfdddb18b4791028e4854b53b5") (:revdesc . "4.5-0-g98473694a339") (:keywords "themes" "fringes" "convenience") (:authors ("Quen Jankosky" . "quen.jankosky@gmail.com")) (:maintainers ("Quen Jankosky" . "quen.jankosky@gmail.com")) (:maintainer "Quen Jankosky" . "quen.jankosky@gmail.com"))])
 (modular-config . [(0 0 5) ((emacs (24 3))) "Organize your config into small and loadable modules" tar ((:url . "https://github.com/SidharthArya/modular-config.el") (:commit . "3c78fde6b7c53857c712408691427536d3c891bc") (:revdesc . "3c78fde6b7c5") (:keywords "startup" "lisp" "tools") (:authors ("Sidharth Arya" . "sidhartharya10@gmail.com")) (:maintainers ("Sidharth Arya" . "sidhartharya10@gmail.com")) (:maintainer "Sidharth Arya" . "sidhartharya10@gmail.com"))])
 (modus-themes . [(4 6 0) ((emacs (27 1))) "Elegant, highly legible and customizable themes" tar ((:url . "https://github.com/protesilaos/modus-themes") (:commit . "895e10936adac93aa8187c9cc91092dbca898677") (:revdesc . "895e10936ada") (:keywords "faces" "theme" "accessibility") (:authors ("Protesilaos Stavrou" . "info@protesilaos.com")) (:maintainers ("Protesilaos Stavrou" . "info@protesilaos.com")) (:maintainer "Protesilaos Stavrou" . "info@protesilaos.com"))])
 (moe-theme . [(1 0 1) nil "A colorful eye-candy theme. Moe, moe, kyun!" tar ((:url . "https://github.com/kuanyui/moe-theme.el") (:commit . "01d00a8d75b19f641b639ba23793cdd507c61f05") (:revdesc . "01d00a8d75b1") (:keywords "themes") (:authors ("kuanyui" . "azazabc123@gmail.com")) (:maintainers ("kuanyui" . "azazabc123@gmail.com")) (:maintainer "kuanyui" . "azazabc123@gmail.com"))])
 (monitor . [(0 3 0) ((dash (2 13 0))) "Utilities for monitoring expressions" tar ((:url . "https://github.com/GuiltyDolphin/monitor") (:commit . "8c67c06f60a89b2583bae90afc91a7e7d73260fd") (:revdesc . "8c67c06f60a8") (:keywords "lisp" "monitor" "utility") (:authors ("Ben Moon" . "guiltydolphin@gmail.com")) (:maintainers ("Ben Moon" . "guiltydolphin@gmail.com")) (:maintainer "Ben Moon" . "guiltydolphin@gmail.com"))])
 (monkeytype . [(0 1 5) ((emacs (25 1)) (scrollable-quick-peek (0 1 0))) "Mode for speed typing" tar ((:url . "https://github.com/jpablobr/emacs-monkeytype") (:commit . "0e949d08198c0bd003f1d5c8cdceb7e36bef22f7") (:revdesc . "0e949d08198c") (:keywords "games") (:authors ("Pablo Barrantes" . "xjpablobrx@gmail.com")) (:maintainers ("Pablo Barrantes" . "xjpablobrx@gmail.com")) (:maintainer "Pablo Barrantes" . "xjpablobrx@gmail.com"))])
 (monky . [(0 1) nil "Control Hg from Emacs" tar ((:url . "https://github.com/ananthakumaran/monky") (:commit . "099f1af9d3f6f6143f5e98a9b844f965a011a120") (:revdesc . "099f1af9d3f6") (:keywords "tools") (:authors ("Anantha kumaran" . "ananthakumaran@gmail.com")) (:maintainers ("Anantha kumaran" . "ananthakumaran@gmail.com")) (:maintainer "Anantha kumaran" . "ananthakumaran@gmail.com"))])
 (monokai-theme . [(3 5 3) nil "A fruity color theme for Emacs" tar ((:url . "https://github.com/oneKelvinSmith/monokai-emacs") (:commit . "1143c072f5153ae1a69807e5e8af163069b947d2") (:revdesc . "1143c072f515") (:authors ("Kelvin Smith" . "oneKelvinSmith@gmail.com")) (:maintainers ("Kelvin Smith" . "oneKelvinSmith@gmail.com")) (:maintainer "Kelvin Smith" . "oneKelvinSmith@gmail.com"))])
 (monroe . [(0 3 1) nil "Yet another client for nREPL" tar ((:url . "https://github.com/sanel/monroe") (:commit . "0b9b043f042145bf62969add7ec476ea51da7cbd") (:revdesc . "0b9b043f0421") (:keywords "languages" "clojure" "nrepl" "lisp") (:authors ("Sanel Zukan" . "sanelz@gmail.com")) (:maintainers ("Sanel Zukan" . "sanelz@gmail.com")) (:maintainer "Sanel Zukan" . "sanelz@gmail.com"))])
 (mood-line . [(3 1 1) ((emacs (26 1))) "A minimal mode line inspired by doom-modeline" tar ((:url . "https://gitlab.com/jessieh/mood-line") (:commit . "d5b6b5b3552a5b84f4f887e2f805d9e72747fab2") (:revdesc . "d5b6b5b3552a") (:keywords "mode-line" "faces") (:authors ("Jessie Hildebrandt" . "jessieh.net")) (:maintainers ("Jessie Hildebrandt" . "jessieh.net")) (:maintainer "Jessie Hildebrandt" . "jessieh.net"))])
 (mood-one-theme . [(1 2 2) ((emacs (27 1))) "A dark color scheme inspired by the Doom One theme" tar ((:url . "https://gitlab.com/jessieh/mood-one-theme") (:commit . "dfbc81900737d3382a340feeed24d2bcd9bdedb0") (:revdesc . "dfbc81900737") (:keywords "mode-line" "faces") (:authors ("Jessie Hildebrandt" . "jessieh.net")) (:maintainers ("Jessie Hildebrandt" . "jessieh.net")) (:maintainer "Jessie Hildebrandt" . "jessieh.net"))])
 (moody . [(1 1 1) ((emacs (26 1)) (compat (30 0 0 0))) "Tabs and ribbons for the mode line" tar ((:url . "https://github.com/tarsius/moody") (:commit . "2f249978531ff1ec9f601c1e8f2ce83a1b50520e") (:revdesc . "v1.1.1-0-g2f249978531f") (:keywords "faces") (:authors ("Jonas Bernoulli" . "emacs.moody@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.moody@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.moody@jonas.bernoulli.dev"))])
 (moom . [(1 6 0) ((emacs (25 1))) "Commands to control frame position and size" tar ((:url . "https://github.com/takaxp/moom") (:commit . "f94cf84138a81212ffe856599834f7824a1b6e95") (:revdesc . "f94cf84138a8") (:keywords "frames" "faces" "convenience") (:authors ("Takaaki ISHIKAWA" . "takaxpatieeedotorg")) (:maintainers ("Takaaki ISHIKAWA" . "takaxpatieeedotorg")) (:maintainer "Takaaki ISHIKAWA" . "takaxpatieeedotorg"))])
 (morlock . [(1 2 0) ((emacs (26 1)) (compat (30 0 0 0))) "More font-lock keywords for elisp" tar ((:url . "https://github.com/tarsius/morlock") (:commit . "cd349e401fd55ce2eab21fb02474ae8aeee39252") (:revdesc . "v1.2.0-0-gcd349e401fd5") (:keywords "convenience") (:authors ("Jonas Bernoulli" . "emacs.morlock@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.morlock@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.morlock@jonas.bernoulli.dev"))])
 (mosey . [(0 2) ((emacs (24 4))) "Mosey around your buffers" tar ((:url . "https://github.com/alphapapa/mosey.el") (:commit . "2e3ac9d334fa2937ed5267193dfd25d8e1f14dc2") (:revdesc . "0.2-0-g2e3ac9d334fa") (:keywords "convenience") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (most-faces . [(0 2) ((emacs (24))) "A List of Most Available Faces" tar ((:url . "https://codeberg.org/mekeor/most-faces") (:commit . "e37cd1baa74f1bdf3230a9174e5c6cde73e3474c") (:revdesc . "e37cd1baa74f") (:keywords "faces") (:authors ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainers ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainer "Mekeor Melire" . "mekeor@posteo.de"))])
 (most-used-words . [(0 2) ((emacs (24 3))) "Display most used words in buffer" tar ((:url . "https://github.com/udyantw/most-used-words") (:commit . "90c09da92b30c6497e9141f0edfe7842440c4d53") (:revdesc . "90c09da92b30") (:keywords "convenience" "wp") (:authors ("Udyant Wig" . "udyant.wig@gmail.com")) (:maintainers ("Udyant Wig" . "udyant.wig@gmail.com")) (:maintainer "Udyant Wig" . "udyant.wig@gmail.com"))])
 (move-dup . [(2 0 0) ((emacs (25 1))) "Eclipse-like moving and duplicating lines or rectangles" tar ((:url . "https://github.com/wyuenho/move-dup") (:commit . "bf2e578b89d7e7bf0b5500d9afcf49ac6ec2dcd1") (:revdesc . "bf2e578b89d7") (:keywords "convenience" "text" "edit") (:authors ("Jimmy Yuen Ho Wong" . "wyuenho@gmail.com")) (:maintainers ("Jimmy Yuen Ho Wong" . "wyuenho@gmail.com")) (:maintainer "Jimmy Yuen Ho Wong" . "wyuenho@gmail.com"))])
 (move-mode . [(1 1 1) ((emacs (25 1))) "A major-mode for editing Move language" tar ((:url . "https://github.com/amnn/move-mode") (:commit . "6e4aaf6aae1e9b4aee096557c9f7b1f3550a1e59") (:revdesc . "6e4aaf6aae1e") (:keywords "languages"))])
 (move-text . [(2 0 10) nil "Move current line or region with M-up or M-down" tar ((:url . "https://github.com/emacsfodder/move-text") (:commit . "c47727ada2c17d2832d62079ca981852ae0b0623") (:revdesc . "c47727ada2c1") (:keywords "edit") (:authors ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainers ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainer "Jason Milkins" . "jasonm23@gmail.com"))])
 (mowedline . [(3 3 0) nil "Elisp utilities for using mowedline" tar ((:url . "https://github.com/retroj/mowedline") (:commit . "c17501b48ded8261d815ab60bf14cddf7040be72") (:revdesc . "3.3.0-0-gc17501b48ded") (:authors ("John Foerch" . "jjfoerch@earthlink.net")) (:maintainers ("John Foerch" . "jjfoerch@earthlink.net")) (:maintainer "John Foerch" . "jjfoerch@earthlink.net"))])
 (mowie . [(0 1 1) ((emacs (28 1))) "Cycle Through Point-Moving Commands" tar ((:url . "https://codeberg.org/mekeor/mowie") (:commit . "7b826c751014a294b493a6bfebe1cda6a1832ab0") (:revdesc . "7b826c751014") (:keywords "convenience") (:authors ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainers ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainer "Mekeor Melire" . "mekeor@posteo.de"))])
 (mozc . [(2 30 5544 102) ((emacs (24 3))) "Minor mode to input Japanese with Mozc" tar ((:url . "https://github.com/google/mozc") (:commit . "5e6abfe1853b080766def432b746a9bed79e54b0") (:revdesc . "2.30.5544.102-0-g5e6abfe1853b") (:keywords "mule" "multilingual" "input method"))])
 (mozc-temp . [(1 0 0) ((emacs (24)) (dash (2 10 0)) (mozc (0))) "Use mozc temporarily" tar ((:url . "https://github.com/HKey/mozc-temp") (:commit . "7f5dd5fc8ceeca9b1822f7e056a4be67e2e74959") (:revdesc . "7f5dd5fc8cee") (:authors ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainers ("Hiroki YAMAKAWA" . "s06139@gmail.com")) (:maintainer "Hiroki YAMAKAWA" . "s06139@gmail.com"))])
 (mpdel . [(2 1 0) ((emacs (25 1)) (libmpdel (1 2 0)) (navigel (0 7 0))) "Play and control your MPD music" tar ((:url . "https://github.com/mpdel/mpdel") (:commit . "365b2661e56165c53eadd28d3e0a5f9d594412c7") (:revdesc . "v2.1.0-0-g365b2661e561") (:keywords "multimedia") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (mpdel-embark . [(0 4 0) ((emacs (26 1)) (mpdel (2 0 0)) (libmpdel (2 0 0)) (embark (0 19))) "Integrate MPDel with Embark" tar ((:url . "https://github.com/mpdel/mpdel-embark") (:commit . "31d91a62b680fb4472ec34c04ac6af80bb3cf4b8") (:revdesc . "v0.4.0-0-g31d91a62b680") (:keywords "multimedia") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (mpdmacs . [(1 0 0) ((emacs (29 1)) (elmpd (0 3))) "A lightweight MPD client" tar ((:url . "https://github.com/sp1ff/mpdmacs") (:commit . "fca8374804216fb0533b5cbe92199dc4179033db") (:revdesc . "1.0.0-0-gfca837480421") (:keywords "comm") (:authors ("Michael Herstine" . "sp1ff@pobox.com")) (:maintainers ("Michael Herstine" . "sp1ff@pobox.com")) (:maintainer "Michael Herstine" . "sp1ff@pobox.com"))])
 (mpmc-queue . [(0 1 1) ((emacs (26 0)) (queue (0 2 0))) "A multiple-producer-multiple-consumer queue" tar ((:url . "https://github.com/smizoe/mpmc-queue") (:commit . "4775ddcb120528828ef1fcb7ee761524a0907a31") (:revdesc . "0.1.1-0-g4775ddcb1205") (:keywords "lisp" "async") (:authors ("Sho Mizoe" . "sho.mizoe@gmail.com")) (:maintainers ("Sho Mizoe" . "sho.mizoe@gmail.com")) (:maintainer "Sho Mizoe" . "sho.mizoe@gmail.com"))])
 (mpv . [(0 2 0) ((cl-lib (0 5)) (emacs (25 1)) (json (1 3)) (org (8 0))) "Control mpv for easy note-taking" tar ((:url . "https://github.com/kljohann/mpv.el") (:commit . "4fd8baa508dbc1a6b42b4e40292c0dbb0f19c9b9") (:revdesc . "4fd8baa508db") (:keywords "tools" "multimedia") (:authors ("Johann Klähn" . "johann@jklaehn.de")) (:maintainers ("Johann Klähn" . "johann@jklaehn.de")) (:maintainer "Johann Klähn" . "johann@jklaehn.de"))])
 (mqtt-mode . [(0 1 0) ((emacs (25)) (dash (2 12 0))) "Client for interaction with MQTT servers" tar ((:url . "https://github.com/andrmuel/mqtt-mode") (:commit . "613e70e9b9940e635e779994b5c83f86eb62c8e6") (:revdesc . "613e70e9b994") (:keywords "tools") (:authors ("Andreas Müller" . "code@0x7.ch")) (:maintainers ("Andreas Müller" . "code@0x7.ch")) (:maintainer "Andreas Müller" . "code@0x7.ch"))])
 (msvc . [(1 4 3) ((emacs (24)) (cl-lib (0 5)) (cedet (1 0)) (ac-clang (2 0 0))) "Microsoft Visual C/C++ mode" tar ((:url . "https://github.com/yaruopooner/msvc") (:commit . "1bf173b5da3fbf2bdb799116e2a1f31916c1e16e") (:revdesc . "v1.4.3-0-g1bf173b5da3f") (:keywords "languages" "completion" "syntax check" "mode" "intellisense"))])
 (mtg-deck-mode . [(0 2) ((emacs (24 4))) "Major mode to edit MTG decks" tar ((:url . "https://github.com/mattiasb/mtg-deck-mode") (:commit . "7774641630ef85999ab2f6d57eebddbc7c1e7244") (:revdesc . "v0.2-0-g7774641630ef") (:keywords "data" "mtg" "magic") (:authors ("Mattias Bengtsson" . "mattias.jc.bengtsson@gmail.com")) (:maintainers ("Mattias Bengtsson" . "mattias.jc.bengtsson@gmail.com")) (:maintainer "Mattias Bengtsson" . "mattias.jc.bengtsson@gmail.com"))])
 (mu4e-alert . [(1 0) ((alert (1 2)) (s (1 10 0)) (ht (2 0)) (emacs (24 1))) "Desktop notification for mu4e" tar ((:url . "https://github.com/xzz53/mu4e-alert") (:commit . "3453e25ff6c07c1b768b2a79fdb9fc5c97100e76") (:revdesc . "3453e25ff6c0") (:keywords "mail" "convenience") (:authors ("Iqbal Ansari" . "iqbalansari02@yahoo.com")) (:maintainers ("Iqbal Ansari" . "iqbalansari02@yahoo.com")) (:maintainer "Iqbal Ansari" . "iqbalansari02@yahoo.com"))])
 (mu4e-column-faces . [(1 2 1) ((emacs (25 3))) "Faces for individual mu4e columns" tar ((:url . "https://github.com/Alexander-Miller/mu4e-column-faces") (:commit . "1bbb646ea07deb1bd2daa4c6eb36e0f65aac40b0") (:revdesc . "1bbb646ea07d") (:authors ("Alexander Miller" . "alexanderm@web.de")) (:maintainers ("Alexander Miller" . "alexanderm@web.de")) (:maintainer "Alexander Miller" . "alexanderm@web.de"))])
 (mu4e-overview . [(0 5 0) ((emacs (26))) "Show overview of maildir" tar ((:url . "https://github.com/mkcms/mu4e-overview") (:commit . "25a1c0c5fbac240e5faa1518b511609b709e3c53") (:revdesc . "0.5.0-0-g25a1c0c5fbac") (:keywords "mail" "tools") (:authors ("Michał Krzywkowski" . "k.michal@zoho.com")) (:maintainers ("Michał Krzywkowski" . "k.michal@zoho.com")) (:maintainer "Michał Krzywkowski" . "k.michal@zoho.com"))])
 (mu4e-views . [(0 7) ((emacs (26 1)) (xwidgets-reuse (0 3)) (ht (2 2)) (esxml (20210323 1102))) "View emails in mu4e using xwidget-webkit" tar ((:url . "https://github.com/lordpretzel/mu4e-views") (:commit . "e0f60e314d034e02fbc3696c3cb9e3598eed9070") (:revdesc . "e0f60e314d03") (:keywords "mail") (:authors ("Boris Glavic" . "lordpretzel@gmail.com")) (:maintainers ("Boris Glavic" . "lordpretzel@gmail.com")) (:maintainer "Boris Glavic" . "lordpretzel@gmail.com"))])
 (mu4easy . [(1 4) ((emacs (25 1)) (mu4e-column-faces (1 2 1)) (mu4e-alert (1 0)) (org-msg (4 0))) "Packages + configs for using mu4e with multiple accounts" tar ((:url . "https://github.com/danielfleischer/mu4easy") (:commit . "c23930ce118ba498584e3b373f24c09aebdd0f45") (:revdesc . "c23930ce118b") (:keywords "mail") (:authors ("Daniel Fleischer" . "danflscr@gmail.com")) (:maintainers ("Daniel Fleischer" . "danflscr@gmail.com")) (:maintainer "Daniel Fleischer" . "danflscr@gmail.com"))])
 (mugur . [(2 0) ((emacs (26 1)) (s (1 12 0)) (anaphora (1 0 4)) (dash (2 18 1)) (cl-lib (1 0))) "Configurator for QMK compatible keyboards" tar ((:url . "https://github.com/mihaiolteanu/mugur") (:commit . "b8ebfd18a579b834d062082a8018f73561a0cde1") (:revdesc . "b8ebfd18a579") (:keywords "multimedia") (:authors ("Mihai Olteanu" . "mihai_olteanu@fastmail.fm")) (:maintainers ("Mihai Olteanu" . "mihai_olteanu@fastmail.fm")) (:maintainer "Mihai Olteanu" . "mihai_olteanu@fastmail.fm"))])
 (multi . [(2 0 1) ((emacs (24))) "Clojure-style multi-methods for emacs lisp" tar ((:url . "https://github.com/kurisuwhyte/emacs-multi") (:commit . "884203b11fdac8374ec644cca975469aab263404") (:revdesc . "884203b11fda") (:keywords "multimethod" "generic" "predicate" "dispatch") (:authors ("Christina Whyte" . "kurisu.whyte@gmail.com")) (:maintainers ("Christina Whyte" . "kurisu.whyte@gmail.com")) (:maintainer "Christina Whyte" . "kurisu.whyte@gmail.com"))])
 (multi-line . [(0 1 6) ((emacs (24 3)) (s (1 9 0)) (cl-lib (0 5)) (dash (2 12 0)) (shut-up (0 3 2))) "Multi-line statements" tar ((:url . "https://github.com/colonelpanic8/multi-line") (:commit . "06ea7294c4e4ace0c3253b7952a6d937a169eb55") (:revdesc . "06ea7294c4e4") (:keywords "multi" "line" "length" "whitespace" "programming" "tools" "convenience" "files") (:authors ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainers ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainer "Ivan Malison" . "IvanMalison@gmail.com"))])
 (multi-project . [(0 0 33) ((emacs (25))) "Find files, compile, and search for multiple projects." tar ((:commit . "983a8125e5569a45c592b2f73c4d9740b7d69dc1") (:authors ("Shawn Ellis" . "shawn.ellis17@gmail.com")) (:maintainers ("Shawn Ellis" . "shawn.ellis17@gmail.com")) (:maintainer "Shawn Ellis" . "shawn.ellis17@gmail.com") (:keywords "convenience" "project" "management") (:url . "https://hg.osdn.net/view/multi-project/multi-project"))])
 (multi-run . [(1) ((emacs (24)) (window-layout (1 4))) "Manage multiple terminals and run commands on them" tar ((:url . "https://github.com/sagarjha/multi-run") (:commit . "87d9eed414999fd94685148d39e5308c099e65ca") (:revdesc . "87d9eed41499") (:keywords "tools" "terminals"))])
 (multi-web-mode . [(0 2 1) nil "Multiple major mode support for web editing" tar ((:url . "https://github.com/fgallina/multi-web-mode") (:commit . "0517b9e2b3052533ac0cb71eba7073ed309fce06") (:revdesc . "0517b9e2b305") (:keywords "convenience" "languages" "wp") (:authors ("Fabián Ezequiel Gallina" . "fabian@gnu.org.ar")) (:maintainers ("Fabián Ezequiel Gallina" . "fabian@gnu.org.ar")) (:maintainer "Fabián Ezequiel Gallina" . "fabian@gnu.org.ar"))])
 (multiple-cursors . [(1 4 0) ((cl-lib (0 5))) "Multiple cursors for Emacs" tar ((:url . "https://github.com/magnars/multiple-cursors.el") (:commit . "b3bd49c756cd959c0fb998d27eaf3d273570b05e") (:revdesc . "b3bd49c756cd") (:keywords "editing" "cursors") (:authors ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (multitran . [(0 4 16) ((emacs (24)) (cl-lib (0 5))) "Interface to multitran" tar ((:url . "https://github.com/zevlg/multitran.el") (:commit . "6244e227bcf57eed391eecb34bae445f9c17e809") (:revdesc . "6244e227bcf5") (:keywords "dictionary" "hypermedia") (:authors ("Zajcev Evgeny" . "zevlg@yandex.ru")) (:maintainers ("Zajcev Evgeny" . "zevlg@yandex.ru")) (:maintainer "Zajcev Evgeny" . "zevlg@yandex.ru"))])
 (mustache . [(0 23) ((ht (0 9)) (s (1 3 0)) (dash (1 2 0))) "A mustache templating library in emacs lisp" tar ((:url . "https://github.com/Wilfred/mustache.el") (:commit . "b0ea352813592424164520a49e86c04600242752") (:revdesc . "b0ea35281359") (:keywords "mustache" "template") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (mustache-mode . [(1 3) nil "A major mode for editing Mustache files" tar ((:url . "https://github.com/mustache/emacs") (:commit . "bf9897eb287ca47ced65d7d4e07ea61ea0aec39f") (:revdesc . "bf9897eb287c"))])
 (mwim . [(0 4) nil "Switch between the beginning/end of line or code" tar ((:url . "https://github.com/alezost/mwim.el") (:commit . "462207227b98a6a4356d51419f5ad5ba9356e5cf") (:revdesc . "462207227b98") (:keywords "convenience") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (my-repo-pins . [(0 5) ((emacs (26 1))) "Keep your git repositories organized" tar ((:url . "https://github.com/picnoir/my-repo-pins") (:commit . "e6fe3864e244e6db74b668d24857c04472b2d475") (:revdesc . "e6fe3864e244") (:authors ("Félix Baylac Jacqué" . "felixatalternativebit.fr")) (:maintainers ("Félix Baylac Jacqué" . "felixatalternativebit.fr")) (:maintainer "Félix Baylac Jacqué" . "felixatalternativebit.fr"))])
 (mybigword . [(0 3 0) ((emacs (26 1)) (avy (0 5 0))) "Vocabulary builder using Zipf to extract English big words" tar ((:url . "https://github.com/redguardtoo/mybigword") (:commit . "13574e2c47a670df4b776b88bd633b2e8a82b2b2") (:revdesc . "13574e2c47a6") (:keywords "convenience") (:authors ("Chen Bin" . "chenbinDOTshATgmail.com")) (:maintainers ("Chen Bin" . "chenbinDOTshATgmail.com")) (:maintainer "Chen Bin" . "chenbinDOTshATgmail.com"))])
 (mybuild-mode . [(0 2 0) ((emacs (24 3))) "Major mode for editing Mybuild files from Embox" tar ((:url . "https://github.com/easimonenko/mybuild-mode") (:commit . "54e3c31e3b5f133eb8611a3759e59733b17e33e3") (:revdesc . "v0.2.0-0-g54e3c31e3b5f") (:keywords "languages") (:authors ("Evgeny Simonenko" . "easimonenko@gmail.com")) (:maintainers ("Evgeny Simonenko" . "easimonenko@gmail.com")) (:maintainer "Evgeny Simonenko" . "easimonenko@gmail.com"))])
 (mykie . [(0 3 1) ((emacs (24 3)) (cl-lib (0 5))) "Command multiplexer: Register multiple functions to a keybind" tar ((:url . "https://github.com/yuutayamada/mykie-el") (:commit . "ab8f7549f9018c26278d101af1b90997c9e5e0b3") (:revdesc . "ab8f7549f901") (:keywords "emacs" "configuration" "keybind") (:authors ("Yuta Yamada" . "cokesboy\"at\"gmail.com")) (:maintainers ("Yuta Yamada" . "cokesboy\"at\"gmail.com")) (:maintainer "Yuta Yamada" . "cokesboy\"at\"gmail.com"))])
 (myrddin-mode . [(0 1) ((emacs (24 3))) "Major mode for editing Myrddin source files" tar ((:url . "https://git.sr.ht/~jakob/myrddin-mode") (:commit . "b996da5e3bae842eacba4b3e429899bb841b077e") (:revdesc . "v0.1-0-gb996da5e3bae") (:keywords "languages") (:authors ("Jakob L. Kreuze" . "zerodaysfordays@sdf.lonestar.org")) (:maintainers ("Jakob L. Kreuze" . "zerodaysfordays@sdf.lonestar.org")) (:maintainer "Jakob L. Kreuze" . "zerodaysfordays@sdf.lonestar.org"))])
 (mysql-to-org . [(1 0 0) ((emacs (24 3)) (s (1 11 0))) "Minor mode to output the results of mysql queries to org tables" tar ((:url . "https://github.com/mallt/mysql-to-org-mode") (:commit . "0f51b174a0ee6c9820baf9d79783923b270f3ffc") (:revdesc . "0f51b174a0ee") (:authors ("Tijs Mallaerts" . "tijs.mallaerts@gmail.com")) (:maintainers ("Tijs Mallaerts" . "tijs.mallaerts@gmail.com")) (:maintainer "Tijs Mallaerts" . "tijs.mallaerts@gmail.com"))])
 (myterminal-controls . [(1 3 0) ((emacs (24)) (cl-lib (0 5))) "Quick toggle controls at a key-stroke" tar ((:url . "https://github.com/myTerminal/myterminal-controls") (:commit . "df144b269bc274162602e50c692be20ac9b90547") (:revdesc . "df144b269bc2") (:keywords "convenience" "shortcuts") (:authors ("Mohammed Ismail Ansari" . "team.terminal@gmail.com")) (:maintainers ("Mohammed Ismail Ansari" . "team.terminal@gmail.com")) (:maintainer "Mohammed Ismail Ansari" . "team.terminal@gmail.com"))])
 (name-this-color . [(0 3 0) ((emacs (24)) (cl-lib (0 5)) (dash (2 11 0))) "Match RGB codes to names easily and precisely" tar ((:url . "https://github.com/knl/name-this-color.el") (:commit . "e37cd1291d5d68d4c8d6386eab9cb9d94fd3bcfa") (:revdesc . "0.3.0-0-ge37cd1291d5d") (:keywords "lisp" "color" "hex" "rgb" "shade" "name"))])
 (nameless . [(1 0 2) ((emacs (24 4))) "Hide package namespace in your emacs-lisp code" tar ((:url . "https://github.com/Malabarba/Nameless") (:commit . "ab1a5c589378334eafca105af1a17f73b9065423") (:revdesc . "ab1a5c589378") (:keywords "convenience" "lisp") (:authors ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainers ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com"))])
 (names . [(20151201 0) ((emacs (24 1)) (cl-lib (0 5))) "Namespaces for emacs-lisp. Avoid name clobbering without hiding symbols" tar ((:url . "https://github.com/Malabarba/names") (:commit . "00862c57ae6363ba86d1e5ce138929a1b6d5c7e6") (:revdesc . "00862c57ae63") (:keywords "extensions" "lisp") (:authors ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainers ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com"))])
 (narrow-reindent . [(0 2 0) ((emacs (24 4))) "Defines a minor mode to left-align narrowed regions" tar ((:url . "https://github.com/emallson/narrow-reindent.el") (:commit . "87466aac4dbeb79597124dd077bf5c704872fd3d") (:revdesc . "87466aac4dbe") (:authors ("J David Smith" . "emallson@atlanis.net")) (:maintainers ("J David Smith" . "emallson@atlanis.net")) (:maintainer "J David Smith" . "emallson@atlanis.net"))])
 (narrowed-page-navigation . [(0 1 0) ((emacs (24)) (cl-lib (0 5))) "A minor mode for showing one page at a time" tar ((:url . "https://github.com/david-christiansen/narrowed-page-navigation") (:commit . "b215adbac4873f56fbab65772062f0f5be8058a1") (:revdesc . "b215adbac487") (:keywords "outlines") (:authors ("David Raymond Christiansen" . "david@davidchristiansen.dk")) (:maintainers ("David Raymond Christiansen" . "david@davidchristiansen.dk")) (:maintainer "David Raymond Christiansen" . "david@davidchristiansen.dk"))])
 (nasm-mode . [(1 1 1) ((emacs (24 3))) "NASM x86 assembly major mode" tar ((:url . "https://github.com/skeeto/nasm-mode") (:commit . "d990ed94d902b74a5c834fb567e03307607cee45") (:revdesc . "1.1.1-0-gd990ed94d902") (:authors ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainers ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainer "Christopher Wellons" . "wellons@nullprogram.com"))])
 (nav-flash . [(1 1 2) nil "Briefly highlight the current line" tar ((:url . "https://github.com/rolandwalker/nav-flash") (:commit . "2e31f32085757e1dfdd8ec78e9940fd1c88750de") (:revdesc . "v1.1.2-0-g2e31f3208575") (:keywords "extensions" "navigation" "interface") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (navi-mode . [(2 0) nil "Major-mode for easy buffer-navigation" tar ((:url . "https://github.com/alphapapa/navi") (:commit . "5c979b3b3873b0e67751a1321a9e271d066f2022") (:revdesc . "5c979b3b3873") (:authors ("Thorsten Jolitz" . "tjolitzATgmailDOTcom")) (:maintainers ("Thorsten Jolitz" . "tjolitzATgmailDOTcom")) (:maintainer "Thorsten Jolitz" . "tjolitzATgmailDOTcom"))])
 (navigel . [(1 0 0) ((emacs (25 1)) (tablist (1 0))) "Facilitate the creation of tabulated-list based UIs" tar ((:url . "https://github.com/DamienCassou/navigel") (:commit . "5f2f2ecfbd91c35bfbe4946915462872acf58310") (:revdesc . "v1.0.0-0-g5f2f2ecfbd91") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (navorski . [(0 2 7) ((s (1 9 0)) (dash (1 5 0)) (multi-term (0 8 14))) "Helping you live in the terminal, like Viktor did" tar ((:url . "https://github.com/roman/navorski.el") (:commit . "4546d4e4dfbec20ee8c423c045408a3388a9eab9") (:revdesc . "4546d4e4dfbe") (:keywords "terminal") (:authors ("Roman Gonzalez" . "romanandreg@gmail.com") ("Tavis Rudd" . "tavis@birdseye-sw.com")) (:maintainers ("Roman Gonzalez" . "romanandreg@gmail.com")) (:maintainer "Roman Gonzalez" . "romanandreg@gmail.com"))])
 (ncl-mode . [(0 99) ((emacs (24))) "Major Mode for editing NCL scripts and other goodies" tar ((:url . "https://github.com/yyr/ncl-mode") (:commit . "63e6a3ce7df4abf823ac36a0c52c161d1ec6998e") (:revdesc . "63e6a3ce7df4") (:keywords "ncl" "major mode" "ncl-mode" "atmospheric science.") (:authors ("Yagnesh Raghava Yakkala" . "hi@yagnesh.org")) (:maintainers ("Yagnesh Raghava Yakkala" . "hi@yagnesh.org")) (:maintainer "Yagnesh Raghava Yakkala" . "hi@yagnesh.org"))])
 (neil . [(0 3 68) ((emacs (27 1))) "Companion for Babashka Neil" tar ((:url . "https://github.com/babashka/neil") (:commit . "78ffab1868dc04b2eec5d7195d2d8f92c416e528") (:revdesc . "78ffab1868dc") (:keywords "convenience" "tools") (:authors ("Ag Ibragimov" . "agzam.ibragimov@gmail.com")) (:maintainers ("Ag Ibragimov" . "agzam.ibragimov@gmail.com")) (:maintainer "Ag Ibragimov" . "agzam.ibragimov@gmail.com"))])
 (nemerle . [(1 2) nil "Major mode for editing nemerle programs" tar ((:url . "https://github.com/rsdn/nemerle") (:commit . "556270ce8b97668a65e9ec20a05f78c3dffeac60") (:revdesc . "556270ce8b97") (:keywords "nemerle" "mode" "languages") (:authors ("Jacek Sliwerski" . "rzyj@o2.pl")) (:maintainers ("Jacek Sliwerski" . "rzyj@o2.pl")) (:maintainer "Jacek Sliwerski" . "rzyj@o2.pl"))])
 (neon-mode . [(1 3 0) nil "Simple major mode for editing neon files" tar ((:url . "https://github.com/Fuco1/neon-mode") (:commit . "99d15e46beaf1e7d71e39a00cce810df1f33229d") (:revdesc . "99d15e46beaf") (:keywords "conf") (:authors ("Matúš Goljer" . "matus.goljer@gmail.com")) (:maintainers ("Matúš Goljer" . "matus.goljer@gmail.com")) (:maintainer "Matúš Goljer" . "matus.goljer@gmail.com"))])
 (neotree . [(0 6 0) ((cl-lib (0 5))) "A tree plugin like NerdTree for Vim" tar ((:url . "https://github.com/jaypei/emacs-neotree") (:commit . "53c0e55034644236ee3761037e0dcfcd1c881c45") (:revdesc . "53c0e5503464") (:authors ("jaypei" . "jaypei97159@gmail.com")) (:maintainers ("jaypei" . "jaypei97159@gmail.com")) (:maintainer "jaypei" . "jaypei97159@gmail.com"))])
 (nerd-icons . [(0 1 0) ((emacs (24 3))) "Emacs Nerd Font Icons Library" tar ((:url . "https://github.com/rainstormstudio/nerd-icons.el") (:commit . "619a0382d2e159f3142c4200fe4cfc2e89247ef1") (:revdesc . "619a0382d2e1") (:keywords "lisp") (:authors ("Hongyu Ding" . "rainstormstudio@yahoo.com") ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainers ("Hongyu Ding" . "rainstormstudio@yahoo.com") ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainer "Hongyu Ding" . "rainstormstudio@yahoo.com"))])
 (nerd-icons-corfu . [(0 4 2) ((emacs (27 1)) (nerd-icons (0 1 0))) "Icons for Corfu via nerd-icons" tar ((:url . "https://github.com/LuigiPiucco/nerd-icons-corfu") (:commit . "721830b42b35e326a88b338fc53e4752f333fad2") (:revdesc . "v0.4.2-0-g721830b42b35") (:keywords "convenience" "files" "icons") (:authors ("Luigi Sartor Piucco" . "luigipiucco@gmail.com")) (:maintainers ("Luigi Sartor Piucco" . "luigipiucco@gmail.com")) (:maintainer "Luigi Sartor Piucco" . "luigipiucco@gmail.com"))])
 (nerd-icons-ibuffer . [(1 0 0) ((emacs (24 3)) (nerd-icons (0 0 1))) "Display nerd icons in ibuffer" tar ((:url . "https://github.com/seagle0128/nerd-icons-ibuffer") (:commit . "18c00c03a0d7193bab5e3374ec02c5428db057fd") (:revdesc . "18c00c03a0d7") (:keywords "convenience" "icons" "ibuffer") (:authors ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainers ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainer "Vincent Zhang" . "seagle0128@gmail.com"))])
 (nerd-icons-ivy-rich . [(1 0 0) ((emacs (26 1)) (ivy-rich (0 1 0)) (nerd-icons (0 0 1))) "Excellent experience with nerd icons for ivy/counsel" tar ((:url . "https://github.com/seagle0128/nerd-icons-ivy-rich") (:commit . "ecf86cea522a551bf9a0eb10088b84cc84cce29d") (:revdesc . "ecf86cea522a") (:keywords "convenience" "icons" "ivy") (:authors ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainers ("Vincent Zhang" . "seagle0128@gmail.com")) (:maintainer "Vincent Zhang" . "seagle0128@gmail.com"))])
 (netease-cloud-music . [(2 0) ((emacs (27 1)) (request (0 3 3))) "Netease Cloud Music client" tar ((:url . "https://github.com/SpringHan/netease-cloud-music.el") (:commit . "7cfa76d79b8432b0edb4c188c7a9b6634b78fe53") (:revdesc . "7cfa76d79b84") (:keywords "multimedia"))])
 (netease-music . [(1 0) nil "Listen netease music" tar ((:url . "https://github.com/nicehiro/netease-music") (:commit . "f3bba59664e1c4c4ed47f16fa786151272d99a70") (:revdesc . "v1.0-0-gf3bba59664e1") (:keywords "tools") (:authors ("hiro方圆" . "wfy11235813@gmail.com")) (:maintainers ("hiro方圆" . "wfy11235813@gmail.com")) (:maintainer "hiro方圆" . "wfy11235813@gmail.com"))])
 (neuron-mode . [(1 0) ((emacs (26 3)) (f (0 20 0)) (s (1 12 0)) (markdown-mode (2 3)) (company (0 9 13))) "Major mode for editing zettelkasten notes using neuron" tar ((:url . "https://github.com/felko/neuron-mode") (:commit . "3f86d26fb2006e82c673a5bf122594820a4842d8") (:revdesc . "3f86d26fb200") (:keywords "outlines") (:authors ("felko" . "http://github/felko")) (:maintainers ("felko" . "http://github/felko")) (:maintainer "felko" . "http://github/felko"))])
 (ng2-mode . [(0 2 2) ((typescript-mode (0 1))) "Major modes for editing Angular 2" tar ((:url . "https://github.com/AdamNiederer/ng2-mode") (:commit . "57e6e4e388624853bc3b79bf5b17d2663ce26fa5") (:revdesc . "0.2.2-0-g57e6e4e38862") (:keywords "typescript" "angular" "angular2" "template") (:authors ("Adam Niederer" . "adam.niederer@gmail.com")) (:maintainers ("Adam Niederer" . "adam.niederer@gmail.com")) (:maintainer "Adam Niederer" . "adam.niederer@gmail.com"))])
 (nginx-mode . [(1 1 10) nil "Major mode for editing nginx config files" tar ((:url . "https://github.com/ajc/nginx-mode") (:commit . "c4ac5de975d65c84893a130a470af32a48b0b66c") (:revdesc . "c4ac5de975d6") (:keywords "languages" "nginx") (:authors ("Andrew J Cosgriff" . "andrew@cosgriff.name")) (:maintainers ("Andrew J Cosgriff" . "andrew@cosgriff.name")) (:maintainer "Andrew J Cosgriff" . "andrew@cosgriff.name"))])
 (niceify-info . [(1 0 1) nil "Improve usability of Info pages" tar ((:url . "https://github.com/aaron-em/niceify-info.el") (:commit . "66b45916f1994e16ee023d29fa7cf8fec48078f1") (:revdesc . "66b45916f199"))])
 (night-owl-theme . [(0 1 0) ((emacs (24))) "A color theme for the night owls out there" tar ((:url . "https://github.com/aaronjensen/night-owl-emacs") (:commit . "3d1b6b319173c2f0aaf42a294ab01fba473f11c4") (:revdesc . "v0.1.0-0-g3d1b6b319173") (:authors ("Aaron Jensen" . "aaronjensen@gmail.com")) (:maintainers ("Aaron Jensen" . "aaronjensen@gmail.com")) (:maintainer "Aaron Jensen" . "aaronjensen@gmail.com"))])
 (nikki . [(0 0 6) ((emacs (24 3))) "A simple diary mode" tar ((:url . "https://github.com/th994/nikki") (:commit . "b2ea20d04a061df88d72bd8dd0412a6e7876458d") (:revdesc . "b2ea20d04a06") (:keywords "convenience") (:authors ("Taiki Harada" . "thdev994@gmail.com")) (:maintainers ("Taiki Harada" . "thdev994@gmail.com")) (:maintainer "Taiki Harada" . "thdev994@gmail.com"))])
 (nim-mode . [(0 4 1) ((emacs (24 4)) (epc (0 1 1)) (let-alist (1 0 1)) (commenter (0 5 1)) (flycheck (28))) "A major mode for the Nim programming language" tar ((:url . "https://github.com/nim-lang/nim-mode") (:commit . "86abed21b9b718ac65cc167f208e0bd5b92c79ed") (:revdesc . "86abed21b9b7") (:keywords "nim" "languages") (:maintainers ("Simon Hafner" . "hafnersimon@gmail.com")) (:maintainer "Simon Hafner" . "hafnersimon@gmail.com"))])
 (nimbus-theme . [(1 3 0) ((emacs (24 1))) "Nimbus dark theme" tar ((:url . "https://github.com/mrcnski/nimbus-theme") (:commit . "178557148f2e132c79be25429d04c5b89f6535dd") (:revdesc . "178557148f2e") (:keywords "faces") (:authors ("Marcin Swieczkowski" . "marcin.swieczkowski@gmail.com")) (:maintainers ("Marcin Swieczkowski" . "marcin.swieczkowski@gmail.com")) (:maintainer "Marcin Swieczkowski" . "marcin.swieczkowski@gmail.com"))])
 (ninja-mode . [(1 12 1) ((emacs (24))) "Major mode for editing .ninja files" tar ((:url . "https://github.com/ninja-build/ninja") (:commit . "2daa09ba270b0a43e1929d29b073348aa985dfaa") (:revdesc . "2daa09ba270b"))])
 (nix-buffer . [(3 1 1) ((f (0 17 3)) (emacs (24 4))) "Set up buffer environments with nix" tar ((:url . "https://github.com/shlevy/nix-buffer") (:commit . "db57cda36e7477bdc7ef5a136357b971b1d4d099") (:revdesc . "db57cda36e74"))])
 (nix-haskell-mode . [(0 0 2) ((emacs (25)) (haskell-mode (16 0)) (flycheck (30)) (nix-mode (1 3 0))) "Haskell-mode integrations for Nix" tar ((:url . "https://github.com/matthewbauer/nix-haskell-mode") (:commit . "1622924f0f6668f9b42f135323087ba94b1bf252") (:revdesc . "1622924f0f66") (:keywords "nix" "haskell" "languages" "processes") (:authors ("Matthew Bauer" . "mjbauer95@gmail.com")) (:maintainers ("Matthew Bauer" . "mjbauer95@gmail.com")) (:maintainer "Matthew Bauer" . "mjbauer95@gmail.com"))])
 (nix-mode . [(1 5 0) ((emacs (25 1)) (magit-section (0)) (transient (0 3))) "Major mode for editing .nix files" tar ((:url . "https://github.com/NixOS/nix-mode") (:commit . "54e5626829168e22126b233e079f04dff3c71b90") (:revdesc . "54e562682916") (:keywords "nix" "languages" "tools" "unix") (:maintainers ("Matthew Bauer" . "mjbauer95@gmail.com")) (:maintainer "Matthew Bauer" . "mjbauer95@gmail.com"))])
 (nix-ts-mode . [(0 1 4) ((emacs (29 1))) "Major mode for Nix expressions, powered by tree-sitter" tar ((:url . "https://github.com/nix-community/nix-ts-mode") (:commit . "49d890e86a4597911366208930af6457ce1d46e7") (:revdesc . "v0.1.4-0-g49d890e86a45") (:keywords "nix" "languages") (:maintainers ("Remi Gelinas" . "mail@remigelin.as")) (:maintainer "Remi Gelinas" . "mail@remigelin.as"))])
 (nixos-options . [(0 0 1) ((emacs (24)) (json (1 4))) "Interface for browsing and completing NixOS options" tar ((:url . "https://github.com/nix-community/nix-emacs") (:commit . "5fc8fa29bea9dd8e9c822af92f9bc6ddc223635f") (:revdesc . "5fc8fa29bea9") (:keywords "unix") (:authors ("Diego Berrocal" . "cestdiego@gmail.com") ("Travis B. Hartwell" . "nafai@travishartwell.net")) (:maintainers ("Diego Berrocal" . "cestdiego@gmail.com") ("Travis B. Hartwell" . "nafai@travishartwell.net")) (:maintainer "Diego Berrocal" . "cestdiego@gmail.com"))])
 (nixpkgs-fmt . [(0 1) ((emacs (24)) (reformatter (0 3))) "Reformat Nix using nixpkgs-fmt" tar ((:url . "https://github.com/purcell/emacs-nixpkgs-fmt") (:commit . "83e03d6f20bdf79c1c448c15734367b1a7cc6b02") (:revdesc . "83e03d6f20bd") (:keywords "languages") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (nlinum-hl . [(1 0 6) ((emacs (24 4)) (nlinum (1 7)) (cl-lib (0 5))) "Heal nlinum's line numbers" tar ((:url . "https://github.com/hlissner/emacs-nlinum-hl") (:commit . "dc6b365a58e06c7d637a76a31c71a40b20da8b56") (:revdesc . "dc6b365a58e0") (:keywords "nlinum" "highlight" "current" "line" "faces") (:authors ("Henrik Lissner" . "http://github/hlissner")) (:maintainers ("Henrik Lissner" . "henrik@lissner.net")) (:maintainer "Henrik Lissner" . "henrik@lissner.net"))])
 (no-littering . [(1 7 4) ((emacs (26 1)) (compat (30 0 0 0))) "Help keeping ~/.config/emacs clean" tar ((:url . "https://github.com/emacscollective/no-littering") (:commit . "74431db47edf44fc1f5f013033560f7bc4f26f24") (:revdesc . "v1.7.4-0-g74431db47edf") (:keywords "convenience") (:authors ("Jonas Bernoulli" . "emacs.no-littering@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.no-littering@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.no-littering@jonas.bernoulli.dev"))])
 (noccur . [(0 2) nil "Run multi-occur on project/dired files" tar ((:url . "https://github.com/NicolasPetton/noccur.el") (:commit . "6cc02ce07178a61ae38a849f80472c01969272bc") (:revdesc . "6cc02ce07178") (:keywords "convenience") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:maintainers ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com"))])
 (nodejs-repl . [(0 2 5) nil "Run Node.js REPL" tar ((:url . "https://github.com/abicky/nodejs-repl.el") (:commit . "cc74729c8494a4d3555fac6d3a3fd0e0ff4ac50a") (:revdesc . "cc74729c8494"))])
 (nodemcu-mode . [(0 1 0) ((emacs (25))) "Minor mode for NodeMCU" tar ((:url . "https://github.com/andrmuel/nodemcu-mode") (:commit . "8effd9f3df40b6b92a2f05e4d54750b624afc4a7") (:revdesc . "8effd9f3df40") (:keywords "tools") (:authors ("Andreas Müller" . "code@0x7.ch")) (:maintainers ("Andreas Müller" . "code@0x7.ch")) (:maintainer "Andreas Müller" . "code@0x7.ch"))])
 (nofrils-acme-theme . [(0 1 0) ((emacs (24))) "Port of \"No Frils Acme\" Vim theme" tar ((:url . "https://gitlab.com/esessoms/nofrils-theme") (:commit . "7825f88cb881a84eaa5cd1689772819a18eb2943") (:revdesc . "0.1.0-0-g7825f88cb881") (:authors ("Eric Sessoms" . "esessoms@protonmail.com")) (:maintainers ("Eric Sessoms" . "esessoms@protonmail.com")) (:maintainer "Eric Sessoms" . "esessoms@protonmail.com"))])
 (noir-mode . [(1 0 0) ((emacs (25 1)) (rust-mode (1 0 5))) "Description" tar ((:url . "https://github.com/hhamud/noir-mode") (:commit . "aa6686e15a63498af327cc64f1d79e84c60bda42") (:revdesc . "aa6686e15a63") (:keywords "languages"))])
 (noir-ts-mode . [(1 0 0) nil "Tree-sitter support for Noir" tar ((:url . "https://github.com/hhamud/noir-ts-mode") (:commit . "7da52cf95dc1f6fed5829ad4757da2e47f73bd72") (:revdesc . "7da52cf95dc1") (:keywords "noir" "languages" "tree-sitter") (:authors ("Hamza Hamud" . "self@hamzahamud.com")) (:maintainers ("Hamza Hamud" . "self@hamzahamud.com")) (:maintainer "Hamza Hamud" . "self@hamzahamud.com"))])
 (noman . [(0 6) ((emacs (29 1))) "Read command line help without a man page" tar ((:url . "https://github.com/andykuszyk/noman.el") (:commit . "953e3761b05874dee49952fad63ce1cb3c91d707") (:revdesc . "953e3761b058") (:keywords "docs") (:authors ("Andy Kuszyk" . "emacs@akuszyk.com")) (:maintainers ("Andy Kuszyk" . "emacs@akuszyk.com")) (:maintainer "Andy Kuszyk" . "emacs@akuszyk.com"))])
 (non-edit-mode . [(0 2 0) ((emacs (24 1))) "Minor mode that disables editing" tar ((:url . "https://gitlab.com/aragaer/non-edit-mode") (:commit . "dfe065acdd06be176fce3ab150fae699b2ad1a13") (:revdesc . "dfe065acdd06") (:keywords "convenience") (:authors ("aragaer" . "aragaer@gmail.com")) (:maintainers ("aragaer" . "aragaer@gmail.com")) (:maintainer "aragaer" . "aragaer@gmail.com"))])
 (nord-theme . [(0 5 0) ((emacs (24))) "An arctic, north-bluish clean and elegant theme" tar ((:url . "https://github.com/nordtheme/emacs") (:commit . "0f5295f99005a200191ce7b660e56cd0510cf710") (:revdesc . "v0.5.0-0-g0f5295f99005") (:authors ("Arctic Ice Studio" . "development@arcticicestudio.com")) (:maintainers ("Arctic Ice Studio" . "development@arcticicestudio.com")) (:maintainer "Arctic Ice Studio" . "development@arcticicestudio.com"))])
 (nordic-night-theme . [(2 0 3) ((emacs (24 1))) "A darker, more colorful version of the lovely Nord theme" tar ((:url . "https://codeberg.org/ashton314/nordic-night") (:commit . "608af63b232a8f743277cf274803eddb95c7dcd0") (:revdesc . "608af63b232a") (:authors ("Ashton Wiersdorf" . "mail@wiersdorf.dev")) (:maintainers ("Ashton Wiersdorf" . "mail@wiersdorf.dev")) (:maintainer "Ashton Wiersdorf" . "mail@wiersdorf.dev"))])
 (nordless-theme . [(0 2) ((colorless-themes (0 1))) "A mostly colorless version of nord-theme" tar ((:url . "https://git.sr.ht/~lthms/colorless-themes.el") (:commit . "8e539097185704444a5dd5545924de92c11ba767") (:revdesc . "0.2-0-g8e5390971857") (:keywords "faces" "theme") (:authors ("Thomas Letan" . "contact@thomasletan.fr")) (:maintainers ("Thomas Letan" . "contact@thomasletan.fr")) (:maintainer "Thomas Letan" . "contact@thomasletan.fr"))])
 (notmuch . [(0 38 3) nil "Run notmuch within emacs" tar ((:url . "https://git.notmuchmail.org/git/notmuch") (:commit . "d0469c5b4c6ed9188b96b12363fced45291813fd") (:revdesc . "0.38.3-0-gd0469c5b4c6e"))])
 (notmuch-addr . [(1 0 1) ((emacs (27 1)) (compat (30 0 0 0)) (notmuch (0 38))) "Improved address completion for Notmuch" tar ((:url . "https://github.com/tarsius/notmuch-addr") (:commit . "815e18e6d2a11833af616dd1915c550c26104da8") (:revdesc . "v1.0.1-0-g815e18e6d2a1") (:keywords "mail") (:authors ("Jonas Bernoulli" . "emacs.notmuch-addr@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.notmuch-addr@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.notmuch-addr@jonas.bernoulli.dev"))])
 (notmuch-bookmarks . [(0 2) ((seq (2 20)) (emacs (26 1)) (notmuch (0 29 3))) "Add bookmark handling for notmuch buffers" tar ((:url . "https://github.com/publicimageltd/notmuch-bookmarks") (:commit . "7c053fd2d278dc3a9f07f86975867bfbb4e7448d") (:revdesc . "7c053fd2d278") (:keywords "mail") (:authors ("Jörg Volbers" . "joerg@joergvolbers.de")) (:maintainers ("Jörg Volbers" . "joerg@joergvolbers.de")) (:maintainer "Jörg Volbers" . "joerg@joergvolbers.de"))])
 (notmuch-labeler . [(0 1) ((notmuch (0))) "Improve notmuch way of displaying labels" tar ((:url . "https://github.com/DamienCassou/notmuch-labeler") (:commit . "d65d1129555d368243df4770ecc1e7ccb88efc58") (:revdesc . "d65d1129555d") (:keywords "emacs" "package" "elisp" "notmuch" "emails") (:authors ("Damien Cassou" . "damien.cassou@gmail.com")) (:maintainers ("Damien Cassou" . "damien.cassou@gmail.com")) (:maintainer "Damien Cassou" . "damien.cassou@gmail.com"))])
 (notmuch-maildir . [(1 1 0) ((emacs (26 1)) (compat (30 0 0 0)) (notmuch (0 38))) "Display maildirs as a tree" tar ((:url . "https://github.com/tarsius/notmuch-maildir") (:commit . "3831751156024603e0ad54a503c22f17cd21ae2a") (:revdesc . "v1.1.0-0-g383175115602") (:keywords "mail") (:authors ("Jonas Bernoulli" . "emacs.notmuch-maildir@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.notmuch-maildir@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.notmuch-maildir@jonas.bernoulli.dev"))])
 (notmuch-transient . [(1 0 0) ((emacs (27 1)) (compat (30 0 0 0)) (notmuch (0 38 2)) (transient (0 7 0))) "Command dispatchers for Notmuch" tar ((:url . "https://github.com/tarsius/notmuch-transient") (:commit . "ee365ca56140ab9c4c2324cb3c42e9037b6fa240") (:revdesc . "v1.0.0-0-gee365ca56140") (:keywords "mail") (:authors ("Jonas Bernoulli" . "emacs.notmuch-transient@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.notmuch-transient@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.notmuch-transient@jonas.bernoulli.dev"))])
 (nov . [(0 4 0) ((esxml (0 3 6)) (emacs (25 1))) "Featureful EPUB reader mode" tar ((:url . "https://depp.brause.cc/nov.el.git") (:commit . "12faf16fbbaf09aadec26dfbda5809d886248c02") (:revdesc . "12faf16fbbaf") (:keywords "hypermedia" "multimedia" "epub") (:authors ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainers ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainer "Vasilij Schneidermann" . "mail@vasilij.de"))])
 (noxml-fold . [(0 0 2) nil "Fold away XML things" tar ((:url . "https://github.com/paddymcall/noXML-fold") (:commit . "56fbc44b25cee9f8719edb3c7f8b1c4327dc1051") (:revdesc . "56fbc44b25ce") (:keywords "xml" "folding") (:authors ("Patrick McAllister" . "pma@rdorte.org")) (:maintainers ("Patrick McAllister" . "pma@rdorte.org")) (:maintainer "Patrick McAllister" . "pma@rdorte.org"))])
 (npm . [(0 2) ((emacs (25 1)) (transient (0 1 0)) (jest (20200625))) "Run your npm workflows" tar ((:url . "https://github.com/shaneikennedy/npm.el") (:commit . "6eb0a58274870dd75bf848cf5a916a9f2c6ddae5") (:revdesc . "v0.2-0-g6eb0a5827487") (:keywords "tools"))])
 (npm-mode . [(0 6 0) ((emacs (24 1))) "Minor mode for working with npm projects" tar ((:url . "https://github.com/mojochao/npm-mode") (:commit . "84b35211cba4f2d5f03b8dc2b60ae4b03d90bf8a") (:revdesc . "84b35211cba4") (:keywords "convenience" "project" "javascript" "node" "npm") (:authors ("Allen Gooch" . "allen.gooch@gmail.com")) (:maintainers ("Allen Gooch" . "allen.gooch@gmail.com")) (:maintainer "Allen Gooch" . "allen.gooch@gmail.com"))])
 (nrepl-sync . [(0 3 1) ((cider (0 6))) "Connect to nrepl port and eval .sync.clj" tar ((:url . "https://github.com/phillord/lein-sync") (:commit . "471a08df87687a3eab61b3b8bf25a2e0962b5d5b") (:revdesc . "0.3.1-0-g471a08df8768") (:authors ("Phillip Lord" . "phillip.lord@newcastle.ac.uk")) (:maintainers ("Phillip Lord" . "phillip.lord@newcastle.ac.uk")) (:maintainer "Phillip Lord" . "phillip.lord@newcastle.ac.uk"))])
 (ns-auto-titlebar . [(0 3) ((emacs (24 4))) "Set the MacOS transparent titlebar to match theme" tar ((:url . "https://github.com/purcell/ns-auto-titlebar") (:commit . "b16092e8058af63ad2bc222f166b0aa3cb66bf9d") (:revdesc . "b16092e8058a") (:keywords "frames") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (nsis-mode . [(0 44) nil "NSIS-mode" tar ((:url . "https://github.com/mattfidler/nsis-mode") (:commit . "f1bf701c37680553c8f51462e0829d0dd6c53187") (:revdesc . "v0.44-0-gf1bf701c3768") (:keywords "nsis"))])
 (nswbuff . [(1 3) ((emacs (25 1))) "Quick switching between buffers" tar ((:url . "https://github.com/joostkremers/nswbuff") (:commit . "fa9dcf131697ea7af066e11a1edcc881c397e07f") (:revdesc . "fa9dcf131697") (:keywords "extensions" "convenience") (:authors ("David Ponce" . "david@dponce.com") ("Kahlil HODGSON" . "dorge@tpg.com.au") ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainers ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainer "Joost Kremers" . "joostkremers@fastmail.fm"))])
 (number-lock . [(1 0 0) nil "Enter symbols on your number keys without pressing shift" tar ((:url . "https://github.com/Liu233w/number-lock.el") (:commit . "846e86e2b3b07410f69e70d3ba7afb072b5585da") (:revdesc . "846e86e2b3b0") (:keywords "convenience") (:authors ("Liu233w" . "wwwlsmcom@outlook.com")) (:maintainers ("Liu233w" . "wwwlsmcom@outlook.com")) (:maintainer "Liu233w" . "wwwlsmcom@outlook.com"))])
 (numbers . [(1 4) ((emacs (24))) "Display information and trivia about numbers" tar ((:url . "https://github.com/davep/numbers.el") (:commit . "74be68b94143f042ce461b2a69202f515acaf20c") (:revdesc . "74be68b94143") (:keywords "games" "trivia" "maths" "numbers") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (numpydoc . [(0 9) ((emacs (25 1)) (s (1 12 0)) (dash (2 18 0))) "NumPy style docstring insertion" tar ((:url . "https://github.com/douglasdavis/numpydoc.el") (:commit . "5cb26db4f6b63a588ad7b8d2ec22ebf0f56f1076") (:revdesc . "0.9-0-g5cb26db4f6b6") (:keywords "convenience") (:authors ("Doug Davis" . "ddavis@ddavis.io")) (:maintainers ("Doug Davis" . "ddavis@ddavis.io")) (:maintainer "Doug Davis" . "ddavis@ddavis.io"))])
 (nvm . [(1 0 0) ((s (1 8 0)) (dash (2 18 0)) (f (0 14 0))) "Manage Node versions within Emacs" tar ((:url . "https://github.com/rejeep/nvm.el") (:commit . "d33f5b9260426617e27ca79c78d83a5e00073f97") (:revdesc . "d33f5b926042") (:keywords "node" "nvm") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (nyan-mode . [(1 1 3) nil "Nyan Cat shows position in current buffer in mode-line" tar ((:url . "https://github.com/TeMPOraL/nyan-mode") (:commit . "06e67ab2c490756d3eeed4a68aba7c33e508a5d5") (:revdesc . "v1.1.3-0-g06e67ab2c490") (:keywords "nyan" "cat" "lulz" "scrolling" "pop tart cat" "build something amazing") (:authors ("Jacek TeMPOraL Zlydach" . "temporal.pl@gmail.com")) (:maintainers ("Jacek TeMPOraL Zlydach" . "temporal.pl@gmail.com")) (:maintainer "Jacek TeMPOraL Zlydach" . "temporal.pl@gmail.com"))])
 (ob-ada-spark . [(1 3 0) ((emacs (26 1)) (f (0 20 0))) "Babel functions for Ada & SPARK" tar ((:url . "https://github.com/rocher/ob-ada-spark") (:commit . "38b72a41c12f8b6e6ba47f9136affa956123d73e") (:revdesc . "38b72a41c12f") (:keywords "languages" "tools" "outlines"))])
 (ob-async . [(1 0 0) ((async (1 9)) (org (9 0 1)) (emacs (24 4)) (dash (2 14 1))) "Asynchronous org-babel src block execution" tar ((:url . "https://github.com/astahlman/ob-async") (:commit . "5984d6172c179528adf9aeba414598604dfb5c9a") (:revdesc . "5984d6172c17") (:keywords "tools") (:authors ("Andrew Stahlman" . "andrewstahlman@gmail.com")) (:maintainers ("Andrew Stahlman" . "andrewstahlman@gmail.com")) (:maintainer "Andrew Stahlman" . "andrewstahlman@gmail.com"))])
 (ob-base64 . [(1 1 6) ((emacs (26 1))) "Org-babel for base64 content" tar ((:url . "https://github.com/KeyWeeUsr/ob-base64") (:commit . "6d3ef9d937838eb69b0a91e4012a0b6084ba26e1") (:revdesc . "1.1.6-0-g6d3ef9d93783") (:keywords "convenience" "embedding" "orgmode" "base64" "rendering") (:authors ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainers ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainer "Peter Badida" . "keyweeusr@gmail.com"))])
 (ob-blockdiag . [(20170728 113) nil "Org-babel functions for blockdiag evaluation" tar ((:url . "https://github.com/corpix/ob-blockdiag.el") (:commit . "634fcf64a4ae735afe7001d865b03f5d71e23046") (:revdesc . "634fcf64a4ae") (:keywords "tools" "convenience"))])
 (ob-chatgpt-shell . [(1 20 1) ((emacs (27 1)) (chatgpt-shell (1 17 1))) "Org babel functions for ChatGPT evaluation" tar ((:url . "https://github.com/xenodium/chatgpt-shell") (:commit . "a24c003c79a720eafffc79bc3885070735f667f6") (:revdesc . "a24c003c79a7"))])
 (ob-coffeescript . [(1 0 0) nil "Org-babel functions for coffee-script evaluation, and fully implementation!" tar ((:url . "https://github.com/brantou/ob-coffeescript") (:commit . "b70f3d822c707cb02333fcb739ba4874614cad2a") (:revdesc . "b70f3d822c70") (:keywords "coffee-script" "literate programming" "reproducible research") (:authors ("Brantou" . "brantou89@gmail.com")) (:maintainers ("Brantou" . "brantou89@gmail.com")) (:maintainer "Brantou" . "brantou89@gmail.com"))])
 (ob-compile . [(0 4) ((emacs (24 4))) "Run compile by org-babel" tar ((:url . "https://github.com/TxGVNN/ob-compile") (:commit . "d9c3e446467badad571eef8832232ae5a6f9f05b") (:revdesc . "d9c3e446467b") (:keywords "literate programming" "reproducible" "processes" "compilation") (:authors ("Giap Tran" . "txgvnn@gmail.com")) (:maintainers ("Giap Tran" . "txgvnn@gmail.com")) (:maintainer "Giap Tran" . "txgvnn@gmail.com"))])
 (ob-d2 . [(0 0 3) ((emacs (24 1))) "Org-babel functions for d2" tar ((:url . "https://github.com/xcapaldi/ob-d2") (:commit . "be7dbf497732caaf17c420c19c08d0323725305d") (:revdesc . "be7dbf497732") (:keywords "languages"))])
 (ob-dall-e-shell . [(1 20 1) ((emacs (27 1)) (dall-e-shell (0 42 1))) "Org babel functions for DALL-E evaluation" tar ((:url . "https://github.com/xenodium/chatgpt-shell") (:commit . "a24c003c79a720eafffc79bc3885070735f667f6") (:revdesc . "a24c003c79a7"))])
 (ob-deno . [(1 0 1) ((emacs (26 1))) "Babel Functions for Javascript/TypeScript with Deno" tar ((:url . "https://github.com/taiju/ob-deno") (:commit . "e3b06d7662687e402905b9de4ad1d5816e89b842") (:revdesc . "e3b06d766268") (:keywords "literate programming" "reproducible research" "javascript" "typescript" "tools"))])
 (ob-ess-julia . [(1 0 3) ((ess (20201004 1522)) (julia-mode (0 4))) "Org babel support for Julia language" tar ((:url . "https://github.com/frederic-santos/ob-ess-julia") (:commit . "147e9e7fe55c41dd77171417e92af40db3530b84") (:revdesc . "v1.0.3-0-g147e9e7fe55c") (:keywords "languages"))])
 (ob-git-permalink . [(0 1 0) ((emacs (25 1))) "Easy code citation from repository hosting service" tar ((:url . "https://github.com/kijimaD/ob-git-permalink") (:commit . "933beadc754b108d541ccaa5bb0f017c41ef107a") (:revdesc . "933beadc754b") (:keywords "git" "link" "org-babel") (:authors ("kijima Daigo" . "norimaking777@gmail.com")) (:maintainers ("kijima Daigo" . "norimaking777@gmail.com")) (:maintainer "kijima Daigo" . "norimaking777@gmail.com"))])
 (ob-http . [(0 2 0) ((s (1 9 0)) (cl-lib (0 5))) "Http request in org-mode babel" tar ((:url . "https://github.com/zweifisch/ob-http") (:commit . "20393dd8130d21a3f06d8514da14c5ffdd88ae44") (:revdesc . "20393dd8130d") (:authors ("ZHOU Feng" . "zf.pascal@gmail.com")) (:maintainers ("ZHOU Feng" . "zf.pascal@gmail.com")) (:maintainer "ZHOU Feng" . "zf.pascal@gmail.com"))])
 (ob-hy . [(1 0 1) ((emacs (24 4))) "Org-babel functions for Hy-lang evaluation" tar ((:url . "https://github.com/brantou/ob-hy") (:commit . "a42ecaf440adc03e279afe43ee5ef6093ddd542a") (:revdesc . "a42ecaf440ad") (:keywords "hy" "literate programming" "reproducible research") (:authors ("Brantou" . "brantou89@gmail.com")) (:maintainers ("Brantou" . "brantou89@gmail.com")) (:maintainer "Brantou" . "brantou89@gmail.com"))])
 (ob-julia-vterm . [(0 5) ((emacs (26 1)) (julia-vterm (0 25)) (queue (0 2))) "Babel functions for Julia that work with julia-vterm" tar ((:url . "https://github.com/shg/ob-julia-vterm.el") (:commit . "e1aae4f54cd06f33c63a16d88df4856947f46201") (:revdesc . "e1aae4f54cd0") (:keywords "julia" "org" "outlines" "literate programming" "reproducible research"))])
 (ob-ml-marklogic . [(1 1 0) nil "Org-babel functions for MarkLogic evaluation" tar ((:url . "https://github.com/ndw/ob-ml-marklogic") (:commit . "d5660ad14f29e17cd26ae92eeb585b24030e9570") (:revdesc . "1.1.0-0-gd5660ad14f29") (:keywords "marklogic" "xquery" "javascript" "sparql") (:authors ("Norman Walsh" . "ndw@nwalsh.com")) (:maintainers ("Norman Walsh" . "ndw@nwalsh.com")) (:maintainer "Norman Walsh" . "ndw@nwalsh.com"))])
 (ob-napkin . [(0 10) ((emacs (26 1))) "Babel functions for Napkin" tar ((:url . "https://github.com/pinetr2e/ob-napkin") (:commit . "497bde38772e6fd2a393dd292435ae3787580db4") (:revdesc . "497bde38772e") (:keywords "tools" "literate programming" "reproducible research" "napkin" "plantuml"))])
 (ob-prolog . [(1 0 2) nil "Org-babel functions for prolog evaluation" tar ((:url . "https://github.com/ljos/ob-prolog") (:commit . "efa86bb70fd1907806f3e43705aff54d35582442") (:revdesc . "efa86bb70fd1") (:keywords "literate programming" "reproducible research"))])
 (ob-raku . [(1 0 2) ((emacs (24 1))) "Provides raku support for org-babel" tar ((:url . "https://github.com/masukomi/ob-raku") (:commit . "21aa77a0ca70b7bef0ecf7d4d9c5272d71f0210c") (:revdesc . "v1.0.2-0-g21aa77a0ca70") (:keywords "literate programming" "reproducible research" "languages"))])
 (ob-sagemath . [(0 4) ((sage-shell-mode (0 0 8)) (s (1 8 0)) (emacs (24))) "Org-babel functions for SageMath evaluation" tar ((:url . "https://github.com/sagemath/ob-sagemath") (:commit . "450d510a5eb1fd644d0037e9f02271ca33639fb0") (:revdesc . "450d510a5eb1") (:keywords "sagemath" "org-babel") (:authors ("Sho Takemori" . "stakemorii@gmail.com")) (:maintainers ("Sho Takemori" . "stakemorii@gmail.com")) (:maintainer "Sho Takemori" . "stakemorii@gmail.com"))])
 (ob-sml . [(0 2) ((sml-mode (6 4))) "Org-babel functions for template evaluation" tar ((:url . "https://github.com/swannodette/ob-sml") (:commit . "5dc966acbe65e9e158bfa90018035bf52d4dafd4") (:revdesc . "5dc966acbe65") (:keywords "literate programming" "reproducible research"))])
 (ob-solidity . [(0 0 1) nil "Org-babel functions for solidity evaluation" tar ((:url . "https://github.com/hrkrshnn/ob-solidity") (:commit . "d0ffe51b4fa02f5bff59e2e3c3f70f01255c28a9") (:revdesc . "d0ffe51b4fa0") (:keywords "solidity" "literate programming" "reproducible research"))])
 (ob-svgbob . [(0 0 1) nil "Babel Functions for svgbob" tar ((:url . "https://github.com/mgxm/ob-svgbob") (:commit . "9a930b1ed93e5ce1818029b2ec9e7662c098dbf4") (:revdesc . "0.0.1-0-g9a930b1ed93e") (:keywords "literate programming" "svg" "ascii") (:authors ("Marcio Giaxa" . "i@mgxm.me")) (:maintainers ("Marcio Giaxa" . "i@mgxm.me")) (:maintainer "Marcio Giaxa" . "i@mgxm.me"))])
 (ob-tmux . [(0 1 5) ((emacs (25 1)) (seq (2 3)) (s (1 9 0))) "Babel Support for Interactive Terminal" tar ((:url . "https://github.com/ahendriksen/ob-tmux") (:commit . "8886f31291e979b41215f3eb97670732efffea34") (:revdesc . "8886f31291e9") (:keywords "literate programming" "interactive shell" "tmux"))])
 (ob-translate . [(0 1 2) ((google-translate (0 4)) (org (8))) "Translation of text blocks in org-mode" tar ((:url . "https://github.com/krisajenkins/ob-translate") (:commit . "6b39cc1a94a1071107a4391684b1bffb5b9826f3") (:revdesc . "6b39cc1a94a1") (:keywords "org" "babel" "translate" "translation") (:authors ("Kris Jenkins" . "krisajenkins@gmail.com")) (:maintainers ("Kris Jenkins" . "krisajenkins@gmail.com")) (:maintainer "Kris Jenkins" . "krisajenkins@gmail.com"))])
 (ob-uart . [(0 1 0) nil "Org-babel support for UART communication" tar ((:url . "https://github.com/andrmuel/ob-uart") (:commit . "90daeac90a9e75c20cdcf71234c67b812110c50e") (:revdesc . "90daeac90a9e") (:keywords "tools" "comm" "org-mode" "uart" "literate programming" "reproducible development"))])
 (obfusurl . [(2 1) ((cl-lib (0 5))) "Obfuscate URLs so they aren't spoilers" tar ((:url . "https://github.com/davep/obfusurl.el") (:commit . "7a5a41905000ce2ec1fd72509a5567e5fd9f47e5") (:revdesc . "7a5a41905000") (:keywords "convenience" "web" "text") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (objed . [(0 8 1) ((emacs (25)) (cl-lib (0 5))) "Navigate and edit text objects" tar ((:url . "https://github.com/clemera/objed") (:commit . "4798b5b9fd531562ac17d6148e86cd8cdc1bc985") (:revdesc . "4798b5b9fd53") (:keywords "convenience") (:authors ("Clemens Radermacher" . "clemera@posteo.net")) (:maintainers ("Clemens Radermacher" . "clemera@posteo.net")) (:maintainer "Clemens Radermacher" . "clemera@posteo.net"))])
 (obsidian . [(1 4 4) ((emacs (27 2)) (f (0 2 0)) (s (1 12 0)) (dash (2 13)) (markdown-mode (2 5)) (elgrep (1 0 0)) (yaml (0 5 1))) "Obsidian Notes interface" tar ((:url . "https://github.com/licht1stein/obsidian.el") (:commit . "3814b08fb43d633c4a31b17deef1c2b71e5b5420") (:revdesc . "3814b08fb43d") (:keywords "obsidian" "pkm" "convenience"))])
 (ocamlformat . [(0 27 0) ((emacs (24 3))) "Utility functions to format ocaml code" tar ((:url . "https://github.com/ocaml-ppx/ocamlformat") (:commit . "5bac2e7f71d9b0a06bd1908dda9b13da1649eee1") (:revdesc . "0.27.0-0-g5bac2e7f71d9") (:keywords "languages" "ocaml"))])
 (ocodo-svg-modelines . [(0 1 4) ((svg-mode-line-themes (0))) "A collection of beautiful SVG modelines" tar ((:url . "https://github.com/ocodo/ocodo-svg-modelines") (:commit . "a6c5b9a7536c7a8fa3bd9d9dafdebc8d99903018") (:revdesc . "a6c5b9a7536c") (:authors ("ocodo" . "what.is.ocodo@gmail.com")) (:maintainers ("ocodo" . "what.is.ocodo@gmail.com")) (:maintainer "ocodo" . "what.is.ocodo@gmail.com"))])
 (ocp-indent . [(1 8 2) nil "Automatic indentation with ocp-indent" tar ((:url . "https://github.com/OCamlPro/ocp-indent") (:commit . "9e26c0a2699b7076cebc04ece59fb354eb84c11c") (:revdesc . "1.8.2-0-g9e26c0a2699b") (:keywords "ocaml" "languages"))])
 (octicons . [(0 1) ((cl-lib (0 5))) "Octicons utility" tar ((:url . "https://github.com/emacsorphanage/octicons") (:commit . "77bb1a49045f89b3eaf9bcffeefbb9e1abaee556") (:revdesc . "77bb1a49045f") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (oer-reveal . [(4 27 1) ((emacs (24 4)) (org-re-reveal (3 32 0))) "OER with reveal.js, plugins, and org-re-reveal" tar ((:url . "https://gitlab.com/oer/oer-reveal") (:commit . "06538b2073d51197f428f78ff60ebc0e904cc6f6") (:revdesc . "06538b2073d5") (:keywords "hypermedia" "tools" "slideshow" "presentation" "oer"))])
 (offlineimap . [(1) nil "Run OfflineIMAP from Emacs" tar ((:url . "https://github.com/jd/offlineimap.el") (:commit . "646482203aacdf847d57d0a96263fddcfc33fb61") (:revdesc . "v1-0-g646482203aac") (:authors ("Julien Danjou" . "julien@danjou.info")) (:maintainers ("Julien Danjou" . "julien@danjou.info")) (:maintainer "Julien Danjou" . "julien@danjou.info"))])
 (ol-notmuch . [(2 0 3) ((emacs (26 1)) (compat (30 0 0 0)) (notmuch (0 38)) (org (9 7 4))) "Links to notmuch messages" tar ((:url . "https://github.com/tarsius/ol-notmuch") (:commit . "437aab56192ea86a52738fa5e9216c006df80bd0") (:revdesc . "v2.0.3-0-g437aab56192e") (:keywords "hypermedia" "mail") (:authors ("Matthieu Lemerre" . "racin@free.fr")) (:maintainers ("Jonas Bernoulli" . "emacs.ol-notmuch@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.ol-notmuch@jonas.bernoulli.dev"))])
 (olc . [(1 5 1) ((emacs (25 1))) "Open location code library" tar ((:url . "https://gitlab.liu.se/davby02/olc.git") (:commit . "d2dc62dbc3cf6460cc12bd96857a988bc80ac37e") (:revdesc . "d2dc62dbc3cf") (:keywords "extensions" "lisp") (:authors ("David Byers" . "david.byers@liu.se")) (:maintainers ("David Byers" . "david.byers@liu.se")) (:maintainer "David Byers" . "david.byers@liu.se"))])
 (olivetti . [(2 0 7) ((emacs (24 4))) "Minor mode to automatically balance window margins" tar ((:url . "https://github.com/rnkn/olivetti") (:commit . "b64c0ac8c3ec9bdc67373fa754fe493be4cc81bd") (:revdesc . "v2.0.7-0-gb64c0ac8c3ec") (:keywords "wp" "text") (:authors ("Paul W. Rankin" . "rnkn@rnkn.xyz")) (:maintainers ("Paul W. Rankin" . "rnkn@rnkn.xyz")) (:maintainer "Paul W. Rankin" . "rnkn@rnkn.xyz"))])
 (omni-kill . [(0 6 0) nil "Kill all the things" tar ((:url . "https://github.com/AdrieanKhisbe/omni-kill.el") (:commit . "904549c8fd6ac3cf22b5d7111ca8944e179cffea") (:revdesc . "904549c8fd6a") (:keywords "convenience" "editing" "tools") (:authors ("Adrien Becchis" . "adriean.khisbe@live.fr")) (:maintainers ("Adrien Becchis" . "adriean.khisbe@live.fr")) (:maintainer "Adrien Becchis" . "adriean.khisbe@live.fr"))])
 (omni-log . [(0 4 0) ((emacs (24)) (ht (2 0)) (s (1 6 1)) (dash (2 13 0))) "Logging utilities" tar ((:url . "https://github.com/AdrieanKhisbe/omni-log.el") (:commit . "0a240660ccdd0b6588b4e3c322743b5ab1161338") (:revdesc . "0a240660ccdd") (:keywords "convenience" "languages" "tools") (:authors ("Adrien Becchis" . "adriean.khisbe@live.fr")) (:maintainers ("Adrien Becchis" . "adriean.khisbe@live.fr")) (:maintainer "Adrien Becchis" . "adriean.khisbe@live.fr"))])
 (omni-quotes . [(0 5 1) ((dash (2 8)) (omni-log (0 4 0)) (f (0 19 0)) (s (1 11 0)) (ht (2 1))) "Random quotes displayer" tar ((:url . "https://github.com/AdrieanKhisbe/omni-quotes.el") (:commit . "cfc7b7f01628a5d57384820d1096de4541e67cdf") (:revdesc . "cfc7b7f01628") (:keywords "convenience") (:authors ("Adrien Becchis" . "adriean.khisbe@live.fr")) (:maintainers ("Adrien Becchis" . "adriean.khisbe@live.fr")) (:maintainer "Adrien Becchis" . "adriean.khisbe@live.fr"))])
 (omni-scratch . [(0 6 0) nil "Easy and mode-specific draft buffers" tar ((:url . "https://github.com/AdrieanKhisbe/omni-scratch.el") (:commit . "636374c59c7d33c2f72c97ad8ba9fb4854f2324d") (:revdesc . "636374c59c7d") (:keywords "convenience" "languages" "tools") (:authors ("Adrien Becchis" . "adriean.khisbe@live.fr")) (:maintainers ("Adrien Becchis" . "adriean.khisbe@live.fr")) (:maintainer "Adrien Becchis" . "adriean.khisbe@live.fr"))])
 (omni-tags . [(0 1 2) ((pcre2el (1 7)) (cl-lib (0 5))) "Highlight and Actions for 'Tags'" tar ((:url . "https://github.com/AdrieanKhisbe/omni-tags.el") (:commit . "a7078bfbc9a6256efd0e57530df9fd7808bc2185") (:revdesc . "v0.1.2-0-ga7078bfbc9a6") (:keywords "convenience") (:authors ("Adrien Becchis" . "adriean.khisbe@live.fr")) (:maintainers ("Adrien Becchis" . "adriean.khisbe@live.fr")) (:maintainer "Adrien Becchis" . "adriean.khisbe@live.fr"))])
 (omnisharp . [(4 2) ((emacs (24 4)) (flycheck (30)) (dash (2 12 0)) (auto-complete (1 4)) (popup (0 5 1)) (csharp-mode (0 8 7)) (cl-lib (0 5)) (s (1 10 0)) (shut-up (0 3 2)) (f (0 19 0))) "Omnicompletion (intellisense) and more for C#" tar ((:url . "https://github.com/OmniSharp/omnisharp-emacs") (:commit . "588b8482685adedbc56933cb13c58d9cc6a82456") (:revdesc . "588b8482685a") (:keywords "languages" "csharp" "c#" "ide" "auto-complete" "intellisense"))])
 (one . [(1 1) ((emacs (28 1)) (jack (1 0)) (htmlize (1 57))) "Static Site Generator for org-mode users" tar ((:url . "https://github.com/tonyaldon/one.el") (:commit . "fa52cf0144f89eabee06f598b021a37087c69670") (:revdesc . "fa52cf0144f8") (:keywords "hypermedia" "outlines") (:authors ("Tony Aldon" . "tony@tonyaldon.com")) (:maintainers ("Tony Aldon" . "tony@tonyaldon.com")) (:maintainer "Tony Aldon" . "tony@tonyaldon.com"))])
 (opam . [(0 1) ((emacs (24 1))) "OPAM tools" tar ((:url . "https://github.com/emacsorphanage/opam") (:commit . "83fb2850d29ec792754e0af18b015e089aad2695") (:revdesc . "0.1-0-g83fb2850d29e") (:keywords "convenience") (:authors ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainers ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com"))])
 (opam-switch-mode . [(1 7) ((emacs (25 1))) "Select OCaml opam switches via a menu" tar ((:url . "https://github.com/ProofGeneral/opam-switch-mode") (:commit . "71612b9a307c640d2fa662b266787647a3a5075a") (:revdesc . "1.7-0-g71612b9a307c") (:maintainers (nil . "proof-general-maintainers@groupes.renater.fr")) (:maintainer nil . "proof-general-maintainers@groupes.renater.fr"))])
 (open-color . [(0 0 1) ((emacs (25 1))) "Open Color color palette" tar ((:url . "https://github.com/a13/open-color.el") (:commit . "74cee7acc6a054d2fbdf847dd7ddccfbe8f81db1") (:revdesc . "74cee7acc6a0") (:keywords "faces") (:authors ("DK" . "a13@users.noreply.github.com")) (:maintainers ("DK" . "a13@users.noreply.github.com")) (:maintainer "DK" . "a13@users.noreply.github.com"))])
 (opencl-c-mode . [(2 0) nil "Syntax coloring for opencl kernels" tar ((:url . "https://github.com/salmanebah/opencl-mode") (:commit . "204d5d9e0f5cb2cbe810f2933230eb08fe2c7695") (:revdesc . "204d5d9e0f5c") (:keywords "c" "opencl"))])
 (opener . [(0 2 2) ((request (0 2 0)) (emacs (24)) (cl-lib (0 5))) "Opening urls as buffers" tar ((:url . "https://github.com/0robustus1/opener.el") (:commit . "c384f67278046fdcd220275fdd212ab85672cbeb") (:revdesc . "0.2.2-0-gc384f6727804") (:keywords "url" "http" "files") (:authors ("Tim Reddehase" . "tr@rightsrestricted.com")) (:maintainers ("Tim Reddehase" . "tr@rightsrestricted.com")) (:maintainer "Tim Reddehase" . "tr@rightsrestricted.com"))])
 (openfoam . [(0 13) ((emacs (25 1))) "OpenFOAM files and directories" tar ((:url . "https://github.com/ralph-schleicher/emacs-openfoam") (:commit . "7808319de0326aa293636df6c213467c279ff1ea") (:revdesc . "openfoam-0.13-0-g7808319de032") (:keywords "languages") (:authors ("Ralph Schleicher" . "rs@ralph-schleicher.de")) (:maintainers ("Ralph Schleicher" . "rs@ralph-schleicher.de")) (:maintainer "Ralph Schleicher" . "rs@ralph-schleicher.de"))])
 (opensource . [(0 2 0) ((s (1 11 0)) (dash (2 12 1)) (pkg-info (0 6 0)) (request (0 2 0))) "Client for Opensource API" tar ((:url . "https://github.com/OpenSourceOrg/el-opensourceorg") (:commit . "27d06be45c852e84e47c33cbd0f4c344fd9a0370") (:revdesc . "27d06be45c85") (:keywords "opensource") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (opensub . [(0 3 0) ((emacs (25 1))) "Search and download from open-subtitles" tar ((:url . "https://github.com/danielfleischer/opensub") (:commit . "22cc8ef1e119c3cc5f605ca5be4cf680745c503a") (:revdesc . "22cc8ef1e119") (:keywords "multimedia") (:authors ("Daniel Fleischer" . "danflscr@gmail.com")) (:maintainers ("Daniel Fleischer" . "danflscr@gmail.com")) (:maintainer "Daniel Fleischer" . "danflscr@gmail.com"))])
 (operate-on-number . [(1 3 0) nil "Operate on number at point with arithmetic functions" tar ((:url . "https://github.com/knu/operate-on-number.el") (:commit . "0ddebae1885c1b54eae1d79e66204d6d83c5065b") (:revdesc . "0ddebae1885c") (:keywords "editing") (:authors ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (orangey-bits-theme . [(1 0 2) ((autothemer (0 2)) (emacs (27 1))) "A Theme with smashing orangey bits" tar ((:url . "https://github.com/emacsfodder/emacs-theme-orangey-bits") (:commit . "533856d399cb4098300bcaf4a2d20920395746f8") (:revdesc . "533856d399cb"))])
 (orderless . [(1 2) ((emacs (27 1)) (compat (30))) "Completion style for matching regexps in any order" tar ((:url . "https://github.com/oantolin/orderless") (:commit . "416c62a4a8e7199567a5df63d03cf320dc4d6ab0") (:revdesc . "416c62a4a8e7") (:keywords "extensions") (:authors ("Omar Antolín Camarena" . "omar@matem.unam.mx")) (:maintainers ("Omar Antolín Camarena" . "omar@matem.unam.mx") ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Omar Antolín Camarena" . "omar@matem.unam.mx"))])
 (ordinal . [(1 0 0) ((emacs (24 3))) "Convert number to ordinal number notation" tar ((:url . "https://github.com/zonuexe/ordinal.el") (:commit . "a7f378306290b6807fb6b87cee3ef79b31cec711") (:revdesc . "a7f378306290") (:keywords "lisp") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (org-ac . [(0 0 2) ((auto-complete-pcmp (0 0 1)) (log4e (0 2 0)) (yaxception (0 1))) "Some auto-complete sources for org-mode" tar ((:url . "https://github.com/aki2o/org-ac") (:commit . "9cbbda79e2fe964ded3f39cf7a2e74f1be3d6b9a") (:revdesc . "9cbbda79e2fe") (:keywords "org" "completion") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (org-agenda-files-track . [(0 4 0) ((emacs (27 1))) "Fine-track `org-agenda-files' to speed-up `org-agenda'" tar ((:url . "https://git.sr.ht/~ngraves/org-agenda-files-track") (:commit . "c0f5f7746ec023a32ba106ec24812eca5cbe15df") (:revdesc . "c0f5f7746ec0") (:keywords "data" "files" "tools") (:authors ("Nicolas Graves" . "ngraves@ngraves.fr")) (:maintainers ("Nicolas Graves" . "ngraves@ngraves.fr")) (:maintainer "Nicolas Graves" . "ngraves@ngraves.fr"))])
 (org-agenda-files-track-ql . [(0 4 0) ((emacs (27 1))) "Fine-track `org-agenda-files' to speed-up `org-ql-views'" tar ((:url . "https://git.sr.ht/~ngraves/org-agenda-files-track") (:commit . "c0f5f7746ec023a32ba106ec24812eca5cbe15df") (:revdesc . "c0f5f7746ec0") (:keywords "data" "files" "tools") (:authors ("Nicolas Graves" . "ngraves@ngraves.fr")) (:maintainers ("Nicolas Graves" . "ngraves@ngraves.fr")) (:maintainer "Nicolas Graves" . "ngraves@ngraves.fr"))])
 (org-agenda-property . [(1 3 1) ((emacs (24 2))) "Display org properties in the agenda buffer" tar ((:url . "https://github.com/Malabarba/org-agenda-property") (:commit . "2ff628a14a3e758863bbd88fba4db9f77fd2c3a8") (:revdesc . "2ff628a14a3e") (:keywords "calendar") (:authors ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainers ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainer "Artur Malabarba" . "bruce.connor.am@gmail.com"))])
 (org-ai . [(0 5 4) ((emacs (27 1)) (websocket (1 15))) "Use ChatGPT and other LLMs in org-mode and beyond" tar ((:url . "https://github.com/rksm/org-ai") (:commit . "5adfde1bc7db9026747fbfae4c154eeac4ef8e59") (:revdesc . "5adfde1bc7db") (:authors ("Robert Krahn" . "robert@kra.hn")) (:maintainers ("Robert Krahn" . "robert@kra.hn")) (:maintainer "Robert Krahn" . "robert@kra.hn"))])
 (org-alert . [(0 2 0) ((org (9 0)) (alert (1 2))) "Notify org deadlines via notify-send" tar ((:url . "https://github.com/spegoraro/org-alert") (:commit . "87abaeac60e37fda530787988e00307a1f72fedb") (:revdesc . "87abaeac60e3") (:keywords "org" "org-mode" "notify" "notifications" "calendar") (:authors ("Stephen Pegoraro" . "spegoraro@tutive.com")) (:maintainers ("Stephen Pegoraro" . "spegoraro@tutive.com")) (:maintainer "Stephen Pegoraro" . "spegoraro@tutive.com"))])
 (org-analyzer . [(1 0 4) nil "Org-analyzer is a tool that extracts time tracking data from org files" tar ((:url . "https://github.com/rksm/clj-org-analyzer") (:commit . "19da62aa4dcf1090be8f574f6f2d4c7e116163a8") (:revdesc . "19da62aa4dcf") (:keywords "calendar") (:authors ("Robert Krahn" . "robert@kra.hn")) (:maintainers ("Robert Krahn" . "robert@kra.hn")) (:maintainer "Robert Krahn" . "robert@kra.hn"))])
 (org-anki . [(3 3 2) ((emacs (27 1)) (request (0 3 2)) (dash (2 17)) (promise (1 1))) "Synchronize org-mode entries to Anki" tar ((:url . "https://github.com/eyeinsky/org-anki") (:commit . "8b255bba68ee19c4e8a2704c1197ad963d0eb128") (:revdesc . "8b255bba68ee") (:keywords "outlines" "flashcards" "memory") (:authors ("Markus Läll" . "markus.l2ll@gmail.com")) (:maintainers ("Markus Läll" . "markus.l2ll@gmail.com")) (:maintainer "Markus Läll" . "markus.l2ll@gmail.com"))])
 (org-appear . [(0 3 1) ((emacs (29 1)) (org (9 3))) "Auto-toggle Org elements" tar ((:url . "https://github.com/awth13/org-appear") (:commit . "32ee50f8fdfa449bbc235617549c1bccb503cb09") (:revdesc . "32ee50f8fdfa") (:authors ("Alice Istleyeva" . "awth13@gmail.com")) (:maintainers ("Alice Istleyeva" . "awth13@gmail.com")) (:maintainer "Alice Istleyeva" . "awth13@gmail.com"))])
 (org-assistant . [(1 5) ((emacs (28 1)) (uuidgen (1 2)) (deferred (0 5 1)) (s (1 12 0)) (dash (2 19 1)) (ht (0 9))) "Org babel extension for Chat Assistant APIs" tar ((:url . "https://github.com/tyler-dodge/org-assistant") (:commit . "3fd329251cc82294cf416518c49830bea69382ea") (:revdesc . "3fd329251cc8") (:keywords "convenience") (:authors ("Tyler Dodge" . "(tyler@tdodge.consulting)")) (:maintainers ("Tyler Dodge" . "(tyler@tdodge.consulting)")) (:maintainer "Tyler Dodge" . "(tyler@tdodge.consulting)"))])
 (org-auto-expand . [(0 1) ((emacs (26 1))) "Automatically expand certain headings" tar ((:url . "https://github.com/alphapapa/org-auto-expand") (:commit . "dfb909d9fd0a658df8a05613a5b95b645b855344") (:revdesc . "0.1-0-gdfb909d9fd0a") (:keywords "convenience" "outlines" "org") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (org-auto-export-pandoc . [(0 0 1) ((ox-pandoc (0))) "Support for the Foo programming language" tar ((:url . "https://github.com/Y0ngg4n/org-auto-export-pandoc") (:commit . "caba13b56e32ba49ab9eca01a60b7e6edcdbb786") (:revdesc . "caba13b56e32") (:keywords "languages") (:authors ("Yonggan" . "yonggan@obco.pro")) (:maintainers ("Yonggan" . "yonggan@obco.pro")) (:maintainer "Yonggan" . "yonggan@obco.pro"))])
 (org-auto-tangle . [(0 6 0) ((emacs (24 1)) (async (1 9 3))) "Automatically and Asynchronously tangles org files on save" tar ((:url . "https://github.com/yilkalargaw/org-auto-tangle") (:commit . "2494a6f78c9db5311123abc7cad119851a29a55c") (:revdesc . "2494a6f78c9d") (:keywords "outlines") (:authors ("Yilkal Argaw" . "yilkalargawworkneh@gmail.com")) (:maintainers ("Yilkal Argaw" . "yilkalargawworkneh@gmail.com")) (:maintainer "Yilkal Argaw" . "yilkalargawworkneh@gmail.com"))])
 (org-autoexport . [(1 1) ((emacs (28 1)) (org (9 6))) "Auto-export org file on save" tar ((:url . "https://git.sr.ht/~zondo/org-autoexport") (:commit . "0d3944d055ce4e8922991f892418a9bafd3eba15") (:revdesc . "0d3944d055ce") (:keywords "org" "wp") (:authors ("Glenn Hutchings" . "zondo42@gmail.com")) (:maintainers ("Glenn Hutchings" . "zondo42@gmail.com")) (:maintainer "Glenn Hutchings" . "zondo42@gmail.com"))])
 (org-autolist . [(0 14) nil "Improved list management in org-mode" tar ((:url . "https://github.com/calvinwyoung/org-autolist") (:commit . "c82d1e83e982b5f0c106b8800e5b0cfd5f73fdc1") (:revdesc . "c82d1e83e982") (:keywords "lists" "checklists" "org-mode"))])
 (org-babel-eval-in-repl . [(1 6) ((eval-in-repl (0 9 2)) (matlab-mode (3 3 6)) (ess (16 10)) (emacs (24))) "Eval org-mode babel code blocks in various REPLs" tar ((:url . "https://github.com/diadochos/org-babel-eval-in-repl") (:commit . "3591f062873de2d64cc6f83b3555d030506e6ee7") (:revdesc . "3591f062873d") (:keywords "literate programming" "reproducible research" "async execution") (:authors ("Takeshi Teshima" . "diadochos.developer@gmail.com")) (:maintainers ("Takeshi Teshima" . "diadochos.developer@gmail.com")) (:maintainer "Takeshi Teshima" . "diadochos.developer@gmail.com"))])
 (org-beautify-theme . [(0 3 1) nil "A sub-theme to make org-mode more beautiful" tar ((:url . "https://github.com/jonnay/org-beautify-theme") (:commit . "7b7a7cbd4f25f77e8bd81783f517b2b182220fd9") (:revdesc . "7b7a7cbd4f25") (:keywords "org" "theme") (:authors ("Jonathan Arkell" . "jonnay@jonnay.net")) (:maintainers ("Jonathan Arkell" . "jonnay@jonnay.net")) (:maintainer "Jonathan Arkell" . "jonnay@jonnay.net"))])
 (org-board . [(1018) nil "Bookmarking and web archival system for Org mode" tar ((:url . "https://github.com/charlesroelli/org-board") (:commit . "405bfd630f1b31bd77158bc8e79aab86812cba65") (:revdesc . "405bfd630f1b") (:keywords "org" "bookmarks" "archives") (:authors ("Charles A. Roelli" . "charles@aurox.ch")) (:maintainers ("Charles A. Roelli" . "charles@aurox.ch")) (:maintainer "Charles A. Roelli" . "charles@aurox.ch"))])
 (org-bookmark-heading . [(1 3 2) ((emacs (25 1)) (compat (29 1 4 5))) "Emacs bookmark support for Org mode" tar ((:url . "https://github.com/alphapapa/org-bookmark-heading") (:commit . "c7c7dcc52d3ad78084ea15e95bd7f6037bf02543") (:revdesc . "v1.3.2-0-gc7c7dcc52d3a") (:keywords "hypermedia" "outlines") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (org-bookmarks . [(1 2) ((emacs (26 1))) "Manage bookmarks in Org mode" tar ((:url . "https://repo.or.cz/org-bookmarks.git") (:commit . "340319879d43e0a90c8f29f2b896ce28a69ec205") (:revdesc . "340319879d43") (:keywords "outline" "matching" "hypermedia" "org"))])
 (org-books . [(0 3 0) ((enlive (0 0 1)) (s (1 11 0)) (helm (2 9 2)) (helm-org (1 0)) (dash (2 14 1)) (org (9 3)) (emacs (25))) "Reading list management with Org mode and helm" tar ((:url . "https://github.com/lepisma/org-books") (:commit . "9f4ec4a981bfc5eebff993c3ad49a4bed26aebd1") (:revdesc . "9f4ec4a981bf") (:keywords "outlines") (:authors ("Abhinav Tushar" . "abhinav@lepisma.xyz")) (:maintainers ("Abhinav Tushar" . "abhinav@lepisma.xyz")) (:maintainer "Abhinav Tushar" . "abhinav@lepisma.xyz"))])
 (org-bulletproof . [(0 3) ((emacs (27 1))) "Automatic plain list bullet cycling" tar ((:url . "https://github.com/pondersson/org-bulletproof") (:commit . "c9d09ff91a8d637ad8c2975bc39288a0e26c98ec") (:revdesc . "c9d09ff91a8d") (:keywords "outlines" "convenience") (:authors ("Pontus Andersson" . "pondersson@gmail.com")) (:maintainers ("Pontus Andersson" . "pondersson@gmail.com")) (:maintainer "Pontus Andersson" . "pondersson@gmail.com"))])
 (org-bullets . [(0 2 4) nil "Show bullets in org-mode as UTF-8 characters" tar ((:url . "https://github.com/integral-dw/org-bullets") (:commit . "b70ac2ec805bcb626a6e39ea696354577c681b36") (:revdesc . "b70ac2ec805b"))])
 (org-caldav . [(3 1) ((emacs (26 3)) (org (9 1))) "Sync org files with external calendar through CalDAV" tar ((:url . "https://github.com/dengste/org-caldav") (:commit . "7c0ae0dd84d47f7f28a5e74e68ecbbd53df401d8") (:revdesc . "7c0ae0dd84d4") (:keywords "calendar" "caldav") (:authors ("David Engster" . "deng@randomsample.de")) (:maintainers ("David Engster" . "deng@randomsample.de")) (:maintainer "David Engster" . "deng@randomsample.de"))])
 (org-category-capture . [(3 1 0) ((org (9 0 0)) (emacs (24))) "Contextualy capture of org-mode TODOs" tar ((:url . "https://github.com/colonelpanic8/org-project-capture") (:commit . "214a6068c467323a795b27996c1e7b75ae42dc68") (:revdesc . "214a6068c467") (:keywords "org-mode" "todo" "tools" "outlines") (:authors ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainers ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainer "Ivan Malison" . "IvanMalison@gmail.com"))])
 (org-cite-overlay . [(1 1 0) ((emacs (28 1)) (citeproc (0 9 4))) "Overlays for org-cite citations" tar ((:url . "https://git.sr.ht/~swflint/org-cite-overlay") (:commit . "67f375562d3bba1d31c780edcbf5a9a979c71d69") (:revdesc . "v1.1.0-0-g67f375562d3b") (:keywords "bib" "tex") (:authors ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainers ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainer "Samuel W. Flint" . "me@samuelwflint.com"))])
 (org-cite-overlay-sidecar . [(1 1 0) ((emacs (28 1)) (citeproc (0 9 4)) (org-cite-overlay (0 1 0)) (universal-sidecar (1 5 0)) (universal-sidecar-citeproc (1 0 0))) "Show Sidecar for overlaid org-cite citations" tar ((:url . "https://git.sr.ht/~swflint/org-cite-overlay") (:commit . "67f375562d3bba1d31c780edcbf5a9a979c71d69") (:revdesc . "v1.1.0-0-g67f375562d3b") (:keywords "bib") (:authors ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainers ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainer "Samuel W. Flint" . "me@samuelwflint.com"))])
 (org-clock-csv . [(1 2) ((org (8 3)) (s (1 0))) "Export `org-mode' clock entries to CSV format" tar ((:url . "https://github.com/atheriel/org-clock-csv") (:commit . "e2fbaa1ad1a1be40fceecde603a600b292b76acc") (:revdesc . "e2fbaa1ad1a1") (:keywords "calendar" "data" "org") (:authors ("Aaron Jacobs" . "atheriel@gmail.com")) (:maintainers ("Aaron Jacobs" . "atheriel@gmail.com")) (:maintainer "Aaron Jacobs" . "atheriel@gmail.com"))])
 (org-commentary . [(0 3 0) ((dash (2 0)) (emacs (24 4)) (org (8 0))) "Generate or update conventional library headers using Org mode files" tar ((:url . "https://github.com/smaximov/org-commentary") (:commit . "2eeeb0f506e30ef82263e67279d837a79cbde021") (:revdesc . "v0.3.0-0-g2eeeb0f506e3") (:keywords "convenience" "docs" "tools") (:authors ("Sergei Maximov" . "s.b.maximov@gmail.com")) (:maintainers ("Sergei Maximov" . "s.b.maximov@gmail.com")) (:maintainer "Sergei Maximov" . "s.b.maximov@gmail.com"))])
 (org-d20 . [(0 6) ((s (1 11 0)) (seq (2 19)) (dash (2 12 0)) (emacs (24))) "Minor mode for d20 tabletop roleplaying games" tar ((:url . "https://git.spwhitton.name/org-d20") (:commit . "ad399cde0ee21adc67ed0c95ae20900fa936f008") (:revdesc . "0.6-0-gad399cde0ee2") (:keywords "outlines" "games") (:authors ("Sean Whitton" . "spwhitton@spwhitton.name")) (:maintainers ("Sean Whitton" . "spwhitton@spwhitton.name")) (:maintainer "Sean Whitton" . "spwhitton@spwhitton.name"))])
 (org-download . [(0 1 0) ((async (1 2))) "Image drag-and-drop for Emacs org-mode" tar ((:url . "https://github.com/abo-abo/org-download") (:commit . "a57beffd0f09b218a9487d1750960878c1d5b12c") (:revdesc . "a57beffd0f09") (:keywords "images" "screenshots" "download"))])
 (org-dp . [(1) ((cl-lib (0 5))) "Declarative Local Programming with Org Elements" tar ((:url . "https://github.com/tj64/org-dp") (:commit . "d740c2065120f71762c48877da1a31dea881e98e") (:revdesc . "d740c2065120") (:authors ("Thorsten Jolitz" . "tjolitzATgmailDOTcom")) (:maintainers ("Thorsten Jolitz" . "tjolitzATgmailDOTcom")) (:maintainer "Thorsten Jolitz" . "tjolitzATgmailDOTcom"))])
 (org-drill . [(2 7 0) ((emacs (25 3)) (seq (2 14)) (org (9 2 4)) (persist (0 3))) "Self-testing using spaced repetition" tar ((:url . "https://gitlab.com/phillord/org-drill") (:commit . "4c114489e682e514e79701045d541ab6f3dc3fb4") (:revdesc . "4c114489e682") (:keywords "games" "outlines" "multimedia") (:authors ("Paul Sexton" . "eeeickythump@gmail.com")) (:maintainers ("Phillip Lord" . "phillip.lord@russet.org.uk")) (:maintainer "Phillip Lord" . "phillip.lord@russet.org.uk"))])
 (org-edit-latex . [(0 8 3) ((emacs (24 4)) (auctex (11 90))) "Edit embedded LaTeX in a dedicated buffer" tar ((:url . "https://github.com/et2010/org-edit-latex") (:commit . "39cbc9a99acb030f537c7269ab93958187321871") (:revdesc . "39cbc9a99acb") (:keywords "org" "latex") (:authors ("James Wong" . "jianwang.academic@gmail.com")) (:maintainers ("James Wong" . "jianwang.academic@gmail.com")) (:maintainer "James Wong" . "jianwang.academic@gmail.com"))])
 (org-elisp-help . [(1 0 0) ((cl-lib (0 5)) (org (9 0))) "Org links to emacs-lisp documentation" tar ((:url . "https://github.com/tarsius/org-elisp-help") (:commit . "3e33ab1a2933dd7f2782ef91d667a37f12d633ab") (:revdesc . "1.0.0-0-g3e33ab1a2933") (:keywords "org" "remember" "lisp") (:authors ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainers ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li"))])
 (org-elp . [(0 1) ((emacs (27 1))) "Preview latex equations in org mode while editing" tar ((:url . "https://github.com/guanyilun/org-elp") (:commit . "f9d48042eed49b9936d162cecb4188456a9cc19b") (:revdesc . "f9d48042eed4") (:keywords "lisp" "tex" "org"))])
 (org-epa-gpg . [(3 0 0) ((emacs (27 1))) "Patch to enable EasyPG .gpg images in Org mode inline" tar ((:url . "https://github.com/KeyWeeUsr/org-epa-gpg") (:commit . "6f3b8b77bdf63e96465322bbb545b96c9641d521") (:revdesc . "3.0.0-0-g6f3b8b77bdf6") (:keywords "lisp" "org" "gpg" "pgp" "epa" "encryption" "image" "inline" "patch") (:authors ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainers ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainer "Peter Badida" . "keyweeusr@gmail.com"))])
 (org-evil . [(0 6 0) ((dash (2 19 0)) (evil (0)) (org (9 4 4))) "Evil extensions for Org" tar ((:url . "https://github.com/GuiltyDolphin/org-evil") (:commit . "981b0931d043d3b0eb61fcab6258b5a88cc74d15") (:revdesc . "981b0931d043") (:keywords "convenience" "evil" "org") (:authors ("Ben Moon" . "software@guiltydolphin.com")) (:maintainers ("Ben Moon" . "software@guiltydolphin.com")) (:maintainer "Ben Moon" . "software@guiltydolphin.com"))])
 (org-fragtog . [(0 4 2) ((emacs (27 1))) "Auto-toggle Org LaTeX fragments" tar ((:url . "https://github.com/io12/org-fragtog") (:commit . "c675563af3f9ab5558cfd5ea460e2a07477b0cfd") (:revdesc . "c675563af3f9") (:authors ("Benjamin Levy" . "blevy@protonmail.com")) (:maintainers ("Benjamin Levy" . "blevy@protonmail.com")) (:maintainer "Benjamin Levy" . "blevy@protonmail.com"))])
 (org-gcal . [(0 4 2) ((aio (1 0)) (alert (1 2)) (elnode (20190702 1509)) (emacs (26 1)) (org (9 3)) (persist (0 4)) (request (20190901)) (request-deferred (20181129))) "Org sync with Google Calendar" tar ((:url . "https://github.com/kidd/org-gcal.el") (:commit . "3cc48a989ac859a97d25964c28874317a6e1672a") (:revdesc . "v0.4.2-0-g3cc48a989ac8") (:keywords "convenience") (:authors ("myuhe" . "yuhei.maeda_at_gmail.com")) (:maintainers ("Raimon Grau" . "raimonster@gmail.com")) (:maintainer "Raimon Grau" . "raimonster@gmail.com"))])
 (org-generate . [(1 0 0) ((emacs (26 1)) (org (9 3)) (mustache (0 23))) "Generate template files/folders from org document" tar ((:url . "https://github.com/conao3/org-generate.el") (:commit . "0c25f12cd25d835428dece427f26df53f1d60ce3") (:revdesc . "0c25f12cd25d") (:keywords "convenience") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (org-gnome . [(0 3) ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) "Orgmode integration with the GNOME desktop" tar ((:url . "https://github.com/NicolasPetton/org-gnome.el") (:commit . "1012d47886cfd30eed25b73d9f18e475e0155f88") (:revdesc . "1012d47886cf") (:keywords "org" "gnome") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:maintainers ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com"))])
 (org-grep . [(1 3 3) ((emacs (26 1))) "Kind of M-x rgrep adapted for Org mode" tar ((:url . "https://git.sr.ht/~minshall/org-grep") (:commit . "715f91a61a0c01eaaff4d0e61656060e3d175abb") (:revdesc . "1.3.3-0-g715f91a61a0c") (:authors ("François Pinard" . "pinard@iro.umontreal.ca")) (:maintainers ("Greg Minshall" . "minshall@umich.edu")) (:maintainer "Greg Minshall" . "minshall@umich.edu"))])
 (org-gtd . [(3 0 0) ((emacs (27 2)) (org-edna (1 1 2)) (f (0 20 0)) (org (9 6)) (org-agenda-property (1 3 1)) (transient (0 3 7))) "An implementation of GTD" tar ((:url . "https://github.com/Trevoke/org-gtd.el") (:commit . "578e83b0f67cb57dd1b10e9eea4f40d2e925b9b9") (:revdesc . "578e83b0f67c") (:authors ("Aldric Giacomoni" . "trevoke@gmail.com")) (:maintainers ("Aldric Giacomoni" . "trevoke@gmail.com")) (:maintainer "Aldric Giacomoni" . "trevoke@gmail.com"))])
 (org-hyperscheduler . [(1 0 0) ((emacs (27 1)) (websocket (1 13))) "UI (web) representation of org-agenda" tar ((:url . "https://github.com/dmitrym0/org-hyperscheduler") (:commit . "252f9412520fb703de96a81061766c74943cd06f") (:revdesc . "252f9412520f") (:keywords "org-mode" "calendar") (:authors ("Dmitry Markushevich" . "dmitrym@gmail.com")) (:maintainers ("Dmitry Markushevich" . "dmitrym@gmail.com")) (:maintainer "Dmitry Markushevich" . "dmitrym@gmail.com"))])
 (org-id-cleanup . [(1 7 1) ((org (9 3)) (dash (2 12)) (emacs (26 3))) "Interactively find, present and maybe clean up unused IDs of org-id" tar ((:url . "https://github.com/marcIhm/org-id-cleanup") (:commit . "73d3f750d236dd486b8bcc07c88bfda9ce5b384e") (:revdesc . "1.7.1-0-g73d3f750d236") (:authors ("Marc Ihm" . "marc@ihm.name")) (:maintainers ("Marc Ihm" . "marc@ihm.name")) (:maintainer "Marc Ihm" . "marc@ihm.name"))])
 (org-if . [(0 2 0) nil "Interactive Fiction Authoring System for Org-Mode" tar ((:url . "https://gitlab.com/elzair/org-if") (:commit . "fab602cc1bbee7a4e99c0083e129219d3f9ed2e8") (:revdesc . "fab602cc1bbe") (:keywords "if" "org-if" "org org-mode") (:authors ("Philip Woods" . "elzairthesorcerer@gmail.com")) (:maintainers ("Philip Woods" . "elzairthesorcerer@gmail.com")) (:maintainer "Philip Woods" . "elzairthesorcerer@gmail.com"))])
 (org-incoming . [(0 1) ((emacs (24 4)) (dash (2 19 1)) (datetime (0 7 2)) (s (1 13 1))) "Sort incoming PDFs into your org files" tar ((:url . "https://github.com/tinloaf/org-incoming") (:commit . "0eca164ebc45eb85962eef092f72151e8090d348") (:revdesc . "0eca164ebc45") (:keywords "files") (:authors ("Lukas Barth" . "mail@tinloaf.de")) (:maintainers ("Lukas Barth" . "mail@tinloaf.de")) (:maintainer "Lukas Barth" . "mail@tinloaf.de"))])
 (org-index . [(7 4 7) ((org (9 3)) (dash (2 12)) (s (1 12)) (emacs (26 3))) "Ranked and incremental search among selected org-headlines" tar ((:url . "https://github.com/marcIhm/org-index") (:commit . "0a0da7babec429422d622095e728d9ae02c50913") (:revdesc . "7.4.7-0-g0a0da7babec4") (:authors ("Marc Ihm" . "marc@ihm.name")) (:maintainers ("Marc Ihm" . "marc@ihm.name")) (:maintainer "Marc Ihm" . "marc@ihm.name"))])
 (org-inline-anim . [(0 3) ((emacs (25 3)) (org (9 4))) "Inline playback of animated GIF/PNG for Org" tar ((:url . "https://github.com/shg/org-inline-anim.el") (:commit . "9316fe78319fa18c7282993bd547cd33fda1b8ee") (:revdesc . "9316fe78319f") (:keywords "org" "outlines" "hypermedia" "multimedia"))])
 (org-inline-pdf . [(0 5) ((emacs (25 1)) (org (9 4))) "Inline PDF previewing for Org" tar ((:url . "https://github.com/shg/org-inline-pdf.el") (:commit . "3a22dca889e8fa815274adcc73bb31a31f5ed992") (:revdesc . "3a22dca889e8") (:keywords "org" "outlines" "hypermedia"))])
 (org-inline-pdfcomment . [(1 0 2) ((emacs (24 4))) "Export Support for Inline Tasks as PDF Comments" tar ((:url . "https://git.sr.ht/~swflint/org-inline-pdfcomment") (:commit . "0ff90ae65ba2948b44b02174f29d1fa12a0675ed") (:revdesc . "v1.0.2-0-g0ff90ae65ba2") (:keywords "docs" "text") (:authors ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainers ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainer "Samuel W. Flint" . "me@samuelwflint.com"))])
 (org-jami-bot . [(0 0 4) ((emacs (28 1)) (jami-bot (0 0 2))) "Capture GNU Jami messages as notes and todos in Org mode" tar ((:url . "https://gitlab.com/hperrey/org-jami-bot") (:commit . "a9ac8f6628978d60d8171fff45997c3e25dd35b5") (:revdesc . "a9ac8f662897") (:keywords "comm" "outlines" "org-capture" "jami") (:authors ("Hanno Perrey" . "http://gitlab.com/hperrey")) (:maintainers ("Hanno Perrey" . "hanno@hoowl.se")) (:maintainer "Hanno Perrey" . "hanno@hoowl.se"))])
 (org-jira . [(4 4 2) ((emacs (24 5)) (cl-lib (0 5)) (request (0 2 0)) (dash (2 14 1))) "Syncing between Jira and Org-mode" tar ((:url . "https://github.com/ahungry/org-jira") (:commit . "ac625b080545a1ade22d070c23624f71b7ab02b5") (:revdesc . "ac625b080545") (:keywords "ahungry" "jira" "org" "bug" "tracker") (:maintainers ("Matthew Carter" . "m@ahungry.com")) (:maintainer "Matthew Carter" . "m@ahungry.com"))])
 (org-journal . [(2 2 0) ((emacs (25 1)) (org (9 1))) "A simple org-mode based journaling mode" tar ((:url . "https://github.com/bastibe/org-journal") (:commit . "18df4d5ae5e15580df42562c143d007c6d28d75f") (:revdesc . "18df4d5ae5e1"))])
 (org-journal-tags . [(0 4 0) ((emacs (27 1)) (org-journal (2 1 2)) (magit-section (3 3 0)) (transient (0 3 7))) "Tagging and querying system of org-journal" tar ((:url . "https://github.com/SqrtMinusOne/org-journal-tags") (:commit . "d2375f42c80799ad7fb2324247315169bedc4c19") (:revdesc . "d2375f42c807") (:authors ("Korytov Pavel" . "thexcloud@gmail.com")) (:maintainers ("Korytov Pavel" . "thexcloud@gmail.com")) (:maintainer "Korytov Pavel" . "thexcloud@gmail.com"))])
 (org-kanban . [(0 6 9) ((s (0)) (dash (2 17 0))) "Kanban dynamic block for org-mode" tar ((:url . "https://github.com/gizmomogwai/org-kanban") (:commit . "cdc66ff97cdf5275db9f507bf2c915bbc0183c30") (:revdesc . "v0.6.9-0-gcdc66ff97cdf") (:keywords "org-mode" "org" "kanban" "tools") (:authors ("Christian Köstlin" . "christian.koestlin@gmail.com")) (:maintainers ("Christian Köstlin" . "christian.koestlin@gmail.com")) (:maintainer "Christian Köstlin" . "christian.koestlin@gmail.com"))])
 (org-link-beautify . [(1 2 3) ((emacs (28 1)) (nerd-icons (0 0 1)) (fb2-reader (0 1 1)) (qrencode (1 2))) "Beautify Org Links" tar ((:url . "https://repo.or.cz/org-link-beautify.git") (:commit . "c77338cfac89a41f90eafea80d11d8134e8096f4") (:revdesc . "c77338cfac89") (:keywords "hypermedia"))])
 (org-link-travis . [(0 0 1) ((org (7))) "Insert/Export the link of Travis CI on org-mode" tar ((:url . "https://github.com/aki2o/org-link-travis") (:commit . "596615ad8373d9090bd4138da683524f0ad0bda5") (:revdesc . "596615ad8373") (:keywords "org") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (org-linkotron . [(0 9 3) ((emacs (26 1)) (org (9 3))) "Org-mode link selector" tar ((:url . "https://gitlab.com/perweij/org-linkotron") (:commit . "d0adc5247b205bc73d2f1a83d4a512d2be541eb5") (:revdesc . "0.9.3-0-gd0adc5247b20") (:keywords "hypermedia" "org") (:authors ("Per Weijnitz" . "per.weijnitz@gmail.com")) (:maintainers ("Per Weijnitz" . "per.weijnitz@gmail.com")) (:maintainer "Per Weijnitz" . "per.weijnitz@gmail.com"))])
 (org-mac-link . [(1 9) ((emacs (27 1))) "Insert org-mode links to items selected in various Mac apps" tar ((:url . "https://gitlab.com/aimebertrand/org-mac-link") (:commit . "edf9f6f7254f72be939daf92942f76f44b72d32d") (:revdesc . "edf9f6f7254f") (:keywords "files" "wp" "url" "org") (:authors ("Anthony Lander" . "anthony.lander@gmail.com") ("John Wiegley" . "johnw@gnu.org") ("Christopher Suckling" . "sucklingatgmaildotcom") ("Daniil Frumin" . "difrumin@gmail.com") ("Alan Schmitt" . "alan.schmitt@polytechnique.org") ("Mike McLean" . "mike.mclean@pobox.com")) (:maintainers ("Aimé Bertrand" . "aime.bertrand@macowners.club")) (:maintainer "Aimé Bertrand" . "aime.bertrand@macowners.club"))])
 (org-make-toc . [(0 6) ((emacs (26 1)) (dash (2 12)) (s (1 10 0)) (org (9 3)) (compat (29 1))) "Automatic tables of contents for Org files" tar ((:url . "https://github.com/alphapapa/org-make-toc") (:commit . "5f0f39b11c091a5abf49ddf78a6f740252920f78") (:revdesc . "v0.6-0-g5f0f39b11c09") (:keywords "org" "convenience") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (org-mime . [(0 3 4) ((emacs (27 1))) "Org html export for text/html MIME emails" tar ((:url . "https://github.com/org-mime/org-mime") (:commit . "90aa9081ec00a1705552434cb45ff223aa9f8711") (:revdesc . "90aa9081ec00") (:keywords "mime" "mail" "email" "html") (:maintainers ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainer "Chen Bin" . "chenbin.sh@gmail.com"))])
 (org-ml . [(5 8 8) ((emacs (27 1)) (org (9 3)) (dash (2 17)) (s (1 12))) "Functional Org Mode API" tar ((:url . "https://github.com/ndwarshuis/org-ml") (:commit . "7a7b1e918e8440f3f6ddb37db9bd1471d0dad37d") (:revdesc . "7a7b1e918e84") (:keywords "org-mode" "outlines") (:authors ("Nathan Dwarshuis" . "ndwar@yavin4.ch")) (:maintainers ("Nathan Dwarshuis" . "ndwar@yavin4.ch")) (:maintainer "Nathan Dwarshuis" . "ndwar@yavin4.ch"))])
 (org-modern . [(1 5) ((emacs (27 1)) (compat (30))) "Modern looks for Org" tar ((:url . "https://github.com/minad/org-modern") (:commit . "e306c7df4985f77e5c4e2146900259a23a76c974") (:revdesc . "e306c7df4985") (:keywords "outlines" "hypermedia" "text") (:authors ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainers ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de"))])
 (org-movies . [(0 1) ((emacs (26 1)) (org (9 0)) (request (0 3 0))) "Manage watchlist with Org mode" tar ((:url . "https://github.com/teeann/org-movies") (:commit . "e96fecaffa2924de64a507aa31d2934e667ee1ea") (:revdesc . "e96fecaffa29") (:keywords "hypermedia" "outlines" "org"))])
 (org-mru-clock . [(0 6 1) ((emacs (26 1))) "Clock in/out of tasks with completion and persistent history" tar ((:url . "https://github.com/unhammer/org-mru-clock") (:commit . "454d317bf772a616cb76cf2212f111c7977016a2") (:revdesc . "v0.6.1-0-g454d317bf772") (:keywords "convenience" "calendar") (:authors ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainers ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainer "Kevin Brubeck Unhammer" . "unhammer@fsfe.org"))])
 (org-multi-wiki . [(0 4 0) ((emacs (26 1)) (dash (2 12)) (s (1 12)) (org-ql (0 4)) (org (9 3))) "Multiple wikis based on Org mode" tar ((:url . "https://github.com/akirak/org-multi-wiki") (:commit . "80791ea872939df0578dc3a2992a2f7fd5618971") (:revdesc . "80791ea87293") (:keywords "org" "outlines" "files") (:authors ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainers ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainer "Akira Komamura" . "akira.komamura@gmail.com"))])
 (org-newtab . [(0 1 1) ((emacs (27 1)) (websocket (1 14)) (async (1 9 7))) "Supercharge your browser's new tab page" tar ((:url . "https://github.com/Zweihander-Main/org-newtab") (:commit . "eca494a43e242558bd8db24d321ad62a8ec86c02") (:revdesc . "eca494a43e24") (:keywords "outlines") (:authors ("Zweihänder" . "zweidev@zweihander.me")) (:maintainers ("Zweihänder" . "zweidev@zweihander.me")) (:maintainer "Zweihänder" . "zweidev@zweihander.me"))])
 (org-nix-shell . [(0 3 2) ((emacs (27 1)) (org (9 4))) "Org local nix-shell" tar ((:url . "https://github.com/AntonHakansson/org-nix-shell") (:commit . "d9843aa0f62a39b9938a89388e25129ecb39a4cc") (:revdesc . "d9843aa0f62a") (:keywords "processes" "outlines") (:maintainers ("Anton Hakansson" . "anton@hakanssn.com")) (:maintainer "Anton Hakansson" . "anton@hakanssn.com"))])
 (org-node . [(1 9 12) ((emacs (28 1)) (compat (30)) (el-job (0 3 14)) (llama (0 4 0))) "Link org-id entries into a network" tar ((:url . "https://github.com/meedstrom/org-node") (:commit . "c129acbe28d35ec27e6d30a28d5105af0f376536") (:revdesc . "1.9.12-0-gc129acbe28d3") (:keywords "org" "hypermedia") (:authors ("Martin Edström" . "meedstrom91@gmail.com")) (:maintainers ("Martin Edström" . "meedstrom91@gmail.com")) (:maintainer "Martin Edström" . "meedstrom91@gmail.com"))])
 (org-node-fakeroam . [(1 6 4) ((emacs (28 1)) (org-node (1 9 0)) (compat (30)) (org-roam (2 2 2)) (emacsql (4 0 3))) "Stand-ins for org-roam-autosync-mode" tar ((:url . "https://github.com/meedstrom/org-node-fakeroam") (:commit . "288d897e12713db7d15162ccf3bdc93147f00943") (:revdesc . "1.6.4-0-g288d897e1271") (:keywords "org" "hypermedia") (:authors ("Martin Edström" . "meedstrom91@gmail.com")) (:maintainers ("Martin Edström" . "meedstrom91@gmail.com")) (:maintainer "Martin Edström" . "meedstrom91@gmail.com"))])
 (org-noter . [(1 6 1) ((emacs (24 4)) (cl-lib (0 6)) (org (9 4))) "A synchronized, Org-mode, document annotator" tar ((:url . "https://github.com/org-noter/org-noter") (:commit . "284b425f7275ca04bab0f691dfe284a4e059288c") (:revdesc . "284b425f7275") (:keywords "lisp" "pdf" "interleave" "annotate" "external" "sync" "notes" "documents" "org-mode") (:authors ("Gonçalo Santos" . "in@bsentia") ("Maintainer Dmitry M" . "dmitrym@gmail.com")) (:maintainers ("Peter Mao" . "peter.mao@gmail.com") ("Dmitry M" . "dmitrym@gmail.com")) (:maintainer "Peter Mao" . "peter.mao@gmail.com"))])
 (org-outlook . [(0 11) nil "Outlook org" tar ((:url . "https://github.com/mattfidler/org-outlook.el") (:commit . "070c37d017ccb71d94c3c69c99632fa6570ec2cc") (:revdesc . "v0.11-0-g070c37d017cc") (:keywords "org-outlook"))])
 (org-page . [(0 41) ((ht (1 5)) (mustache (0 22)) (htmlize (1 47)) (org (8))) "A static site generator based on org mode" tar ((:url . "https://github.com/emacsorphanage/org-page") (:commit . "09febf89d8dcb226aeedf8164169b31937b64439") (:revdesc . "09febf89d8dc") (:keywords "org-mode" "convenience" "beautify") (:authors ("Kelvin Hu" . "iniDOTkelvinATgmailDOTcom")) (:maintainers ("Kelvin Hu" . "iniDOTkelvinATgmailDOTcom")) (:maintainer "Kelvin Hu" . "iniDOTkelvinATgmailDOTcom"))])
 (org-pomodoro . [(2 1 0) ((alert (0 5 10)) (cl-lib (0 5))) "Pomodoro implementation for org-mode" tar ((:url . "https://github.com/marcinkoziej/org-pomodoro") (:commit . "a6d867865f1a033fb5a09cca6643045d7ebac49c") (:revdesc . "a6d867865f1a") (:authors ("Arthur Leonard Andersen" . "leoc.git@gmail.com") ("Marcin Koziej" . "marcinatlolowniadotorg")) (:maintainers ("Arthur Leonard Andersen" . "leoc.git@gmail.com") ("Marcin Koziej" . "marcinatlolowniadotorg")) (:maintainer "Arthur Leonard Andersen" . "leoc.git@gmail.com"))])
 (org-pretty-tags . [(0 2 2) ((emacs (25))) "Surrogates for tags" tar ((:url . "https://gitlab.com/marcowahl/org-pretty-tags") (:commit . "549fa6969660dcf0cf9bca5b7341d0cb48ec3b77") (:revdesc . "549fa6969660") (:keywords "reading" "outlines") (:authors ("Marco Wahl" . "marcowahlsoft@gmail.com")) (:maintainers ("Marco Wahl" . "marcowahlsoft@gmail.com")) (:maintainer "Marco Wahl" . "marcowahlsoft@gmail.com"))])
 (org-project-capture . [(3 1 0) ((dash (2 10 0)) (emacs (28)) (s (1 9 0)) (org-category-capture (1 0 0))) "Repository todo capture and management for org-mode" tar ((:url . "https://github.com/colonelpanic8/org-project-capture") (:commit . "214a6068c467323a795b27996c1e7b75ae42dc68") (:revdesc . "214a6068c467") (:keywords "org-mode" "todo" "tools" "outlines" "project" "capture") (:authors ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainers ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainer "Ivan Malison" . "IvanMalison@gmail.com"))])
 (org-projectile . [(3 1 0) ((projectile (2 3 0)) (dash (2 10 0)) (org-project-capture (3 0 1)) (org-category-capture (3 0 1))) "Repository todo capture and management for org-mode with projectile" tar ((:url . "https://github.com/colonelpanic8/org-project-capture") (:commit . "214a6068c467323a795b27996c1e7b75ae42dc68") (:revdesc . "214a6068c467") (:keywords "org-mode" "projectile" "todo" "tools" "outlines" "project" "capture") (:authors ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainers ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainer "Ivan Malison" . "IvanMalison@gmail.com"))])
 (org-projectile-helm . [(3 1 0) ((org-projectile (1 0 0)) (helm (2 3 1)) (emacs (25))) "Helm functions for org-projectile" tar ((:url . "https://github.com/colonelpanic8/org-project-capture") (:commit . "214a6068c467323a795b27996c1e7b75ae42dc68") (:revdesc . "214a6068c467") (:keywords "org" "projectile" "todo" "helm" "outlines") (:authors ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainers ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainer "Ivan Malison" . "IvanMalison@gmail.com"))])
 (org-protocol-jekyll . [(0 1) nil "Jekyll's handler for org-protocol" tar ((:url . "https://github.com/vonavi/org-protocol-jekyll") (:commit . "c1ac46793eb9bf22b1a601e841947428be5c9766") (:revdesc . "c1ac46793eb9") (:authors ("Vladimir S. Ivanov" . "ivvl82@gmail.com")) (:maintainers ("Vladimir S. Ivanov" . "ivvl82@gmail.com")) (:maintainer "Vladimir S. Ivanov" . "ivvl82@gmail.com"))])
 (org-ql . [(0 8 10) ((emacs (27 1)) (compat (29 1)) (dash (2 18 1)) (f (0 17 2)) (map (2 1)) (org (9 0)) (org-super-agenda (1 2)) (ov (1 0 6)) (peg (1 0 1)) (s (1 12 0)) (transient (0 1)) (ts (0 2 -1))) "Org Query Language, search command, and agenda-like view" tar ((:url . "https://github.com/alphapapa/org-ql") (:commit . "9c53c1bddfcbda3475ffd8810f012be6de07d963") (:revdesc . "v0.8.10-0-g9c53c1bddfcb") (:keywords "hypermedia" "outlines" "org" "agenda") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (org-random-todo . [(0 5 3) ((emacs (24 3)) (alert (1 2))) "Show a random TODO (with alert) every so often" tar ((:url . "https://github.com/unhammer/org-random-todo") (:commit . "09228e55f1cc702053d305fdea2b094b548e6dbe") (:revdesc . "0.5.3-0-g09228e55f1cc") (:keywords "org" "todo" "notification" "calendar") (:authors ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainers ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainer "Kevin Brubeck Unhammer" . "unhammer@fsfe.org"))])
 (org-re-reveal . [(3 33 0) ((emacs (24 4)) (org (8 3)) (htmlize (1 34))) "Org export to reveal.js presentations" tar ((:url . "https://gitlab.com/oer/org-re-reveal") (:commit . "91610ba9b010b05c52ae7ab77a7890851222db06") (:revdesc . "91610ba9b010") (:keywords "tools" "outlines" "hypermedia" "slideshow" "presentation" "oer"))])
 (org-re-reveal-citeproc . [(2 0 1) ((emacs (25 1)) (org (9 5)) (citeproc (0 9)) (org-re-reveal (3 0 0))) "Citations and bibliography for org-re-reveal" tar ((:url . "https://gitlab.com/oer/org-re-reveal-citeproc") (:commit . "f1f5a00fc8570234a8d421868b170aa9819c792a") (:revdesc . "f1f5a00fc857") (:keywords "hypermedia" "tools" "slideshow" "presentation" "bibliography"))])
 (org-re-reveal-ref . [(1 0 0) ((emacs (25 1)) (org-ref (1 1 1)) (org-re-reveal (0 9 3))) "Citations and bibliography for org-re-reveal" tar ((:url . "https://gitlab.com/oer/org-re-reveal-ref") (:commit . "abcd622e4edaa5e4480bcd1e7e4953f67c90e036") (:revdesc . "abcd622e4eda") (:keywords "hypermedia" "tools" "slideshow" "presentation" "bibliography"))])
 (org-recent-headings . [(0 1) ((emacs (25 1)) (org (9 0 5)) (dash (2 13 0)) (frecency (0 1))) "Jump to recently used Org headings" tar ((:url . "https://github.com/alphapapa/org-recent-headings") (:commit . "01633b51ac3958b41cc6c79e6d3714047a91c1e9") (:revdesc . "0.1-0-g01633b51ac39") (:keywords "hypermedia" "outlines" "org") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (org-recur . [(1 3 3) ((emacs (24 1)) (org (9 0)) (dash (2 7 0))) "Recurring org-mode tasks" tar ((:url . "https://github.com/mrcnski/org-recur") (:commit . "628099883a63d219f76cd9631cc914fe6ec8a3e3") (:revdesc . "628099883a63") (:authors ("Marcin Swieczkowski" . "marcin.swieczkowski@gmail.com")) (:maintainers ("Marcin Swieczkowski" . "marcin.swieczkowski@gmail.com")) (:maintainer "Marcin Swieczkowski" . "marcin.swieczkowski@gmail.com"))])
 (org-ref . [(2 0 0) ((dash (2 11 0)) (htmlize (1 51)) (helm (1 5 5)) (helm-bibtex (2 0 0)) (ivy (0 8 0)) (hydra (0 13 2)) (key-chord (0)) (s (1 10 0)) (f (0 18 0)) (pdf-tools (0 7)) (bibtex-completion (0))) "Citations, cross-references and bibliographies in org-mode" tar ((:url . "https://github.com/jkitchin/org-ref") (:commit . "37b64e6cc1068c1b7ffe579851a345aa57772333") (:revdesc . "v2.0.0-0-g37b64e6cc106") (:keywords "org-mode" "cite" "ref" "label") (:authors ("John Kitchin" . "jkitchin@andrew.cmu.edu")) (:maintainers ("John Kitchin" . "jkitchin@andrew.cmu.edu")) (:maintainer "John Kitchin" . "jkitchin@andrew.cmu.edu"))])
 (org-repo-todo . [(0 0 3) nil "Simple repository todo management with org-mode" tar ((:url . "https://github.com/waymondo/org-repo-todo") (:commit . "cba6145c6821fd2bbd96a1c9ef2346c281b76ad2") (:revdesc . "cba6145c6821") (:keywords "convenience") (:authors ("justin talbott" . "justin@waymondo.com")) (:maintainers ("justin talbott" . "justin@waymondo.com")) (:maintainer "justin talbott" . "justin@waymondo.com"))])
 (org-reverse-datetree . [(0 4 2 2) ((emacs (29 1)) (dash (2 19 1)) (org (9 6))) "Create reverse date trees in org-mode" tar ((:url . "https://github.com/akirak/org-reverse-datetree") (:commit . "3ac9b35ebe872f5a619f2e6abe281df66ebbcfe0") (:revdesc . "3ac9b35ebe87") (:keywords "outlines") (:authors ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainers ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainer "Akira Komamura" . "akira.komamura@gmail.com"))])
 (org-rich-yank . [(0 2 2) ((emacs (24 4))) "Paste with org-mode markup and link to source" tar ((:url . "https://github.com/unhammer/org-rich-yank") (:commit . "0a74fb742fcdf9560d954b40e2f49551476dee4f") (:revdesc . "v0.2.2-0-g0a74fb742fcd") (:keywords "convenience" "hypermedia" "org") (:authors ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainers ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainer "Kevin Brubeck Unhammer" . "unhammer@fsfe.org"))])
 (org-roam . [(2 2 2) ((emacs (26 1)) (dash (2 13)) (org (9 4)) (emacsql (3 0 0)) (emacsql-sqlite (1 0 0)) (magit-section (3 0 0))) "A database abstraction layer for Org-mode" tar ((:url . "https://github.com/org-roam/org-roam") (:commit . "69116a4da49448e79ac03aedceeecd9f5ae9b2d4") (:revdesc . "69116a4da494") (:keywords "org-mode" "roam" "convenience") (:authors ("Jethro Kuan" . "jethrokuan95@gmail.com")) (:maintainers ("Jethro Kuan" . "jethrokuan95@gmail.com")) (:maintainer "Jethro Kuan" . "jethrokuan95@gmail.com"))])
 (org-roam-bibtex . [(0 6 2) ((emacs (27 2)) (org-roam (2 0 0)) (bibtex-completion (2 0 0))) "Org Roam meets BibTeX" tar ((:url . "https://github.com/org-roam/org-roam-bibtex") (:commit . "070a7a732cf38f51245116ddd41aad8ac697c3b0") (:revdesc . "070a7a732cf3") (:keywords "bib" "hypermedia" "outlines" "wp") (:authors ("Mykhailo Shevchuk" . "mail@mshevchuk.com") ("Leo Vivier" . "leo.vivier+dev@gmail.com")) (:maintainers ("Mykhailo Shevchuk" . "mail@mshevchuk.com") ("Leo Vivier" . "leo.vivier+dev@gmail.com")) (:maintainer "Mykhailo Shevchuk" . "mail@mshevchuk.com"))])
 (org-roam-ql . [(0 2) ((emacs (28)) (org-roam (2 2 0)) (s (1 12 0)) (magit-section (3 3 0)) (transient (0 4)) (org-super-agenda (1 2))) "Interface to query and view results from org-roam" tar ((:url . "https://github.com/ahmed-shariff/org-roam-ql") (:commit . "f628fef081394f159f196f4350132aecb3edb8cc") (:revdesc . "f628fef08139"))])
 (org-roam-ql-ql . [(0 2) ((emacs (28)) (org-roam-ql (0 1)) (org-ql (0 7)) (org-roam (2 2 0)) (s (1 12 0)) (transient (0 4))) "Intgrating org-roam and org-ql" tar ((:url . "https://github.com/ahmed-shariff/org-roam-ql") (:commit . "f628fef081394f159f196f4350132aecb3edb8cc") (:revdesc . "f628fef08139"))])
 (org-runbook . [(1 2) nil "Org mode for runbooks" tar ((:url . "https://github.com/tyler-dodge/org-runbook") (:commit . "253c2876446650249d59ac35200b373a0aee4e68") (:revdesc . "253c28764466") (:keywords "convenience" "processes" "terminals" "files"))])
 (org-sidebar . [(0 4) ((emacs (26 1)) (s (1 10 0)) (dash (2 18)) (org (9 0)) (org-ql (0 2)) (org-super-agenda (1 0))) "Helpful sidebar for Org buffers" tar ((:url . "https://github.com/alphapapa/org-sidebar") (:commit . "324987d71b0f2842ac7cae74e534b490603cce67") (:revdesc . "v0.4-0-g324987d71b0f") (:keywords "hypermedia" "outlines" "org" "agenda") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (org-snooze . [(0 1 0) ((emacs (24 4))) "Snooze your code, doc and feed" tar ((:url . "https://github.com/xueeinstein/org-snooze.el") (:commit . "6d30b0dcdfe9538e4400e49046291b7d07274164") (:revdesc . "6d30b0dcdfe9") (:keywords "extensions"))])
 (org-special-block-extras . [(2) ((s (1 12 0)) (dash (2 16 0)) (emacs (26 1)) (dash-functional (1 2 0)) (org (9 1))) "30 new custom blocks & 34 link types for Org-mode" tar ((:url . "https://github.com/alhassy/org-special-block-extras") (:commit . "61ff797d068947a4f1c172bb83aaf5cf897febf1") (:revdesc . "61ff797d0689") (:keywords "org" "blocks" "colors" "convenience") (:authors ("Musa Al-hassy" . "alhassy@gmail.com")) (:maintainers ("Musa Al-hassy" . "alhassy@gmail.com")) (:maintainer "Musa Al-hassy" . "alhassy@gmail.com"))])
 (org-sql . [(4 0 0) ((emacs (27 1)) (s (1 13)) (f (0 20 0)) (dash (2 19 1)) (org-ml (5 8 8))) "Org-Mode SQL converter" tar ((:url . "https://github.com/ndwarshuis/org-sql") (:commit . "80bea9996de7fa8bc7ff891a91cfaff91111dcd8") (:revdesc . "80bea9996de7") (:keywords "org-mode" "data") (:authors ("Nathan Dwarshuis" . "natedwarshuis@gmail.com")) (:maintainers ("Nathan Dwarshuis" . "natedwarshuis@gmail.com")) (:maintainer "Nathan Dwarshuis" . "natedwarshuis@gmail.com"))])
 (org-starter . [(0 2 10) ((emacs (25 1)) (dash (2 18))) "A basic configuration framework for org mode" tar ((:url . "https://github.com/akirak/org-starter") (:commit . "cd9c5c0402de941299d1c8901f26a8f24d755022") (:revdesc . "cd9c5c0402de") (:authors ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainers ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainer "Akira Komamura" . "akira.komamura@gmail.com"))])
 (org-starter-swiper . [(0 2 10) ((emacs (25 1)) (swiper (0 11)) (org-starter (0 2 4))) "Swiper for org-starter" tar ((:url . "https://github.com/akirak/org-starter") (:commit . "cd9c5c0402de941299d1c8901f26a8f24d755022") (:revdesc . "cd9c5c0402de") (:authors ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainers ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainer "Akira Komamura" . "akira.komamura@gmail.com"))])
 (org-static-blog . [(1 6 0) ((emacs (24 3))) "A simple org-mode based static blog generator" tar ((:url . "https://github.com/bastibe/org-static-blog") (:commit . "61a3ab0e2e8e1ac0ef8772e89ae320c07142f7f5") (:revdesc . "61a3ab0e2e8e"))])
 (org-sticky-header . [(1 1) ((emacs (24 4)) (org (8 3 5))) "Show off-screen Org heading at top of window" tar ((:url . "https://github.com/alphapapa/org-sticky-header") (:commit . "79136b8c54c48547ba8a07a72a9790cb8e23ecbd") (:revdesc . "1.1-0-g79136b8c54c4") (:keywords "hypermedia" "outlines" "org") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (org-super-agenda . [(1 3) ((emacs (26 1)) (compat (29 1 4 1)) (s (1 10 0)) (dash (2 13)) (org (9 0)) (ht (2 2)) (ts (0 2))) "Supercharge your agenda" tar ((:url . "https://github.com/alphapapa/org-super-agenda") (:commit . "0d7851e1b4bfa278a0ceca99f0130a795a825103") (:revdesc . "v1.3-0-g0d7851e1b4bf") (:keywords "hypermedia" "outlines" "org" "agenda") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (org-superstar . [(1 5 0) ((org (9 1 9)) (emacs (26 1))) "Prettify headings and plain lists in Org mode" tar ((:url . "https://github.com/integral-dw/org-superstar-mode") (:commit . "9d64c42e5029910153ec74cb9b5747b074281140") (:revdesc . "v1.5.0-0-g9d64c42e5029") (:keywords "faces" "outlines") (:authors ("D. Williams" . "d.williams@posteo.net")) (:maintainers ("D. Williams" . "d.williams@posteo.net")) (:maintainer "D. Williams" . "d.williams@posteo.net"))])
 (org-sync . [(0 3 0) ((cl-lib (0 5)) (org (8 2)) (emacs (24))) "Synchronize Org documents with External Issue Trackers" tar ((:url . "https://github.com/arbox/org-sync") (:commit . "8c65dceaa2f3d436f83ed591916f22556a6e7f91") (:revdesc . "8c65dceaa2f3") (:keywords "org" "synchronization" "issue tracking" "github" "redmine") (:authors ("Aurelien Aptel" . "aureliendotaptelatgmaildotcom")) (:maintainers ("Andrei Beliankou" . "arbox@yandex.ru")) (:maintainer "Andrei Beliankou" . "arbox@yandex.ru"))])
 (org-table-comment . [(0 2 0) nil "Org table comment modes" tar ((:url . "https://github.com/mattfidler/org-table-comment.el") (:commit . "33b9966c33ecbc3e27cca67c2f2cdea04364d74e") (:revdesc . "33b9966c33ec") (:keywords "org-mode" "orgtbl") (:authors ("Matthew L. Fidler" . "matthewdotfidleratgmail.com")))])
 (org-table-sticky-header . [(0 1 1) ((org (8 2 10))) "Sticky header for org-mode tables" tar ((:url . "https://github.com/cute-jumper/org-table-sticky-header") (:commit . "4dba2dc9a3ed63f58aa946aeec84a52d46ca4043") (:revdesc . "4dba2dc9a3ed") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (org-tagged . [(0 0 4) ((s (1 13 0)) (dash (2 19 1)) (emacs (28 1)) (org (9 5 2))) "Dynamic block for tagged org-mode todos" tar ((:url . "https://github.com/gizmomogwai/org-tagged") (:commit . "c2cd03bc86af55689964424988d724158348903d") (:revdesc . "v0.0.4-0-gc2cd03bc86af") (:keywords "org-mode" "org" "gtd" "tools") (:authors ("Christian Köstlin" . "christian.koestlin@gmail.com")) (:maintainers ("Christian Köstlin" . "christian.koestlin@gmail.com")) (:maintainer "Christian Köstlin" . "christian.koestlin@gmail.com"))])
 (org-tfl . [(0 4 0) ((org (0 16 2)) (cl-lib (0 5)) (emacs (24 1))) "Transport for London meets Orgmode" tar ((:url . "https://github.com/storax/org-tfl") (:commit . "f0d7d39106a1de5457f5160cddd98ab892b61066") (:revdesc . "0.4.0-0-gf0d7d39106a1") (:keywords "org" "tfl") (:authors (nil . "zuber[dot]david[at]gmx[dot]de")) (:maintainers (nil . "zuber[dot]david[at]gmx[dot]de")) (:maintainer nil . "zuber[dot]david[at]gmx[dot]de"))])
 (org-time-budgets . [(1 0 1) ((alert (0 5 10)) (cl-lib (0 5))) "Define time budgets and display clocked time" tar ((:url . "https://github.com/leoc/org-time-budgets") (:commit . "f2a8fe3d9d6104f3dd61fabbb385a596363b360b") (:revdesc . "f2a8fe3d9d61") (:authors ("Arthur Leonard Andersen" . "leoc.git@gmail.com")) (:maintainers ("Arthur Leonard Andersen" . "leoc.git@gmail.com")) (:maintainer "Arthur Leonard Andersen" . "leoc.git@gmail.com"))])
 (org-timeblock . [(0 2) ((emacs (28 1)) (compat (29 1 4 1)) (org (9 0)) (svg (1 1))) "Interactive SVG calendar for orgmode tasks" tar ((:url . "https://github.com/ichernyshovvv/org-timeblock") (:commit . "830479285fef28e57d5024c4475a77e7ef1b73a7") (:revdesc . "830479285fef") (:keywords "org" "calendar" "timeblocking" "agenda") (:authors ("Ilya Chernyshov" . "ichernyshovvv@gmail.com")) (:maintainers ("Ilya Chernyshov" . "ichernyshovvv@gmail.com")) (:maintainer "Ilya Chernyshov" . "ichernyshovvv@gmail.com"))])
 (org-timeline . [(0 4 0) ((dash (2 13 0)) (emacs (24 3))) "Add graphical view of agenda to agenda buffer" tar ((:url . "https://github.com/Fuco1/org-timeline") (:commit . "55cafb5512a174c3898aaacd71ab58832b9fe321") (:revdesc . "55cafb5512a1") (:keywords "calendar") (:authors ("Matúš Goljer" . "matus.goljer@gmail.com")) (:maintainers ("Matúš Goljer" . "matus.goljer@gmail.com")) (:maintainer "Matúš Goljer" . "matus.goljer@gmail.com"))])
 (org-toodledo . [(2 1 0) nil "[No description available]" tar ((:url . "https://github.com/myuhe/org-toodledo") (:commit . "5473c1a2762371b198862aa8fd83fd3ec57485a4") (:revdesc . "2.1.0-0-g5473c1a27623"))])
 (org-tracktable . [(0 3 1) ((emacs (24)) (cl-lib (0 5))) "Track your writing progress in an org-table" tar ((:url . "https://github.com/tty-tourist/org-tracktable") (:commit . "8e0e60a582a034bd66d5efb72d513140b7d4d90a") (:revdesc . "8e0e60a582a0") (:keywords "org" "writing") (:authors ("tty-tourist" . "andreasrasholm@protonmail.com")) (:maintainers ("tty-tourist" . "andreasrasholm@protonmail.com")) (:maintainer "tty-tourist" . "andreasrasholm@protonmail.com"))])
 (org-transclusion-http . [(0 4) ((emacs (28 1)) (org-transclusion (1 4 0)) (plz (0 7 2))) "Transclude over HTTP" tar ((:url . "https://git.sr.ht/~ushin/org-transclusion-http") (:commit . "a764f05a9eaeca002c76b85d090ca6b036e9dbaf") (:revdesc . "v0.4-0-ga764f05a9eae") (:authors ("Joseph Turner" . "firstnameatushin.org")) (:maintainers ("Joseph Turner" . "~ushin/ushin@lists.sr.ht")) (:maintainer "Joseph Turner" . "~ushin/ushin@lists.sr.ht"))])
 (org-transform-tree-table . [(0 1 2) ((dash (2 10 0)) (s (1 3 0))) "Transform org-mode tree with properties to a table, and the other way around" tar ((:url . "https://github.com/jplindstrom/emacs-org-transform-tree-table") (:commit . "0a9bf07f01bc5fc3b349aff64e83999a8de83b52") (:revdesc . "0.1.2-0-g0a9bf07f01bc") (:keywords "org-mode" "table" "org-table" "tree" "csv" "convert") (:authors ("Johan Lindstrom" . "buzzwordninjanot_this_bit@googlemail.com")) (:maintainers ("Johan Lindstrom" . "buzzwordninjanot_this_bit@googlemail.com")) (:maintainer "Johan Lindstrom" . "buzzwordninjanot_this_bit@googlemail.com"))])
 (org-tree-slide . [(2 8 4) nil "A presentation tool for org-mode" tar ((:url . "https://github.com/takaxp/org-tree-slide") (:commit . "dccd80418a4444df5e8301695ff0d0dfe86a3c21") (:revdesc . "dccd80418a44") (:keywords "org-mode" "presentation" "narrowing") (:authors ("Takaaki ISHIKAWA" . "takaxpatieeedotorg")) (:maintainers ("Takaaki ISHIKAWA" . "takaxpatieeedotorg")) (:maintainer "Takaaki ISHIKAWA" . "takaxpatieeedotorg"))])
 (org-tree-slide-pauses . [(0 1 0) ((emacs (24 4)) (org-tree-slide (2 8 4))) "Bring the \\pause Beamer to org-tree-slide!" tar ((:url . "https://github.com/cnngimenez/org-tree-slide-pauses") (:commit . "80d6e9279fad10bcff15fbce75726bb002da73c0") (:revdesc . "80d6e9279fad") (:keywords "convenience" "org-mode" "presentation"))])
 (org-trello . [(0 8 2) ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) "Minor mode to synchronize org-mode buffer and trello board" tar ((:url . "https://github.com/org-trello/org-trello") (:commit . "4ddc257fe24e97c01e12b247568581ff255f0e8d") (:revdesc . "0.8.2-0-g4ddc257fe24e") (:keywords "org-mode" "trello" "sync" "org-trello") (:authors ("Antoine R. Dumont" . "antoine.romain.dumont@gmail.com")) (:maintainers ("Antoine R. Dumont" . "antoine.romain.dumont@gmail.com")) (:maintainer "Antoine R. Dumont" . "antoine.romain.dumont@gmail.com"))])
 (org-unique-id . [(0 4 1) ((emacs (25 1)) (org (9 3))) "Create unique IDs for org headers" tar ((:url . "https://github.com/Phundrak/org-unique-id") (:commit . "c3a0908ff2123c8786735f3c6f35e905efea2ef6") (:revdesc . "c3a0908ff212") (:keywords "convenience") (:authors ("Lucien Cartier-Tilet" . "lucien@phundrak.com")) (:maintainers ("Lucien Cartier-Tilet" . "lucien@phundrak.com")) (:maintainer "Lucien Cartier-Tilet" . "lucien@phundrak.com"))])
 (org-upcoming-modeline . [(0 1 6) ((emacs (26 1)) (ts (0 2)) (org-ql (0 6))) "Show next org event in mode line" tar ((:url . "https://github.com/unhammer/org-upcoming-modeline") (:commit . "bacabc9368b11554c04216bd0a9c756ea9fd4ee6") (:revdesc . "v0.1.6-0-gbacabc9368b1") (:keywords "convenience" "calendar") (:authors ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainers ("Kevin Brubeck Unhammer" . "unhammer@fsfe.org")) (:maintainer "Kevin Brubeck Unhammer" . "unhammer@fsfe.org"))])
 (org-vcard . [(0 2 0) nil "Org-mode support for vCard export and import" tar ((:url . "https://github.com/pinoaffe/org-vcard") (:commit . "a6ab82ab28fa78f7c985d3ea9c9fafdd17f7ea8b") (:revdesc . "a6ab82ab28fa") (:keywords "outlines" "org" "vcard") (:authors ("Alexis" . "flexibeast@gmail.com")) (:maintainers ("Alexis" . "flexibeast@gmail.com")) (:maintainer "Alexis" . "flexibeast@gmail.com"))])
 (org-visibility . [(1 1 12) ((emacs (27 1))) "Persistent org tree visibility" tar ((:url . "https://github.com/nullman/emacs-org-visibility") (:commit . "afa4b6f8ff274df87eb11f1afd0321084a45a2ab") (:revdesc . "afa4b6f8ff27") (:keywords "outlines" "convenience") (:authors ("Kyle W T Sherman" . "kylewsherman@gmail.com")) (:maintainers ("Kyle W T Sherman" . "kylewsherman@gmail.com")) (:maintainer "Kyle W T Sherman" . "kylewsherman@gmail.com"))])
 (org-web-tools . [(1 3) ((emacs (27 1)) (org (9 0)) (compat (29 1 4 2)) (dash (2 12)) (esxml (0 3 4)) (s (1 10 0)) (plz (0 7 1)) (request (0 3 0))) "Display and capture web content with Org-mode" tar ((:url . "https://github.com/alphapapa/org-web-tools") (:commit . "7a6498f442fc7f29504745649948635c7165d847") (:revdesc . "v1.3-0-g7a6498f442fc") (:keywords "hypermedia" "outlines" "org" "web") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (org-web-track . [(0 1 0) ((emacs (29 1)) (request (0 3 0)) (enlive (0 0 1))) "Web data tracking framework in Org Mode" tar ((:url . "https://github.com/p-snow/org-web-track") (:commit . "4371a177af1072076a5799a12bd37635b7e33942") (:revdesc . "4371a177af10") (:keywords "org" "agenda" "web" "hypermedia") (:authors ("p-snow" . "public@p-snow.org")) (:maintainers ("p-snow" . "public@p-snow.org")) (:maintainer "p-snow" . "public@p-snow.org"))])
 (org-wild-notifier . [(0 5 0) ((alert (1 2)) (async (1 9 3)) (dash (2 18 0)) (emacs (24 4))) "Customizable org-agenda notifications" tar ((:url . "https://github.com/akhramov/org-wild-notifier.el") (:commit . "aa0f2d8ea282dea714ae67f3f5a0471488e6e396") (:revdesc . "aa0f2d8ea282") (:keywords "notification" "alert" "org" "org-agenda" "agenda") (:authors ("Artem Khramov" . "akhramov+emacs@pm.me")) (:maintainers ("Artem Khramov" . "akhramov+emacs@pm.me")) (:maintainer "Artem Khramov" . "akhramov+emacs@pm.me"))])
 (org-working-set . [(2 6 4) ((org (9 3)) (dash (2 12)) (s (1 12)) (emacs (26 3))) "Manage and visit a small set of org-nodes" tar ((:url . "https://github.com/marcIhm/org-working-set") (:commit . "d5375818919f21910a97c4617b2a316c40272fb9") (:revdesc . "2.6.4-0-gd5375818919f") (:authors ("Marc Ihm" . "1@2484.de")) (:maintainers ("Marc Ihm" . "1@2484.de")) (:maintainer "Marc Ihm" . "1@2484.de"))])
 (org-zettelkasten . [(0 7 0) ((emacs (24 3)) (org (9 0))) "A Zettelkasten mode leveraging Org" tar ((:url . "https://git.sr.ht/~ymherklotz/org-zettelkasten") (:commit . "e8a4d435e1d33344a1be192b6816a67394d91307") (:revdesc . "e8a4d435e1d3") (:keywords "files" "hypermedia" "org" "notes") (:authors ("Yann Herklotz" . "yann@ymhg.org")) (:maintainers ("Yann Herklotz" . "yann@ymhg.org")) (:maintainer "Yann Herklotz" . "yann@ymhg.org"))])
 (org2blog . [(1 1 16) ((htmlize (1 56)) (hydra (0 15 0)) (xml-rpc (1 6 15)) (writegood-mode (2 2 0)) (metaweblog (1 1 16))) "Blog from Org mode to WordPress" tar ((:url . "https://github.com/org2blog/org2blog") (:commit . "0d435af91c237351f0880536cb3cf21a91041ba4") (:revdesc . "0d435af91c23") (:keywords "comm" "convenience" "outlines" "wp") (:authors ("Puneeth Chaganti" . "punchagan+org2blog@gmail.com")) (:maintainers ("Grant Rettke" . "grant@wisdomandwonder.com")) (:maintainer "Grant Rettke" . "grant@wisdomandwonder.com"))])
 (org2jekyll . [(0 2 7) ((dash-functional (2 11 0)) (s (1 9 0))) "Minor mode to publish org-mode post to jekyll without specific yaml" tar ((:url . "https://github.com/ardumont/org2jekyll") (:commit . "c05ba707190cfab20938afd1b5d4966511ca63b7") (:revdesc . "0.2.7-0-gc05ba707190c") (:keywords "org-mode" "jekyll" "blog" "publish") (:authors ("Antoine R. Dumont" . "antoine.romain.dumont@gmail.com")) (:maintainers ("Antoine R. Dumont" . "antoine.romain.dumont@gmail.com")) (:maintainer "Antoine R. Dumont" . "antoine.romain.dumont@gmail.com"))])
 (org2web . [(0 9 1) ((cl-lib (1 0)) (ht (1 5)) (mustache (0 22)) (htmlize (1 47)) (org (8 0)) (dash (2 0 0)) (el2org (0 10)) (simple-httpd (0 1))) "A static site generator based on org mode" tar ((:url . "https://github.com/tumashu/org2web") (:commit . "5243b399927a4c474bb3b8d1c8a00799df1f27d7") (:revdesc . "5243b399927a") (:keywords "org-mode" "convenience" "beautify") (:authors ("Feng Shu" . "tumashuAT163.com") ("Jorge Javier Araya Navarro" . "elcorreoATdeshackra.com") ("Kelvin Hu" . "iniDOTkelvinATgmailDOTcom")) (:maintainers ("Feng Shu" . "tumashuAT163.com") ("Jorge Javier Araya Navarro" . "elcorreoATdeshackra.com") ("Kelvin Hu" . "iniDOTkelvinATgmailDOTcom")) (:maintainer "Feng Shu" . "tumashuAT163.com"))])
 (organize-imports-java . [(0 3 0) ((emacs (25 1)) (f (0 20 0)) (s (1 12 0)) (dash (2 14 1)) (ht (2 2))) "Automatically organize imports in Java code" tar ((:url . "https://github.com/jcs-elpa/organize-imports-java") (:commit . "6e0b1d094bc624a895d198874a8a423dfc033247") (:revdesc . "6e0b1d094bc6") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (orgbox . [(0 5 0) ((org (8 0)) (cl-lib (0 5))) "Mailbox-like task scheduling Org" tar ((:url . "https://github.com/yasuhito/orgbox") (:commit . "ecaf5a064431cf92922338c974df8fce1a8f1734") (:revdesc . "0.5.0-0-gecaf5a064431") (:keywords "org") (:authors ("Yasuhito Takamiya" . "yasuhito@gmail.com")) (:maintainers ("Yasuhito Takamiya" . "yasuhito@gmail.com")) (:maintainer "Yasuhito Takamiya" . "yasuhito@gmail.com"))])
 (orgit . [(2 0 0) ((emacs (26 1)) (compat (30 0 0 0)) (magit (4 0 0)) (org (9 7 8))) "Support for Org links to Magit buffers" tar ((:url . "https://github.com/magit/orgit") (:commit . "59d21fdb21f84238c3172d37fdd2446b753e98dc") (:revdesc . "v2.0.0-0-g59d21fdb21f8") (:keywords "hypermedia" "vc") (:authors ("Jonas Bernoulli" . "emacs.orgit@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.orgit@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.orgit@jonas.bernoulli.dev"))])
 (orgit-forge . [(1 0 0) ((emacs (27 1)) (compat (30 0 0 0)) (forge (0 4 0)) (magit (4 0 0)) (org (9 7 8)) (orgit (2 0 0))) "Org links to Forge issue buffers" tar ((:url . "https://github.com/magit/orgit-forge") (:commit . "2718a6aaf0f64cb52c64c419053fbc80eb358c8d") (:revdesc . "v1.0.0-0-g2718a6aaf0f6") (:keywords "hypermedia" "vc") (:authors ("Jonas Bernoulli" . "emacs.orgit-forge@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.orgit-forge@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.orgit-forge@jonas.bernoulli.dev"))])
 (orglink . [(1 2 4) ((emacs (26 1)) (compat (30 0 0 0)) (org (9 7 4)) (seq (2 24))) "Use Org Mode links in other modes" tar ((:url . "https://github.com/tarsius/orglink") (:commit . "bc6135ef091c871b40e9fecd3126a177aed93e17") (:revdesc . "v1.2.4-0-gbc6135ef091c") (:keywords "hypermedia") (:authors ("Jonas Bernoulli" . "emacs.orglink@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.orglink@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.orglink@jonas.bernoulli.dev"))])
 (orgnav . [(2 0 3) ((helm (2 7 0)) (s (1 11 0)) (dash (1 11 0)) (emacs (24))) "Org tree navigation using helm" tar ((:url . "https://github.com/facetframer/orgnav") (:commit . "9e2cac9c1a67af5f0080e60022e821bf7b70312d") (:revdesc . "9e2cac9c1a67") (:keywords "convenience" "outlines") (:authors ("Facet Framer" . "(facet@facetframer.com)")) (:maintainers ("Facet Framer" . "(facet@facetframer.com)")) (:maintainer "Facet Framer" . "(facet@facetframer.com)"))])
 (orgnote . [(0 10 3) ((emacs (27 1))) "Sync org-roam notes with OrgNote app" tar ((:url . "https://github.com/Artawower/orgnote.el") (:commit . "0919f9fd05b83870b8a7073eb94f77199e681241") (:revdesc . "0919f9fd05b8") (:authors ("Artur Yaroshenko" . "artawower@protonmail.com")) (:maintainers ("Artur Yaroshenko" . "artawower@protonmail.com")) (:maintainer "Artur Yaroshenko" . "artawower@protonmail.com"))])
 (orgstrap . [(1 5 5) ((emacs (24 4))) "Bootstrap an Org file using file local variables" tar ((:url . "https://github.com/tgbugs/orgstrap") (:commit . "f35bccde556b0f82515e79ee69f4379469276356") (:revdesc . "f35bccde556b") (:keywords "lisp" "org" "org-mode" "bootstrap"))])
 (orgtbl-show-header . [(1 0 0) nil "Show the header of the current column in the minibuffer" tar ((:url . "https://github.com/DamienCassou/orgtbl-show-header") (:commit . "f0f48ccc0f96d4aa2a676ff609d9dddd71748e6f") (:revdesc . "f0f48ccc0f96") (:authors ("Damien Cassou" . "damien.cassou@gmail.com")) (:maintainers ("Damien Cassou" . "damien.cassou@gmail.com")) (:maintainer "Damien Cassou" . "damien.cassou@gmail.com"))])
 (origami-predef . [(1 0) ((emacs (24 3)) (origami (1 0))) "Apply folding when finding (opening) files" tar ((:url . "https://github.com/alvarogonzalezsotillo/origami-predef") (:commit . "edcba971ba52a14f69a436ad47888827d7927982") (:revdesc . "edcba971ba52") (:keywords "convenience" "folding") (:authors ("lvaro González Sotillo" . "alvarogonzalezsotillo@gmail.com")) (:maintainers ("lvaro González Sotillo" . "alvarogonzalezsotillo@gmail.com")) (:maintainer "lvaro González Sotillo" . "alvarogonzalezsotillo@gmail.com"))])
 (orthodox-christian-new-calendar-holidays . [(1 3 3) nil "Feasts (NS)" tar ((:url . "https://github.com/cmchittom/orthodox-christian-new-calendar-holidays") (:commit . "6869024ecd45eefd0ec648979c6a59d7c79770e0") (:revdesc . "6869024ecd45") (:keywords "calendar") (:authors ("Carson Chittom" . "carson@wistly.net")) (:maintainers ("Carson Chittom" . "carson@wistly.net")) (:maintainer "Carson Chittom" . "carson@wistly.net"))])
 (osm . [(1 4) ((emacs (27 1)) (compat (30))) "OpenStreetMap viewer" tar ((:url . "https://github.com/minad/osm") (:commit . "25eede7272bb2b4c0b009add264ebb45ab2f3691") (:revdesc . "25eede7272bb") (:keywords "network" "multimedia" "hypermedia" "mouse") (:authors ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainers ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de"))])
 (osx-browse . [(0 8 8) ((string-utils (0 3 2)) (browse-url-dwim (0 6 6))) "Web browsing helpers for OS X" tar ((:url . "https://github.com/rolandwalker/osx-browse") (:commit . "6186a6020e143e90d557c8d062c44fcdba0516c7") (:revdesc . "v0.8.8-0-g6186a6020e14") (:keywords "hypermedia" "external") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (osx-clipboard . [(0 1) nil "Use the OS X clipboard from terminal Emacs" tar ((:url . "https://github.com/joddie/osx-clipboard-mode") (:commit . "e46dd31327a3f92f77b013b4c9b1e5fdd0e5c73d") (:revdesc . "e46dd31327a3") (:authors ("Jon Oddie" . "jonxfieldatgmail.com")) (:maintainers ("Jon Oddie" . "jonxfieldatgmail.com")) (:maintainer "Jon Oddie" . "jonxfieldatgmail.com"))])
 (osx-dictionary . [(0 4) ((cl-lib (0 5))) "Interface for OSX Dictionary.app" tar ((:url . "https://github.com/xuchunyang/osx-dictionary.el") (:commit . "0e5e5f1b0077a62673855889d529dd4f0cc8f665") (:revdesc . "0e5e5f1b0077") (:keywords "mac" "dictionary") (:authors ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainers ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainer "Chunyang Xu" . "mail@xuchunyang.me"))])
 (osx-location . [(0 4) nil "Watch and respond to changes in geographical location on OS X" tar ((:url . "https://github.com/purcell/osx-location") (:commit . "110aee945b53ea550e4debe69bf3c077d940ec8c") (:revdesc . "110aee945b53") (:keywords "convenience" "calendar") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (osx-plist . [(2 0 0) ((emacs (25 1))) "Apple plist file parser" tar ((:url . "https://github.com/gonewest818/osx-plist") (:commit . "bbed74d334e8a4141c8f6ed07c8e42ee7979c35c") (:revdesc . "bbed74d334e8") (:keywords "convenience") (:authors ("Theresa O'Connor" . "tess@oconnor.cx")) (:maintainers ("Neil Okamoto" . "neil.okamoto+melpa@gmail.com")) (:maintainer "Neil Okamoto" . "neil.okamoto+melpa@gmail.com"))])
 (osx-pseudo-daemon . [(2 2) nil "Daemon mode that plays nice with OSX" tar ((:url . "https://github.com/DarwinAwardWinner/mac-pseudo-daemon") (:commit . "564b006835facc4a8df247d8a47ab1030d7e7beb") (:revdesc . "564b006835fa") (:keywords "convenience" "osx"))])
 (osx-trash . [(0 2 2) ((emacs (24 1))) "System trash for OS X" tar ((:url . "https://github.com/emacsorphanage/osx-trash") (:commit . "90f0c99206022fec646206018fcd63d9d2e57325") (:revdesc . "0.2.2-0-g90f0c9920602") (:keywords "files" "convenience" "tools" "unix") (:authors ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainers ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com"))])
 (otpp . [(3 1 1) ((emacs (28 1)) (compat (29 1))) "One tab per project, with unique names" tar ((:url . "https://github.com/abougouffa/one-tab-per-project") (:commit . "5f3894c031cd0900739e3cabb3eca3b6eb56f78f") (:revdesc . "5f3894c031cd") (:keywords "convenience") (:authors ("Abdelhak Bougouffa (rot13" . "\"nobhtbhssn@srqbencebwrpg.bet\")")) (:maintainers ("Abdelhak Bougouffa (rot13" . "\"nobhtbhssn@srqbencebwrpg.bet\")")) (:maintainer "Abdelhak Bougouffa (rot13" . "\"nobhtbhssn@srqbencebwrpg.bet\")"))])
 (outline-indent . [(1 1 0) ((emacs (26 1))) "Folding text based on indentation (origami alternative)" tar ((:url . "https://github.com/jamescherti/outline-indent.el") (:commit . "86f1ea4be8a0fa1f498bf317dcf54467033fd75b") (:revdesc . "1.1.0-0-g86f1ea4be8a0") (:keywords "outlines"))])
 (outline-minor-faces . [(1 1 0) ((emacs (26 1)) (compat (30 0 0 0))) "Highlight only section headings" tar ((:url . "https://github.com/tarsius/outline-minor-faces") (:commit . "4628613f3570b865b2c22b750ebd41443c1848c2") (:revdesc . "v1.1.0-0-g4628613f3570") (:keywords "faces" "outlines") (:authors ("Jonas Bernoulli" . "emacs.outline-minor-faces@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.outline-minor-faces@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.outline-minor-faces@jonas.bernoulli.dev"))])
 (outlook . [(0 1) ((emacs (24 4))) "Send emails in MS Outlook style" tar ((:url . "https://github.com/asavonic/outlook.el") (:commit . "5847c6f13b106cb54529080e9050be5b8b5be867") (:revdesc . "5847c6f13b10") (:keywords "mail"))])
 (outorg . [(2 0) nil "Org-style comment editing" tar ((:url . "https://github.com/alphapapa/outorg") (:commit . "e946cda497bae53fca6fa1579910237e216170bf") (:revdesc . "e946cda497ba") (:authors ("Thorsten Jolitz" . "tjolitzATgmailDOTcom")) (:maintainers ("Thorsten Jolitz" . "tjolitzATgmailDOTcom")) (:maintainer "Thorsten Jolitz" . "tjolitzATgmailDOTcom"))])
 (outshine . [(3 0 1) ((outorg (2 0)) (cl-lib (0 5))) "Outline with outshine outshines outline" tar ((:url . "https://github.com/alphapapa/outshine") (:commit . "3edf0c61e94d36d174120c8080a98023e30a58a2") (:revdesc . "v3.0.1-0-g3edf0c61e94d") (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (ov . [(1 0 6) ((emacs (24 3))) "Overlay library for Emacs Lisp" tar ((:url . "https://github.com/emacsorphanage/ov") (:commit . "4e1c254d74bc1773c92f1613c3865cdcb4bc7095") (:revdesc . "4e1c254d74bc") (:keywords "overlay"))])
 (overcast-theme . [(1 3 0) ((emacs (24))) "A dark but vibrant color theme for Emacs" tar ((:url . "https://github.com/myTerminal/overcast-theme") (:commit . "769078cb4a6ea87a31fcea0218c06e1ec689b97c") (:revdesc . "769078cb4a6e") (:keywords "theme") (:authors ("Mohammed Ismail Ansari" . "team.terminal@gmail.com")) (:maintainers ("Mohammed Ismail Ansari" . "team.terminal@gmail.com")) (:maintainer "Mohammed Ismail Ansari" . "team.terminal@gmail.com"))])
 (overseer . [(0 3 0) ((emacs (24)) (dash (2 10 0)) (pkg-info (0 4))) "Ert-runner Integration Into Emacs" tar ((:url . "https://github.com/tonini/overseer.el") (:commit . "cf532a4e373e3da2077ccbaa48d4bfacd14661ba") (:revdesc . "cf532a4e373e") (:authors ("Samuel Tonini" . "tonini.samuel@gmail.com")) (:maintainers ("Samuel Tonini" . "tonini.samuel@gmail.com")) (:maintainer "Samuel Tonini" . "tonini.samuel@gmail.com"))])
 (owdriver . [(0 4 0) ((log4e (0 4 1)) (yaxception (1 0 0))) "Quickly perform various actions on other windows" tar ((:url . "https://github.com/aki2o/owdriver") (:commit . "ae96f3ff7aca560a872c77d40999f1527f7f84eb") (:revdesc . "ae96f3ff7aca") (:keywords "convenience") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (ox-bb . [(0 0 1) ((emacs (24 4)) (org (8 0))) "BBCode Back-End for Org Export Engine" tar ((:url . "https://github.com/mmitch/ox-bb") (:commit . "37e22316afac9dd73dec072ac6420e5c1c4471b6") (:revdesc . "37e22316afac") (:keywords "bbcode" "org" "export" "outlines") (:authors ("Christian Garbs" . "mitch@cgarbs.de")) (:maintainers ("Christian Garbs" . "mitch@cgarbs.de")) (:maintainer "Christian Garbs" . "mitch@cgarbs.de"))])
 (ox-epub . [(0 3) ((emacs (24 3)) (org (9))) "Export org mode projects to EPUB" tar ((:url . "https://github.com/ofosos/ox-epub") (:commit . "3d958203e169cbfb2204c43cb4c5543befec0b9d") (:revdesc . "3d958203e169") (:keywords "hypermedia") (:authors ("Mark Meyer" . "mark@ofosos.org")) (:maintainers ("Mark Meyer" . "mark@ofosos.org")) (:maintainer "Mark Meyer" . "mark@ofosos.org"))])
 (ox-gfm . [(1 0) nil "Github Flavored Markdown Back-End for Org Export Engine" tar ((:url . "https://github.com/larstvei/ox-gfm") (:commit . "99f93011b069e02b37c9660b8fcb45dab086a07f") (:revdesc . "99f93011b069") (:keywords "org" "wp" "markdown" "github"))])
 (ox-haunt . [(0 2) ((emacs (24 3)) (org (9 0))) "Haunt-flavored HTML backend for the Org export engine" tar ((:url . "https://git.sr.ht/~jakob/ox-haunt") (:commit . "f3c8fda6fee78f45a259e5d218a519dfd11c00c7") (:revdesc . "v0.2-0-gf3c8fda6fee7") (:keywords "convenience" "hypermedia" "wp") (:authors ("Jakob L. Kreuze" . "zerodaysfordays@sdf.lonestar.org")) (:maintainers ("Jakob L. Kreuze" . "zerodaysfordays@sdf.lonestar.org")) (:maintainer "Jakob L. Kreuze" . "zerodaysfordays@sdf.lonestar.org"))])
 (ox-hugo . [(0 12 2) ((emacs (26 3)) (tomelr (0 4 3))) "Hugo Markdown Back-End for Org Export Engine" tar ((:url . "https://github.com/kaushalmodi/ox-hugo") (:commit . "af3d0cdf8c672be498d54bc9efdd0e40b2528602") (:revdesc . "af3d0cdf8c67") (:keywords "org" "markdown" "docs") (:authors ("Kaushal Modi" . "kaushal.modi@gmail.com") ("Matt Price" . "moptop99@gmail.com")) (:maintainers ("Kaushal Modi" . "kaushal.modi@gmail.com") ("Matt Price" . "moptop99@gmail.com")) (:maintainer "Kaushal Modi" . "kaushal.modi@gmail.com"))])
 (ox-ioslide . [(0 2) ((emacs (24 1)) (org (8 0)) (cl-lib (0 5)) (f (0 17 2))) "Export org-mode to Google I/O HTML5 slide" tar ((:url . "https://github.com/coldnew/org-ioslide") (:commit . "e81f7a6dab512da7eaa8c2c50c673538b97db267") (:revdesc . "e81f7a6dab51") (:keywords "html" "presentation") (:authors ("coldnew" . "coldnew.tw@gmail.com")) (:maintainers ("coldnew" . "coldnew.tw@gmail.com")) (:maintainer "coldnew" . "coldnew.tw@gmail.com"))])
 (ox-json . [(0 3 0) ((emacs (26 1)) (org (9)) (s (1 12))) "JSON export backend for Org mode" tar ((:url . "https://github.com/jlumpe/ox-json") (:commit . "57a43e3b3e400d219b80008c51373796b844c6b8") (:revdesc . "57a43e3b3e40") (:keywords "outlines") (:authors ("Jared Lumpe" . "jared@jaredlumpe.com")) (:maintainers ("Jared Lumpe" . "jared@jaredlumpe.com")) (:maintainer "Jared Lumpe" . "jared@jaredlumpe.com"))])
 (ox-latex-subfigure . [(0 0 2) nil "Subfigure for latex export" tar ((:url . "https://github.com/linktohack/ox-latex-subfigure") (:commit . "b7445849ae1f16b4b28f7a080301a0a61edf1c83") (:revdesc . "b7445849ae1f") (:keywords "ox" "latex" "subfigure" "org" "org-mode") (:authors ("Quang Linh LE" . "linktohack@gmail.com")) (:maintainers ("Quang Linh LE" . "linktohack@gmail.com")) (:maintainer "Quang Linh LE" . "linktohack@gmail.com"))])
 (ox-linuxmag-fr . [(0 3 0) ((emacs (28 1))) "Org-mode exporter for the French GNU/Linux Magazine" tar ((:url . "https://github.com/DamienCassou/ox-linuxmag-fr") (:commit . "2c06d5441e9e67c3ce419bc84b1d4612f64ff40b") (:revdesc . "0.3.0-0-g2c06d5441e9e"))])
 (ox-pandoc . [(2 0) ((org (8 2)) (emacs (24 4)) (dash (2 8)) (ht (2 0))) "An Org-mode exporter using pandoc" tar ((:url . "https://github.com/emacsorphanage/ox-pandoc") (:commit . "824d3707bb51e31249a7550a3e759e5fbb5207e5") (:revdesc . "824d3707bb51") (:keywords "tools") (:authors ("Taichi" . "kawabata.taichi@gmail.com") ("Alex" . "a-fent@github")) (:maintainers ("Alex" . "a-fent@github")) (:maintainer "Alex" . "a-fent@github"))])
 (ox-report . [(0 4) ((emacs (24 4)) (org-msg (0))) "Export your org file to minutes report PDF file" tar ((:url . "https://github.com/DarkBuffalo/ox-report") (:commit . "1e730396b8b7aa5101b3e3f538d6d4c15514f415") (:revdesc . "1e730396b8b7") (:keywords "org" "outlines" "report" "exporter" "meeting" "minutes") (:authors ("Matthias David" . "matthias@gnu.re")) (:maintainers ("Matthias David" . "matthias@gnu.re")) (:maintainer "Matthias David" . "matthias@gnu.re"))])
 (ox-review . [(0 3 0) ((emacs (26 1)) (org (9))) "Re:VIEW Back-End for Org Export Engine" tar ((:url . "https://github.com/masfj/ox-review") (:commit . "470297cbe833c65fd3c191de30fa0442ff7f4e45") (:revdesc . "470297cbe833") (:keywords "outlines" "hypermedia"))])
 (ox-timeline . [(0 1 0) ((emacs (24 4))) "HTML Timeline Back-End for Org Export Engine" tar ((:url . "https://github.com/jjuliano/org-simple-timeline") (:commit . "b28bd4ccd5fa114c0f51b9766f0b9be7fe05fdd8") (:revdesc . "b28bd4ccd5fa") (:keywords "simple timeline" "timeline" "hypermedia" "html timeline") (:authors ("Joel Bryan Juliano" . "joelbryandotjulianoatgmaildotcom")) (:maintainers ("Joel Bryan Juliano" . "joelbryandotjulianoatgmaildotcom")) (:maintainer "Joel Bryan Juliano" . "joelbryandotjulianoatgmaildotcom"))])
 (ox-tufte . [(4 2 1) ((emacs (27 1)) (org (9 5))) "Tufte HTML org-mode export backend" tar ((:url . "https://github.com/ox-tufte/ox-tufte") (:commit . "03e6c9e5e0ee467516139ed6b3f2b4bb13f847ec") (:revdesc . "03e6c9e5e0ee") (:keywords "org" "tufte" "html" "outlines" "hypermedia" "calendar" "wp"))])
 (ox-twbs . [(1 1 4) nil "Bootstrap compatible HTML Back-End for Org" tar ((:url . "https://github.com/marsmining/ox-twbs") (:commit . "e8a27dc78b7be494d9918f26db7a3bbb6b45020b") (:revdesc . "e8a27dc78b7b") (:keywords "org" "html" "publish" "twitter" "bootstrap") (:authors ("Carsten Dominik" . "carstenatorgmodedotorg") ("Jambunathan K" . "kjambunathanatgmaildotcom") ("Brandon van Beekum" . "marsminingatgmaildotcom")) (:maintainers ("Carsten Dominik" . "carstenatorgmodedotorg") ("Jambunathan K" . "kjambunathanatgmaildotcom") ("Brandon van Beekum" . "marsminingatgmaildotcom")) (:maintainer "Carsten Dominik" . "carstenatorgmodedotorg"))])
 (ox-wk . [(0 3 0) ((emacs (24 4)) (org (8 3))) "Wiki Back-End for Org Export Engine" tar ((:url . "https://github.com/w-vi/ox-wk.el") (:commit . "d34d1b72e4e940745a377bfa745dfb618900a09e") (:revdesc . "d34d1b72e4e9") (:keywords "org" "wp" "wiki") (:authors ("Vilibald Wanča" . "vilibald@wvi.cz")) (:maintainers ("Vilibald Wanča" . "vilibald@wvi.cz")) (:maintainer "Vilibald Wanča" . "vilibald@wvi.cz"))])
 (ox-yaow . [(1 0) ((emacs (27)) (f (0 2 0)) (s (1 12 0)) (dash (2 17 0))) "Generate html pages from org files" tar ((:url . "https://github.com/LaurenceWarne/ox-yaow.el") (:commit . "83f9e903f2853e9dc6367fa0a49015428d061dea") (:revdesc . "83f9e903f285") (:keywords "org"))])
 (pabbrev . [(4 1) nil "Predictive abbreviation expansion" tar ((:url . "https://github.com/phillord/pabbrev") (:commit . "127a8b10cf352b0491fefd2f4178ba78ee587564") (:revdesc . "127a8b10cf35") (:authors ("Phillip Lord" . "phillip.lord@newcastle.ac.uk")) (:maintainers ("Phillip Lord" . "phillip.lord@newcastle.ac.uk")) (:maintainer "Phillip Lord" . "phillip.lord@newcastle.ac.uk"))])
 (pacfiles-mode . [(1 2) ((emacs (26 1))) "The pacnew and pacsave merging tool" tar ((:url . "https://github.com/UndeadKernel/pacfiles-mode") (:commit . "a613d1d88dba4cb293ecaf42a9aeff7d8a3ce8aa") (:revdesc . "a613d1d88dba") (:keywords "files" "pacman" "arch" "pacnew" "pacsave" "update" "linux") (:authors ("Carlos G. Cordero" . "http://github/UndeadKernel")) (:maintainers ("Carlos G. Cordero" . "pacfiles@binarycharly.com")) (:maintainer "Carlos G. Cordero" . "pacfiles@binarycharly.com"))])
 (pack . [(0 1 1) ((emacs (24)) (cl-lib (0 5))) "Pack and unpack archive files" tar ((:url . "https://github.com/10sr/pack-el") (:commit . "85cd856fdc00a2365e88b50373b99f1b3d2227be") (:revdesc . "85cd856fdc00") (:keywords "files" "dired") (:authors ("10sr" . "8.slashes@gmail.com")) (:maintainers ("10sr" . "8.slashes@gmail.com")) (:maintainer "10sr" . "8.slashes@gmail.com"))])
 (package+ . [(1 4 0) ((emacs (24 3))) "Extensions for the package library" tar ((:url . "https://github.com/zenspider/package") (:commit . "2729bfd012c53733d3e00267d81d849ce5aa8e2d") (:revdesc . "2729bfd012c5") (:keywords "extensions" "tools") (:authors ("Ryan Davis" . "ryand-ruby@zenspider.com")) (:maintainers ("Ryan Davis" . "ryand-ruby@zenspider.com")) (:maintainer "Ryan Davis" . "ryand-ruby@zenspider.com"))])
 (package-build . [(4 0 0) ((emacs (25 1))) "Tools for assembling a package archive" tar ((:url . "https://github.com/melpa/package-build") (:commit . "0598e92cd61aa5196f78576fac7675bcff4ab217") (:revdesc . "4.0.0-0-g0598e92cd61a") (:keywords "maint" "tools") (:authors ("Donald Ephraim Curtis" . "dcurtis@milkbox.net") ("Steve Purcell" . "steve@sanityinc.com") ("Jonas Bernoulli" . "jonas@bernoul.li") ("Phil Hagelberg" . "technomancy@gmail.com")) (:maintainers ("Donald Ephraim Curtis" . "dcurtis@milkbox.net") ("Steve Purcell" . "steve@sanityinc.com") ("Jonas Bernoulli" . "jonas@bernoul.li") ("Phil Hagelberg" . "technomancy@gmail.com")) (:maintainer "Donald Ephraim Curtis" . "dcurtis@milkbox.net"))])
 (package-lint . [(0 24) ((emacs (24 4)) (let-alist (1 0 6))) "A linting library for elisp package authors" tar ((:url . "https://github.com/purcell/package-lint") (:commit . "e3d3fb254221d053c75edfd9f0ebfa58d1eb52f9") (:revdesc . "e3d3fb254221") (:keywords "lisp") (:authors ("Steve Purcell" . "steve@sanityinc.com") ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com") ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (package-lint-flymake . [(0 24) ((emacs (26 1)) (package-lint (0 5))) "A package-lint Flymake backend" tar ((:url . "https://github.com/purcell/package-lint") (:commit . "e3d3fb254221d053c75edfd9f0ebfa58d1eb52f9") (:revdesc . "e3d3fb254221"))])
 (package-utils . [(1 0 1) ((restart-emacs (0 1 1))) "Extensions for package.el" tar ((:url . "https://github.com/Silex/package-utils") (:commit . "5621b95c56b55499f0463fd8b29501da25d861bd") (:revdesc . "1.0.1-0-g5621b95c56b5") (:keywords "package" "convenience") (:authors ("Philippe Vaucher" . "philippe.vaucher@gmail.com")) (:maintainers ("Philippe Vaucher" . "philippe.vaucher@gmail.com")) (:maintainer "Philippe Vaucher" . "philippe.vaucher@gmail.com"))])
 (pact-mode . [(0 0 5) ((emacs (24 3))) "Mode for Pact, a LISPlike smart contract language" tar ((:url . "https://github.com/kadena-io/pact-mode") (:commit . "5df7032cf9b61ae5aff36ac7d2a23b2ab0e00904") (:revdesc . "5df7032cf9b6") (:keywords "pact" "lisp" "languages" "blockchain" "smartcontracts" "tools" "mode") (:maintainers ("Stuart Popejoy" . "stuart@kadena.io")) (:maintainer "Stuart Popejoy" . "stuart@kadena.io"))])
 (page-break-lines . [(0 15) ((emacs (24 4))) "Display ^L page breaks as tidy horizontal lines" tar ((:url . "https://github.com/purcell/page-break-lines") (:commit . "c4283f580fa4feeb9abcaebb99709007db0a3159") (:revdesc . "c4283f580fa4") (:keywords "convenience" "faces") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (paimon . [(0 2 0) ((aio (1 0)) (closql (2 0 0)) (emacs (28 1)) (emacsql (4 0 2)) (f (0 20 0)) (ht (2 4)) (transient (0 7 5)) (request (0 3 2)) (compat (30 0 0 0))) "A major mode for Splunk" tar ((:url . "https://github.com/r0man/paimon.el") (:commit . "91052b2af65d4459ad194bdb7776edbee89f287f") (:revdesc . "91052b2af65d") (:keywords "paimon" "search" "tools") (:authors ("r0man" . "roman@burningswell.com")) (:maintainers ("r0man" . "roman@burningswell.com")) (:maintainer "r0man" . "roman@burningswell.com"))])
 (palimpsest . [(1 1) nil "Various deletion strategies when editing" tar ((:url . "https://github.com/danielsz/Palimpsest") (:commit . "f474b3ad706373d9953abdc401d683a2a023d28e") (:revdesc . "f474b3ad7063") (:authors ("Daniel Szmulewicz" . "daniel.szmulewicz@gmail.com")) (:maintainers ("Daniel Szmulewicz" . "daniel.szmulewicz@gmail.com")) (:maintainer "Daniel Szmulewicz" . "daniel.szmulewicz@gmail.com"))])
 (panda-theme . [(0 1) ((emacs (24))) "Panda Theme" tar ((:url . "https://github.com/jamiecollinson/emacs-panda-theme") (:commit . "ae24179e7a8a9667b169f00dbd891257530c1d22") (:revdesc . "ae24179e7a8a"))])
 (pandoc . [(0 0 1) ((emacs (24))) "Pandoc interface" tar ((:url . "https://github.com/zonuexe/pandoc.el") (:commit . "0f59533bbd8494fea3172551efb6ec49f61ba285") (:revdesc . "0f59533bbd84") (:keywords "documentation" "markup" "converter") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (pandoc-mode . [(2 33) ((hydra (0 10 0)) (dash (2 10 0))) "Minor mode for interacting with Pandoc" tar ((:url . "https://github.com/joostkremers/pandoc-mode") (:commit . "3068a544fc2d1e2cdfd681f931e73f74d15be9ba") (:revdesc . "3068a544fc2d") (:keywords "text" "pandoc") (:authors ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainers ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainer "Joost Kremers" . "joostkremers@fastmail.fm"))])
 (pangu-spacing . [(0 4) nil "Minor-mode to add space between Chinese and English characters" tar ((:url . "https://github.com/coldnew/pangu-spacing") (:commit . "034b4ef8a1b29bf7bfed6a916380941506ed26ed") (:revdesc . "034b4ef8a1b2") (:authors ("coldnew" . "coldnew.tw@gmail.com")) (:maintainers ("coldnew" . "coldnew.tw@gmail.com")) (:maintainer "coldnew" . "coldnew.tw@gmail.com"))])
 (paperless . [(1 3 2) ((emacs (29 1)) (f (0 11 0)) (s (1 10 0)) (cl-lib (0 7 1))) "A major mode for sorting and filing PDF documents" tar ((:url . "https://github.com/atgreen/paperless") (:commit . "ef2e7ef5aeaffa997794f5d6e27be6631ba05d34") (:revdesc . "ef2e7ef5aeaf") (:keywords "pdf" "convenience") (:authors ("Anthony Green" . "green@moxielogic.com")) (:maintainers ("Anthony Green" . "green@moxielogic.com")) (:maintainer "Anthony Green" . "green@moxielogic.com"))])
 (paradox . [(2 5 4) ((emacs (24 4)) (seq (1 7)) (let-alist (1 0 3)) (spinner (1 7 3)) (hydra (0 13 2))) "A modern Packages Menu. Colored, with package ratings, and customizable" tar ((:url . "https://github.com/Malabarba/paradox") (:commit . "d24fe4a329a939ffa1983886d77a6937e05149e4") (:revdesc . "d24fe4a329a9") (:keywords "package" "packages") (:authors ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainers ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com"))])
 (parchment-theme . [(0 4 0) ((autothemer (0 2))) "Light theme inspired by Acme and Leuven" tar ((:url . "https://gitlab.com/ajgrf/parchment") (:commit . "c90665145573f5e314ede1b7df3bb732e30f4bcd") (:revdesc . "c90665145573") (:authors ("Alex Griffin" . "a@ajgrf.com")) (:maintainers ("Alex Griffin" . "a@ajgrf.com")) (:maintainer "Alex Griffin" . "a@ajgrf.com"))])
 (paredit . [(26) nil "Minor mode for editing parentheses" tar ((:url . "https://mumble.net/~campbell/git/paredit.git") (:commit . "72cc1f6055321a53021186b86d2f825167b81478") (:revdesc . "v26-0-g72cc1f605532") (:keywords "lisp") (:authors ("Taylor R. Campbell" . "campbell@paredit.org")) (:maintainers ("Taylor R. Campbell" . "campbell@paredit.org")) (:maintainer "Taylor R. Campbell" . "campbell@paredit.org"))])
 (paredit-everywhere . [(0 4) ((paredit (22))) "Enable some paredit features in non-lisp buffers" tar ((:url . "https://github.com/purcell/paredit-everywhere") (:commit . "72b7cd5dcdc02233a32e9f1a6c2d21dc30532170") (:revdesc . "72b7cd5dcdc0") (:keywords "languages" "convenience") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (paren-face . [(1 1 2) ((emacs (26 1)) (compat (30 0 0 0))) "A face for parentheses in lisp modes" tar ((:url . "https://github.com/tarsius/paren-face") (:commit . "9d369e6da2638702ce617a4ae4cf8d05cdc50d0b") (:revdesc . "v1.1.2-0-g9d369e6da263") (:keywords "faces" "lisp") (:authors ("Jonas Bernoulli" . "emacs.paren-face@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.paren-face@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.paren-face@jonas.bernoulli.dev"))])
 (parent-mode . [(2 3 1) nil "Get major mode's parent modes" tar ((:url . "https://github.com/Fanael/parent-mode") (:commit . "9fe5363b2a190619641c79b3a40d874d8c8f9f40") (:revdesc . "9fe5363b2a19") (:authors ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Fanael Linithien" . "fanael4@gmail.com"))])
 (parinfer-rust-mode . [(0 9 3) ((emacs (26 1)) (track-changes (1 1))) "An interface for the parinfer-rust library" tar ((:url . "https://github.com/justinbarclay/parinfer-rust-mode") (:commit . "044c3fe8f68e3e69d1157359bbfb1cf95423fe26") (:revdesc . "v0.9.3-0-g044c3fe8f68e") (:keywords "lisp" "tools") (:authors ("Justin Barclay" . "justinbarclay@gmail.com")) (:maintainers ("Justin Barclay" . "justinbarclay@gmail.com")) (:maintainer "Justin Barclay" . "justinbarclay@gmail.com"))])
 (parrot . [(1 1 1) ((emacs (24 1))) "Party Parrot rotates gracefully in mode-line" tar ((:url . "https://github.com/dp12/parrot") (:commit . "13757524f1c708b866f4aaab5a9fb3599a1c4f56") (:revdesc . "13757524f1c7") (:keywords "party" "parrot" "rotate" "sirocco" "kakapo" "games") (:authors ("Daniel Ting" . "deep.paren.12@gmail.com")) (:maintainers ("Daniel Ting" . "deep.paren.12@gmail.com")) (:maintainer "Daniel Ting" . "deep.paren.12@gmail.com"))])
 (parse-it . [(0 2 1) ((emacs (25 1)) (s (1 12 0))) "Basic Parser in Emacs Lisp" tar ((:url . "https://github.com/jcs-elpa/parse-it") (:commit . "f910af3b1d98b88a0f41794bbe7fd57411e9b909") (:revdesc . "f910af3b1d98") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (parsebib . [(6 0 3) ((emacs (25 1))) "A library for parsing bib files" tar ((:url . "https://github.com/joostkremers/parsebib") (:commit . "f837f76bd495e5b6fee1bdf3ff6d67c11f4aa0a7") (:revdesc . "f837f76bd495") (:keywords "text" "bibtex") (:authors ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainers ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainer "Joost Kremers" . "joostkremers@fastmail.fm"))])
 (parsec . [(0 1 4) ((emacs (24)) (cl-lib (0 5))) "Parser combinator library" tar ((:url . "https://github.com/cute-jumper/parsec.el") (:commit . "2cbbbc2254aa7bcaa4fb5e07c8c1bf2f381dba26") (:revdesc . "2cbbbc2254aa") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (parseclj . [(1 1 1) ((emacs (25))) "Clojure/EDN parser" tar ((:url . "https://github.com/clojure-emacs/parseclj") (:commit . "6af22372e0fe14df882dd300b22b12ba2d7e00b0") (:revdesc . "v1.1.1-0-g6af22372e0fe") (:keywords "lisp" "clojure" "edn" "parser") (:authors ("Arne Brasseur" . "arne@arnebrasseur.net")) (:maintainers ("Arne Brasseur" . "arne@arnebrasseur.net")) (:maintainer "Arne Brasseur" . "arne@arnebrasseur.net"))])
 (parseedn . [(1 2 1) ((emacs (26)) (parseclj (1 1 1)) (map (2))) "Clojure/EDN parser" tar ((:url . "https://github.com/clojure-emacs/parseedn") (:commit . "3407e4530a367b6c2b857dae261cdbb67a440aaa") (:revdesc . "v1.2.1-0-g3407e4530a36") (:keywords "lisp" "clojure" "edn" "parser") (:authors ("Arne Brasseur" . "arne@arnebrasseur.net")) (:maintainers ("Arne Brasseur" . "arne@arnebrasseur.net")) (:maintainer "Arne Brasseur" . "arne@arnebrasseur.net"))])
 (pass . [(2 0) ((emacs (25)) (password-store (2 1 0)) (password-store-otp (0 1 5)) (f (0 17))) "Major mode for password-store.el" tar ((:url . "https://github.com/NicolasPetton/pass") (:commit . "35e3f86e96878520e690513cdbc1b2753b173e72") (:revdesc . "35e3f86e9687") (:keywords "password-store" "password" "keychain") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com") ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Nicolas Petton" . "petton.nicolas@gmail.com") ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com"))])
 (password-menu . [(0 1 0) ((emacs (28 1))) "Password Menu for auth-source secrets" tar ((:url . "https://github.com/rnadler/password-menu") (:commit . "46fb7241f7ee8ff646b9a3ea1b3138031de1c0d6") (:revdesc . "46fb7241f7ee") (:keywords "news") (:authors ("Robert Nadler" . "robert.nadler@gmail.com")) (:maintainers ("Robert Nadler" . "robert.nadler@gmail.com")) (:maintainer "Robert Nadler" . "robert.nadler@gmail.com"))])
 (password-store . [(1 7 4) ((emacs (25)) (s (1 9 0)) (with-editor (2 5 11)) (auth-source-pass (5 0 0))) "Password store (pass) support" tar ((:url . "https://github.com/zx2c4/password-store") (:commit . "1078f2514d579178d5df7042c6a790e9c9b731ad") (:revdesc . "1.7.4-0-g1078f2514d57") (:keywords "tools" "pass" "password" "password-store") (:authors ("Svend Sorensen" . "svend@svends.net")) (:maintainers ("Tino Calancha" . "tino.calancha@gmail.com")) (:maintainer "Tino Calancha" . "tino.calancha@gmail.com"))])
 (password-store-menu . [(1 0 1) ((emacs (29 1)) (password-store (2 3 2))) "A better, more complete UI for password-store" tar ((:url . "https://github.com/rjekker/password-store-menu") (:commit . "0b181f878c47f2f06da51f5279e04382d6da6527") (:revdesc . "0b181f878c47") (:keywords "convenience" "data" "files") (:authors ("Reindert-Jan Ekker" . "info@rjekker.nl")) (:maintainers ("Reindert-Jan Ekker" . "info@rjekker.nl")) (:maintainer "Reindert-Jan Ekker" . "info@rjekker.nl"))])
 (password-store-otp . [(0 1 5) ((emacs (25)) (s (1 9 0)) (password-store (0 1))) "Password store (pass) OTP extension support" tar ((:url . "https://github.com/volrath/password-store-otp.el") (:commit . "a39a64a91de36e87b852339635bd3c5fb0e32441") (:revdesc . "0.1.5-0-ga39a64a91de3") (:keywords "tools" "pass"))])
 (pastehub . [(0 5 2) nil "A client for the PasteHub cloud service" tar ((:url . "https://github.com/kiyoka/pastehub") (:commit . "37b045c67659c078f1517d0fbd5282dab58dca23") (:revdesc . "37b045c67659"))])
 (pastelmac-theme . [(1 0) ((emacs (24 1))) "A soothing theme with a pastel color palette" tar ((:url . "https://github.com/bmastenbrook/pastelmac-theme-el") (:commit . "bead21741e3f46f6506e8aef4469d4240a819389") (:revdesc . "bead21741e3f") (:keywords "themes") (:authors ("Brian Mastenbrook" . "brian@mastenbrook.net")) (:maintainers ("Brian Mastenbrook" . "brian@mastenbrook.net")) (:maintainer "Brian Mastenbrook" . "brian@mastenbrook.net"))])
 (pastery . [(0 2 1) ((emacs (24 4)) (request (0 2 0))) "Paste snippets to pastery.net" tar ((:url . "https://github.com/diasbruno/pastery.el") (:commit . "4493be98b743b4d062cb4e00760125e394a55022") (:revdesc . "0.2.1-0-g4493be98b743") (:keywords "tools") (:authors ("Bruno Dias" . "dias.h.bruno@gmail.com")) (:maintainers ("Bruno Dias" . "dias.h.bruno@gmail.com")) (:maintainer "Bruno Dias" . "dias.h.bruno@gmail.com"))])
 (path-helper . [(1 1) ((emacs (24))) "Set PATH environment variables from config files" tar ((:url . "https://github.com/arouanet/path-helper") (:commit . "34538affb3f341b3c56a875bb094ddb2b859a8ef") (:revdesc . "v1.1-0-g34538affb3f3") (:keywords "tools" "unix") (:authors ("Arnaud Rouanet" . "arnaud@rouanet.org")) (:maintainers ("Arnaud Rouanet" . "arnaud@rouanet.org")) (:maintainer "Arnaud Rouanet" . "arnaud@rouanet.org"))])
 (pathify . [(0 1) nil "Symlink your scripts into a PATH directory" tar ((:url . "https://github.com/alezost/pathify.el") (:commit . "335332a900717ae01bde5ccb8f3dc97a5350f123") (:revdesc . "335332a90071") (:keywords "convenience") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (paxedit . [(1 1 8) ((cl-lib (0 5)) (paredit (23))) "Structured, Context Driven LISP Editing and Refactoring" tar ((:url . "https://github.com/promethial/paxedit") (:commit . "644eb7036a475fbcba4de5d46d6940b1e8ef33cd") (:revdesc . "644eb7036a47") (:keywords "lisp" "refactoring" "context"))])
 (pcache . [(0 5 1) ((emacs (25 1))) "Persistent caching for Emacs" tar ((:url . "https://github.com/sigma/pcache") (:commit . "e2f17133e624237f852a3b8c0d7c136252cb8c1a") (:revdesc . "e2f17133e624") (:keywords "extensions") (:authors ("Yann Hodique" . "yann.hodique@gmail.com")) (:maintainers ("Yann Hodique" . "yann.hodique@gmail.com")) (:maintainer "Yann Hodique" . "yann.hodique@gmail.com"))])
 (pcmpl-args . [(0 1 3) ((emacs (25 1))) "Enhanced shell command completion" tar ((:url . "https://github.com/JonWaltman/pcmpl-args.el") (:commit . "5f2943fd70d94065496c52d21f05eb89028637cc") (:revdesc . "5f2943fd70d9") (:keywords "abbrev" "completion" "convenience" "processes" "terminals" "unix") (:authors ("Jonathan Waltman" . "jonathan.waltman@gmail.com")) (:maintainers ("Jonathan Waltman" . "jonathan.waltman@gmail.com")) (:maintainer "Jonathan Waltman" . "jonathan.waltman@gmail.com"))])
 (pcomplete-extension . [(1 0) ((emacs (24)) (cl-lib (0 5))) "Additional completion for pcomplete" tar ((:url . "https://github.com/thierryvolpiatto/pcomplete-extension") (:commit . "839740c90de857e18db2f578d6660951522faab5") (:revdesc . "v1.0-0-g839740c90de8") (:authors ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainers ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainer "Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))])
 (pcre2el . [(1 12) ((emacs (25 1))) "Regexp syntax converter" tar ((:url . "https://github.com/joddie/pcre2el") (:commit . "7ba65df17d946448b33421d08d975e9bcfc51d91") (:revdesc . "7ba65df17d94") (:authors ("joddie" . "jonxfieldatgmail.com")) (:maintainers ("joddie" . "jonxfieldatgmail.com")) (:maintainer "joddie" . "jonxfieldatgmail.com"))])
 (pcsv . [(1 4 0) ((emacs (25 1))) "Parser of csv" tar ((:url . "https://github.com/mhayashi1120/Emacs-pcsv") (:commit . "aa421d12c0da0adb9bc74a050a591dcbabf934ae") (:revdesc . "aa421d12c0da") (:keywords "data") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (pd-remote . [(1 2 0) ((emacs (24 3)) (faust-mode (0 6)) (lua-mode (20210802))) "Pd remote control helper" tar ((:url . "https://github.com/agraef/pd-remote") (:commit . "dcd68097d2b7468303517d91cb76682bfb47db63") (:revdesc . "dcd68097d2b7") (:keywords "multimedia" "pure-data") (:authors ("Albert Graef" . "aggraef@gmail.com")) (:maintainers ("Albert Graef" . "aggraef@gmail.com")) (:maintainer "Albert Graef" . "aggraef@gmail.com"))])
 (pdf-tools . [(1 1 0) ((emacs (26 3)) (tablist (1 0)) (let-alist (1 0 4))) "Support library for PDF documents" tar ((:url . "https://github.com/vedang/pdf-tools") (:commit . "a9c9a12c3ecf2005fa641059368ac8284f507620") (:revdesc . "v1.1.0-0-ga9c9a12c3ecf") (:keywords "files" "multimedia") (:authors ("Andreas Politz" . "mail@andreas-politz.de")) (:maintainers ("Vedang Manerikar" . "vedang.manerikar@gmail.com")) (:maintainer "Vedang Manerikar" . "vedang.manerikar@gmail.com"))])
 (pelican-mode . [(20170808) ((emacs (25))) "Minor mode for editing Pelican sites" tar ((:url . "https://gitlab.com/joewreschnig/pelican-mode") (:commit . "8b13c30c4ec38dd535eadf26e463f8616d5c089c") (:revdesc . "8b13c30c4ec3") (:keywords "convenience" "editing") (:authors ("Joe Wreschnig" . "joe.wreschnig@gmail.com")) (:maintainers ("Joe Wreschnig" . "joe.wreschnig@gmail.com")) (:maintainer "Joe Wreschnig" . "joe.wreschnig@gmail.com"))])
 (per-buffer-theme . [(2 2) ((emacs (25 1))) "Change theme and font according to buffer name or major mode" tar ((:url . "https://hg.serna.eu/emacs/per-buffer-theme") (:commit . "2cbb15c05edff4ce23ce61858cf16e8953cd58b3") (:revdesc . "2cbb15c05edff4ce23ce61858cf16e8953cd58b3") (:keywords "themes") (:authors ("Iñigo Serna" . "inigoserna@gmx.com")) (:maintainers ("Iñigo Serna" . "inigoserna@gmx.com")) (:maintainer "Iñigo Serna" . "inigoserna@gmx.com"))])
 (persist-state . [(0 4) ((emacs (28 2))) "Regularly persist bookmarks, history, recent files and more" tar ((:url . "https://codeberg.org/bram85/emacs-persist-state") (:commit . "99e22bd6dd7b768c617596da952a5b8e53d16ecb") (:revdesc . "0.4-0-g99e22bd6dd7b") (:keywords "convenience") (:authors ("Bram Schoenmakers" . "me@bramschoenmakers.nl")) (:maintainers ("Bram Schoenmakers" . "me@bramschoenmakers.nl")) (:maintainer "Bram Schoenmakers" . "me@bramschoenmakers.nl"))])
 (persistent-scratch . [(0 3 9) ((emacs (24))) "Preserve the scratch buffer across Emacs sessions" tar ((:url . "https://github.com/Fanael/persistent-scratch") (:commit . "5ff41262f158d3eb966826314516f23e0cb86c04") (:revdesc . "5ff41262f158") (:authors ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Fanael Linithien" . "fanael4@gmail.com"))])
 (persistent-soft . [(0 8 10) ((pcache (0 3 1)) (list-utils (0 4 2))) "Persistent storage, returning nil on failure" tar ((:url . "https://github.com/rolandwalker/persistent-soft") (:commit . "a1e0ddf2a12a6f18cab565dee250f070384cbe02") (:revdesc . "v0.8.10-0-ga1e0ddf2a12a") (:keywords "data" "extensions") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (persp-fr . [(0 0 5) ((emacs (25 1)) (persp-mode (2 9 6)) (dash (2 13 0))) "In persp-mode, show perspective list in the GUI window title" tar ((:url . "https://github.com/rocher/persp-fr") (:commit . "1adbb6a9f9a4db580a9b7ed8b4091738e01345e6") (:revdesc . "1adbb6a9f9a4") (:keywords "perspectives" "workspace" "windows" "convenience") (:authors ("Francesc Rocher" . "francesc.rocher@gmail.com")) (:maintainers ("Francesc Rocher" . "francesc.rocher@gmail.com")) (:maintainer "Francesc Rocher" . "francesc.rocher@gmail.com"))])
 (persp-mode . [(3 0 8) ((emacs (24 3))) "Windows/buffers sets shared among frames + save/load" tar ((:url . "https://github.com/Bad-ptr/persp-mode.el") (:commit . "345baaa520ab2d62205f85cc5f29d57d6063c141") (:revdesc . "345baaa520ab") (:keywords "perspectives" "session" "workspace" "persistence" "windows" "buffers" "convenience") (:authors ("Constantin Kulikov" . "zxnotdead@gmail.com")) (:maintainers ("Constantin Kulikov" . "zxnotdead@gmail.com")) (:maintainer "Constantin Kulikov" . "zxnotdead@gmail.com"))])
 (persp-projectile . [(1 0 0) ((perspective (1 9)) (projectile (2 4)) (cl-lib (0 3))) "Perspective integration with Projectile" tar ((:url . "https://github.com/bbatsov/persp-projectile") (:commit . "6e4c2e017d59d10d627cf95b2bb9f9fa2b22a3a3") (:revdesc . "6e4c2e017d59") (:keywords "project" "convenience"))])
 (perspective . [(2 19) ((emacs (24 4)) (cl-lib (0 5))) "Switch between named \"perspectives\" of the editor" tar ((:url . "https://github.com/nex3/perspective-el") (:commit . "e32d3ea731f6bc551ce196527b3cb0dc19d71151") (:revdesc . "2.19-0-ge32d3ea731f6") (:keywords "workspace" "convenience" "frames") (:authors ("Natalie Weizenbaum" . "nex342@gmail.com")) (:maintainers ("Natalie Weizenbaum" . "nex342@gmail.com")) (:maintainer "Natalie Weizenbaum" . "nex342@gmail.com"))])
 (perspective-exwm . [(0 2 0) ((emacs (27 1)) (burly (0 2 -1)) (exwm (0 26)) (perspective (2 17))) "Better integration for perspective.el and EXWM" tar ((:url . "https://github.com/SqrtMinusOne/perspective-exwm.el") (:commit . "01d51f5c92a30b65e8346582ed1ce6513570bb0a") (:revdesc . "01d51f5c92a3") (:authors ("Korytov Pavel" . "thexcloud@gmail.com")) (:maintainers ("Korytov Pavel" . "thexcloud@gmail.com")) (:maintainer "Korytov Pavel" . "thexcloud@gmail.com"))])
 (perspeen . [(0 1) nil "An Emacs package for multi-workspace" tar ((:url . "https://github.com/seudut/perspeen") (:commit . "30ee14339cf8fe2e59e5384085afee3f8eb58dda") (:revdesc . "30ee14339cf8") (:keywords "lisp") (:authors ("Peng Li" . "seudut@gmail.com")) (:maintainers ("Peng Li" . "seudut@gmail.com")) (:maintainer "Peng Li" . "seudut@gmail.com"))])
 (pest-mode . [(0 1 0) ((emacs (26 3))) "Major mode for editing Pest files" tar ((:url . "https://github.com/ksqsf/pest-mode") (:commit . "43447a2c70f98edd1139005e32f437d3f142442b") (:revdesc . "v0.1.0-0-g43447a2c70f9") (:keywords "languages") (:authors ("ksqsf" . "i@ksqsf.moe")) (:maintainers ("ksqsf" . "i@ksqsf.moe")) (:maintainer "ksqsf" . "i@ksqsf.moe"))])
 (pet . [(3 1 0) ((emacs (26 1)) (f (0 6 0)) (map (3 3 1)) (seq (2 24))) "Executable and virtualenv tracker for python-mode" tar ((:url . "https://github.com/wyuenho/emacs-pet") (:commit . "2041ba1caee94242362c955e697a3c03bfbc0402") (:revdesc . "2041ba1caee9") (:keywords "tools") (:authors ("Jimmy Yuen Ho Wong" . "wyuenho@gmail.com")) (:maintainers ("Jimmy Yuen Ho Wong" . "wyuenho@gmail.com")) (:maintainer "Jimmy Yuen Ho Wong" . "wyuenho@gmail.com"))])
 (pfuture . [(1 10 3) ((emacs (25 2))) "A simple wrapper around asynchronous processes" tar ((:url . "https://github.com/Alexander-Miller/pfuture") (:commit . "f9e67bd7edbd5b4e033efd82c0acc4a85ff860a8") (:revdesc . "f9e67bd7edbd") (:authors ("Alexander Miller" . "alexanderm@web.de")) (:maintainers ("Alexander Miller" . "alexanderm@web.de")) (:maintainer "Alexander Miller" . "alexanderm@web.de"))])
 (pg . [(0 44) ((emacs (28 1)) (peg (1 0))) "Emacs Lisp socket-level interface to the PostgreSQL RDBMS" tar ((:url . "https://github.com/emarsden/pg-el") (:commit . "3e7917dfe17d40c08f0028917915682dbf576ee7") (:revdesc . "3e7917dfe17d") (:keywords "data" "comm" "database" "postgresql") (:authors ("Eric Marsden" . "eric.marsden@risk-engineering.org")) (:maintainers ("Eric Marsden" . "eric.marsden@risk-engineering.org")) (:maintainer "Eric Marsden" . "eric.marsden@risk-engineering.org"))])
 (ph . [(0 1 0) ((emacs (24 3))) "A global minor mode for managing multiple projects" tar ((:url . "https://github.com/gromnitsky/ph") (:commit . "ed45c371642e313810b56c45af08fdfbd71a7dfe") (:revdesc . "ed45c371642e"))])
 (phan . [(0 0 4) ((emacs (24)) (composer (0 0 8)) (f (0 17))) "Utility functions for Phan (PHP static analizer)" tar ((:url . "https://github.com/emacs-php/phan.el") (:commit . "6b077b3421a0b2c0b98a6906b8ab0d14d9d7bf50") (:revdesc . "6b077b3421a0") (:keywords "tools" "php") (:authors ("USAMI Kenta" . "tadsan@pixiv.com")) (:maintainers ("USAMI Kenta" . "tadsan@pixiv.com")) (:maintainer "USAMI Kenta" . "tadsan@pixiv.com"))])
 (phi-search . [(20160630) nil "Another incremental search & replace, compatible with \"multiple-cursors\"" tar ((:url . "https://github.com/zk-phi/phi-search") (:commit . "40b86bfe9ae15377fbee842b1de3d93c2eb7dd69") (:revdesc . "40b86bfe9ae1"))])
 (phi-search-mc . [(2 2 1) ((phi-search (2 0 0)) (multiple-cursors (1 2 1))) "Multiple-cursors extension for phi-search" tar ((:url . "https://github.com/knu/phi-search-mc.el") (:commit . "4c6d2d39feb502febb81fc98b7b5854d88150c69") (:revdesc . "4c6d2d39feb5") (:keywords "search" "cursors") (:authors ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (php-cs-fixer . [(2 1 1) ((cl-lib (0 5))) "The php-cs-fixer wrapper" tar ((:url . "https://github.com/pivaldi/php-cs-fixer") (:commit . "710208cc2efc2e241d1e7421b3c2581d46a81a5c") (:revdesc . "710208cc2efc") (:keywords "languages" "php"))])
 (php-mode . [(1 26 1) ((emacs (26 1))) "Major mode for editing PHP code" tar ((:url . "https://github.com/emacs-php/php-mode") (:commit . "9a2fe1c6c34f4f22f11efff0caf1d4e7c8ea233a") (:revdesc . "9a2fe1c6c34f") (:keywords "languages" "php") (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (php-quickhelp . [(0 5 5) ((emacs (25 1))) "Quickhelp at point for php" tar ((:url . "https://github.com/vpxyz/php-quickhelp") (:commit . "d5e11b7a6bad64550521e8822139a33218b8c9bb") (:revdesc . "d5e11b7a6bad"))])
 (php-runtime . [(0 3 2) ((emacs (25 1)) (compat (29))) "Language binding bridge to PHP" tar ((:url . "https://github.com/emacs-php/php-runtime.el") (:commit . "37beef404c70d7b80dc085b1ee1e13fd9c375fe6") (:revdesc . "37beef404c70") (:keywords "processes" "php" "lisp") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (phpactor . [(0 1 0) ((emacs (24 3)) (cl-lib (0 5)) (f (0 17))) "Interface to Phpactor" tar ((:url . "https://github.com/emacs-php/phpactor.el") (:commit . "61e4eab638168b7034eef0f11e35a89223fa7687") (:revdesc . "61e4eab63816") (:keywords "tools" "php") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (phpstan . [(0 7 2) ((emacs (24 3)) (compat (29)) (php-mode (1 22 3)) (php-runtime (0 2))) "Interface to PHPStan" tar ((:url . "https://github.com/emacs-php/phpstan.el") (:commit . "2dc25cb2f3d83484ea0eb063c9ffca8148828a2b") (:revdesc . "2dc25cb2f3d8") (:keywords "tools" "php") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (phpt-mode . [(0 0 1) ((emacs (25)) (polymode (0 1 5)) (php-mode (1 21 2))) "Major mode for editing PHPT test code" tar ((:url . "https://github.com/emacs-php/phpt-mode") (:commit . "310579e5db57c344460f74239bd1a8fc0d6ddf33") (:revdesc . "310579e5db57") (:keywords "languages" "php") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (phpunit . [(0 17 1) ((s (1 12 0)) (f (0 19 0)) (pkg-info (0 6)) (cl-lib (0 5)) (emacs (24 3))) "Launch PHP unit tests using phpunit" tar ((:url . "https://github.com/nlamirault/phpunit.el") (:commit . "4212307bbcfd8accd2abfa7e4ab55a6751a0b11b") (:revdesc . "4212307bbcfd") (:keywords "tools" "php" "tests" "phpunit") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com") ("Eric Hansen" . "hansen.c.eric@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com") ("Eric Hansen" . "hansen.c.eric@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (pickle . [(0 0 3) ((emacs (25 1)) (cl-lib (0 6 1))) "Major mode for editing cucumber gherkin files" tar ((:url . "https://github.com/ahungry/pickle-mode") (:commit . "3a0a717f2a24827667f34bc53830a3b81cd57460") (:revdesc . "3a0a717f2a24") (:keywords "ahungry" "languages" "cucumber" "gherkin") (:authors ("Matthew Carter" . "m@ahungry.com")) (:maintainers ("Matthew Carter" . "m@ahungry.com")) (:maintainer "Matthew Carter" . "m@ahungry.com"))])
 (pillar . [(1 0 0) ((makey (0 3))) "Major mode for editing Pillar files" tar ((:url . "https://github.com/pillar-markup/pillar-mode") (:commit . "13a7f676544cc66005ccd8e6fc1c25e4ccd6f909") (:revdesc . "13a7f676544c") (:keywords "markup" "major-mode") (:authors ("Damien Cassou" . "damien.cassou@gmail.com")) (:maintainers ("Damien Cassou" . "damien.cassou@gmail.com")) (:maintainer "Damien Cassou" . "damien.cassou@gmail.com"))])
 (pinboard . [(1 4) ((emacs (25 1)) (cl-lib (0 5))) "A pinboard.in client" tar ((:url . "https://github.com/davep/pinboard.el") (:commit . "112e903b489fed3f71b3165447ba6f21ee5675e6") (:revdesc . "112e903b489f") (:keywords "hypermedia" "bookmarking" "reading" "pinboard") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (pinboard-popular . [(0 1 2) ((loop (1 4))) "Displays links from the pinboard.in popular page" tar ((:url . "https://github.com/asimpson/pinboard-popular") (:commit . "df6f5928f1e5a614fb770f6f4b9aefe0bf4d1c25") (:revdesc . "df6f5928f1e5") (:keywords "pinboard"))])
 (pine-script-mode . [(1 0 0) ((emacs (24))) "Trading View Pine Script major mode" tar ((:url . "https://github.com/EricCrosson/pine-script-mode") (:commit . "f7892d373e30df0b2e8d2191e4ddb2064a92dd3c") (:revdesc . "f7892d373e30") (:keywords "extensions") (:authors ("Eric Crosson" . "eric.s.crosson@utexas.edu")) (:maintainers ("Eric Crosson" . "eric.s.crosson@utexas.edu")) (:maintainer "Eric Crosson" . "eric.s.crosson@utexas.edu"))])
 (pinyin-isearch . [(1 6 9) ((emacs (28 1))) "Pinyin mode for isearch" tar ((:url . "https://github.com/Anoncheg1/pinyin-isearch") (:commit . "1ed4218cb50b4de614c11dc41ab6053255271ae7") (:revdesc . "1ed4218cb50b") (:keywords "chinese" "pinyin" "matching" "convenience"))])
 (pinyin-search . [(1 1 0) nil "Search Chinese by Pinyin" tar ((:url . "https://github.com/xuchunyang/pinyin-search.el") (:commit . "5895cccfa6b43263ee243c5642cc16dd9a69fb4e") (:revdesc . "5895cccfa6b4") (:keywords "chinese" "search") (:authors ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainers ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainer "Chunyang Xu" . "xuchunyang56@gmail.com"))])
 (pinyinlib . [(0 1 1) nil "Convert first letter of Pinyin to Simplified/Traditional Chinese characters" tar ((:url . "https://github.com/cute-jumper/pinyinlib.el") (:commit . "39943d226c2a42a9013421a0b4b6d5d3696bf234") (:revdesc . "39943d226c2a") (:keywords "extensions") (:authors ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainers ("Junpeng Qiu" . "qjpchmail@gmail.com")) (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com"))])
 (pip-requirements . [(0 5) ((dash (2 8 0))) "A major mode for editing pip requirements files" tar ((:url . "https://github.com/Wilfred/pip-requirements.el") (:commit . "93e0595f037e3a95c1c1cd6f00f7e052a9a25912") (:revdesc . "93e0595f037e") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (pixiv-novel-mode . [(0 0 3) nil "Major mode for pixiv novel" tar ((:url . "https://github.com/zonuexe/pixiv-novel-mode.el") (:commit . "4dd9caf749190fab8f0b33862b3894b635de46c5") (:revdesc . "4dd9caf74919") (:keywords "novel" "pixiv") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (pkg-info . [(0 6) ((epl (0 8))) "Information about packages" tar ((:url . "https://github.com/emacsorphanage/pkg-info") (:commit . "f9bb471ee95d1c5fe9adc6b0e98db2ddff3ddc0e") (:revdesc . "0.6-0-gf9bb471ee95d") (:keywords "convenience") (:authors ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainers ("Sebastian Wiesner" . "swiesner@lunaryorn.com")) (:maintainer "Sebastian Wiesner" . "swiesner@lunaryorn.com"))])
 (pkgbuild-mode . [(0 14) nil "Interface to the ArchLinux package manager" tar ((:url . "https://github.com/juergenhoetzel/pkgbuild-mode") (:commit . "6bb7cb3b0599ac0ae3c1d8d5014aefc1ecff7965") (:revdesc . "6bb7cb3b0599"))])
 (pkl-mode . [(1 0 3) ((emacs (24 3))) "Major mode for editing Pkl files" tar ((:url . "https://github.com/sin-ack/pkl-mode") (:commit . "c57fe374a9c57eee6432d0b449e410ab8dc40a89") (:revdesc . "c57fe374a9c5") (:keywords "languages" "pkl") (:authors ("sin-ack" . "sin-ack@protonmail.com")) (:maintainers ("sin-ack" . "sin-ack@protonmail.com")) (:maintainer "sin-ack" . "sin-ack@protonmail.com"))])
 (plantuml-mode . [(1 4 1) ((dash (2 0 0)) (emacs (25 0))) "Major mode for PlantUML" tar ((:url . "https://github.com/skuro/plantuml-mode") (:commit . "5889166b6cfe94a37532ea27fc8de13be2ebfd02") (:revdesc . "v1.4.1-0-g5889166b6cfe") (:keywords "uml" "plantuml" "ascii"))])
 (platformio-mode . [(0 3 0) ((emacs (25 1)) (async (1 9 0)) (projectile (0 13 0))) "PlatformIO integration" tar ((:url . "https://github.com/ZachMassia/PlatformIO-Mode") (:commit . "e7bde6fec31b57ffe1c0a98cd29477d5baea30f3") (:revdesc . "e7bde6fec31b") (:authors ("Zach Massia" . "zmassia@gmail.com") ("Dante Catalfamo" . "dante@lambda.cx")) (:maintainers ("Zach Massia" . "zmassia@gmail.com") ("Dante Catalfamo" . "dante@lambda.cx")) (:maintainer "Zach Massia" . "zmassia@gmail.com"))])
 (play-crystal . [(0 1 2) ((emacs (24 4)) (dash (2 12 0)) (request (0 2 0))) "Https://play.crystal-lang.org integration" tar ((:url . "https://github.com/veelenga/play-crystal.el") (:commit . "86b54346e7c832c14f8e5654a462f6490a6b11d7") (:revdesc . "86b54346e7c8") (:keywords "convenience"))])
 (play-routes-mode . [(1 0) nil "Play Framework Routes File Support" tar ((:url . "https://github.com/brocode/play-routes-mode") (:commit . "d7eb682cd474d90b3a3d005290cd6d4fe9f94cae") (:revdesc . "d7eb682cd474") (:keywords "play" "scala") (:authors ("M.Riehl" . "max@flatmap.ninja") ("P.Haun" . "bomgar85@googlemail.com")) (:maintainers ("M.Riehl" . "max@flatmap.ninja") ("P.Haun" . "bomgar85@googlemail.com")) (:maintainer "M.Riehl" . "max@flatmap.ninja"))])
 (plenv . [(0 32) nil "A plenv wrapper for Emacs" tar ((:url . "https://github.com/karupanerura/plenv.el") (:commit . "ee937d0f3a1a7ba2d035f45be896d3ed8fefaee2") (:revdesc . "ee937d0f3a1a") (:keywords "emacs" "perl") (:authors ("Kenta Sato" . "karupa@cpan.org")) (:maintainers ("Kenta Sato" . "karupa@cpan.org")) (:maintainer "Kenta Sato" . "karupa@cpan.org"))])
 (plsense . [(0 4 7) ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 2 0))) "Provide interface for PlSense that is a development tool for Perl" tar ((:url . "https://github.com/aki2o/emacs-plsense") (:commit . "f6fb22607a5252b2556d2e7fa14f1bcab5d9747a") (:revdesc . "f6fb22607a52") (:keywords "perl" "completion") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (plsense-direx . [(0 2 0) ((direx (0 1 -3)) (plsense (0 3 2)) (log4e (0 2 0)) (yaxception (0 3 2))) "Perl Package Explorer" tar ((:url . "https://github.com/aki2o/plsense-direx") (:commit . "8a2f465264c74e04524cc789cdad0190ace43f6c") (:revdesc . "8a2f465264c7") (:keywords "perl" "convenience") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (plur . [(0 1) ((emacs (24 4))) "Easily search and replace multiple variants of a word" tar ((:url . "https://github.com/xuchunyang/plur") (:commit . "5bdd3b9a2f0624414bd596e798644713cd1545f0") (:revdesc . "5bdd3b9a2f06") (:authors ("Chunyang Xu" . "xuchunyang.me@gmail.com")) (:maintainers ("Chunyang Xu" . "xuchunyang.me@gmail.com")) (:maintainer "Chunyang Xu" . "xuchunyang.me@gmail.com"))])
 (pmdm . [(1 1) nil "Poor man's desktop-mode alternative" tar ((:url . "https://hg.serna.eu/emacs/pmdm") (:commit . "6d2af9f9e88e6c91eb74dafaddb5f009e1de4907") (:revdesc . "6d2af9f9e88e6c91eb74dafaddb5f009e1de4907") (:authors ("Iñigo Serna" . "inigoserna@gmx.com")) (:maintainers ("Iñigo Serna" . "inigoserna@gmx.com")) (:maintainer "Iñigo Serna" . "inigoserna@gmx.com"))])
 (po-mode . [(0 21) nil "Major mode for GNU gettext PO files" tar ((:commit . "25eb1bdca30ed25d2e5d51b9feeb28a3faff51ec") (:keywords "i18n" "gettext"))])
 (pocket-lib . [(0 1) ((emacs (25 1)) (request (0 2)) (dash (2 13 0)) (kv (0 0 19)) (s (1 12 0))) "Library for accessing getpocket.com API" tar ((:commit . "ef3bcf452129b74e7b82265f6c08f9569fd19515") (:authors (nil . "Adam Porter <adam@alphapapa.net")) (:maintainers (nil . "Adam Porter <adam@alphapapa.net")) (:maintainer nil . "Adam Porter <adam@alphapapa.net") (:keywords "pocket") (:url . "https://github.com/alphapapa/pocket-lib.el"))])
 (pocket-reader . [(0 3) ((emacs (25 1)) (dash (2 13 0)) (kv (0 0 19)) (peg (1 0 1)) (pocket-lib (0 1)) (s (1 10)) (ov (1 0 6)) (rainbow-identifiers (0 2 2)) (org-web-tools (0 1)) (ht (2 2))) "Client for Pocket reading list" tar ((:url . "https://github.com/alphapapa/pocket-reader.el") (:commit . "ef6b6892ef13eff3479d79c7f6bc918dd0444e88") (:revdesc . "0.3-0-gef6b6892ef13") (:keywords "pocket") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (poe-lootfilter-mode . [(1 0 0) ((emacs (24 3))) "Major mode for editing Path of Exile lootfilters" tar ((:url . "https://github.com/jdodds/poe-lootfilter-mode") (:commit . "5ef06684cb2b17b090ee1f303c2b789fa71bc106") (:revdesc . "1.0.0-0-g5ef06684cb2b") (:keywords "languages" "games") (:authors ("Jeremiah Dodds" . "jeremiah.dodds@gmail.com")) (:maintainers ("Jeremiah Dodds" . "jeremiah.dodds@gmail.com")) (:maintainer "Jeremiah Dodds" . "jeremiah.dodds@gmail.com"))])
 (poetry . [(0 2 0) ((transient (0 2 0)) (pyvenv (1 2)) (emacs (25 1))) "Interface to Poetry" tar ((:url . "https://github.com/cybniv/poetry.el") (:commit . "2cbc690c8c1153e578ecb376367d355a7669f9ec") (:revdesc . "2cbc690c8c11") (:keywords "python" "tools") (:authors ("Gaby Launay" . "gaby.launay@protonmail.com")) (:maintainers ("Gaby Launay" . "gaby.launay@protonmail.com")) (:maintainer "Gaby Launay" . "gaby.launay@protonmail.com"))])
 (point-pos . [(0 1) nil "Save and restore point positions" tar ((:url . "https://github.com/alezost/point-pos.el") (:commit . "4cd0f8c8d1296c5c64f708b6a5835e8520c51b68") (:revdesc . "4cd0f8c8d129") (:keywords "tools" "convenience") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (poly-R . [(0 2 2) ((emacs (25)) (polymode (0 2 2)) (poly-markdown (0 2 2)) (poly-noweb (0 2 2))) "Various polymodes for R language" tar ((:url . "https://github.com/polymode/poly-R") (:commit . "51ffeb6ec45dd44eafa4d22ad2d6150cc4b248fc") (:revdesc . "51ffeb6ec45d") (:keywords "languages" "multi-modes"))])
 (poly-ansible . [(0 5 1) ((ansible (0 4 1)) (ansible-doc (0 4)) (emacs (24 1)) (jinja2-mode (0 2)) (polymode (0 2)) (systemd (1 4)) (yaml-mode (0 0 13))) "Polymode for Ansible: Jinja2 in YAML" tar ((:url . "https://gitlab.com/mavit/poly-ansible") (:commit . "6fcfbb7163f7a74db9da0d54a5ecaec2ac93b315") (:revdesc . "6fcfbb7163f7") (:keywords "languages") (:authors ("Peter Oliver" . "poly-ansible@mavit.org.uk")) (:maintainers ("Peter Oliver" . "poly-ansible@mavit.org.uk")) (:maintainer "Peter Oliver" . "poly-ansible@mavit.org.uk"))])
 (poly-erb . [(0 2 2) ((emacs (25)) (polymode (0 2 2))) "Polymode for erb" tar ((:url . "https://github.com/polymode/poly-erb") (:commit . "56c744b8d87d8cbe0aba2696d4e8525afc4aa0e8") (:revdesc . "56c744b8d87d") (:keywords "emacs"))])
 (poly-markdown . [(0 2 2) ((emacs (25)) (polymode (0 2 2)) (markdown-mode (2 3))) "Polymode for markdown-mode" tar ((:url . "https://github.com/polymode/poly-markdown") (:commit . "1536cf0c32f71d5cd05c90f7905905e38006e95d") (:revdesc . "1536cf0c32f7") (:keywords "emacs"))])
 (poly-noweb . [(0 2 2) ((emacs (25)) (polymode (0 2 2))) "Polymode for noweb" tar ((:url . "https://github.com/polymode/poly-noweb") (:commit . "3b0cd36ca9a707e8a09337a3468fa85d81fc461c") (:revdesc . "3b0cd36ca9a7") (:keywords "languages" "multi-modes"))])
 (poly-org . [(0 2 2) ((emacs (25)) (polymode (0 2 2))) "Polymode for org-mode" tar ((:url . "https://github.com/polymode/poly-org") (:commit . "8f4d11489532be98a291258ca27405aa528fc126") (:revdesc . "8f4d11489532") (:keywords "languages" "multi-modes"))])
 (poly-rst . [(0 2 2) ((emacs (25)) (polymode (0 2 2))) "Poly-rst-mode polymode" tar ((:url . "https://github.com/polymode/poly-rst") (:commit . "8530f56fbdce01bcf4004839ff54e4156282c2b5") (:revdesc . "8530f56fbdce") (:keywords "languages" "multi-modes"))])
 (poly-ruby . [(0 3 1) ((emacs (25)) (polymode (0 1 2))) "Provides poly-ruby-mode" tar ((:url . "https://github.com/knu/poly-ruby.el") (:commit . "794ebb926ace23e9c1398da934701951432dcea2") (:revdesc . "794ebb926ace") (:keywords "languages") (:authors ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (poly-slim . [(0 2 2) ((emacs (25)) (polymode (0 2 2)) (slim-mode (1 1))) "Polymodes for slim" tar ((:url . "https://github.com/polymode/poly-slim") (:commit . "9e9b5164c68955974fd5f5d220aec5af9b5ba3ae") (:revdesc . "9e9b5164c689") (:keywords "emacs"))])
 (polymode . [(0 2 2) ((emacs (25))) "Extensible framework for multiple major modes" tar ((:url . "https://github.com/polymode/polymode") (:commit . "44265e35161d77f6eaa09388ea2256b89bd5dcc8") (:revdesc . "44265e35161d") (:keywords "languages" "multi-modes" "processes"))])
 (pomm . [(0 2 0) ((emacs (27 1)) (alert (1 2)) (seq (2 22)) (transient (0 3 0))) "Pomodoro and Third Time timers" tar ((:url . "https://github.com/SqrtMinusOne/pomm.el") (:commit . "0942131ac3f2d20cc1004eecdb99ec0db1271c31") (:revdesc . "0942131ac3f2") (:authors ("Korytov Pavel" . "thexcloud@gmail.com")) (:maintainers ("Korytov Pavel" . "thexcloud@gmail.com")) (:maintainer "Korytov Pavel" . "thexcloud@gmail.com"))])
 (pony-snippets . [(0 0 1) ((yasnippet (0 8 0))) "Yasnippets for Pony" tar ((:url . "https://github.com/ponylang/pony-snippets") (:commit . "56018b23a11563c6766ed706024b22aa5a4556b4") (:revdesc . "56018b23a115") (:keywords "snippets" "pony"))])
 (ponylang-mode . [(0 6 0) ((emacs (25 1)) (dash (2 17 0)) (hydra (0 15 0)) (hl-todo (3 1 2)) (yafolding (0 4 1)) (yasnippet (0 14 0)) (company-ctags (0 0 4)) (rainbow-delimiters (2 1 4)) (fill-column-indicator (1 90))) "A major mode for the Pony programming language" tar ((:url . "https://github.com/ponylang/ponylang-mode") (:commit . "ebf9c096b26ec1708acc7c84e96998d2b83cb548") (:revdesc . "ebf9c096b26e") (:keywords "languages" "programming"))])
 (pophint . [(1 4 0) ((log4e (0 4 0)) (yaxception (1 0 0))) "Provide navigation using pop-up tips, like Firefox's Vimperator Hint Mode" tar ((:url . "https://github.com/aki2o/emacs-pophint") (:commit . "92854bb12c275980c89c9f6f33eaa36b633db6d7") (:revdesc . "92854bb12c27") (:keywords "popup") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (popper . [(0 4 7) ((emacs (26 1))) "Summon and dismiss buffers as popups" tar ((:url . "https://github.com/karthink/popper") (:commit . "031e4d093c1e52337a3ca137740933a185f3d61d") (:revdesc . "031e4d093c1e") (:keywords "convenience") (:authors ("Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com")) (:maintainers ("Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com")) (:maintainer "Karthik Chikmagalur" . "karthik.chikmagalur@gmail.com"))])
 (popup . [(0 5 9) ((emacs (24 3))) "Visual Popup User Interface" tar ((:url . "https://github.com/auto-complete/popup-el") (:commit . "20ce6cbd2f06423be35b3b700c698f0e109e880c") (:revdesc . "20ce6cbd2f06") (:keywords "lisp") (:authors ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (popup-complete . [(0 2) ((popup (0 5 0))) "Completion with popup" tar ((:url . "https://github.com/emacsorphanage/popup-complete") (:commit . "e362d4a005b36646ffbaa6be604e9e31bc406ca9") (:revdesc . "e362d4a005b3") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (popup-imenu . [(0 6 1) ((dash (2 12 1)) (popup (0 5 3)) (flx-ido (0 6 1))) "Imenu index popup" tar ((:url . "https://github.com/ancane/popup-imenu") (:commit . "b00c4d503cbbaf01c136b1647329e6a6257d012c") (:revdesc . "b00c4d503cbb") (:keywords "popup" "imenu") (:authors ("Igor Shymko" . "igor.shimko@gmail.com")) (:maintainers ("Igor Shymko" . "igor.shimko@gmail.com")) (:maintainer "Igor Shymko" . "igor.shimko@gmail.com"))])
 (popwin . [(1 0 2) ((emacs (24 3))) "Popup Window Manager" tar ((:url . "https://github.com/emacsorphanage/popwin") (:commit . "215d6cb509b11c63394a20666565cd9e9b2c2eab") (:revdesc . "215d6cb509b1") (:keywords "convenience") (:authors ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com")) (:maintainers ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com")) (:maintainer "Tomohiro Matsuyama" . "m2ym.pub@gmail.com"))])
 (porthole . [(0 3 0) ((emacs (26)) (web-server (0 1 2)) (f (0 19 0)) (json-rpc-server (0 1 2))) "RPC Servers in Emacs" tar ((:url . "https://github.com/jcaw/porthole") (:commit . "9e68b419acf9245208f8094e10041b7f04511473") (:revdesc . "v0.3.0-0-g9e68b419acf9") (:keywords "comm" "rpc" "http" "json"))])
 (pos-tip . [(0 4 7) nil "Show tooltip at point" tar ((:url . "https://github.com/pitkali/pos-tip") (:commit . "4889e08cf9077c8589ea6fea4e2ce558614dfcde") (:revdesc . "4889e08cf907") (:keywords "tooltip"))])
 (posframe . [(1 4 4) ((emacs (26 1))) "Pop a posframe (just a frame) at point" tar ((:url . "https://github.com/tumashu/posframe") (:commit . "570273bcf6c21641f02ccfcc9478607728f0a2a2") (:revdesc . "570273bcf6c2") (:keywords "convenience" "tooltip") (:authors ("Feng Shu" . "tumashu@163.com")) (:maintainers ("Feng Shu" . "tumashu@163.com")) (:maintainer "Feng Shu" . "tumashu@163.com"))])
 (posix-manual . [(0 1) ((emacs (24))) "POSIX manual page lookup" tar ((:url . "https://github.com/lassik/emacs-posix-manual") (:commit . "ebaacd7266ae7a66605317f57b9f42e9cfb2ce1e") (:revdesc . "0.1-0-gebaacd7266ae") (:keywords "languages" "util") (:authors ("Lassi Kortela" . "lassi@lassi.io")) (:maintainers ("Lassi Kortela" . "lassi@lassi.io")) (:maintainer "Lassi Kortela" . "lassi@lassi.io"))])
 (power-mode . [(0 1 0) ((emacs (26 1))) "Imbue Emacs with power!" tar ((:url . "https://github.com/elizagamedev/power-mode.el") (:commit . "313698d9c7766c17b077a70b31a2d0f52496d767") (:revdesc . "v0.1.0-0-g313698d9c776") (:keywords "games"))])
 (powerline . [(2 4) ((cl-lib (0 2))) "Rewrite of Powerline" tar ((:url . "https://github.com/milkypostman/powerline") (:commit . "d3dcfc57a36111d8e0b037d90c6ffce85ce071b2") (:revdesc . "d3dcfc57a361") (:keywords "mode-line") (:authors ("Donald Ephraim Curtis" . "dcurtis@milkbox.net")) (:maintainers ("Donald Ephraim Curtis" . "dcurtis@milkbox.net")) (:maintainer "Donald Ephraim Curtis" . "dcurtis@milkbox.net"))])
 (powerthesaurus . [(0 4 0) ((emacs (26 1)) (jeison (1 0 0)) (s (1 13 0))) "Powerthesaurus integration" tar ((:url . "https://github.com/SavchenkoValeriy/emacs-powerthesaurus") (:commit . "f2d624677f54b95509b63e69a9e3520d014c196e") (:revdesc . "f2d624677f54") (:keywords "convenience" "writing"))])
 (ppd-sr-speedbar . [(0 0 6) ((sr-speedbar (20140914 2339)) (project-persist-drawer (0 0 4))) "Sr Speedbar adaptor for project-persist-drawer" tar ((:url . "https://github.com/rdallasgray/ppd-sr-speedbar") (:commit . "19d3e924407f40a6bb38c8fe427a159af755adce") (:revdesc . "0.0.6-0-g19d3e924407f") (:keywords "projects" "drawer"))])
 (ppp . [(1 0 0) ((emacs (26))) "Extended pretty printer for Emacs Lisp" tar ((:url . "https://github.com/conao3/ppp.el") (:commit . "6aabd694bcc66775c6a4328fa653a83e39791252") (:revdesc . "6aabd694bcc6") (:keywords "tools") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (prassee-theme . [(1 0) nil "A dark contrast color theme for Emacs" tar ((:url . "https://github.com/prassee/prassee-emacs-theme") (:commit . "9850c806d39acffdef8e91e1a31b54a7620cbae3") (:revdesc . "9850c806d39a") (:authors ("Prassee" . "prassee.sathian@gmail.com")) (:maintainers ("Prassee" . "prassee.sathian@gmail.com")) (:maintainer "Prassee" . "prassee.sathian@gmail.com"))])
 (prefab . [(0 1 1) ((emacs (27 1)) (f (0 2 0)) (transient (0 3 7))) "Integration for project generation tools like cookiecutter" tar ((:url . "https://github.com/LaurenceWarne/prefab.el") (:commit . "e4775959e5410a24f84fa2855b9709fb65fc89b3") (:revdesc . "v0.1.1-0-ge4775959e541"))])
 (prescient . [(6 3 1) ((emacs (25 1))) "Better sorting and filtering" tar ((:url . "https://github.com/radian-software/prescient.el") (:commit . "2b8a8b41228bddb2e11eb1c200e98a9edd04797c") (:revdesc . "2b8a8b41228b") (:keywords "extensions") (:authors ("Radian LLC" . "contact+prescient@radian.codes")) (:maintainers ("Radian LLC" . "contact+prescient@radian.codes")) (:maintainer "Radian LLC" . "contact+prescient@radian.codes"))])
 (presentation . [(0 1 1) ((emacs (24 4)) (cl-lib (0 5))) "Display large character for presentation" tar ((:url . "https://github.com/zonuexe/emacs-presentation-mode") (:commit . "e9e402d05a8b6d9e1e7fe853503c92fea4cf65cb") (:revdesc . "e9e402d05a8b") (:keywords "environment" "faces" "frames") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (prettier . [(1 3 0) ((emacs (26 1)) (iter2 (0 9)) (nvm (0 2))) "Code formatting with Prettier" tar ((:url . "https://github.com/jscheid/prettier.el") (:commit . "913b6f72a062db91517dc7a0a743f7d1773a0927") (:revdesc . "913b6f72a062") (:keywords "convenience" "languages" "files") (:authors ("Julian Scheid" . "julians37@gmail.com")) (:maintainers ("Julian Scheid" . "julians37@gmail.com")) (:maintainer "Julian Scheid" . "julians37@gmail.com"))])
 (prettier-rc . [(0 1 0) ((emacs (24 3)) (prettier-js (0 1 0))) "Use local rc rules with prettier" tar ((:url . "https://github.com/jjuliano/prettier-rc-emacs") (:commit . "eaef4cd76094c7351a2da508b4bc3b25966d0da6") (:revdesc . "eaef4cd76094") (:keywords "convenience" "edit" "js" "ts" "rc" "prettierrc" "prettier-rc" "prettier" "prettier-js") (:authors ("Joel Bryan Juliano" . "joelbryandotjulianoatgmaildotcom")) (:maintainers ("Joel Bryan Juliano" . "joelbryandotjulianoatgmaildotcom")) (:maintainer "Joel Bryan Juliano" . "joelbryandotjulianoatgmaildotcom"))])
 (pretty-hydra . [(0 2 2) ((hydra (0 15 0)) (s (1 12 0)) (dash (2 15 0)) (dash-functional (1 2 0)) (emacs (24))) "A macro for creating nice-looking hydras" tar ((:url . "https://github.com/jerrypnz/major-mode-hydra.el") (:commit . "bba876b86f0b80495004bf185b2b1f6083a1ff3a") (:revdesc . "0.2.2-0-gbba876b86f0b") (:authors ("Jerry Peng" . "pr2jerry@gmail.com")) (:maintainers ("Jerry Peng" . "pr2jerry@gmail.com")) (:maintainer "Jerry Peng" . "pr2jerry@gmail.com"))])
 (pretty-mode . [(2 0 3) nil "Redisplay parts of the buffer as pretty symbols" tar ((:url . "https://github.com/pretty-mode/pretty-mode") (:commit . "4ba8fceb7dd733361ed975d80ac2caa3612fa78b") (:revdesc . "4ba8fceb7dd7") (:keywords "pretty" "unicode" "symbols") (:authors ("Arthur Danskin" . "arthurdanskin@gmail.com")) (:maintainers ("Dmitri Akatov" . "akatov@gmail.com")) (:maintainer "Dmitri Akatov" . "akatov@gmail.com"))])
 (prism . [(0 3 5) ((emacs (27 1)) (compat (29 1 4 5)) (dash (2 14 1))) "Customizable, depth-based syntax coloring" tar ((:url . "https://github.com/alphapapa/prism.el") (:commit . "3a61852dd01c738dc18b88a7be524db67a2d5520") (:revdesc . "v0.3.5-0-g3a61852dd01c") (:keywords "faces" "lisp") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (private-comments-mode . [(1 0 0) ((emacs (27 1))) "Minor mode for masukomi/private_comments" tar ((:url . "https://github.com/masukomi/private-comments-mode") (:commit . "9d7a650278749cdbcc2564b54b15d66be8213efc") (:revdesc . "v1.0.0-0-g9d7a65027874") (:keywords "tools"))])
 (proced-narrow . [(1 0 5) ((seq (2 20)) (emacs (24))) "Live-narrowing of search results for proced" tar ((:url . "https://github.com/travisjeffery/proced-narrow") (:commit . "df5cce50b3d1219b23d28e23cbf68e0c7807a15c") (:revdesc . "df5cce50b3d1") (:keywords "processes" "proced") (:authors ("Travis Jeffery" . "tj@travisjeffery.com")) (:maintainers ("Travis Jeffery" . "tj@travisjeffery.com")) (:maintainer "Travis Jeffery" . "tj@travisjeffery.com"))])
 (processing-mode . [(1 0) ((yasnippet (0 8 0))) "Major mode for Processing 2.0" tar ((:url . "https://github.com/ptrv/processing2-emacs") (:commit . "228bc56369675787d60f637223b50ce3a1afebbd") (:revdesc . "228bc5636967") (:keywords "languages" "snippets") (:authors ("Peter Vasil" . "mail@petervasil.net")) (:maintainers ("Peter Vasil" . "mail@petervasil.net")) (:maintainer "Peter Vasil" . "mail@petervasil.net"))])
 (prodigy . [(1 0 0) ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0)) (emacs (27 1))) "Manage external services" tar ((:url . "https://github.com/rejeep/prodigy.el") (:commit . "b67e4112eaca7ef7c8596c4728e9bc53418982d7") (:revdesc . "b67e4112eaca") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (prog-fill . [(1 0 0) ((emacs (25 1)) (cl-lib (0 6 1))) "Smartly format lines to use vertical space" tar ((:url . "https://github.com/ahungry/prog-fill") (:commit . "3fbf7da6dd826e95c9077d659566ee29814a31d8") (:revdesc . "3fbf7da6dd82") (:keywords "ahungry" "convenience" "c" "formatting" "editing") (:authors ("Matthew Carter" . "m@ahungry.com")) (:maintainers ("Matthew Carter" . "m@ahungry.com")) (:maintainer "Matthew Carter" . "m@ahungry.com"))])
 (project-abbrev . [(0 0 4) ((emacs (25 1))) "Customize abbreviation expansion in the project" tar ((:url . "https://github.com/jcs-elpa/project-abbrev") (:commit . "7b5749eae33eda576da3293dc386794c1248bb48") (:revdesc . "7b5749eae33e") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (project-butler . [(0 4 0) ((emacs (28 1))) "Lay out a project's buffers" tar ((:url . "https://codeberg.org/jabbo/project-butler") (:commit . "7a20dd1e0672942ba971978baffa063b399151ef") (:revdesc . "7a20dd1e0672") (:keywords "convenience" "projects") (:authors ("Stefan Thesing" . "software@webdings.de")) (:maintainers ("Stefan Thesing" . "software@webdings.de")) (:maintainer "Stefan Thesing" . "software@webdings.de"))])
 (project-explorer . [(0 14 3) ((cl-lib (0 3)) (es-lib (0 3)) (es-windows (0 1)) (emacs (24))) "A project explorer sidebar" tar ((:url . "https://github.com/sabof/project-explorer") (:commit . "7c2cc86a81f679dda355110f916366b64893a5d4") (:revdesc . "7c2cc86a81f6"))])
 (project-persist . [(1 0 1) nil "A minor mode to allow loading and saving of project settings" tar ((:url . "https://github.com/rdallasgray/project-persist") (:commit . "26d9435bef44da2a1b0892eba822f9f487b98eec") (:revdesc . "1.0.1-0-g26d9435bef44") (:keywords "project" "persistence"))])
 (project-persist-drawer . [(0 0 4) ((project-persist (0 3))) "Use a project drawer with project-persist" tar ((:url . "https://github.com/rdallasgray/project-persist-drawer") (:commit . "35bbe132a4fab6a0fec15ce6c0fd2fe6a4aa9626") (:revdesc . "0.0.4-0-g35bbe132a4fa") (:keywords "defaults") (:authors ("Robert Dallas Gray" . "mail@robertdallasgray.com")) (:maintainers ("Robert Dallas Gray" . "mail@robertdallasgray.com")) (:maintainer "Robert Dallas Gray" . "mail@robertdallasgray.com"))])
 (project-tasks . [(0 7 0) ((emacs (26 1)) (project (0 6 0))) "Efficient task management for your project" tar ((:url . "https://github.com/TxGVNN/project-tasks") (:commit . "ff1b159faae5e4f4756e5fc5f01b4a2a304ded13") (:revdesc . "ff1b159faae5") (:keywords "project" "workflow" "tools") (:authors ("Giap Tran" . "txgvnn@gmail.com")) (:maintainers ("Giap Tran" . "txgvnn@gmail.com")) (:maintainer "Giap Tran" . "txgvnn@gmail.com"))])
 (projectile . [(2 8 0) ((emacs (25 1))) "Manage and navigate projects in Emacs easily" tar ((:url . "https://github.com/bbatsov/projectile") (:commit . "e6889d7f4bc0d2c48ceac56dfe6f4a3d742a3b69") (:revdesc . "e6889d7f4bc0") (:keywords "project" "convenience") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainers ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.dev"))])
 (projectile-git-autofetch . [(0 1 2) ((emacs (25 1)) (projectile (0 14 0)) (alert (1 2))) "Automatically fetch git repositories" tar ((:url . "https://github.com/andrmuel/projectile-git-autofetch") (:commit . "4a3eba7658a52c6e955d5f7085cd3fd62b53b9c6") (:revdesc . "4a3eba7658a5") (:keywords "tools" "vc") (:authors ("Andreas Müller" . "code@0x7.ch")) (:maintainers ("Andreas Müller" . "code@0x7.ch")) (:maintainer "Andreas Müller" . "code@0x7.ch"))])
 (projectile-rails . [(0 22 0) ((emacs (24 3)) (projectile (0 12 0)) (inflections (1 1)) (inf-ruby (2 2 6)) (f (0 13 0)) (rake (0 3 2)) (dash (2 18 1))) "Minor mode for Rails projects based on projectile-mode" tar ((:url . "https://github.com/asok/projectile-rails") (:commit . "6a18ada3566ab2cb795129e3dfca2a32cc413fb8") (:revdesc . "6a18ada3566a") (:keywords "rails" "projectile") (:authors ("Adam Sokolnicki" . "adam.sokolnicki@gmail.com")) (:maintainers ("Adam Sokolnicki" . "adam.sokolnicki@gmail.com")) (:maintainer "Adam Sokolnicki" . "adam.sokolnicki@gmail.com"))])
 (projectile-ripgrep . [(0 4 0) ((ripgrep (0 3 0)) (projectile (0 14 0))) "Run ripgrep with Projectile" tar ((:url . "https://github.com/nlamirault/ripgrep.el") (:commit . "73595f1364f2117db49e1e4a49290bd6d430e345") (:revdesc . "73595f1364f2") (:keywords "ripgrep" "projectile") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (projectile-sift . [(0 2 0) ((sift (0 2 0)) (projectile (0 13 0))) "Run a sift with Projectile" tar ((:url . "https://github.com/nlamirault/sift.el") (:commit . "8c3f3d14a351a2394027d72ee0599aa73b9f0d13") (:revdesc . "8c3f3d14a351") (:keywords "sift" "projectile") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (projectile-trailblazer . [(0 2 0) ((emacs (24 4)) (projectile (0 12 0)) (inflections (1 1)) (inf-ruby (2 2 6)) (f (0 13 0)) (rake (0 3 2))) "Minor mode for Rails projects using trailblazer" tar ((:url . "https://github.com/micdahl/projectile-trailblazer") (:commit . "79299498d74876f2ac3fe8075716b39a5bdd04cd") (:revdesc . "79299498d748") (:keywords "rails" "projectile" "trailblazer" "languages") (:authors ("Michael Dahl" . "michael.dahl84@gmail.com")) (:maintainers ("Michael Dahl" . "michael.dahl84@gmail.com")) (:maintainer "Michael Dahl" . "michael.dahl84@gmail.com"))])
 (projectile-variable . [(0 0 2) ((emacs (24)) (cl-lib (0 5))) "Store project local variables" tar ((:url . "https://github.com/emacs-php/projectile-variable") (:commit . "8d348ac70bdd6dc320c13a12941b32b38140e264") (:revdesc . "8d348ac70bdd") (:keywords "project" "convenience") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (projekt . [(0 1) ((emacs (24))) "Some kind of staging for CVS" tar ((:url . "https://github.com/tekai/projekt") (:commit . "107232c191375b59d065354470d0af83062e2a4c") (:revdesc . "107232c19137") (:authors ("Engelke Eschner" . "tekai@gmx.li")) (:maintainers ("Engelke Eschner" . "tekai@gmx.li")) (:maintainer "Engelke Eschner" . "tekai@gmx.li"))])
 (promise . [(1 1) ((emacs (25 1))) "Promises/A+" tar ((:url . "https://github.com/chuntaro/emacs-promise") (:commit . "53e1dfe9a8bd613fdfa31944e5259dcdd3a29e12") (:revdesc . "1.1-0-g53e1dfe9a8bd") (:keywords "async" "promise" "convenience") (:authors ("chuntaro" . "chuntaro@sakura-games.jp")) (:maintainers ("chuntaro" . "chuntaro@sakura-games.jp")) (:maintainer "chuntaro" . "chuntaro@sakura-games.jp"))])
 (prompt-text . [(0 1 0) nil "Various information in minibuffer prompt" tar ((:url . "https://github.com/10sr/prompt-text-el") (:commit . "bb9265ebfada42d0e3c67c809665e1e5d980691e") (:revdesc . "bb9265ebfada") (:keywords "utility" "minibuffer") (:authors ("10sr" . "8slashes+el[at]gmail[dot]com")) (:maintainers ("10sr" . "8slashes+el[at]gmail[dot]com")) (:maintainer "10sr" . "8slashes+el[at]gmail[dot]com"))])
 (proof-general . [(4 5) ((emacs (25 2))) "A generic Emacs interface for proof assistants" tar ((:url . "https://github.com/ProofGeneral/PG") (:commit . "c366365aaddeb3a65dc0816c8f93ec209dc9de44") (:revdesc . "v4.5-0-gc366365aadde"))])
 (prop-menu . [(0 1 2) ((emacs (24 3)) (cl-lib (0 5))) "Create and display a context menu based on text and overlay properties" tar ((:url . "https://github.com/david-christiansen/prop-menu-el") (:commit . "50b102c1c0935fd3e0c465feed7f27d66b21cdf3") (:revdesc . "50b102c1c093") (:keywords "convenience") (:authors ("David Christiansen" . "david@davidchristiansen.dk")) (:maintainers ("David Christiansen" . "david@davidchristiansen.dk")) (:maintainer "David Christiansen" . "david@davidchristiansen.dk"))])
 (protobuf-mode . [(29 1) nil "Major mode for editing protocol buffers" tar ((:url . "https://github.com/protocolbuffers/protobuf") (:commit . "796e49f6ca82f763d1087d2ff7355d2f0d7b71b1") (:revdesc . "v29.1-0-g796e49f6ca82") (:keywords "google" "protobuf" "languages") (:authors ("Alexandre Vassalotti" . "alexandre@peadrop.com")) (:maintainers ("Alexandre Vassalotti" . "alexandre@peadrop.com")) (:maintainer "Alexandre Vassalotti" . "alexandre@peadrop.com"))])
 (protobuf-ts-mode . [(1 0 3) ((emacs (29))) "Tree sitter support for Protocol Buffers (proto3 only)" tar ((:commit . "65152f5341ea4b3417390b3e60b195975161b8bc") (:authors ("ookami" . "mail@ookami.one")) (:maintainers ("ookami" . "mail@ookami.one")) (:maintainer "ookami" . "mail@ookami.one") (:keywords "protobuf" "languages" "tree-sitter") (:url . "https://git.ookami.one/cgit/protobuf-ts-mode"))])
 (protocols . [(1 6) ((cl-lib (0 5))) "Protocol database access functions" tar ((:url . "https://github.com/davep/protocols.el") (:commit . "f5549f5d873a683af45a0e19c732524d5b964026") (:revdesc . "f5549f5d873a") (:keywords "convenience" "net" "protocols") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (psalm . [(0 6 0) ((emacs (24 3)) (php-mode (1 22 3))) "Interface to Psalm" tar ((:url . "https://github.com/emacs-php/psalm.el") (:commit . "aaa77b4ceb61d41a520baa0b84b9b236c99c4156") (:revdesc . "aaa77b4ceb61") (:keywords "tools" "php") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (psci . [(0 0 6) ((purescript-mode (13 10)) (dash (2 9 0)) (s (1 9 0)) (f (0 17 1)) (deferred (0 3 2))) "Major mode for purescript repl psci" tar ((:url . "https://github.com/purescript-emacs/emacs-psci") (:commit . "8c2d5a0ba604ec593f83f632b2830a87f41f84d4") (:revdesc . "8c2d5a0ba604") (:keywords "purescript" "psci" "repl" "major" "mode") (:authors ("Antoine R. Dumont" . "eniotna.tATgmail.com")) (:maintainers ("Antoine R. Dumont" . "eniotna.tATgmail.com")) (:maintainer "Antoine R. Dumont" . "eniotna.tATgmail.com"))])
 (psession . [(1 5) ((emacs (24)) (cl-lib (0 5)) (async (1 9 3))) "Persistent save of elisp objects" tar ((:url . "https://github.com/thierryvolpiatto/psession") (:commit . "702d20897c0839568201bc6921d5f0f80b8778c0") (:revdesc . "v1.5-0-g702d20897c08") (:authors ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainers ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainer "Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))])
 (psysh . [(0 1 1) ((emacs (24 3)) (s (1 9 0)) (php-runtime (0 2))) "PsySH, PHP interactive shell (REPL)" tar ((:url . "https://github.com/emacs-php/psysh.el") (:commit . "796b26a5cd75df9d2ecb206718b310ff21787063") (:revdesc . "796b26a5cd75") (:keywords "processes" "php") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (pt . [(0 0 3) nil "A front-end for pt, The Platinum Searcher" tar ((:url . "https://github.com/bling/pt.el") (:commit . "a539dc11ecb2d69760ff50f76c96f49895ce1e1e") (:revdesc . "a539dc11ecb2") (:keywords "pt" "ack" "ag" "grep" "search"))])
 (ptree . [(0 1 0) ((emacs (25 1))) "Property tree data structure" tar ((:url . "https://github.com/alpha-catharsis/ptree") (:commit . "23cb9093f99b9869606f8d54fa5c45ea35fcc789") (:revdesc . "23cb9093f99b") (:keywords "lisp") (:authors ("Alpha Catharsis" . "alpha.catharsis@gmail.com")) (:maintainers ("Alpha Catharsis" . "alpha.catharsis@gmail.com")) (:maintainer "Alpha Catharsis" . "alpha.catharsis@gmail.com"))])
 (pubmed . [(0 6 2) ((emacs (26 1)) (esxml (0 3 4)) (s (1 12 0)) (unidecode (0 2))) "Interface to PubMed" tar ((:url . "https://gitlab.com/fvdbeek/emacs-pubmed") (:commit . "b2fbc124cabf0d373845763adf882e9d89ff5daa") (:revdesc . "b2fbc124cabf") (:keywords "pubmed" "hypermedia") (:authors ("Folkert van der Beek" . "folkertvanderbeek@gmail.com")) (:maintainers ("Folkert van der Beek" . "folkertvanderbeek@gmail.com")) (:maintainer "Folkert van der Beek" . "folkertvanderbeek@gmail.com"))])
 (pueue . [(2 1 0) ((emacs (28 1)) (with-editor (3 0 4))) "Interface for pueue" tar ((:url . "https://github.com/xFA25E/pueue") (:commit . "5ad6979a0129c7cddc69f71c9084e4356f450fac") (:revdesc . "2.1.0-0-g5ad6979a0129") (:keywords "processes") (:authors ("Valeriy Litkovskyy" . "vlr.ltkvsk@protonmail.com")) (:maintainers ("Valeriy Litkovskyy" . "vlr.ltkvsk@protonmail.com")) (:maintainer "Valeriy Litkovskyy" . "vlr.ltkvsk@protonmail.com"))])
 (pug-mode . [(1 0 8) ((emacs (24 4)) (cl-lib (0 5))) "Major mode for jade/pug template files" tar ((:url . "https://github.com/hlissner/emacs-pug-mode") (:commit . "d08090485eb8c0488a7d2fbf63680dc0880c7d2f") (:revdesc . "d08090485eb8") (:keywords "markup" "language" "jade" "pug") (:maintainers ("Henrik Lissner" . "henrik@lissner.net")) (:maintainer "Henrik Lissner" . "henrik@lissner.net"))])
 (punctuality-logger . [(0 8) nil "Punctuality logger for Emacs" tar ((:url . "https://gitlab.com/elzair/punctuality-logger") (:commit . "708cae8e67dbae293c7c4be0ca5e49d76fac6714") (:revdesc . "708cae8e67db") (:keywords "reminder" "calendar") (:authors ("Philip Woods" . "elzairthesorcerer@gmail.com")) (:maintainers ("Philip Woods" . "elzairthesorcerer@gmail.com")) (:maintainer "Philip Woods" . "elzairthesorcerer@gmail.com"))])
 (pungi . [(1 1) ((jedi (0 2 0 -3 2)) (pyvenv (1 5))) "Integrates jedi with virtualenv and buildout python environments" tar ((:url . "https://github.com/mgrbyte/pungi") (:commit . "41c9f8b7795e083bfd63ba0d06c789c250998723") (:revdesc . "1.1-0-g41c9f8b7795e") (:keywords "convenience") (:authors ("Matthew Russell" . "matthew.russell@horizon5.org")) (:maintainers ("Matthew Russell" . "matthew.russell@horizon5.org")) (:maintainer "Matthew Russell" . "matthew.russell@horizon5.org"))])
 (punpun-themes . [(0 0 2) ((emacs (24 1))) "A set of bleak themes" tar ((:url . "https://depp.brause.cc/punpun-themes.git") (:commit . "6a7e04de1ad9f7ba9074b7206bffc9241c33349c") (:revdesc . "6a7e04de1ad9") (:authors ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainers ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainer "Vasilij Schneidermann" . "mail@vasilij.de"))])
 (puppet-mode . [(0 4) ((emacs (24 1)) (pkg-info (0 4))) "Major mode for Puppet manifests" tar ((:url . "https://github.com/voxpupuli/puppet-mode") (:commit . "73ea35bc7a3ad663c5b73f65cb6377eb0ae11d6f") (:revdesc . "0.4-0-g73ea35bc7a3a") (:keywords "languages") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com") ("Sebastian Wiesner" . "swiesner@lunaryorn.com") ("Russ Allbery" . "rra@stanford.edu")) (:maintainers ("Tim Meusel" . "tim@bastelfreak.de")) (:maintainer "Tim Meusel" . "tim@bastelfreak.de"))])
 (pushbullet . [(0 5 2) ((grapnel (0 5 2)) (json (1 2))) "Emacs client for the PushBullet Android app" tar ((:url . "https://github.com/theanalyst/revolver") (:commit . "73c59a0f1dc04875b3e5a2c8afbc26c32128e445") (:revdesc . "73c59a0f1dc0") (:keywords "convenience") (:authors ("Abhishek L" . "abhishek.lekshmanan@gmail.com")) (:maintainers ("Abhishek L" . "abhishek.lekshmanan@gmail.com")) (:maintainer "Abhishek L" . "abhishek.lekshmanan@gmail.com"))])
 (py-autopep8 . [(2016 1) nil "Use autopep8 to beautify a Python buffer" tar ((:url . "https://codeberg.org/ideasman42/emacs-py-autopep8") (:commit . "68e12d8788c91c7ec53a68acf1d23adb2ffa4788") (:revdesc . "68e12d8788c9") (:authors ("Friedrich Paetzke" . "f.paetzke@gmail.com")) (:maintainers ("Friedrich Paetzke" . "f.paetzke@gmail.com")) (:maintainer "Friedrich Paetzke" . "f.paetzke@gmail.com"))])
 (py-isort . [(2016 1) nil "Use isort to sort the imports in a Python buffer" tar ((:url . "https://github.com/paetzke/py-isort.el") (:commit . "e67306f459c47c53a65604e4eea88a3914596560") (:revdesc . "e67306f459c4") (:authors ("Friedrich Paetzke" . "paetzke@fastmail.fm")) (:maintainers ("Friedrich Paetzke" . "paetzke@fastmail.fm")) (:maintainer "Friedrich Paetzke" . "paetzke@fastmail.fm"))])
 (py-vterm-interaction . [(1 0 6) ((emacs (27 1)) (vterm (0 0 2)) (python (0 28))) "A mode for Python REPL using vterm" tar ((:url . "https://github.com/vale981/py-vterm-interaction.el") (:commit . "95d6842790767c5b8ed1043c1a10c437d955b436") (:revdesc . "95d684279076") (:keywords "languages" "python") (:maintainers ("Valentin Boettcher" . "hiroatprotagon.space")) (:maintainer "Valentin Boettcher" . "hiroatprotagon.space"))])
 (py-yapf . [(2016 1) nil "Use yapf to beautify a Python buffer" tar ((:url . "https://github.com/paetzke/py-yapf.el") (:commit . "a878304202ad827a1f3de3dce1badd9ca8731146") (:revdesc . "a878304202ad") (:authors ("Friedrich Paetzke" . "f.paetzke@gmail.com")) (:maintainers ("Friedrich Paetzke" . "f.paetzke@gmail.com")) (:maintainer "Friedrich Paetzke" . "f.paetzke@gmail.com"))])
 (pycarddavel . [(1 0 1) ((helm (1 7 0)) (emacs (24 0))) "Integrate pycarddav" tar ((:url . "https://github.com/DamienCassou/pycarddavel") (:commit . "6ead921066fa0156f20155b7126e5875ce11c328") (:revdesc . "6ead921066fa") (:keywords "helm" "pyccarddav" "carddav" "message" "mu4e" "contacts") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (pydoc . [(0 1) nil "Functional, syntax highlighted pydoc navigation" tar ((:url . "https://github.com/statmobile/pydoc") (:commit . "5392248e33d83ef05d3b2809b0c6b207786b2644") (:revdesc . "5392248e33d8") (:keywords "pydoc" "python") (:authors ("John Kitchin" . "jkitchin@andrew.cmu.edu")) (:maintainers ("Brian J. Lopes" . "statmobile@gmail.com")) (:maintainer "Brian J. Lopes" . "statmobile@gmail.com"))])
 (pyenv-mode . [(0 1 0) ((pythonic (0 1 0))) "Integrate pyenv with python-mode" tar ((:url . "https://github.com/pythonic-emacs/pyenv-mode") (:commit . "b96c15fa1b83cad855e472eda06319ad35e34513") (:revdesc . "b96c15fa1b83") (:authors ("Artem Malyshev" . "proofit404@gmail.com")) (:maintainers ("Artem Malyshev" . "proofit404@gmail.com")) (:maintainer "Artem Malyshev" . "proofit404@gmail.com"))])
 (pygn-mode . [(0 5 1) ((emacs (25 1)) (uci-mode (0 5 4)) (nav-flash (1 0 0)) (ivy (0 10 0))) "Major-mode for chess PGN files, powered by Python" tar ((:url . "https://github.com/dwcoates/pygn-mode") (:commit . "cd06faecb40774fafa69d91085206810d686367a") (:revdesc . "v0.5.1-0-gcd06faecb407") (:keywords "data" "games" "chess"))])
 (pyim . [(5 3 4) ((emacs (27 1)) (async (1 6)) (xr (1 13))) "A Chinese input method support quanpin, shuangpin, wubi, cangjie and rime" tar ((:url . "https://github.com/tumashu/pyim") (:commit . "f22c20f2e6af55b3a758defabe4c842fb94cde2b") (:revdesc . "f22c20f2e6af") (:keywords "convenience" "chinese" "pinyin" "input-method") (:authors ("Ye Wenbin" . "wenbinye@163.com") ("Feng Shu" . "tumashu@163.com")) (:maintainers ("Feng Shu" . "tumashu@163.com")) (:maintainer "Feng Shu" . "tumashu@163.com"))])
 (pyim-basedict . [(0 5 3) nil "The default pinyin dict of pyim" tar ((:url . "https://github.com/tumashu/pyim-basedict") (:commit . "4aa30ff9f83cf6435230a987d323e48230f1f40e") (:revdesc . "4aa30ff9f83c") (:keywords "convenience" "chinese" "pinyin" "input-method" "complete") (:authors ("Feng Shu" . "tumashu@163.com")) (:maintainers ("Feng Shu" . "tumashu@163.com")) (:maintainer "Feng Shu" . "tumashu@163.com"))])
 (pyim-wbdict . [(0 3 0) ((pyim (3 7))) "Some wubi dicts for pyim" tar ((:url . "https://github.com/tumashu/pyim-wbdict") (:commit . "2766bf0dd8514226cd8aac1ab9402af603b96d06") (:revdesc . "2766bf0dd851") (:keywords "convenience" "chinese" "pinyin" "input-method" "complete") (:authors ("Feng Shu" . "tumashu@163.com")) (:maintainers ("Feng Shu" . "tumashu@163.com")) (:maintainer "Feng Shu" . "tumashu@163.com"))])
 (pyimport . [(1 0) ((dash (2 8 0)) (s (1 9 0))) "Manage Python imports!" tar ((:url . "https://github.com/Wilfred/pyimport") (:commit . "2c05712748f6b6624b15d524323f6391612683f4") (:revdesc . "2c05712748f6") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (pylint . [(1 3) nil "Minor mode for running `pylint'" tar ((:url . "https://github.com/emacsorphanage/pylint") (:commit . "bddb91610b6b6aa1e7fee96b6be3be69dfe3695e") (:revdesc . "v1.3-0-gbddb91610b6b") (:keywords "languages" "python") (:authors ("Ian Eure" . "ian.eure@gmail.com")) (:maintainers ("Ian Eure" . "ian.eure@gmail.com")) (:maintainer "Ian Eure" . "ian.eure@gmail.com"))])
 (pynt . [(1 0 0) ((emacs (24 4)) (ein (0 13 1)) (epc (0 1 1)) (deferred (0 5 1)) (helm (2 8 8))) "Generate and scroll EIN buffers from python code" tar ((:url . "https://github.com/ebanner/pynt") (:commit . "bc750cd244141005ea3b7bb87f75c6f6c5a5778f") (:revdesc . "bc750cd24414") (:keywords "convenience") (:authors ("Edward Banner" . "edward.banner@gmail.com")) (:maintainers ("Edward Banner" . "edward.banner@gmail.com")) (:maintainer "Edward Banner" . "edward.banner@gmail.com"))])
 (pyramid . [(0 1) ((emacs (25 2)) (pythonic (0 1 1)) (tablist (0 70))) "Minor mode for working with pyramid projects" tar ((:url . "https://github.com/dakra/pyramid.el") (:commit . "59d7ec03dcb1968160ac1dfe3c979cc83fe0fe4b") (:revdesc . "59d7ec03dcb1") (:keywords "python" "pyramid" "pylons" "convenience" "tools" "processes") (:authors ("Daniel Kraus" . "daniel@kraus.my")) (:maintainers ("Daniel Kraus" . "daniel@kraus.my")) (:maintainer "Daniel Kraus" . "daniel@kraus.my"))])
 (pytest-pdb-break . [(0 0 10) ((emacs (25))) "A pytest PDB launcher" tar ((:url . "https://github.com/poppyschmo/pytest-pdb-break") (:commit . "05d227493b7b96f3556cba22f215cb85f9282020") (:revdesc . "0.0.10-0-g05d227493b7b") (:keywords "languages" "tools") (:authors ("Jane Soko" . "poppyschmo@protonmail.com")) (:maintainers ("Jane Soko" . "poppyschmo@protonmail.com")) (:maintainer "Jane Soko" . "poppyschmo@protonmail.com"))])
 (python-black . [(1 2 0) ((emacs (25)) (dash (2 16 0)) (reformatter (0 3))) "Reformat Python using python-black" tar ((:url . "https://github.com/wbolster/emacs-python-black") (:commit . "e1bbf574a952562ddeadb0caa42c44016136c2c9") (:revdesc . "1.2.0-0-ge1bbf574a952") (:keywords "languages") (:authors ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainers ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainer "wouter bolsterlee" . "wouter@bolsterl.ee"))])
 (python-environment . [(0 0 2) ((deferred (0 3 1))) "Virtualenv API for Emacs Lisp" tar ((:url . "https://github.com/tkf/emacs-python-environment") (:commit . "401006584e32864a10c69d29f14414828909362e") (:revdesc . "401006584e32") (:keywords "applications" "tools") (:authors ("Takafumi Arakaki" . "aka.tkfatgmail.com")) (:maintainers ("Takafumi Arakaki" . "aka.tkfatgmail.com")) (:maintainer "Takafumi Arakaki" . "aka.tkfatgmail.com"))])
 (python-insert-docstring . [(2 2) ((emacs (25 1))) "Python Google docstring inserter" tar ((:url . "https://github.com/macurovc/insert-docstring") (:commit . "cd6419b74c99c06d5c48c1b289572acce1fd193b") (:revdesc . "cd6419b74c99") (:authors ("Marco Vocialta" . "macurovc@tutanota.com")) (:maintainers ("Marco Vocialta" . "macurovc@tutanota.com")) (:maintainer "Marco Vocialta" . "macurovc@tutanota.com"))])
 (python-isort . [(1 0 0) ((emacs (26)) (reformatter (0 6))) "Reformat python-mode buffer with isort" tar ((:url . "https://github.com/wyuenho/emacs-python-isort") (:commit . "4ba3dd75e7dd9f953d8b7c0b9c4c6d1b1c263047") (:revdesc . "4ba3dd75e7dd") (:keywords "languages") (:authors ("Jimmy Yuen Ho Wong" . "wyuenho@gmail.com")) (:maintainers ("Jimmy Yuen Ho Wong" . "wyuenho@gmail.com")) (:maintainer "Jimmy Yuen Ho Wong" . "wyuenho@gmail.com"))])
 (python-mls . [(0 2 2) ((emacs (27 1)) (compat (29 1))) "Multi-line shell for (i)Python" tar ((:url . "https://github.com/jdtsmith/python-mls") (:commit . "821b93ff7c94a13090598c22fd92bd19b5ad951b") (:revdesc . "821b93ff7c94") (:keywords "languages" "processes"))])
 (python-mode . [(6 3 0) nil "Python major mode" tar ((:url . "https://gitlab.com/python-mode-devs/python-mode") (:commit . "906b0a107f7bcfe6e32bcfedb977e6f0f99fda59") (:revdesc . "906b0a107f7b") (:keywords "languages" "processes" "python" "oop") (:maintainers (nil . "python-mode@python.org")) (:maintainer nil . "python-mode@python.org"))])
 (python-pytest . [(3 4 0) ((emacs (24 4)) (dash (2 18 0)) (transient (0 3 7)) (projectile (0 14 0)) (s (1 12 0))) "Helpers to run pytest" tar ((:url . "https://github.com/wbolster/emacs-python-pytest") (:commit . "46fd006462258a3366723fafacdf2db6a6ae689d") (:revdesc . "3.4.0-0-g46fd00646225") (:keywords "pytest" "test" "python" "languages" "processes" "tools") (:authors ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainers ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainer "wouter bolsterlee" . "wouter@bolsterl.ee"))])
 (python-x . [(1 0) ((python (0 24)) (folding (0))) "Python.el extras for interactive evaluation" tar ((:url . "https://gitlab.com/wavexx/python-x.el") (:commit . "e606469aafec2e6beda8c589540b88a5a6f6f33f") (:revdesc . "v1.0-0-ge606469aafec") (:keywords "python" "eval" "folding") (:authors ("Yuri D'Elia" . "wavexx@thregr.org")) (:maintainers ("Yuri D'Elia" . "wavexx@thregr.org")) (:maintainer "Yuri D'Elia" . "wavexx@thregr.org"))])
 (pythonic . [(0 2 0) ((emacs (25 1)) (s (1 9)) (f (0 17 2))) "Utility functions for writing pythonic emacs package" tar ((:url . "https://github.com/pythonic-emacs/pythonic") (:commit . "e0e5cc882f2f1316268ec461a34d4be8abc313b7") (:revdesc . "e0e5cc882f2f") (:authors ("Artem Malyshev" . "proofit404@gmail.com")) (:maintainers ("Artem Malyshev" . "proofit404@gmail.com")) (:maintainer "Artem Malyshev" . "proofit404@gmail.com"))])
 (pyvenv . [(1 21) nil "Python virtual environment interface" tar ((:url . "https://github.com/jorgenschaefer/pyvenv") (:commit . "103d2f158ef2a760741682e18741e44107c68f3f") (:revdesc . "103d2f158ef2") (:keywords "python" "virtualenv" "tools") (:authors ("Jorgen Schaefer" . "contact@jorgenschaefer.de")) (:maintainers ("Jorgen Schaefer" . "contact@jorgenschaefer.de")) (:maintainer "Jorgen Schaefer" . "contact@jorgenschaefer.de"))])
 (qml-mode . [(0 4) nil "Major mode for editing QT Declarative (QML) code" tar ((:url . "https://github.com/coldnew/qml-mode") (:commit . "6c5f33ba88ae010bf201a80ee8095e20a724558c") (:revdesc . "6c5f33ba88ae") (:keywords "qml" "qt" "qt declarative") (:authors ("Yen-Chin Lee" . "coldnew.tw@gmail.com")) (:maintainers ("Yen-Chin Lee" . "coldnew.tw@gmail.com")) (:maintainer "Yen-Chin Lee" . "coldnew.tw@gmail.com"))])
 (qrencode . [(1 2) ((emacs (25 1))) "QRCode encoder" tar ((:url . "https://github.com/ruediger/qrencode-el") (:commit . "d7896e9594d45d7b2622d4617ff9cb7037378167") (:revdesc . "v1.2-0-gd7896e9594d4") (:keywords "qrcode" "comm") (:authors ("Rüdiger Sonderfeld" . "ruediger@c-plusplus.net")) (:maintainers ("Rüdiger Sonderfeld" . "ruediger@c-plusplus.net")) (:maintainer "Rüdiger Sonderfeld" . "ruediger@c-plusplus.net"))])
 (qt-pro-mode . [(1 0 1) ((emacs (24))) "Qt Pro/Pri major mode" tar ((:url . "https://github.com/emacsorphanage/qt-pro-mode") (:commit . "f4accdeba5d49b79f85f0f24f74ac25e8326d487") (:revdesc . "f4accdeba5d4") (:keywords "extensions") (:authors ("Todd Neal" . "tolchz@gmail.com")) (:maintainers ("Todd Neal" . "tolchz@gmail.com")) (:maintainer "Todd Neal" . "tolchz@gmail.com"))])
 (quakec-mode . [(0 1) ((emacs (27 1))) "Major mode for QuakeC" tar ((:url . "https://github.com/vkazanov/quakec-mode") (:commit . "8ac72909fff5135f544012ad3df45d2d890634bd") (:revdesc . "8ac72909fff5") (:keywords "games" "languages"))])
 (quasi-monochrome-theme . [(1 2) nil "Quasi Monochrome theme" tar ((:url . "https://github.com/lbolla/emacs-quasi-monochrome") (:commit . "68060dbbc0bbfe4924387392874186c5a29bb434") (:revdesc . "68060dbbc0bb") (:keywords "color-theme" "monochrome" "high contrast") (:authors ("Lorenzo Bolla" . "lbolla@gmail.com")) (:maintainers ("Lorenzo Bolla" . "lbolla@gmail.com")) (:maintainer "Lorenzo Bolla" . "lbolla@gmail.com"))])
 (quelpa . [(1 0) ((emacs (25 1))) "Emacs Lisp packages built directly from source" tar ((:url . "https://github.com/quelpa/quelpa") (:commit . "f1fc228f217be692eaae2d53f51966ce922d6a32") (:revdesc . "f1fc228f217b") (:keywords "tools" "package" "management" "build" "source" "elpa"))])
 (quelpa-leaf . [(0 0 1) ((emacs (24 3)) (quelpa (1 0)) (leaf (4 1 0))) "Quelpa handler for leaf" tar ((:url . "https://github.com/quelpa/quelpa-leaf") (:commit . "d367e3cd54d9ac949569f4cb7c0ff092a76391ab") (:revdesc . "d367e3cd54d9") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (quelpa-use-package . [(0 0 1) ((emacs (25 1)) (quelpa (0)) (use-package (2))) "Quelpa handler for use-package" tar ((:url . "https://github.com/quelpa/quelpa-use-package") (:commit . "00ce667293c7cd5dc79d4b6077785fcc57455775") (:revdesc . "00ce667293c7") (:keywords "package" "management" "elpa" "use-package"))])
 (quick-sdcv . [(1 0 0) ((emacs (25 1))) "Interface for the sdcv command (StartDict cli dictionary)" tar ((:url . "https://github.com/jamescherti/quick-sdcv.el") (:commit . "ef24026f1f03d3df8ed999e5c75f5c3bbc70860e") (:revdesc . "1.0.0-0-gef24026f1f03") (:keywords "docs" "startdict" "sdcv"))])
 (quickrun . [(2 3 1) ((emacs (24 3))) "Run commands quickly" tar ((:url . "https://github.com/emacsorphanage/quickrun") (:commit . "0133cac651918071a824e85b55e10d44f32a1979") (:revdesc . "0133cac65191") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (quiet . [(0 1) nil "Disconnect from the online world for a while" tar ((:url . "https://github.com/zzkt/quiet") (:commit . "aa3a6e039dbc9437e7dd178a6596d43cf19293eb") (:revdesc . "0.1-0-gaa3a6e039dbc") (:keywords "convenience" "quiet" "distraction" "network" "detachment" "offline") (:authors ("nik gaffney" . "nik@fo.am")) (:maintainers ("nik gaffney" . "nik@fo.am")) (:maintainer "nik gaffney" . "nik@fo.am"))])
 (quilt . [(0 6) ((emacs (26 0))) "Minor mode for working with files in quilt" tar ((:url . "https://github.com/jstranik/emacs-quilt") (:commit . "b56a1f1acc46cdf8655710e4c8f24f5f31f22c6a") (:revdesc . "0.6-0-gb56a1f1acc46") (:keywords "extensions") (:authors ("Matt Mackall" . "mpm@selenic.com")) (:maintainers ("Jan Stranik" . "jan@stranik.org")) (:maintainer "Jan Stranik" . "jan@stranik.org"))])
 (quiz . [(1 5) ((cl-lib (0 5)) (emacs (25))) "Multiple choice quiz game" tar ((:url . "https://github.com/davep/quiz.el") (:commit . "570bf53926d89282cdb9653bd5aa8fe968f92bbd") (:revdesc . "570bf53926d8") (:keywords "games" "trivia" "quiz") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (r-autoyas . [(0 28) nil "Provides automatically created yasnippets for R function argument lists" tar ((:url . "https://github.com/mattfidler/r-autoyas.el") (:commit . "563254f01ce530ca4c9be1f23395e3fd7d520ff9") (:revdesc . "v0.28-0-g563254f01ce5") (:keywords "r" "yasnippet"))])
 (racer . [(1 2) ((emacs (24 3)) (rust-mode (0 2 0)) (dash (2 11 0)) (s (1 10 0)) (f (0 18 2))) "The official Emacs package for Racer" tar ((:url . "https://github.com/racer-rust/emacs-racer") (:commit . "8ad54e7674e49735390d63e3aea828a4d4bcddd0") (:revdesc . "8ad54e7674e4") (:keywords "abbrev" "convenience" "matching" "rust" "tools"))])
 (railscasts-reloaded-theme . [(2 1 0) nil "Railscasts Reloaded color theme" tar ((:url . "https://github.com/thegeorgeous/railscasts-reloaded-theme") (:commit . "1c3850568e60a555d59cbb57bf2b6aa06e99d454") (:revdesc . "1c3850568e60") (:authors ("George Thomas" . "iamgeorgethomas@gmail.com")) (:maintainers ("George Thomas" . "iamgeorgethomas@gmail.com")) (:maintainer "George Thomas" . "iamgeorgethomas@gmail.com"))])
 (rainbow-blocks . [(1 0 0) nil "Block syntax highlighting for lisp code" tar ((:url . "https://github.com/istib/rainbow-blocks") (:commit . "8335993563aadd4290c5fa09dd7a6a81691b0690") (:revdesc . "1.0.0-0-g8335993563aa"))])
 (rainbow-delimiters . [(2 1 5) nil "Highlight brackets according to their depth" tar ((:url . "https://github.com/Fanael/rainbow-delimiters") (:commit . "7919681b0d883502155d5b26e791fec15da6aeca") (:revdesc . "7919681b0d88") (:keywords "faces" "convenience" "lisp" "tools") (:authors ("Jeremy Rayman" . "opensource@jeremyrayman.com") ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Fanael Linithien" . "fanael4@gmail.com"))])
 (rainbow-identifiers . [(0 2 2) ((emacs (24))) "Highlight identifiers according to their names" tar ((:url . "https://github.com/Fanael/rainbow-identifiers") (:commit . "19fbfded1baa98d12335f26f6d7b20e5ae44ce2e") (:revdesc . "19fbfded1baa") (:authors ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Fanael Linithien" . "fanael4@gmail.com"))])
 (rake . [(0 4 3) ((f (0 13 0)) (dash (1 5 0)) (cl-lib (0 5))) "Run rake commands" tar ((:url . "https://github.com/asok/rake") (:commit . "452ea0caca33376487103c64177c295ed2960cca") (:revdesc . "452ea0caca33") (:keywords "rake" "ruby") (:authors ("Adam Sokolnicki" . "adam.sokolnicki@gmail.com")) (:maintainers ("Adam Sokolnicki" . "adam.sokolnicki@gmail.com")) (:maintainer "Adam Sokolnicki" . "adam.sokolnicki@gmail.com"))])
 (raku-mode . [(0 2 0) ((emacs (24 4)) (pkg-info (0 1))) "Major mode for editing Raku code" tar ((:url . "https://github.com/Raku/raku-mode") (:commit . "7496ad3a03bed613c259405ec8839ae02950fdb1") (:revdesc . "7496ad3a03be") (:keywords "languages") (:authors ("Hinrik rn Sigurðsson" . "hinrik.sig@gmail.com")) (:maintainers ("Hinrik rn Sigurðsson" . "hinrik.sig@gmail.com")) (:maintainer "Hinrik rn Sigurðsson" . "hinrik.sig@gmail.com"))])
 (ranger . [(0 9 8 5) ((emacs (24 4))) "Make dired more like ranger" tar ((:url . "https://github.com/punassuming/ranger.el") (:commit . "584e4ae8cce1c54a44b40dd4c77fbb2f06d73ecb") (:revdesc . "584e4ae8cce1") (:keywords "files" "convenience") (:authors ("Rich Alesi" . "https://github.com/ralesi")) (:maintainers ("Rich Alesi" . "https://github.com/ralesi")) (:maintainer "Rich Alesi" . "https://github.com/ralesi"))])
 (rase . [(1 1) nil "Run At Sun Event daemon" tar ((:url . "https://github.com/m00natic/rase") (:commit . "59b5f7e8102570b65040e8d55781c7ea28de7338") (:revdesc . "59b5f7e81025") (:keywords "solar" "sunrise" "sunset" "midday" "midnight") (:authors ("Andrey Kotlarski" . "m00naticus@gmail.com")) (:maintainers ("Andrey Kotlarski" . "m00naticus@gmail.com")) (:maintainer "Andrey Kotlarski" . "m00naticus@gmail.com"))])
 (rats . [(0 2 0) ((s (1 10 0)) (go-mode (1 3 1)) (cl-lib (0 5))) "Rapid testing suite for Go" tar ((:url . "https://github.com/ane/rats.el") (:commit . "8ad4023a4b9b00c1224b10b0060f6dc60b4814a4") (:revdesc . "0.2.0-0-g8ad4023a4b9b") (:keywords "convenience") (:authors ("Antoine Kalmbach" . "ane@iki.fi")) (:maintainers ("Antoine Kalmbach" . "ane@iki.fi")) (:maintainer "Antoine Kalmbach" . "ane@iki.fi"))])
 (rbenv . [(0 0 3) nil "Emacs integration for rbenv" tar ((:url . "https://github.com/senny/rbenv.el") (:commit . "a613ee1941efa48ef5321bad39ac1ed8ad1540b8") (:revdesc . "v0.0.3-0-ga613ee1941ef") (:keywords "ruby" "rbenv") (:authors ("Yves Senn" . "yves.senn@gmail.com")) (:maintainers ("Yves Senn" . "yves.senn@gmail.com")) (:maintainer "Yves Senn" . "yves.senn@gmail.com"))])
 (rbs-mode . [(0 3 2) ((emacs (24 5))) "A major mode for RBS" tar ((:url . "https://github.com/ybiquitous/rbs-mode") (:commit . "d382032cb276d452fdd512c1f1f1b9f95153b356") (:revdesc . "v0.3.2-0-gd382032cb276") (:keywords "languages"))])
 (rbtagger . [(0 4 5) ((emacs (25 1))) "Ruby tagging tools" tar ((:url . "https://github.com/thiagoa/rbtagger") (:commit . "bbab9900c7b8cb406da662e4f99064e1a2de729e") (:revdesc . "bbab9900c7b8") (:keywords "languages" "tools") (:authors ("Thiago Araújo" . "thiagoaraujos@gmail.com")) (:maintainers ("Thiago Araújo" . "thiagoaraujos@gmail.com")) (:maintainer "Thiago Araújo" . "thiagoaraujos@gmail.com"))])
 (rc-mode . [(1 0 13) nil "Major mode for the Plan9 rc shell" tar ((:url . "https://github.com/mrhmouse/rc-mode.el") (:commit . "fe2e0570bf9c19a292e16b18fd4b0a256df5d93f") (:revdesc . "fe2e0570bf9c") (:keywords "rc" "plan9" "shell"))])
 (rcirc-styles . [(1 3 2) ((cl-lib (0 5))) "Support mIRC-style color and attribute codes" tar ((:url . "https://github.com/aaron-em/rcirc-styles.el") (:commit . "f313bf6a7470bed314b27c7a40558cb787d7bc67") (:revdesc . "f313bf6a7470"))])
 (rdf-prefix . [(1 14) nil "Prefix lookup for RDF" tar ((:url . "https://github.com/simenheg/rdf-prefix") (:commit . "c591608d12278b293a14c27ab2df72a269eb535d") (:revdesc . "c591608d1227") (:keywords "convenience" "abbrev") (:authors ("Simen Heggestøyl" . "simenheg@runbox.com")) (:maintainers ("Simen Heggestøyl" . "simenheg@runbox.com")) (:maintainer "Simen Heggestøyl" . "simenheg@runbox.com"))])
 (react-snippets . [(0 1) ((yasnippet (0 7 0))) "Yasnippets for React" tar ((:url . "https://github.com/johnmastro/react-snippets.el") (:commit . "bfc4b68b81374a6a080240592641091a7e8a6d61") (:revdesc . "bfc4b68b8137") (:keywords "snippets") (:authors ("John Mastro" . "john.b.mastro@gmail.com")) (:maintainers ("John Mastro" . "john.b.mastro@gmail.com")) (:maintainer "John Mastro" . "john.b.mastro@gmail.com"))])
 (ready-player . [(0 24 1) ((emacs (28 1))) "Open media files in ready-player major mode" tar ((:url . "https://github.com/xenodium/ready-player") (:commit . "08a360e8d4f643c7115bf29c775a1d4b846c7394") (:revdesc . "08a360e8d4f6"))])
 (real-auto-save . [(0 4) nil "Enable real auto save" tar ((:url . "https://github.com/ChillarAnand/real-auto-save") (:commit . "879144ca7e9bfa09a4fb57d5fe92a80250311f1e") (:revdesc . "879144ca7e9b") (:authors ("Chaoji Li" . "lichaojiATgmailDOTcom") ("Anand Reddy Pandikunta" . "anand21nandaATgmailDOTcom")) (:maintainers ("Chaoji Li" . "lichaojiATgmailDOTcom") ("Anand Reddy Pandikunta" . "anand21nandaATgmailDOTcom")) (:maintainer "Chaoji Li" . "lichaojiATgmailDOTcom"))])
 (realgud . [(1 5 1) ((load-relative (1 3 1)) (loc-changes (1 2)) (test-simple (1 3 0)) (emacs (25))) "A modular front-end for interacting with external debuggers" tar ((:url . "https://github.com/realgud/realgud") (:commit . "53938f04d5252677484e5c48513e1c138aafc756") (:revdesc . "53938f04d525") (:keywords "debugger" "gdb" "python" "perl" "go" "bash" "zsh" "bashdb" "zshdb" "remake" "trepan" "perldb" "pdb") (:authors ("Rocky Bernstein" . "rocky@gnu.org")) (:maintainers ("Rocky Bernstein" . "rocky@gnu.org")) (:maintainer "Rocky Bernstein" . "rocky@gnu.org"))])
 (realgud-lldb . [(1 0 2) ((load-relative (1 3 1)) (realgud (1 5 0)) (emacs (25))) "Realgud front-end to lldb" tar ((:url . "https://github.com/realgud/realgud-lldb") (:commit . "f2f77d6ddfa42430ead400eaf81c605c3a04dead") (:revdesc . "f2f77d6ddfa4") (:authors ("Rocky Bernstein" . "rocky@gnu.org")) (:maintainers ("Rocky Bernstein" . "rocky@gnu.org")) (:maintainer "Rocky Bernstein" . "rocky@gnu.org"))])
 (realgud-pry . [(1 0 0) ((realgud (1 4 5)) (load-relative (1 2)) (cl-lib (0 5)) (emacs (24))) "Realgud front-end to the Ruby pry debugger" tar ((:url . "https://github.com/realgud/realgud-pry") (:commit . "500bef62369ef1ad876afd99db383c23196e1355") (:revdesc . "500bef62369e"))])
 (realgud-trepan-ni . [(1 0 1) ((load-relative (1 2)) (realgud (1 5 0)) (cl-lib (0 5)) (emacs (25))) "Realgud front-end to trepan-ni" tar ((:url . "https://github.com/realgud/realgud-trepan-ni") (:commit . "ce008862ea33de0a9e6c06099b9ddff8f620f2e4") (:revdesc . "ce008862ea33") (:authors ("Rocky Bernstein" . "rocky@gnu.org")) (:maintainers ("Rocky Bernstein" . "rocky@gnu.org")) (:maintainer "Rocky Bernstein" . "rocky@gnu.org"))])
 (reaper . [(1 4 0) ((emacs (26 2))) "Interact with Harvest time tracking app" tar ((:url . "https://github.com/xendk/reaper") (:commit . "c78a06b0d10c08ec4090ba61b964022e54415aa5") (:revdesc . "c78a06b0d10c") (:keywords "tools") (:authors ("Thomas Fini Hansen" . "xen@xen.dk")) (:maintainers ("Thomas Fini Hansen" . "xen@xen.dk")) (:maintainer "Thomas Fini Hansen" . "xen@xen.dk"))])
 (reason-mode . [(0 3 0) ((emacs (24 0))) "A major emacs mode for editing Reason (based on rust-mode)" tar ((:url . "https://github.com/reasonml-editor/reason-mode") (:commit . "6b53815a0405be1f364a082d22fe5c900409a01a") (:revdesc . "0.3.0-0-g6b53815a0405") (:keywords "languages" "ocaml"))])
 (reazon . [(0 4 1) ((emacs (26))) "MiniKanren for Emacs" tar ((:url . "https://github.com/nickdrozd/reazon") (:commit . "21a4218538eee90af66c20519457efeb5b319e22") (:revdesc . "21a4218538ee") (:keywords "languages" "extensions" "lisp") (:authors ("Nick Drozd" . "nicholasdrozd@gmail.com")) (:maintainers ("Nick Drozd" . "nicholasdrozd@gmail.com")) (:maintainer "Nick Drozd" . "nicholasdrozd@gmail.com"))])
 (rebecca-theme . [(1 2 1) ((emacs (24))) "Rebecca Purple Theme" tar ((:url . "https://github.com/vic/rebecca-theme") (:commit . "239115183e0a354ccd5c2cb299893b558fbde05c") (:revdesc . "239115183e0a") (:keywords "theme" "dark") (:authors ("vic" . "vborja@apache.org")) (:maintainers ("vic" . "vborja@apache.org")) (:maintainer "vic" . "vborja@apache.org"))])
 (recently . [(0 2 0) ((cl-lib (0 5)) (emacs (24))) "Track recently opened files to visit them again" tar ((:url . "https://github.com/10sr/recently-el") (:commit . "94b31f6bf1dab6af942948fec975e37424938a62") (:revdesc . "94b31f6bf1da") (:keywords "utility" "files") (:authors ("10sr" . "8.slashes[at]gmail[dot]com")) (:maintainers ("10sr" . "8.slashes[at]gmail[dot]com")) (:maintainer "10sr" . "8.slashes[at]gmail[dot]com"))])
 (recover-buffers . [(1 0) nil "Revisit all buffers from an auto-save file" tar ((:url . "https://github.com/tripleee/recover-buffers") (:commit . "a1db7f084977697081da3497628e3514e032b966") (:revdesc . "1.0-0-ga1db7f084977") (:authors ("era eriksson" . "http://www.iki.fi/era")) (:maintainers ("era eriksson" . "http://www.iki.fi/era")) (:maintainer "era eriksson" . "http://www.iki.fi/era"))])
 (rect+ . [(1 0 10) nil "Extensions to rect.el" tar ((:url . "https://github.com/mhayashi1120/Emacs-rectplus") (:commit . "299b742faa0bc4448e0d5fe9cb98ab1eb93b8dcc") (:revdesc . "299b742faa0b") (:keywords "extensions" "data" "tools") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (rectangle-utils . [(1 1) ((emacs (24)) (cl-lib (0 5))) "Some useful rectangle functions" tar ((:url . "https://github.com/thierryvolpiatto/rectangle-utils") (:commit . "6fe38fdd48ef5305a908b94a043a966ac3f2053a") (:revdesc . "v1.1-0-g6fe38fdd48ef") (:authors ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainers ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainer "Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))])
 (recur . [(0 1 0) ((emacs (24 3))) "Tail call optimization" tar ((:url . "https://github.com/ROCKTAKEY/recur") (:commit . "46d213633d5325113e857b1c212f2b2937cf29d5") (:revdesc . "46d213633d53") (:keywords "lisp") (:authors ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainers ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainer "ROCKTAKEY" . "rocktakey@gmail.com"))])
 (recursion-indicator . [(1 1) ((emacs (27 1)) (compat (29 1 4 4))) "Recursion indicator" tar ((:url . "https://github.com/minad/recursion-indicator") (:commit . "548838df2ef15fdd8e9d904d0a74182297e3383f") (:revdesc . "548838df2ef1") (:keywords "convenience") (:authors ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainers ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de"))])
 (redpen-paragraph . [(0 42) ((emacs (24)) (cl-lib (0 5)) (json (1 4))) "RedPen interface" tar ((:url . "https://github.com/karronoli/redpen-paragraph.el") (:commit . "f9569bc8e2993dea0f83cba5738a35ce32f82424") (:revdesc . "f9569bc8e299") (:keywords "document" "proofreading" "help"))])
 (redprl . [(0 1 0) ((emacs (24 3))) "Major mode for editing RedPRL proofs and interacting with RedPRL" tar ((:url . "https://github.com/RedPRL/sml-redprl") (:commit . "d06d39486348a74981b2c4c4c2ed3af95b01d5ca") (:revdesc . "d06d39486348") (:keywords "languages") (:authors ("Jonathan Sterling" . "jon@jonmsterling.com")) (:maintainers ("Jonathan Sterling" . "jon@jonmsterling.com")) (:maintainer "Jonathan Sterling" . "jon@jonmsterling.com"))])
 (redtick . [(0 1 1) ((emacs (24))) "Smallest pomodoro timer (1 char)" tar ((:url . "https://github.com/ferfebles/redtick") (:commit . "14e3a07c229d1f660ca5129d6e8a52a8c68db94d") (:revdesc . "14e3a07c229d") (:keywords "pomodoro" "timer"))])
 (refine . [(0 3) ((emacs (24 3)) (s (1 11 0)) (dash (2 12 0)) (list-utils (0 4 4)) (loop (1 2))) "Interactive value editing" tar ((:url . "https://github.com/Wilfred/refine") (:commit . "9760e56ab849a4827e6c9425fdef6f5a7784c967") (:revdesc . "9760e56ab849") (:keywords "convenience") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (reformatter . [(0 7) ((emacs (24 3))) "Define commands which run reformatters on the current buffer" tar ((:url . "https://github.com/purcell/emacs-reformatter") (:commit . "bfe3f1c6ece952d39921db16f601123bdd1748ab") (:revdesc . "bfe3f1c6ece9") (:keywords "convenience" "tools") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (region-convert . [(1 0 0) ((emacs (24 3))) "Convert string in region by Lisp function" tar ((:url . "https://github.com/zonuexe/region-convert.el") (:commit . "cb3ab0417d7b74e5edd34bf23a70737fc7bf1d3a") (:revdesc . "cb3ab0417d7b") (:keywords "region" "convenience") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (region-state . [(0 1) nil "Show the number of chars/lines or rows/columns in the region" tar ((:url . "https://github.com/xuchunyang/region-state.el") (:commit . "549c5f19e828f9dba3de611b40eba31ae96b0d1c") (:revdesc . "549c5f19e828") (:keywords "convenience") (:authors ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainers ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainer "Chunyang Xu" . "mail@xuchunyang.me"))])
 (register-quicknav . [(0 4 3) ((emacs (25 3))) "Quickly jump to next/previous register" tar ((:url . "https://schlomp.space/tastytea/register-quicknav.git") (:commit . "e30883a7085ad1f4e1113dc84f5f2222ac4bcd37") (:revdesc . "0.4.3-0-ge30883a7085a") (:keywords "convenience") (:authors ("tastytea" . "tastytea@tastytea.de")) (:maintainers ("tastytea" . "tastytea@tastytea.de")) (:maintainer "tastytea" . "tastytea@tastytea.de"))])
 (related-files . [(0 3 0) ((emacs (28 2))) "Easily find files related to the current one" tar ((:url . "https://github.com/DamienCassou/related-files") (:commit . "4085ed9c235983e530da24cb1fbe33a5b7928ab3") (:revdesc . "v0.3.0-0-g4085ed9c2359") (:keywords "tools") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (repeatable-motion . [(0 2) ((emacs (24))) "Make repeatable versions of motions" tar ((:url . "https://github.com/willghatch/emacs-repeatable-motion") (:commit . "e664b0a4a3e39c4085378a28b5136b349a0afb22") (:revdesc . "e664b0a4a3e3") (:keywords "motion" "repeatable") (:authors ("William Hatch" . "willghatch@gmail.com")) (:maintainers ("William Hatch" . "willghatch@gmail.com")) (:maintainer "William Hatch" . "willghatch@gmail.com"))])
 (repl-toggle . [(0 7 2) ((fullframe (0 0 5))) "Switch to/from repl buffer for current major-mode" tar ((:url . "https://git.sr.ht/~tomterl/repl-toggle") (:commit . "68ffba6888bf626e5175fae3b035d98d73ab4151") (:revdesc . "68ffba6888bf") (:keywords "repl" "buffers" "toggle") (:authors ("Tom Regner" . "tom@goochesa.de")) (:maintainers ("Tom Regner" . "tom@goochesa.de")) (:maintainer "Tom Regner" . "tom@goochesa.de"))])
 (replace-symbol . [(1 1) nil "Rename symbols in expressions or buffers" tar ((:url . "https://github.com/bmastenbrook/replace-symbol-el") (:commit . "baf949e528aee1881f455f9c84e67718bedcb3f6") (:revdesc . "v1.1-0-gbaf949e528ae") (:authors ("Brian Mastenbrook" . "brian@mastenbrook.net")) (:maintainers ("Brian Mastenbrook" . "brian@mastenbrook.net")) (:maintainer "Brian Mastenbrook" . "brian@mastenbrook.net"))])
 (replace-with-inflections . [(0 3 2) ((cl-lib (0 5)) (string-inflection (1 0 10)) (inflections (1 1))) "Inflection aware `query-replace'" tar ((:url . "https://github.com/knu/replace-with-inflections.el") (:commit . "c57cfb06752bb17389465890ff0ef58a7dd465d2") (:revdesc . "c57cfb06752b") (:keywords "matching") (:authors ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (repo . [(0 3 0) ((emacs (24 3))) "Running repo from Emacs" tar ((:url . "https://github.com/snogge/repo-el") (:commit . "1572f3ee82eaadc06e741f03e1889281308c79fa") (:revdesc . "0.3.0-0-g1572f3ee82ea") (:keywords "convenience"))])
 (req-package . [(1 2) ((use-package (1 0)) (dash (2 7 0)) (log4e (0 2 0)) (ht (0))) "A use-package wrapper for package runtime dependencies management" tar ((:url . "https://github.com/emacsorphanage/req-package") (:commit . "0c0ac7451149dac6bfda2adfe959d1df1c273de6") (:revdesc . "0c0ac7451149") (:keywords "dotemacs" "startup" "speed" "config" "package") (:authors ("Edward Knyshov" . "edvorg@gmail.com")) (:maintainers ("Edward Knyshov" . "edvorg@gmail.com")) (:maintainer "Edward Knyshov" . "edvorg@gmail.com"))])
 (request . [(0 3 2) ((emacs (24 4))) "Compatible layer for URL request in Emacs" tar ((:url . "https://github.com/tkf/emacs-request") (:commit . "22efefeaa394f6deef957818f5c5332061c88d1c") (:revdesc . "22efefeaa394") (:authors ("Takafumi Arakaki" . "aka.tkfatgmail.com")) (:maintainers ("Takafumi Arakaki" . "aka.tkfatgmail.com")) (:maintainer "Takafumi Arakaki" . "aka.tkfatgmail.com"))])
 (request-deferred . [(0 3 2) ((deferred (0 3 1)) (request (0 2 0))) "Wrap request.el by deferred" tar ((:url . "https://github.com/tkf/emacs-request") (:commit . "22efefeaa394f6deef957818f5c5332061c88d1c") (:revdesc . "22efefeaa394") (:authors ("Takafumi Arakaki" . "aka.tkfatgmail.com")) (:maintainers ("Takafumi Arakaki" . "aka.tkfatgmail.com")) (:maintainer "Takafumi Arakaki" . "aka.tkfatgmail.com"))])
 (requirejs . [(1 1) ((js2-mode (20150713)) (popup (0 5 3)) (s (1 9 0)) (cl-lib (0 5))) "Requirejs import manipulation and source traversal" tar ((:url . "https://github.com/joeheyming/requirejs-emacs") (:commit . "7d73453653b6b97cca59fcde8d529b5a228fbc01") (:revdesc . "7d73453653b6") (:keywords "javascript" "requirejs") (:authors ("Joe Heyming" . "joeheyming@gmail.com")) (:maintainers ("Joe Heyming" . "joeheyming@gmail.com")) (:maintainer "Joe Heyming" . "joeheyming@gmail.com"))])
 (resize-window . [(0 7) ((emacs (24)) (cl-lib (0 5))) "Easily resize windows" tar ((:url . "https://github.com/dpsutton/resize-window") (:commit . "dcbbd30f4f4435070a66a22c5a169b752ca9f904") (:revdesc . "dcbbd30f4f44") (:keywords "window" "resize") (:authors ("Dan Sutton" . "danielsutton01@gmail.com")) (:maintainers ("Dan Sutton" . "danielsutton01@gmail.com")) (:maintainer "Dan Sutton" . "danielsutton01@gmail.com"))])
 (restart-emacs . [(0 1 1) nil "Restart emacs from within emacs" tar ((:url . "https://github.com/iqbalansari/restart-emacs") (:commit . "e9292fe88d8be7d0ecf9f4f30ed98ffbc6bd689b") (:revdesc . "e9292fe88d8b") (:keywords "convenience") (:authors ("Iqbal Ansari" . "iqbalansari02@yahoo.com")) (:maintainers ("Iqbal Ansari" . "iqbalansari02@yahoo.com")) (:maintainer "Iqbal Ansari" . "iqbalansari02@yahoo.com"))])
 (restclient-test . [(1 0) ((emacs (26 1)) (restclient (0))) "Run tests with restclient.el" tar ((:url . "https://github.com/simenheg/restclient-test.el") (:commit . "5a364b93779eb3b4566dd6d843d7637983fcc949") (:revdesc . "5a364b93779e") (:authors ("Simen Heggestøyl" . "simenheg@runbox.com")) (:maintainers ("Simen Heggestøyl" . "simenheg@runbox.com")) (:maintainer "Simen Heggestøyl" . "simenheg@runbox.com"))])
 (retraction-viewer . [(1 0 6) ((emacs (26 1)) (plz (0 7))) "View retraction information for current citation" tar ((:url . "https://git.sr.ht/~swflint/retraction-viewer") (:commit . "e8ab96e5a95a93849b912e2684b9776c685ac4bd") (:revdesc . "v1.0.6-0-ge8ab96e5a95a") (:keywords "bib" "tex" "data") (:authors ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainers ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainer "Samuel W. Flint" . "me@samuelwflint.com"))])
 (retraction-viewer-section . [(1 0 6) ((emacs (25 1)) (retraction-viewer (1 0 2)) (universal-sidecar (1 5 1))) "Show retraction information in the universal-sidecar" tar ((:url . "https://git.sr.ht/~swflint/retraction-viewer") (:commit . "e8ab96e5a95a93849b912e2684b9776c685ac4bd") (:revdesc . "v1.0.6-0-ge8ab96e5a95a") (:keywords "bib" "tex") (:authors ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainers ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainer "Samuel W. Flint" . "me@samuelwflint.com"))])
 (revbufs . [(1 2) nil "[No description available]" tar ((:url . "https://github.com/tychoish/revbufs") (:commit . "74dc21949fe0f910e92b8e4e85318c8fb0b7c86a") (:revdesc . "1.2-0-g74dc21949fe0") (:authors ("Neil Van Dyke" . "neil@neilvandyke.org")) (:maintainers ("Neil Van Dyke" . "neil@neilvandyke.org")) (:maintainer "Neil Van Dyke" . "neil@neilvandyke.org"))])
 (reveal-in-folder . [(0 1 2) ((emacs (24 3)) (f (0 20 0)) (s (1 12 0))) "Reveal current file in folder" tar ((:url . "https://github.com/jcs-elpa/reveal-in-folder") (:commit . "f62be2d11c8a9182cf84f0efe7ed054cc304262d") (:revdesc . "f62be2d11c8a") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (reveal-in-osx-finder . [(0 3 3) nil "Reveal file associated with buffer in OS X Finder" tar ((:url . "https://github.com/kaz-yos/reveal-in-osx-finder") (:commit . "5710e5936e47139a610ec9a06899f72e77ddc7bc") (:revdesc . "5710e5936e47") (:keywords "os x" "finder"))])
 (reverse-im . [(0 0 8) ((emacs (25 1)) (seq (2 23))) "Reverse mapping for non-default system layouts" tar ((:url . "https://github.com/a13/reverse-im.el") (:commit . "41f47d5ccab77d42cc2e1a89a09d0dc2410e9eb4") (:revdesc . "41f47d5ccab7") (:keywords "i18n"))])
 (reverse-theme . [(0 3) nil "Reverse theme for Emacs" tar ((:url . "https://github.com/emacsorphanage/reverse-theme") (:commit . "3105c950bcb51c662c79b59ca102ef662c2b0be0") (:revdesc . "3105c950bcb5") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (rfc-mode . [(1 4 2) ((emacs (25 1))) "RFC document browser and viewer" tar ((:url . "https://github.com/galdor/rfc-mode") (:commit . "ab09db78d9d1baa4da4f926930833598e1e978ce") (:revdesc . "v1.4.2-0-gab09db78d9d1") (:authors ("Nicolas Martyanoff" . "nicolas@n16f.net")) (:maintainers ("Nicolas Martyanoff" . "nicolas@n16f.net")) (:maintainer "Nicolas Martyanoff" . "nicolas@n16f.net"))])
 (rg . [(2 3 0) ((emacs (25 1)) (transient (0 3 0)) (wgrep (2 1 10))) "A search tool based on ripgrep" tar ((:url . "https://github.com/dajva/rg.el") (:commit . "9a6bcf7180108a58ed4612aa4e55af13410ac9d0") (:revdesc . "9a6bcf718010") (:keywords "matching" "tools") (:authors ("David Landell" . "david.landell@sunnyhill.email") ("Roland McGrath" . "roland@gnu.org")) (:maintainers ("David Landell" . "david.landell@sunnyhill.email") ("Roland McGrath" . "roland@gnu.org")) (:maintainer "David Landell" . "david.landell@sunnyhill.email"))])
 (rgb . [(2 0 0) ((emacs (24 3))) "RGB control via OpenRGB" tar ((:url . "https://gitlab.com/cwpitts/rgb.el") (:commit . "4aab5a5be16b69b47ef5e67d02782df5e41dbd7b") (:revdesc . "4aab5a5be16b"))])
 (rhq . [(0 7 0) ((emacs (24 4))) "Client for rhq" tar ((:url . "https://github.com/ROCKTAKEY/rhq") (:commit . "80c1d59a66dceb3f9e0af9319720f8e4e4895c2c") (:revdesc . "v0.7.0-0-g80c1d59a66dc") (:keywords "tools" "extensions") (:authors ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainers ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainer "ROCKTAKEY" . "rocktakey@gmail.com"))])
 (rib-mode . [(1 0 2) ((emacs (24))) "RenderMan® Interface Bytestream (RIB) Major Mode" tar ((:url . "https://github.com/blezek/rib-mode") (:commit . "4172e902fd66f235184c0eb6db7fd4a73dbd0866") (:revdesc . "4172e902fd66") (:authors ("Remik Ziemlinski and Daniel Blezek" . "daniel.blezek@gmail.com")) (:maintainers ("Remik Ziemlinski and Daniel Blezek" . "daniel.blezek@gmail.com")) (:maintainer "Remik Ziemlinski and Daniel Blezek" . "daniel.blezek@gmail.com"))])
 (rich-minority . [(1 0 3) ((cl-lib (0 5))) "Clean-up and Beautify the list of minor-modes" tar ((:url . "https://github.com/Malabarba/rich-minority") (:commit . "d33d2e357c8eb0b38624dbc51e8b953b08b0cc98") (:revdesc . "d33d2e357c8e") (:keywords "mode-line" "faces") (:authors ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainers ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com"))])
 (right-click-context . [(0 4 0) ((emacs (24 3)) (popup (0 5)) (ordinal (0 0 1))) "Right Click Context menu" tar ((:url . "https://github.com/zonuexe/right-click-context") (:commit . "c3c9d36ffbc9fb2bc7c2c4b75291dbcdb1c5f531") (:revdesc . "c3c9d36ffbc9") (:keywords "mouse" "menu" "rightclick") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (rigid-tabs . [(1 0) ((emacs (24 3))) "Rigidify and adjust the visual alignment of TABs" tar ((:url . "https://gitlab.com/wavexx/rigid-tabs.el") (:commit . "c7c6b726806df7e8cb25a41b213a207850c91cb7") (:revdesc . "v1.0-0-gc7c6b726806d") (:keywords "diff" "whitespace" "version control" "magit") (:authors ("Yuri D'Elia" . "wavexx@thregr.org")) (:maintainers ("Yuri D'Elia" . "wavexx@thregr.org")) (:maintainer "Yuri D'Elia" . "wavexx@thregr.org"))])
 (rii . [(1 0 0) ((emacs (24 3))) "Reversible input interface for multiple input" tar ((:url . "https://github.com/ROCKTAKEY/rii") (:commit . "9df603a5c63ae38ec776e27dc93d3618e2b0fabe") (:revdesc . "9df603a5c63a") (:keywords "extensions" "tools") (:authors ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainers ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainer "ROCKTAKEY" . "rocktakey@gmail.com"))])
 (rime . [(1 0 5) ((emacs (26 3)) (dash (2 17 0)) (cl-lib (0 6 1)) (popup (0 5 3)) (posframe (0 1 0))) "Rime input method" tar ((:url . "https://github.com/DogLooksGood/emacs-rime") (:commit . "b93e761209211f8a6de1bb4b8f1d36651564a8d9") (:revdesc . "b93e76120921") (:keywords "convenience" "input-method"))])
 (rinari . [(2 11) ((ruby-mode (1 0)) (inf-ruby (2 2 5)) (ruby-compilation (0 16)) (jump (2 0))) "Rinari Is Not A Rails IDE" tar ((:url . "https://github.com/eschulte/rinari") (:commit . "e2ed2fa55ac3435a86b1cf6a4f2d29aebc309135") (:revdesc . "e2ed2fa55ac3") (:keywords "ruby" "rails" "project" "convenience" "web"))])
 (ripgrep . [(0 4 0) nil "Front-end for ripgrep, a command line search tool" tar ((:url . "https://github.com/nlamirault/ripgrep.el") (:commit . "73595f1364f2117db49e1e4a49290bd6d430e345") (:revdesc . "73595f1364f2") (:keywords "ripgrep" "ack" "pt" "ag" "sift" "grep" "search") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (rivet-mode . [(4 1 0) ((emacs (24)) (web-mode (16))) "A minor mode for editing Apache Rivet files" tar ((:url . "https://gitlab.com/thornjad/rivet-mode") (:commit . "6cf58cf04fee933113857af07414b3f27c24b505") (:revdesc . "6cf58cf04fee"))])
 (rjsx-mode . [(0 5 0) ((emacs (24 4)) (js2-mode (20170504))) "Real support for JSX" tar ((:url . "https://github.com/felipeochoa/rjsx-mode") (:commit . "0061587a06cdc2579a8d0e90863498d96bf982d8") (:revdesc . "0061587a06cd") (:keywords "languages") (:authors ("Felipe Ochoa" . "felipe@fov.space")) (:maintainers ("Felipe Ochoa" . "felipe@fov.space")) (:maintainer "Felipe Ochoa" . "felipe@fov.space"))])
 (robe . [(0 8 6) ((inf-ruby (2 5 1)) (emacs (25 1))) "Code navigation, documentation lookup and completion for Ruby" tar ((:url . "https://github.com/dgutov/robe") (:commit . "43a85c2eb6e52f4e684919210dd84d67289938c1") (:revdesc . "43a85c2eb6e5") (:keywords "ruby" "convenience" "rails"))])
 (robot-log . [(0 1 4) ((emacs (28 1))) "Major mode for viewing RobotFramework debug log files" tar ((:url . "https://git.sr.ht/~apteryx/emacs-robot-log") (:commit . "26da47597aa97be9649cb60f4da6d94d47d0c0ac") (:revdesc . "0.1.4-0-g26da47597aa9") (:keywords "convenience" "files"))])
 (robot-mode . [(0 8 0) ((emacs (26 1))) "Major-mode for Robot Framework files" tar ((:url . "https://github.com/kopoli/robot-mode") (:commit . "cb12e5adcba3379a67483e268229c152e0a8405f") (:revdesc . "v0.8.0-0-gcb12e5adcba3") (:keywords "languages" "files") (:authors ("Kalle Kankare" . "kalle.kankare@iki.fi")) (:maintainers ("Kalle Kankare" . "kalle.kankare@iki.fi")) (:maintainer "Kalle Kankare" . "kalle.kankare@iki.fi"))])
 (robots-txt-mode . [(0 0 9) nil "Major mode for editing robots.txt" tar ((:url . "https://github.com/emacs-php/robots-txt-mode") (:commit . "8bf67285a25a6756607354d184e36583f2847e7d") (:revdesc . "8bf67285a25a") (:keywords "languages" "comm" "web") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (roguel-ike . [(0 1 2) ((popup (0 5 0))) "A coffee-break roguelike" tar ((:url . "https://github.com/stevenremot/roguel-ike") (:commit . "4f3fe2bce0394f7f00201410d15c72847bd35b2e") (:revdesc . "4f3fe2bce039"))])
 (rom-party . [(0 1 0) ((emacs (28)) (dash (2 17 0)) (f (0 2 0)) (s (1 12 0)) (ht (2 3)) (extmap (1 3)) (compat (29 1 4 4)) (async (1 9 7))) "Bomb Party... in Emacs" tar ((:url . "https://github.com/LaurenceWarne/rom-party.el") (:commit . "ba72981a8e6a07896da45e5ac31ee943f881fc7f") (:revdesc . "0.1.0-0-gba72981a8e6a"))])
 (rope-read-mode . [(0 3 4) nil "Rearrange lines to read text smoothly" tar ((:url . "https://gitlab.com/marcowahl/rope-read-mode") (:commit . "71e475ab35555e0a1eca26d73acf1ced911e422e") (:revdesc . "0.3.4-0-g71e475ab3555") (:keywords "reading" "convenience" "chill") (:authors ("Marco Wahl" . "marcowahlsoft@gmail.com")) (:maintainers ("Marco Wahl" . "marcowahlsoft@gmail.com")) (:maintainer "Marco Wahl" . "marcowahlsoft@gmail.com"))])
 (rspec-mode . [(1 11) ((ruby-mode (1 0)) (cl-lib (0 4))) "Enhance ruby-mode for RSpec" tar ((:url . "https://github.com/pezra/rspec-mode") (:commit . "e289e52ec4b3aa1caf35957d721e5568eca2a3bb") (:revdesc . "e289e52ec4b3") (:keywords "rspec" "ruby"))])
 (rtags . [(3 23) nil "A front-end for rtags" tar ((:url . "https://github.com/Andersbakken/rtags") (:commit . "7169ed577d676690a3c6f0025b54e8477d80eacf") (:revdesc . "v3.23-0-g7169ed577d67") (:authors ("Jan Erik Hanssen" . "jhanssen@gmail.com") ("Anders Bakken" . "agbakken@gmail.com")) (:maintainers ("Jan Erik Hanssen" . "jhanssen@gmail.com") ("Anders Bakken" . "agbakken@gmail.com")) (:maintainer "Jan Erik Hanssen" . "jhanssen@gmail.com"))])
 (rubik . [(1 2) ((cl-lib (0)) (calc (0)) (emacs (25 3))) "Rubik's Cube" tar ((:url . "https://github.com/Kurvivor19/rubik-mode") (:commit . "7ec955639865ca8e99a941843e19b12be5015a47") (:revdesc . "7ec955639865") (:keywords "games") (:authors ("Ivan 'Kurvivor' Truskov" . "trus19@gmail.com")) (:maintainers ("Ivan 'Kurvivor' Truskov" . "trus19@gmail.com")) (:maintainer "Ivan 'Kurvivor' Truskov" . "trus19@gmail.com"))])
 (rubocop . [(0 6 0) ((emacs (24))) "An Emacs interface for RuboCop" tar ((:url . "https://github.com/rubocop/rubocop-emacs") (:commit . "608a3c1dccab9a3af467ce75d94dedfbfd37b21d") (:revdesc . "608a3c1dccab") (:keywords "project" "convenience"))])
 (rubocopfmt . [(0 5 1) ((cl-lib (0 5))) "Minor-mode to format Ruby code with RuboCop on save" tar ((:url . "https://github.com/jimeh/rubocopfmt.el") (:commit . "b180786c007e6f4c2f2a9673a13fb0651d012f76") (:revdesc . "0.5.1-0-gb180786c007e") (:keywords "convenience" "wp" "edit" "ruby" "rubocop"))])
 (ruby-compilation . [(2 11) ((inf-ruby (2 2 1))) "Run a ruby process in a compilation buffer" tar ((:url . "https://github.com/eschulte/rinari") (:commit . "e2ed2fa55ac3435a86b1cf6a4f2d29aebc309135") (:revdesc . "e2ed2fa55ac3") (:keywords "test" "convenience"))])
 (ruby-electric . [(2 3 3) nil "Minor mode for electrically editing ruby code" tar ((:url . "https://github.com/ruby/elisp-ruby-electric") (:commit . "f2323cd9b5df3b34aa9810ba8109502824925d23") (:revdesc . "f2323cd9b5df") (:keywords "languages" "ruby") (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (ruby-end . [(0 4 1) nil "Automatic insertion of end blocks for Ruby" tar ((:url . "https://github.com/rejeep/ruby-end.el") (:commit . "648b81af136a581bcef387744d93c011d9cdf54b") (:revdesc . "648b81af136a") (:keywords "speed" "convenience" "ruby") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (ruby-hash-syntax . [(0 7) ((emacs (24 1))) "Toggle ruby hash syntax between => and 1.9+ styles" tar ((:url . "https://github.com/purcell/ruby-hash-syntax") (:commit . "d458fb5891e0da85271b1cba3ee0ee69ea66a374") (:revdesc . "d458fb5891e0") (:keywords "languages") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (ruby-test-mode . [(1 0) nil "Minor mode for Behaviour and Test Driven" tar ((:url . "https://github.com/ruby-test-mode/ruby-test-mode") (:commit . "7d3c04b60721665af93ffb4abc2a7b3191926431") (:revdesc . "7d3c04b60721") (:keywords "ruby" "unit" "test" "rspec") (:authors ("Roman Scherer" . "roman.scherer@gmx.de") ("Caspar Florian Ebeling" . "florian.ebeling@gmail.com")) (:maintainers ("Roman Scherer" . "roman.scherer@gmx.de")) (:maintainer "Roman Scherer" . "roman.scherer@gmx.de"))])
 (ruby-tools . [(0 1 2) nil "Collection of handy functions for ruby-mode" tar ((:url . "https://github.com/rejeep/ruby-tools.el") (:commit . "6e7fb376085bfa7010ecd3dfad63adacc6e2b4ac") (:revdesc . "6e7fb376085b") (:keywords "speed" "convenience" "ruby") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (rufo . [(0 3 0) ((emacs (24 3))) "Use rufo to automatically format ruby files" tar ((:url . "https://github.com/danielma/rufo.el") (:commit . "4e7413fafd0320f30190ae9835ab021cf7a9ebdc") (:revdesc . "4e7413fafd03") (:authors ("Daniel Ma and contributors" . "danielhgma@gmail.com")) (:maintainers ("Daniel Ma and contributors" . "danielhgma@gmail.com")) (:maintainer "Daniel Ma and contributors" . "danielhgma@gmail.com"))])
 (ruled-switch-buffer . [(0 1 0) ((emacs (24 3))) "Rule based buffer switching" tar ((:url . "https://github.com/kzkn/ruled-switch-buffer") (:commit . "99b53f7679e3eb868e4b4585085bbed102e5fce7") (:revdesc . "99b53f7679e3") (:keywords "convenience") (:authors ("Kazuki Nishikawa" . "kzkn@hey.com")) (:maintainers ("Kazuki Nishikawa" . "kzkn@hey.com")) (:maintainer "Kazuki Nishikawa" . "kzkn@hey.com"))])
 (run-command . [(1 0 0) ((emacs (27 1))) "Run an external command from a context-dependent list" tar ((:url . "https://github.com/bard/emacs-run-command") (:commit . "e44bc5fb9712303150906f05ce7dd41c8c184aea") (:revdesc . "e44bc5fb9712") (:keywords "processes") (:authors ("Massimiliano Mirra" . "hyperstruct@gmail.com")) (:maintainers ("Massimiliano Mirra" . "hyperstruct@gmail.com")) (:maintainer "Massimiliano Mirra" . "hyperstruct@gmail.com"))])
 (runner . [(1 8) nil "Improved \"open with\" suggestions for dired" tar ((:url . "https://github.com/thamer/runner") (:commit . "a211d57ddc600410d07a8b534920ba905b093d87") (:revdesc . "a211d57ddc60") (:keywords "shell command" "dired" "file extension" "open with") (:authors ("Thamer Mahmoud" . "thamer.mahmoud@gmail.com")) (:maintainers ("Thamer Mahmoud" . "thamer.mahmoud@gmail.com")) (:maintainer "Thamer Mahmoud" . "thamer.mahmoud@gmail.com"))])
 (russian-holidays . [(0 4) nil "Russian holidays for the calendar" tar ((:url . "https://github.com/grafov/russian-holidays") (:commit . "b285a30f29d85c48e3ea4eb93972d34a090c167b") (:revdesc . "b285a30f29d8") (:authors ("Alexander I.Grafov" . "siberian@laika.name")) (:maintainers ("Alexander I.Grafov" . "siberian@laika.name")) (:maintainer "Alexander I.Grafov" . "siberian@laika.name"))])
 (russian-techwriter . [(1 0 0) nil "Input methods for Russian technical writers" tar ((:url . "https://github.com/dunmaksim/emacs-russian-techwriter-input-method") (:commit . "1d86134d04ecf2305969c7546ead7ad425cd7243") (:revdesc . "1d86134d04ec") (:keywords "multilingual" "input method" "cyrillic" "i18n") (:authors ("Maxim Dunaevskii" . "dunmaksim@yandex.ru")))])
 (rust-mode . [(1 0 6) ((emacs (25 1))) "A major-mode for editing Rust source code" tar ((:url . "https://github.com/rust-lang/rust-mode") (:commit . "527f8ff2b727d1c027965491ac88230bf2af24ed") (:revdesc . "1.0.6-0-g527f8ff2b727") (:keywords "languages") (:authors ("Mozilla" . "rust-mode@noreply.github.com")) (:maintainers ("Mozilla" . "rust-mode@noreply.github.com")) (:maintainer "Mozilla" . "rust-mode@noreply.github.com"))])
 (rust-playground . [(0 3) ((emacs (24 3))) "Local Rust playground for short code snippets" tar ((:url . "https://github.com/grafov/rust-playground") (:commit . "092c8b11d62dea23953a004744833092bac85fe1") (:revdesc . "092c8b11d62d") (:keywords "tools" "rust") (:authors ("Alexander I.Grafov + all the contributors" . "grafov@gmail.com")) (:maintainers ("Alexander I.Grafov + all the contributors" . "grafov@gmail.com")) (:maintainer "Alexander I.Grafov + all the contributors" . "grafov@gmail.com"))])
 (rustic . [(3 5) ((emacs (26 1)) (rust-mode (1 0 6)) (dash (2 13 0)) (f (0 18 2)) (let-alist (1 0 4)) (markdown-mode (2 3)) (project (0 3 0)) (s (1 10 0)) (spinner (1 7 3)) (xterm-color (1 6)) (flycheck (34 0))) "Rust development environment" tar ((:url . "https://github.com/emacs-rustic/rustic") (:commit . "d765680373234a6c231acf20c76b07422afcfdf9") (:revdesc . "3.5-0-gd76568037323") (:keywords "languages"))])
 (rvm . [(1 4 2) nil "Emacs integration for rvm" tar ((:url . "https://github.com/senny/rvm.el") (:commit . "16617c1fc7c0513e514cd658a93b5e5be2ff618f") (:revdesc . "16617c1fc7c0") (:keywords "ruby" "rvm") (:authors ("Yves Senn" . "yves.senn@gmx.ch")) (:maintainers ("Yves Senn" . "yves.senn@gmx.ch")) (:maintainer "Yves Senn" . "yves.senn@gmx.ch"))])
 (s . [(1 13 0) nil "The long lost Emacs string manipulation library" tar ((:url . "https://github.com/magnars/s.el") (:commit . "4d7d83122850cf70dc60662a73124f0be41ad186") (:revdesc . "4d7d83122850") (:keywords "strings") (:authors ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainer "Jason Milkins" . "jasonm23@gmail.com"))])
 (sackspace . [(0 8 2) nil "A better backspace" tar ((:url . "https://github.com/cofi/sackspace.el") (:commit . "fd0480eaaf6d3d11fd30ac5feb2da2f4f7572708") (:revdesc . "fd0480eaaf6d") (:keywords "delete" "convenience") (:authors ("Michael Markert" . "markert.michael@googlemail.com")) (:maintainers ("Michael Markert" . "markert.michael@googlemail.com")) (:maintainer "Michael Markert" . "markert.michael@googlemail.com"))])
 (sage-shell-mode . [(0 3) ((cl-lib (0 5)) (emacs (24 1)) (let-alist (1 0 4)) (deferred (0 4 0))) "A front-end for Sage Math" tar ((:url . "https://github.com/sagemath/sage-shell-mode") (:commit . "e8bc089e8dfd76f688160e2ac77aee985afeade7") (:revdesc . "e8bc089e8dfd") (:keywords "sage" "math") (:authors ("Sho Takemori" . "stakemorii@gmail.com")) (:maintainers ("Sho Takemori" . "stakemorii@gmail.com")) (:maintainer "Sho Takemori" . "stakemorii@gmail.com"))])
 (sakura-theme . [(1 0 1) nil "Filled with cherry blossoms" tar ((:url . "https://github.com/emacsfodder/emacs-theme-sakura") (:commit . "d78648632a94dd5354d2fed0f94fcb7aece29132") (:revdesc . "d78648632a94"))])
 (salesforce-utils . [(1 0) ((cl-lib (0 5))) "Simple utilities for Salesforce" tar ((:url . "https://github.com/grimnebulin/emacs-salesforce") (:commit . "73328baf0fb94ac0d0de645a8f6d42e5ae27f773") (:revdesc . "73328baf0fb9"))])
 (salt-mode . [(0 2) ((emacs (24 4)) (yaml-mode (0 0 12)) (mmm-mode (0 5 4)) (mmm-jinja2 (0 1))) "Major mode for Salt States" tar ((:url . "https://github.com/glynnforrest/salt-mode") (:commit . "6a1fedb4da7181b00f1bebfc88c87dd2f0c58766") (:revdesc . "6a1fedb4da71") (:keywords "languages") (:authors ("Ben Hayden" . "hayden767@gmail.com")) (:maintainers ("Glynn Forrest" . "me@glynnforrest.com")) (:maintainer "Glynn Forrest" . "me@glynnforrest.com"))])
 (sass-mode . [(3 0 18) ((haml-mode (3 0 15))) "Major mode for editing Sass files" tar ((:url . "https://github.com/nex3/sass-mode") (:commit . "26a66e331b507fb420e3bb7d0a6a8fbb04294343") (:revdesc . "26a66e331b50") (:keywords "markup" "language" "css"))])
 (sauron . [(0 10) nil "Track (erc/org/dbus/...) events and react to them" tar ((:url . "https://github.com/djcb/sauron") (:commit . "a9877f0efa9418c41d25002b58d1c2f8c69ec975") (:revdesc . "a9877f0efa94") (:keywords "comm" "frames") (:authors ("Dirk-Jan C. Binnema" . "djcb@djcbsoftware.nl")) (:maintainers ("Dirk-Jan C. Binnema" . "djcb@djcbsoftware.nl")) (:maintainer "Dirk-Jan C. Binnema" . "djcb@djcbsoftware.nl"))])
 (saveplace-pdf-view . [(1 0 7) ((emacs (24 1))) "Save place in pdf-view buffers" tar ((:url . "https://github.com/nicolaisingh/saveplace-pdf-view") (:commit . "70e9ec40565021f4b5d51e4523f4c716183a8eef") (:revdesc . "saveplace-pdf-view-1.0.7-0-g70e9ec405650") (:keywords "files" "convenience") (:authors ("Nicolai Singh" . "nicolaisinghatpm.me")) (:maintainers ("Nicolai Singh" . "nicolaisinghatpm.me")) (:maintainer "Nicolai Singh" . "nicolaisinghatpm.me"))])
 (say-what-im-doing . [(0 2) nil "Dictate what you're doing with text to speech" tar ((:url . "https://github.com/Benaiah/say-what-im-doing") (:commit . "4acc16360a29646040b51db158ba7fdeb711449d") (:revdesc . "4acc16360a29") (:keywords "text to speech" "dumb" "funny"))])
 (sayid . [(0 1 0) ((cider (0 21 0))) "Sayid nREPL middleware client" tar ((:url . "https://github.com/clojure-emacs/sayid") (:commit . "985837897ca6f9bc5f1d1b1414ad15554a60d3b3") (:revdesc . "985837897ca6") (:authors ("Bill Piel" . "bill@billpiel.com")) (:maintainers ("Bill Piel" . "bill@billpiel.com")) (:maintainer "Bill Piel" . "bill@billpiel.com"))])
 (sbt-mode . [(2 0 0) ((emacs (24 4))) "Interactive support for sbt projects" tar ((:url . "https://github.com/hvesalai/emacs-sbt-mode") (:commit . "e658af140547cbef495c33535c7f694a501d318c") (:revdesc . "v2.0.0-0-ge658af140547") (:keywords "languages"))])
 (scad-mode . [(94 0) ((emacs (27 1)) (compat (29 1 4 4))) "A major mode for editing OpenSCAD code" tar ((:url . "https://github.com/openscad/emacs-scad-mode") (:commit . "3c32b141f083c31539bb24700eb0aa23ea55918c") (:revdesc . "3c32b141f083") (:keywords "languages") (:maintainers ("Len Trigg" . "lenbok@gmail.com") ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Len Trigg" . "lenbok@gmail.com"))])
 (scala-mode . [(1 1 0) nil "Major mode for editing Scala" tar ((:url . "https://github.com/hvesalai/emacs-scala-mode") (:commit . "46bb948345f165ebffe6ff3116e36a3b8a3f219d") (:revdesc . "46bb948345f1") (:keywords "languages"))])
 (schrute . [(0 2 2) ((emacs (24 3))) "Help you remember there is a better way to do something" tar ((:url . "https://bitbucket.org/shackra/dwight-k.-schrute") (:commit . "08ab6565fa94f3a8016163fe6f7be1932af1156b") (:revdesc . "08ab6565fa94") (:keywords "convenience") (:authors ("Jorge Araya Navarro" . "elcorreo@deshackra.com")) (:maintainers ("Jorge Araya Navarro" . "elcorreo@deshackra.com")) (:maintainer "Jorge Araya Navarro" . "elcorreo@deshackra.com"))])
 (scpaste . [(0 7 0) ((htmlize (1 39))) "Paste to the web via scp" tar ((:url . "https://git.sr.ht/~technomancy/scpaste") (:commit . "4723c551951c5e86ceaf078846f4f46db38739fe") (:revdesc . "0.7.0-0-g4723c551951c") (:keywords "convenience" "hypermedia"))])
 (scratch . [(1 4) ((emacs (25 1))) "Mode-specific scratch buffers" tar ((:url . "https://codeberg.org/emacs-weirdware/scratch") (:commit . "f000648c9663833a76a8de9b1e78c99a9d698e48") (:revdesc . "f000648c9663") (:keywords "convenience" "tools" "files") (:authors ("Ian Eure" . "ian.eure@gmail.com")) (:maintainers ("Ian Eure" . "ian.eure@gmail.com")) (:maintainer "Ian Eure" . "ian.eure@gmail.com"))])
 (scratch-comment . [(1 0 0) ((emacs (26 1))) "Insert Elisp result as comment in scratch buffer" tar ((:url . "https://github.com/conao3/scratch-comment.el") (:commit . "d62665ecbeb05d1f92761af185736609278ffba2") (:revdesc . "d62665ecbeb0") (:keywords "convenience") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (scrollkeeper . [(0 1 1) ((emacs (25 1))) "Custom scrolling commands with visual guidelines" tar ((:url . "https://github.com/alphapapa/scrollkeeper.el") (:commit . "3c4ac6b6b44686d31c260ee0b19daaee59bdccd6") (:revdesc . "0.1.1-0-g3c4ac6b6b446") (:keywords "convenience") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (scss-mode . [(0 5 0) nil "Major mode for editing SCSS files" tar ((:url . "https://github.com/antonj/scss-mode") (:commit . "d663069667d9b158d56e863b80dd4cc02984e49f") (:revdesc . "d663069667d9") (:keywords "scss" "css" "mode") (:authors ("Anton Johansson - http://antonj.se" . "anton.johansson@gmail.com")) (:maintainers ("Anton Johansson - http://antonj.se" . "anton.johansson@gmail.com")) (:maintainer "Anton Johansson - http://antonj.se" . "anton.johansson@gmail.com"))])
 (sculpture-themes . [(1 5 1) ((emacs (26 1))) "Themes with vivid colors" tar ((:url . "https://github.com/precompute/sculpture-themes") (:commit . "723a3b348e9970e3f85910bdf319925c4f241a7d") (:revdesc . "723a3b348e99") (:authors ("Precompute" . "git@precompute.net")) (:maintainers ("Precompute" . "git@precompute.net")) (:maintainer "Precompute" . "git@precompute.net"))])
 (sdml-mode . [(0 2 0) ((emacs (28 1)) (tree-sitter (0 18 0)) (tree-sitter-indent (0 4))) "Major mode for SDML" tar ((:url . "https://github.com/sdm-lang/emacs-sdml-mode") (:commit . "1f59deffa3186a9eafe3921fdb793549a4629a03") (:revdesc . "v0.2.0-0-g1f59deffa318") (:keywords "languages" "tools") (:authors ("Simon Johnston" . "johnstonskj@gmail.com")) (:maintainers ("Simon Johnston" . "johnstonskj@gmail.com")) (:maintainer "Simon Johnston" . "johnstonskj@gmail.com"))])
 (search-web . [(1 1) nil "Post web search queries using `browse-url'" tar ((:url . "https://github.com/tomoya/search-web.el") (:commit . "c4ae86ac1acfc572b81f3d78764bd9a54034c331") (:revdesc . "c4ae86ac1acf") (:authors ("Tomoya Otake" . "tomoya.ton@gmail.com")) (:maintainers ("Tomoya Otake" . "tomoya.ton@gmail.com")) (:maintainer "Tomoya Otake" . "tomoya.ton@gmail.com"))])
 (searcher . [(0 4 1) ((emacs (25 1)) (dash (2 10)) (f (0 20 0))) "Searcher in pure elisp" tar ((:url . "https://github.com/jcs-elpa/searcher") (:commit . "432d2ea9f7d0ab7274ff2927d26e7adca85be169") (:revdesc . "432d2ea9f7d0") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (secretaria . [(0 2 9) ((emacs (24 4)) (alert (1 2)) (s (1 12)) (f (0 19 0))) "A personal assistant based on org-mode" tar ((:url . "https://gitlab.com/shackra/secretaria") (:commit . "91c56311b48a26aa6ef5a113b0a828e174059b0a") (:revdesc . "91c56311b48a") (:keywords "org" "convenience") (:authors ("Jorge Araya Navarro" . "jorge@esavara.cr")) (:maintainers ("Jorge Araya Navarro" . "jorge@esavara.cr")) (:maintainer "Jorge Araya Navarro" . "jorge@esavara.cr"))])
 (sekka . [(1 8 0) ((cl-lib (0 3)) (concurrent (0 3 1)) (popup (0 5 2))) "A client for Sekka IME server" tar ((:url . "https://github.com/kiyoka/sekka") (:commit . "d1fd5d47aacba723631d5d374169a45ff2051c41") (:revdesc . "v1.8.0-0-gd1fd5d47aacb") (:keywords "ime" "skk" "japanese") (:authors ("Kiyoka Nishiyama" . "kiyoka@sumibi.org")) (:maintainers ("Kiyoka Nishiyama" . "kiyoka@sumibi.org")) (:maintainer "Kiyoka Nishiyama" . "kiyoka@sumibi.org"))])
 (selcand . [(2 0) ((emacs (25 1))) "Select a candidate from a tree of hint characters" tar ((:url . "https://github.com/erjoalgo/selcand") (:commit . "b6fc231a784df570df0f817d34f926f141a65126") (:revdesc . "v2.0-0-gb6fc231a784d") (:keywords "lisp" "completing-read" "prompt" "combinations" "vimium") (:maintainers ("concat \"erjoalgo\" \"@\" \"gmail\" \".com\"" . "")) (:maintainer "concat \"erjoalgo\" \"@\" \"gmail\" \".com\"" . ""))])
 (select-themes . [(0 1 4) nil "Color theme selection with completing-read" tar ((:url . "https://github.com/jasonm23/emacs-select-themes") (:commit . "236f54287519a3ea6dd7b3992d053e4f4ff5d0fe") (:revdesc . "236f54287519") (:authors ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainers ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainer "Jason Milkins" . "jasonm23@gmail.com"))])
 (selected-window-accent-mode . [(0 6 0) ((emacs (25 1)) (visual-fill-column (0 0))) "Accent Selected Window" tar ((:url . "https://github.com/captainflasmr/selected-window-accent-mode") (:commit . "e83efa67c4a9d1935c657a15b4487102cb6655de") (:revdesc . "e83efa67c4a9") (:keywords "convenience") (:authors ("James Dyer" . "captainflasmr@gmail.com")) (:maintainers ("James Dyer" . "captainflasmr@gmail.com")) (:maintainer "James Dyer" . "captainflasmr@gmail.com"))])
 (selectric-mode . [(1 4 2) nil "IBM Selectric mode for Emacs" tar ((:url . "https://github.com/rbanffy/selectric-mode") (:commit . "bb9e66678f34e9bc23624ff6292cf5e7857e8e5f") (:revdesc . "bb9e66678f34") (:keywords "multimedia" "convenience" "typewriter" "selectric") (:authors ("Ricardo Bánffy" . "rbanffy@gmail.com")) (:maintainers ("Ricardo Banffy" . "rbanffy@gmail.com")) (:maintainer "Ricardo Banffy" . "rbanffy@gmail.com"))])
 (selectrum . [(3 1) ((emacs (25 1))) "Easily select item from list" tar ((:url . "https://github.com/radian-software/selectrum") (:commit . "a9ecaa018f249c15fae8e1af5d4df337e846e92f") (:revdesc . "a9ecaa018f24") (:keywords "extensions") (:authors ("Radon Rosborough" . "radon.neon@gmail.com")) (:maintainers ("Radon Rosborough" . "radon.neon@gmail.com")) (:maintainer "Radon Rosborough" . "radon.neon@gmail.com"))])
 (selectrum-prescient . [(6 3 1) ((emacs (25 1)) (prescient (6 1 0)) (selectrum (3 1))) "Prescient.el + Selectrum" tar ((:url . "https://github.com/radian-software/prescient.el") (:commit . "2b8a8b41228bddb2e11eb1c200e98a9edd04797c") (:revdesc . "2b8a8b41228b") (:keywords "extensions") (:authors ("Radian LLC" . "contact+prescient@radian.codes")) (:maintainers ("Radian LLC" . "contact+prescient@radian.codes")) (:maintainer "Radian LLC" . "contact+prescient@radian.codes"))])
 (seml-mode . [(1 6 0) ((emacs (25)) (simple-httpd (1 5)) (htmlize (1 5)) (web-mode (16 0))) "Major-mode for SEML, S-Expression Markup Language, file" tar ((:url . "https://github.com/conao3/seml-mode.el") (:commit . "1f8bda7e5a4a36212f968b462cfc31ce53c6db85") (:revdesc . "1f8bda7e5a4a") (:keywords "lisp" "html") (:authors ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainer "Naoya Yamashita" . "conao3@gmail.com"))])
 (sensei . [(0 43 3) ((emacs (27 1)) (projectile (2 5 0)) (request (0 3 2))) "A client for sensei" tar ((:url . "https://github.com/abailly/sensei") (:commit . "3538990de9ab57154e3da08d10fbd2c6228d87b8") (:revdesc . "3538990de9ab") (:keywords "hypermedia") (:authors ("Arnaud Bailly" . "arnaud@pankzsoft.com")) (:maintainers ("Arnaud Bailly" . "arnaud@pankzsoft.com")) (:maintainer "Arnaud Bailly" . "arnaud@pankzsoft.com"))])
 (separedit . [(0 3 37) ((emacs (25 1)) (dash (2 18)) (edit-indirect (0 1 5))) "Edit comment/string/docstring/code block in separate buffer" tar ((:url . "https://github.com/twlz0ne/separedit.el") (:commit . "91a41ff8044e7cbeb82159f6c595393606e5e744") (:revdesc . "91a41ff8044e") (:keywords "tools" "languages" "docs") (:authors ("Gong Qijian" . "gongqijian@gmail.com")) (:maintainers ("Gong Qijian" . "gongqijian@gmail.com")) (:maintainer "Gong Qijian" . "gongqijian@gmail.com"))])
 (sequential-yank . [(0 1 3) ((emacs (24 4))) "Minor mode to copy and paste strings sequentially" tar ((:url . "https://github.com/knu/sequential-yank.el") (:commit . "3c7f98a842c391b59379566cbf03f143004b26da") (:revdesc . "3c7f98a842c3") (:keywords "killing" "convenience") (:authors ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (seriestracker . [(1 3 1) ((dash (2 12 1)) (transient (0 3 2)) (emacs (27 1))) "Series tracker" tar ((:url . "https://github.com/MaximeWack/seriestracker") (:commit . "49b1e7a822c973c48007dc6461577ee68124ddc8") (:revdesc . "49b1e7a822c9") (:keywords "multimedia") (:authors ("Maxime Wack" . "contactatmaximewackdotcom")) (:maintainers ("Maxime Wack" . "contactatmaximewackdotcom")) (:maintainer "Maxime Wack" . "contactatmaximewackdotcom"))])
 (servant . [(0 3 0) ((s (1 8 0)) (dash (2 2 0)) (f (0 11 0)) (ansi (0 3 0)) (commander (0 5 0)) (epl (0 2)) (shut-up (0 2 1)) (web-server (0 0 1))) "ELPA server written in Emacs Lisp" tar ((:url . "https://github.com/cask/servant") (:commit . "4d2aa8250b54b28e6e7ee4cd5ebd98a33db2c134") (:revdesc . "4d2aa8250b54") (:keywords "elpa" "server") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com") ("Sebastian Wiesner" . "lunaryorn@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com") ("Sebastian Wiesner" . "lunaryorn@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (services . [(1 7) ((cl-lib (0 5))) "Services database access functions" tar ((:url . "https://github.com/davep/services.el") (:commit . "514e4095e8964c4d0f38c4f3ad6c692e86d12faa") (:revdesc . "514e4095e896") (:keywords "convenience" "net" "services") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (sesman . [(0 3 4) ((emacs (25))) "Generic Session Manager" tar ((:url . "https://github.com/vspinu/sesman") (:commit . "3df33018f1c42f09db21cebe39a25b389fe35f02") (:revdesc . "3df33018f1c4") (:keywords "process"))])
 (sexp-move . [(0 2 6) nil "Improved S-Expression Movement" tar ((:url . "https://gitlab.com/elzair/sexp-move") (:commit . "117f7a91ab7c25e438413753e916570122011ce7") (:revdesc . "117f7a91ab7c") (:keywords "sexp") (:authors ("Philip Woods" . "elzairthesorcerer@gmail.com")) (:maintainers ("Philip Woods" . "elzairthesorcerer@gmail.com")) (:maintainer "Philip Woods" . "elzairthesorcerer@gmail.com"))])
 (sexy-monochrome-theme . [(3 1) nil "A sexy dark Emacs >= 24 theme for your sexy code" tar ((:url . "https://github.com/voloyev/sexy-monochrome-theme") (:commit . "f64714a176d9212c9fa82355dd8ec89587ce13f0") (:revdesc . "f64714a176d9") (:keywords "themes") (:authors ("Volodymyr Yevtushenko" . "vol.yevtushenko@ukr.net")) (:maintainers ("Volodymyr Yevtushenko" . "vol.yevtushenko@ukr.net")) (:maintainer "Volodymyr Yevtushenko" . "vol.yevtushenko@ukr.net"))])
 (shackle . [(1 0 4) ((cl-lib (0 5))) "Enforce rules for popups" tar ((:url . "https://depp.brause.cc/shackle.git") (:commit . "171c3f437d853f34782b201d86ef765665b755e2") (:revdesc . "171c3f437d85") (:keywords "convenience") (:authors ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainers ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainer "Vasilij Schneidermann" . "mail@vasilij.de"))])
 (shakespeare-mode . [(0 0 2) nil "A major mode for editing Shakespearean templates" tar ((:url . "https://github.com/CodyReichert/shakespeare-mode") (:commit . "c442eeea9d585e1b1fbb8813e33d47feec348a57") (:revdesc . "v0.0.2-0-gc442eeea9d58") (:keywords "shakespeare" "hamlet" "lucius" "julius" "mode"))])
 (shampoo . [(0 0 1) nil "Shampoo, a remote Smalltalk developemnt" tar ((:url . "https://github.com/dmatveev/shampoo-emacs") (:commit . "9bf488ad4025beef6eef63d2d5b72bc1c9b9e142") (:revdesc . "9bf488ad4025"))])
 (shell-command-x . [(0 1 3) ((emacs (28 1))) "Extensions for shell commands" tar ((:url . "https://github.com/elizagamedev/shell-command-x.el") (:commit . "416dad677314e3eec704d5b02594b5f8a7e7fd65") (:revdesc . "v0.1.3-0-g416dad677314") (:keywords "convenience" "processes" "unix"))])
 (shell-maker . [(0 74 1) ((emacs (27 1))) "Interaction mode for making comint shells" tar ((:url . "https://github.com/xenodium/shell-maker") (:commit . "ff200751ebd6af7ea7e191a507e656723c7a8439") (:revdesc . "ff200751ebd6"))])
 (shell-pop . [(0 64) ((emacs (24)) (cl-lib (0 5))) "Helps you to use shell easily on Emacs. Only one key action to work" tar ((:url . "https://github.com/kyagi/shell-pop-el") (:commit . "4a3a9d093ad1add792bba764c601aa28de302b34") (:revdesc . "0.64-0-g4a3a9d093ad1") (:keywords "shell" "terminal" "tools") (:authors ("Kazuo YAGI" . "kazuo.yagi@gmail.com")) (:maintainers ("Kazuo YAGI" . "kazuo.yagi@gmail.com")) (:maintainer "Kazuo YAGI" . "kazuo.yagi@gmail.com"))])
 (shell-split-string . [(0 1) nil "Split strings using shell-like syntax" tar ((:url . "https://github.com/10sr/shell-split-string-el") (:commit . "6d01c9249853fe1f8fd925ee80f97232d4e3e5eb") (:revdesc . "6d01c9249853") (:keywords "utility" "library" "shell" "string") (:authors ("10sr" . "8.slashes+el[at]gmail[dot]com")) (:maintainers ("10sr" . "8.slashes+el[at]gmail[dot]com")) (:maintainer "10sr" . "8.slashes+el[at]gmail[dot]com"))])
 (shell-switcher . [(1 0 1) nil "Provide fast switching between shell buffers" tar ((:url . "https://github.com/DamienCassou/shell-switcher") (:commit . "2c5575ae859a82041a4bacd1793b844bfc24c34f") (:revdesc . "2c5575ae859a") (:keywords "emacs" "package" "elisp" "shell" "eshell" "term" "switcher") (:authors ("Damien Cassou" . "damien.cassou@gmail.com")) (:maintainers ("Damien Cassou" . "damien.cassou@gmail.com")) (:maintainer "Damien Cassou" . "damien.cassou@gmail.com"))])
 (shell-toggle . [(1 3 1) nil "Toggle to and from the shell buffer" tar ((:url . "https://github.com/knu/shell-toggle.el") (:commit . "9820b0ad6f22c700759555aae8a454a7dc5a46b3") (:revdesc . "9820b0ad6f22") (:keywords "processes") (:authors ("Mikael Sjödin" . "mic@docs.uu.se") ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainers ("Mikael Sjödin" . "mic@docs.uu.se") ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Mikael Sjödin" . "mic@docs.uu.se"))])
 (shellcop . [(0 1 0) ((emacs (25 1))) "Analyze info&error in shell-mode" tar ((:url . "https://github.com/redguardtoo/shellcop") (:commit . "4e71f5b9199a0ad10017104a6b2bf5ef5f207dfc") (:revdesc . "4e71f5b9199a") (:keywords "unix" "tools") (:authors ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainers ("Chen Bin" . "chenbin.sh@gmail.com")) (:maintainer "Chen Bin" . "chenbin.sh@gmail.com"))])
 (shelldoc . [(0 2 0) ((cl-lib (0 3)) (s (1 9 0))) "Shell command editing support with man page" tar ((:url . "https://github.com/mhayashi1120/Emacs-shelldoc") (:commit . "178d78d08e94b273b23ab1a32c5be509fdfe2286") (:revdesc . "178d78d08e94") (:keywords "applications") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (shelltest-mode . [(1 1) nil "Major mode for shelltestrunner" tar ((:url . "https://github.com/rtrn/shelltest-mode") (:commit . "fead97c7ff1b39715ec033a793de41176f1788f5") (:revdesc . "fead97c7ff1b") (:keywords "languages") (:authors ("Dustin Fechner" . "fechnedu@gmail.com")) (:maintainers ("Dustin Fechner" . "fechnedu@gmail.com")) (:maintainer "Dustin Fechner" . "fechnedu@gmail.com"))])
 (shen-elisp . [(0 1) ((emacs (24 4))) "Shen implementation in Elisp" tar ((:url . "https://github.com/deech/shen-elisp") (:commit . "ffe17dee05f75539cf5e4c59395e4c7400ececaa") (:revdesc . "ffe17dee05f7") (:authors ("Aditya Siram" . "aditya.siram@gmail.com")) (:maintainers ("Aditya Siram" . "aditya.siram@gmail.com")) (:maintainer "Aditya Siram" . "aditya.siram@gmail.com"))])
 (shenshou . [(0 2 0) ((emacs (27 1))) "Download&Extract subtitles from opensubtitles" tar ((:url . "https://github.com/redguardtoo/shenshou") (:commit . "65163b449131ed0946ca6e817a660b4bbb7d35e9") (:revdesc . "65163b449131") (:keywords "convenience" "tools") (:authors ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainers ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainer "Chen Bin" . "chenbinDOTshATgmailDOTcom"))])
 (shfmt . [(0 1) ((emacs (24)) (reformatter (0 3))) "Reformat shell scripts using shfmt" tar ((:url . "https://github.com/purcell/emacs-shfmt") (:commit . "cd94266badc71c1e981e904e10f28c6a80237a2f") (:revdesc . "cd94266badc7") (:keywords "languages") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (shift-number . [(0 1) nil "Increase/decrease the number at point" tar ((:url . "https://github.com/alezost/shift-number.el") (:commit . "ba3c1f2e6b01bf14aa1433c2a49098af1c025f7c") (:revdesc . "ba3c1f2e6b01") (:keywords "convenience") (:authors ("Alex Kost" . "alezost@gmail.com")) (:maintainers ("Alex Kost" . "alezost@gmail.com")) (:maintainer "Alex Kost" . "alezost@gmail.com"))])
 (shm . [(1 0 20) nil "Structured Haskell Mode" tar ((:url . "https://github.com/projectional-haskell/structured-haskell-mode") (:commit . "8abc5cd73e59ea85bef906e14e87dc388c4f350f") (:revdesc . "8abc5cd73e59") (:keywords "development" "haskell" "structured") (:authors ("Chris Done" . "chrisdone@gmail.com")) (:maintainers ("Chris Done" . "chrisdone@gmail.com")) (:maintainer "Chris Done" . "chrisdone@gmail.com"))])
 (show-eol . [(0 0 5) ((emacs (24 4))) "Show end of line symbol in buffer" tar ((:url . "https://github.com/jcs-elpa/show-eol") (:commit . "02fdb5b2832889afd6cad5c517da9b1e4611c766") (:revdesc . "02fdb5b28328") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (showtip . [(0 1) nil "Show tip at cursor" tar ((:url . "https://github.com/emacsorphanage/showtip") (:commit . "930da302809a4257e8d69425455b29e1cc91949b") (:revdesc . "930da302809a") (:keywords "help") (:authors ("Ye Wenbin" . "wenbinye@gmail.com")) (:maintainers ("Ye Wenbin" . "wenbinye@gmail.com")) (:maintainer "Ye Wenbin" . "wenbinye@gmail.com"))])
 (shpec-mode . [(0 1 0) nil "Minor mode for shpec specification" tar ((:url . "https://github.com/shpec/shpec-mode") (:commit . "76bccd63e3b70233a6c9ca0798dd03550952cc76") (:revdesc . "76bccd63e3b7") (:keywords "languages" "tools") (:authors ("AdrieanKhisbe" . "adriean.khisbe@live.fr")) (:maintainers ("AdrieanKhisbe" . "adriean.khisbe@live.fr")) (:maintainer "AdrieanKhisbe" . "adriean.khisbe@live.fr"))])
 (shr-tag-pre-highlight . [(2) ((emacs (24)) (language-detection (0 1 0))) "Syntax highlighting code block in HTML" tar ((:url . "https://github.com/xuchunyang/shr-tag-pre-highlight.el") (:commit . "63eb0b2a4c1caf1004bac8e002ff8b7477871e36") (:revdesc . "63eb0b2a4c1c") (:keywords "html") (:authors ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainers ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainer "Chunyang Xu" . "mail@xuchunyang.me"))])
 (shrface . [(2 6 4) ((emacs (25 1)) (org (9 0)) (language-detection (0 1 0))) "Extend shr/eww with org features and analysis capability" tar ((:url . "https://github.com/chenyanming/shrface") (:commit . "41e7cfcb42f97d652835e0b702f29aae5955f1f4") (:revdesc . "41e7cfcb42f9") (:keywords "faces") (:authors ("Damon Chan" . "elecming@gmail.com")) (:maintainers ("Damon Chan" . "elecming@gmail.com")) (:maintainer "Damon Chan" . "elecming@gmail.com"))])
 (shrink-path . [(0 3 1) ((s (1 6 1)) (dash (1 8 0)) (f (0 10 0))) "Fish-style path" tar ((:url . "https://gitlab.com/bennya/shrink-path.el") (:commit . "9b8cfb59a2dcee8b39b680ab9adad5ecb1f53c0b") (:revdesc . "9b8cfb59a2dc") (:keywords "path"))])
 (shrink-whitespace . [(0 0 4) nil "Whitespace removal DWIM key" tar ((:url . "https://gitlab.com/jcpetkovich/shrink-whitespace.el") (:commit . "0407b89c142bd17e65edb666f35e2c6755bd0867") (:revdesc . "0407b89c142b") (:keywords "convenience") (:authors ("Jean-Christophe Petkovich" . "jcpetkovich@gmail.com")) (:maintainers ("Jean-Christophe Petkovich" . "jcpetkovich@gmail.com")) (:maintainer "Jean-Christophe Petkovich" . "jcpetkovich@gmail.com"))])
 (shroud . [(1 105) ((emacs (25)) (epg (1 0 0)) (s (1 6 0)) (bui (1 2 0)) (dash (2 15 0)) (dash-functional (2 15 0))) "Shroud secrets" tar ((:url . "https://git.savannah.nongnu.org/git/emacs-shroud.git") (:commit . "f758d497f87afd847126d2e69b2f7ba10a5bbbfa") (:revdesc . "1.105-0-gf758d497f87a") (:keywords "tools" "password") (:authors ("Amar Singh" . "nly@disroot.org")) (:maintainers ("Amar Singh" . "nly@disroot.org")) (:maintainer "Amar Singh" . "nly@disroot.org"))])
 (shut-up . [(0 3 3) ((cl-lib (0 3)) (emacs (24))) "Shut up would you!" tar ((:url . "https://github.com/cask/shut-up") (:commit . "081d6b01e3ba0e60326558e545c4019219e046ce") (:revdesc . "081d6b01e3ba") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (shx . [(1 5 0) ((emacs (24 4))) "Extras for the comint-mode shell" tar ((:url . "https://github.com/riscy/shx-for-emacs") (:commit . "63e0feb8eca13691d4ebd5cf3a3ddef4d7675ece") (:revdesc . "63e0feb8eca1") (:keywords "terminals" "processes" "comint" "shell" "repl"))])
 (side-hustle . [(0 3 0) ((emacs (24 4)) (seq (2 20))) "Hustle through Imenu in a side window" tar ((:url . "https://github.com/rnkn/side-hustle") (:commit . "0ac8dfa02ddd33cfa0e3cff834b68e32185db9ee") (:revdesc . "0ac8dfa02ddd") (:keywords "convenience") (:authors ("Paul W. Rankin" . "hello@paulwrankin.com")) (:maintainers ("Paul W. Rankin" . "hello@paulwrankin.com")) (:maintainer "Paul W. Rankin" . "hello@paulwrankin.com"))])
 (side-notes . [(0 4 1) ((emacs (24 5))) "Easy access to a directory notes file" tar ((:url . "https://github.com/rnkn/side-notes") (:commit . "452378c68b7e95b9e8244d20ace073a0be27ccb2") (:revdesc . "452378c68b7e") (:keywords "convenience") (:authors ("Paul W. Rankin" . "pwr@bydasein.com")) (:maintainers ("Paul W. Rankin" . "pwr@bydasein.com")) (:maintainer "Paul W. Rankin" . "pwr@bydasein.com"))])
 (sideline . [(0 2 0) ((emacs (27 1)) (ht (2 4))) "Show information on the side" tar ((:url . "https://github.com/emacs-sideline/sideline") (:commit . "795673c66bb77e6edc46e2667612924f9faaa828") (:revdesc . "795673c66bb7") (:keywords "convenience") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (sideline-blame . [(0 1 0) ((emacs (27 1)) (sideline (0 1 0)) (vc-msg (1 1 1))) "Show blame messages with sideline" tar ((:url . "https://github.com/emacs-sideline/sideline-blame") (:commit . "c3721eeb01cea8acc520c60b9c0a802c39114c6e") (:revdesc . "c3721eeb01ce") (:keywords "sideline" "blame") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (sideline-flycheck . [(0 1 0) ((emacs (26 1)) (flycheck (0 14)) (sideline (0 1 0))) "Show flycheck errors with sideline" tar ((:url . "https://github.com/emacs-sideline/sideline-flycheck") (:commit . "91d7f2d43cc8abbf96bcae389553b6d722c8bad9") (:revdesc . "91d7f2d43cc8") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (sideline-flymake . [(0 1 0) ((emacs (27 1)) (sideline (0 1 0))) "Show flymake errors with sideline" tar ((:url . "https://github.com/emacs-sideline/sideline-flymake") (:commit . "97d6922b3101eb97fdca4c5516d3dc4c4ccd75a5") (:revdesc . "97d6922b3101") (:keywords "convenience" "flymake") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (sideline-lsp . [(0 1 0) ((emacs (27 1)) (sideline (0 1 0)) (lsp-mode (6 0)) (dash (2 18 0)) (ht (2 4)) (s (1 12 0))) "Show lsp information with sideline" tar ((:url . "https://github.com/emacs-sideline/sideline-lsp") (:commit . "afe8995e27a71b0e7355c40cbd3137ca26939dfc") (:revdesc . "afe8995e27a7") (:keywords "sideline" "lsp") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (sift . [(0 2 0) nil "Front-end for sift, a fast and powerful grep alternative" tar ((:url . "https://github.com/nlamirault/sift.el") (:commit . "8c3f3d14a351a2394027d72ee0599aa73b9f0d13") (:revdesc . "8c3f3d14a351") (:keywords "sift" "ack" "pt" "ag" "grep" "search") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (silkworm-theme . [(0 1) ((emacs (24))) "Light theme with pleasant, low contrast colors" tar ((:url . "https://github.com/mswift42/silkworm-theme") (:commit . "7951b53e5caf9daf6a5a15a57ae3a668cb78bd7b") (:revdesc . "7951b53e5caf"))])
 (simple-bookmarks . [(1 9) ((cl-lib (0 5))) "Bookmark / functioncall manager" tar ((:url . "https://github.com/jtkDvlp/simple-bookmarks") (:commit . "54e8d771bcdb0eb235b31c0aa9642171369500e5") (:revdesc . "54e8d771bcdb") (:keywords "bookmark" "functioncall") (:authors ("Julian T. Knabenschuh" . "jtkdevelopments@gmail.com")) (:maintainers ("Julian T. Knabenschuh" . "jtkdevelopments@gmail.com")) (:maintainer "Julian T. Knabenschuh" . "jtkdevelopments@gmail.com"))])
 (simple-httpd . [(1 5 1) ((cl-lib (0 3))) "Pure elisp HTTP server" tar ((:url . "https://github.com/skeeto/emacs-web-server") (:commit . "a5eb49a6567e33586fba15dd649d63ca6e964314") (:revdesc . "1.5.1-0-ga5eb49a6567e") (:authors ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainers ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainer "Christopher Wellons" . "wellons@nullprogram.com"))])
 (simple-modeline . [(1 4) ((emacs (26 1))) "A simple mode-line configuration for Emacs" tar ((:url . "https://github.com/gexplorer/simple-modeline") (:commit . "119d8224a8ae0ee17b09ac1fed6cdb9cb1d048fd") (:revdesc . "119d8224a8ae") (:keywords "mode-line" "faces") (:authors ("Eder Elorriaga" . "gexplorer8@gmail.com")) (:maintainers ("Eder Elorriaga" . "gexplorer8@gmail.com")) (:maintainer "Eder Elorriaga" . "gexplorer8@gmail.com"))])
 (simpleclip . [(1 0 10) nil "Simplified access to the system clipboard" tar ((:url . "https://github.com/rolandwalker/simpleclip") (:commit . "d327abe0522b9b9a26e005eae5ffa4c34ea2ba0a") (:revdesc . "v1.0.10-0-gd327abe0522b") (:keywords "convenience") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (simplenote2 . [(3 0 0) ((request-deferred (0 2 0))) "Interact with simple-note.appspot.com" tar ((:url . "https://github.com/alpha22jp/simplenote2.el") (:commit . "070aa311b0a08b530394c53d0c52c6438efbc20c") (:revdesc . "070aa311b0a0") (:keywords "simplenote") (:authors ("alpha22jp" . "alpha22jp@gmail.com")) (:maintainers ("alpha22jp" . "alpha22jp@gmail.com")) (:maintainer "alpha22jp" . "alpha22jp@gmail.com"))])
 (simplezen . [(0 1 1) nil "A simple subset of zencoding-mode for Emacs" tar ((:url . "https://github.com/magnars/simplezen.el") (:commit . "c0ddaefbb38fcc1c9775434f734f89227d246a30") (:revdesc . "0.1.1-0-gc0ddaefbb38f") (:authors ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (sisyphus . [(0 2 0) ((emacs (27 1)) (compat (30 0 0 0)) (elx (2 0 3)) (llama (0 3 1)) (magit (4 1 1))) "Create releases of Emacs packages" tar ((:url . "https://github.com/magit/sisyphus") (:commit . "e6ec5d8687f34644b4d049a6be463269792c9fd6") (:revdesc . "v0.2.0-0-ge6ec5d8687f3") (:keywords "git" "tools" "vc") (:authors ("Jonas Bernoulli" . "emacs.sisyphus@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.sisyphus@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.sisyphus@jonas.bernoulli.dev"))])
 (skeletor . [(1 6 1) ((s (1 7 0)) (f (0 14 0)) (dash (2 2 0)) (cl-lib (0 3)) (let-alist (1 0 3)) (emacs (24 1))) "Provides project skeletons for Emacs" tar ((:url . "https://github.com/chrisbarrett/skeletor.el") (:commit . "d986806559628623b591542143707de8d76347d0") (:revdesc . "d98680655962") (:authors ("Chris Barrett" . "chris.d.barrett@me.com")) (:maintainers ("Chris Barrett" . "chris.d.barrett@me.com")) (:maintainer "Chris Barrett" . "chris.d.barrett@me.com"))])
 (sketch-themes . [(1 0) ((emacs (26 1))) "Sketch color themes" tar ((:url . "https://github.com/dawranliou/sketch-themes") (:commit . "df8182628052bf55e7779fb6967383629059b5c0") (:revdesc . "df8182628052") (:keywords "faces") (:authors ("Daw-Ran Liou" . "hi@dawranliou.com")) (:maintainers ("Daw-Ran Liou" . "hi@dawranliou.com")) (:maintainer "Daw-Ran Liou" . "hi@dawranliou.com"))])
 (skewer-less . [(0 2) ((skewer-mode (1 5 3))) "Skewer support for live LESS stylesheet updates" tar ((:url . "https://github.com/purcell/skewer-less") (:commit . "593001930f1d68c85233f34c5f6fb04173fc98d6") (:revdesc . "593001930f1d") (:keywords "languages" "tools") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (skewer-mode . [(1 8 0) ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) "Live browser JavaScript, CSS, and HTML interaction" tar ((:url . "https://github.com/skeeto/skewer-mode") (:commit . "a10955db9ef95b0243ee31bcd30a6fb07ce5302b") (:revdesc . "1.8.0-0-ga10955db9ef9") (:authors ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainers ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainer "Christopher Wellons" . "wellons@nullprogram.com"))])
 (sl . [(0 2) ((cl-lib (0 5))) "An Emacs clone of sl(1)" tar ((:url . "https://github.com/xuchunyang/sl.el") (:commit . "51d92f820f3e93776fff6cdb9690458816888bdc") (:revdesc . "51d92f820f3e") (:authors ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainers ("Chunyang Xu" . "mail@xuchunyang.me")) (:maintainer "Chunyang Xu" . "mail@xuchunyang.me"))])
 (slideview . [(0 6 1) nil "File slideshow" tar ((:url . "https://github.com/mhayashi1120/Emacs-slideview") (:commit . "ec2340e7b0e74201206d14e3eaef1e77149f122d") (:revdesc . "ec2340e7b0e7") (:keywords "files") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (slim-mode . [(1 1) nil "Major mode for editing Slim files" tar ((:url . "https://github.com/slim-template/emacs-slim") (:commit . "fe8abb644b7b9cc0ed1e76d9ca8d6c01edccbdb8") (:revdesc . "fe8abb644b7b") (:keywords "markup" "language"))])
 (slime . [(2 31) ((emacs (24 3)) (macrostep (0 9))) "Superior Lisp Interaction Mode for Emacs" tar ((:url . "https://github.com/slime/slime") (:commit . "a71e133aa7d3c132bb3a00cedaeee3f76b5f17ab") (:revdesc . "a71e133aa7d3") (:keywords "languages" "lisp" "slime"))])
 (slime-company . [(1 6) ((emacs (24 4)) (slime (2 13)) (company (0 9 0))) "Slime completion backend for company mode" tar ((:url . "https://github.com/anwyn/slime-company") (:commit . "f20ecc4104d4c35052696e7e760109fb02060e72") (:revdesc . "f20ecc4104d4") (:keywords "convenience" "lisp" "abbrev") (:authors ("Ole Arndt" . "anwyn@sugarshark.com")) (:maintainers ("Ole Arndt" . "anwyn@sugarshark.com")) (:maintainer "Ole Arndt" . "anwyn@sugarshark.com"))])
 (slime-docker . [(0 8 3) ((emacs (24 4)) (slime (2 16)) (docker-tramp (0 1))) "Integration of SLIME with Docker containers" tar ((:url . "https://github.com/cl-docker-images/slime-docker") (:commit . "c7d073720f2bd8e9f72a20309fff2afa4c4e798d") (:revdesc . "0.8.3-0-gc7d073720f2b") (:keywords "docker" "lisp" "slime"))])
 (slime-volleyball . [(1 1) nil "An SVG Slime Volleyball Game" tar ((:url . "https://github.com/fitzsim/slime-volleyball") (:commit . "159b5c0f40b109e3854e94b89ec5383854c46ae3") (:revdesc . "v1.1-0-g159b5c0f40b1") (:keywords "games") (:authors ("Thomas Fitzsimmons" . "fitzsim@fitzsim.org")) (:maintainers ("Thomas Fitzsimmons" . "fitzsim@fitzsim.org")) (:maintainer "Thomas Fitzsimmons" . "fitzsim@fitzsim.org"))])
 (slstats . [(1 10) ((cl-lib (0 5)) (emacs (24))) "Acquire and display stats about Second Life" tar ((:url . "https://github.com/davep/slstats.el") (:commit . "e9696066abf3f2b7b818a57c062530dfd9377033") (:revdesc . "e9696066abf3") (:keywords "games") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (sly . [(1 0 43) ((emacs (24 3))) "Sylvester the Cat's Common Lisp IDE" tar ((:url . "https://github.com/joaotavora/sly") (:commit . "eb67be9698794ba66a09f46b7cfffab742863a91") (:revdesc . "eb67be969879") (:keywords "languages" "lisp" "sly"))])
 (sly-asdf . [(0 2 0) ((emacs (24 3)) (sly (1 0 0 -2 2)) (popup (0 5 3))) "ASDF system support for SLY" tar ((:url . "https://github.com/mmgeorge/sly-asdf") (:commit . "3180921efdc19a2195960e1d601b2a6f31a6feea") (:revdesc . "3180921efdc1") (:keywords "languages" "lisp" "sly" "asdf") (:maintainers ("Matt George" . "mmge93@gmail.com")) (:maintainer "Matt George" . "mmge93@gmail.com"))])
 (smart-mode-line . [(2 14) ((emacs (24 3)) (rich-minority (0 1 1))) "A color coded smart mode-line" tar ((:url . "https://github.com/Malabarba/smart-mode-line") (:commit . "abcb0ab6f7110a03d6c7428bae67cf8731496433") (:revdesc . "abcb0ab6f711") (:keywords "mode-line" "faces" "themes") (:authors ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainers ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com"))])
 (smart-mode-line-powerline-theme . [(2 14) ((emacs (24 3)) (powerline (2 2)) (smart-mode-line (2 5))) "Smart-mode-line theme that mimics the powerline appearance" tar ((:url . "https://github.com/Malabarba/smart-mode-line") (:commit . "abcb0ab6f7110a03d6c7428bae67cf8731496433") (:revdesc . "abcb0ab6f711") (:keywords "mode-line" "faces" "themes") (:authors ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainers ("Artur Malabarba" . "bruce.connor.am@gmail.com")) (:maintainer "Artur Malabarba" . "bruce.connor.am@gmail.com"))])
 (smart-semicolon . [(0 2 1) ((emacs (25))) "Insert semicolon smartly" tar ((:url . "https://github.com/iquiw/smart-semicolon") (:commit . "c11096679dbed3875c37413337ee490ee7951b63") (:revdesc . "c11096679dbe") (:authors ("Iku Iwasa" . "iku.iwasa@gmail.com")) (:maintainers ("Iku Iwasa" . "iku.iwasa@gmail.com")) (:maintainer "Iku Iwasa" . "iku.iwasa@gmail.com"))])
 (smart-tabs-mode . [(1 1) nil "Intelligently indent with tabs, align with spaces!" tar ((:url . "https://github.com/jcsalomon/smarttabs") (:commit . "1044c17e42479de943e69cdeb85e4d05ad9cca8c") (:revdesc . "1044c17e4247") (:keywords "languages") (:authors ("John Croisant" . "jacius@gmail.com") ("Alan Pearce" . "alan@alanpearce.co.uk") ("Daniel Dehennin" . "daniel.dehennin@baby-gnu.org") ("Matt Renaud" . "mrenaud92@gmail.com")) (:maintainers ("Joel C. Salomon" . "joelcsalomon@gmail.com")) (:maintainer "Joel C. Salomon" . "joelcsalomon@gmail.com"))])
 (smartparens . [(1 11 0) ((dash (2 13 0)) (cl-lib (0 3))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs" tar ((:url . "https://github.com/Fuco1/smartparens") (:commit . "4873352b5d0a1c5142658122de1b6950b8fe7e4d") (:revdesc . "4873352b5d0a") (:keywords "abbrev" "convenience" "editing") (:authors ("Matus Goljer" . "matus.goljer@gmail.com")) (:maintainers ("Matus Goljer" . "matus.goljer@gmail.com")) (:maintainer "Matus Goljer" . "matus.goljer@gmail.com"))])
 (smartrep . [(1 0 0) nil "Support sequential operation which omitted prefix keys" tar ((:url . "https://github.com/myuhe/smartrep.el") (:commit . "0b73bf3d1a3c795671bfee0a36cecfaa54729446") (:revdesc . "0b73bf3d1a3c") (:keywords "convenience") (:authors ("myuhe" . "yuhei.maeda_at_gmail.com")))])
 (smartscan . [(0 2) nil "Jumps between other symbols found at point" tar ((:url . "https://github.com/mickeynp/smart-scan") (:commit . "13c9fd6c0e38831f78dec55051e6b4a643963176") (:revdesc . "0.2-0-g13c9fd6c0e38") (:keywords "extensions") (:authors ("Mickey Petersen" . "mickey@masteringemacs.org")) (:maintainers ("Mickey Petersen" . "mickey@masteringemacs.org")) (:maintainer "Mickey Petersen" . "mickey@masteringemacs.org"))])
 (smbc . [(0 2 1) nil "View SMBC from Emacs" tar ((:url . "https://github.com/sakshamsharma/emacs-smbc") (:commit . "c377b806118d82140197d9cb1095548477e00497") (:revdesc . "c377b806118d") (:keywords "smbc" "webcomic") (:authors ("Saksham Sharma" . "saksham0808@gmail.com")) (:maintainers ("Saksham Sharma" . "saksham0808@gmail.com")) (:maintainer "Saksham Sharma" . "saksham0808@gmail.com"))])
 (smeargle . [(0 3) ((emacs (24 3))) "Highlighting region by last updated time" tar ((:url . "https://github.com/emacsorphanage/smeargle") (:commit . "0665b1ff5109731898bc4a0ca6d939933b804777") (:revdesc . "0665b1ff5109") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (smex . [(3 0) nil "M-x interface with Ido-style fuzzy matching" tar ((:url . "https://github.com/nonsequitur/smex") (:commit . "97b4a4d82a4449e3f1a3fa8a93387d6eb0ef9c26") (:revdesc . "97b4a4d82a44") (:keywords "convenience" "usability") (:authors ("Cornelius Mika and contributors" . "cornelius.mika@gmail.com")) (:maintainers ("Cornelius Mika and contributors" . "cornelius.mika@gmail.com")) (:maintainer "Cornelius Mika and contributors" . "cornelius.mika@gmail.com"))])
 (smithy-mode . [(0 1 3) ((emacs (26 1))) "Major mode for editing Smithy IDL files" tar ((:url . "https://github.com/mnemitz/smithy-mode") (:commit . "7dff0e7a497a055577226c7ae7ecdeaf7078b4c1") (:revdesc . "7dff0e7a497a") (:keywords "tools" "languages" "smithy" "idl" "amazon") (:authors ("Matt Nemitz" . "matt.nemitz@gmail.com")) (:maintainers ("Matt Nemitz" . "matt.nemitz@gmail.com")) (:maintainer "Matt Nemitz" . "matt.nemitz@gmail.com"))])
 (sml-basis . [(0 1) ((emacs (24 5))) "Standard ML Basis Library lookup" tar ((:url . "https://github.com/lassik/emacs-sml-basis") (:commit . "c048d575e30a20ec825fd0c5eb9c8a4428a43298") (:revdesc . "c048d575e30a") (:keywords "languages" "util") (:authors ("Lassi Kortela" . "lassi@lassi.io")) (:maintainers ("Lassi Kortela" . "lassi@lassi.io")) (:maintainer "Lassi Kortela" . "lassi@lassi.io"))])
 (smmry . [(0 0 4) nil "SMMRY client" tar ((:url . "https://github.com/microamp/smmry.el") (:commit . "d3473b139430d221b4c4587dae685cd67a02c099") (:revdesc . "d3473b139430") (:keywords "api" "smmry") (:authors ("Sangho Na" . "sangho@nsh.nz")) (:maintainers ("Sangho Na" . "sangho@nsh.nz")) (:maintainer "Sangho Na" . "sangho@nsh.nz"))])
 (smooth-scroll . [(1 3) nil "Minor mode for smooth scrolling and in-place scrolling" tar ((:url . "https://github.com/k-talo/smooth-scroll.el") (:commit . "d7b276fdb906708c26dccfdb520021f9b0eb9c6b") (:revdesc . "d7b276fdb906") (:keywords "convenience" "emulations" "frames") (:authors ("K-talo Miyazaki" . "KeitarodotMiyazakiatgmaildotcom")) (:maintainers ("K-talo Miyazaki" . "KeitarodotMiyazakiatgmaildotcom")) (:maintainer "K-talo Miyazaki" . "KeitarodotMiyazakiatgmaildotcom"))])
 (smooth-scrolling . [(2 0 0) nil "Make emacs scroll smoothly" tar ((:url . "https://github.com/aspiers/smooth-scrolling") (:commit . "6a1420be510decde0a5eabc56cff229ae554417e") (:revdesc . "v2.0.0-0-g6a1420be510d") (:keywords "convenience") (:authors ("Adam Spiers" . "emacs-ss@adamspiers.org") ("Jeremy Bondeson" . "jbondeson@gmail.com") ("Ryan C. Thompson" . "rct+github@thompsonclan.org")) (:maintainers ("Adam Spiers" . "emacs-ss@adamspiers.org")) (:maintainer "Adam Spiers" . "emacs-ss@adamspiers.org"))])
 (snakemake-mode . [(2 0 0) ((emacs (26 1)) (transient (0 3 0))) "Major mode for editing Snakemake files" tar ((:url . "https://github.com/kyleam/snakemake-mode") (:commit . "78abd82f34a71b3fff7aa869de1b07a082f1f351") (:revdesc . "v2.0.0-0-g78abd82f34a7") (:keywords "tools") (:authors ("Kyle Meyer" . "kyle@kyleam.com")) (:maintainers ("Kyle Meyer" . "kyle@kyleam.com")) (:maintainer "Kyle Meyer" . "kyle@kyleam.com"))])
 (snapshot-timemachine-rsnapshot . [(0 4) ((snapshot-timemachine (20160222 132)) (seq (2 19))) "Rsnapshot backend for snapshot-timemachine" tar ((:url . "https://github.com/NicolasPetton/snapshot-timemachine-rsnapshot") (:commit . "72b0b700d80f1a0442e62bbbb6a0c8c59182f97f") (:revdesc . "0.4-0-g72b0b700d80f") (:authors ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainers ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainer "Nicolas Petton" . "nicolas@petton.fr"))])
 (snazzy-theme . [(1 0) ((emacs (24)) (base16-theme (2 1))) "An elegant syntax theme with bright colors" tar ((:url . "https://github.com/weijiangan/emacs-snazzy") (:commit . "578d7ebc4ed91c0a630b652c4b6fdd54d9ae16cd") (:revdesc . "578d7ebc4ed9") (:keywords "faces" "theme" "color" "snazzy"))])
 (snitch . [(0 3 0) ((emacs (27 1))) "An Emacs firewall" tar ((:url . "https://github.com/mrmekon/snitch-el") (:commit . "14e91336fb04c23d7b23836642eef3f2edef03bf") (:revdesc . "snitch-0.3.0-0-g14e91336fb04") (:keywords "processes" "comm") (:authors ("Trevor Bentley" . "snitch.el@x.mrmekon.com")) (:maintainers ("Trevor Bentley" . "snitch.el@x.mrmekon.com")) (:maintainer "Trevor Bentley" . "snitch.el@x.mrmekon.com"))])
 (snoopy . [(0 2 0) ((emacs (24)) (cl-lib (0 6))) "Minor mode for number row unshifted character insertion" tar ((:url . "https://github.com/anmonteiro/snoopy-mode") (:commit . "ec4123bdebfe0bb7bf4feaac2dc02b59caffe386") (:revdesc . "ec4123bdebfe") (:keywords "lisp") (:authors ("António Nuno Monteiro" . "anmonteiro@gmail.com")) (:maintainers ("António Nuno Monteiro" . "anmonteiro@gmail.com")) (:maintainer "António Nuno Monteiro" . "anmonteiro@gmail.com"))])
 (soccer . [(1 6 2) ((emacs (26 1)) (dash (2 19 1))) "Fixtures, results, table etc for soccer" tar ((:url . "https://github.com/md-arif-shaikh/soccer") (:commit . "36d22b2acda00d203288cf5b4cc1d8df567f57d6") (:revdesc . "36d22b2acda0") (:keywords "games" "soccer" "football") (:authors ("Md Arif Shaikh" . "arifshaikh.astro@gmail.com")) (:maintainers ("Md Arif Shaikh" . "arifshaikh.astro@gmail.com")) (:maintainer "Md Arif Shaikh" . "arifshaikh.astro@gmail.com"))])
 (socyl . [(0 3 0) ((s (1 11 0)) (dash (2 12 0)) (pkg-info (0 5 0)) (cl-lib (0 5))) "Frontend for several search tools" tar ((:url . "https://github.com/nlamirault/socyl") (:commit . "fcc0deda5b6c39d25e48e7da2a0ae73295193ea8") (:revdesc . "fcc0deda5b6c") (:keywords "ripgrep" "sift" "ack" "pt" "ag" "grep" "search") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (solaire-mode . [(2 0 5) ((emacs (25 1)) (cl-lib (0 5))) "Make certain buffers grossly incandescent" tar ((:url . "https://github.com/hlissner/emacs-solaire-mode") (:commit . "8ccdceeb9298b3c4e35f630914f467bf164f39ad") (:revdesc . "v2.0.5-0-g8ccdceeb9298") (:keywords "dim" "bright" "window" "buffer" "faces") (:authors ("Henrik Lissner" . "http://github/hlissner")) (:maintainers ("Henrik Lissner" . "contact@henrik.io")) (:maintainer "Henrik Lissner" . "contact@henrik.io"))])
 (solarized-theme . [(2 0 4) ((emacs (24 1))) "The Solarized color theme" tar ((:url . "https://github.com/bbatsov/solarized-emacs") (:commit . "922b5956a9e2e474f1595bad7b2b35f148b4df3f") (:revdesc . "922b5956a9e2") (:keywords "convenience" "themes" "solarized") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainers ("Bozhidar Batsov" . "bozhidar@batsov.dev")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.dev"))])
 (solidity-flycheck . [(0 1 10) ((flycheck (32 -4)) (solidity-mode (0 1 9))) "Flycheck integration for solidity emacs mode" tar ((:url . "https://github.com/ethereum/emacs-solidity") (:commit . "93412f211fad7dfc3b02aa226856fc52b6a15c22") (:revdesc . "93412f211fad") (:keywords "languages" "solidity" "flycheck") (:authors ("Lefteris Karapetsas" . "lefteris@refu.co")) (:maintainers ("Lefteris Karapetsas" . "lefteris@refu.co")) (:maintainer "Lefteris Karapetsas" . "lefteris@refu.co"))])
 (solidity-mode . [(0 1 10) nil "Major mode for ethereum's solidity language" tar ((:url . "https://github.com/ethereum/emacs-solidity") (:commit . "93412f211fad7dfc3b02aa226856fc52b6a15c22") (:revdesc . "93412f211fad") (:keywords "languages" "solidity") (:authors ("Lefteris Karapetsas" . "lefteris@refu.co")) (:maintainers ("Lefteris Karapetsas" . "lefteris@refu.co")) (:maintainer "Lefteris Karapetsas" . "lefteris@refu.co"))])
 (solo-jazz-theme . [(0 9 0) ((emacs (24 1))) "The Solo-Jazz color theme" tar ((:url . "https://github.com/cstby/solo-jazz-emacs-theme") (:commit . "51d63d8a2c855f4ea79eef9fc9c8a5c9702642c4") (:revdesc . "51d63d8a2c85"))])
 (soong-mode . [(1 0 0) ((emacs (27 1))) "Major mode for editing Soong build files" tar ((:url . "https://github.com/bobrofon/soong-mode") (:commit . "bf3dc1070b368b413958f54fbe9bcc2aaf77b56f") (:revdesc . "bf3dc1070b36") (:keywords "languages") (:authors ("Sergey Bobrenok" . "bobrofon@gmail.com")) (:maintainers ("Sergey Bobrenok" . "bobrofon@gmail.com")) (:maintainer "Sergey Bobrenok" . "bobrofon@gmail.com"))])
 (soothe-theme . [(2 1 8) ((emacs (24 3)) (autothemer (0 2))) "A dark colorful theme" tar ((:url . "https://github.com/emacsfodder/emacs-soothe-theme") (:commit . "d8aee0fca549d535ebb7b5fd1a8017f12925d16b") (:revdesc . "d8aee0fca549") (:authors ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainers ("Jason Milkins" . "jasonm23@gmail.com")) (:maintainer "Jason Milkins" . "jasonm23@gmail.com"))])
 (sops . [(0 1 5) ((emacs (28 1))) "SOPS encrypt and decrypt without leaving the editor" tar ((:url . "https://github.com/djgoku/sops") (:commit . "46548b854b35983b2e9e5eb4276634dfc41abfa0") (:revdesc . "46548b854b35") (:keywords "convenience" "programming") (:authors ("Jonathan Carroll Otsuka" . "pitas.axioms0c@icloud.com")) (:maintainers ("Jonathan Carroll Otsuka" . "pitas.axioms0c@icloud.com")) (:maintainer "Jonathan Carroll Otsuka" . "pitas.axioms0c@icloud.com"))])
 (soria-theme . [(0 4 2) ((emacs (25 1))) "A xoria256 theme with some colors from openSUSE" tar ((:url . "https://github.com/mssola/soria") (:commit . "c5275d02fcc9f6af2cfebd69bcf69f8cdccbe3ab") (:revdesc . "v0.4.2-0-gc5275d02fcc9") (:keywords "faces") (:authors ("Miquel Sabaté Solà" . "mikisabate@gmail.com")) (:maintainers ("Miquel Sabaté Solà" . "mikisabate@gmail.com")) (:maintainer "Miquel Sabaté Solà" . "mikisabate@gmail.com"))])
 (sotclojure . [(1 3 1) ((emacs (24 1)) (clojure-mode (4 0 0)) (cider (0 8)) (sotlisp (1 3))) "Write clojure at the speed of thought" tar ((:url . "https://github.com/Malabarba/speed-of-thought-clojure") (:commit . "ceac82aa691e8d98946471be6aaff9c9a4603c32") (:revdesc . "ceac82aa691e") (:keywords "convenience" "clojure") (:authors ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainers ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com"))])
 (sotlisp . [(1 6 2) ((emacs (24 1))) "Write lisp at the speed of thought" tar ((:url . "https://github.com/Malabarba/speed-of-thought-lisp") (:commit . "fffe8d0b42b143a2e7df0470d9049fa57b6ecac5") (:revdesc . "fffe8d0b42b1") (:keywords "convenience" "lisp") (:authors ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainers ("Artur Malabarba" . "emacs@endlessparentheses.com")) (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com"))])
 (sound-wav . [(0 2) ((deferred (0 3 1)) (cl-lib (0 5))) "Play wav file" tar ((:url . "https://github.com/emacsorphanage/sound-wav") (:commit . "2a8c8a9bd797dfbf4a0aa1c023a464b803227ff8") (:revdesc . "2a8c8a9bd797") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (sourcekit . [(0 2 0) ((emacs (24 3)) (dash (2 12 1)) (dash-functional (1 2 0)) (request (0 2 0))) "Library to interact with sourcekittendaemon" tar ((:url . "https://github.com/nathankot/company-sourcekit") (:commit . "8ba62ac25bf533b7f148f333bcb5c1db799f749b") (:revdesc . "8ba62ac25bf5") (:keywords "tools" "processes") (:authors ("Nathan Kot" . "nk@nathankot.com")) (:maintainers ("Nathan Kot" . "nk@nathankot.com")) (:maintainer "Nathan Kot" . "nk@nathankot.com"))])
 (sourcemap . [(0 3) ((emacs (24 3))) "Sourcemap parser" tar ((:url . "https://github.com/emacsorphanage/sourcemap") (:commit . "64c89d296186f48d9135fb8aad501de19f64bceb") (:revdesc . "64c89d296186") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (sourcepawn-mode . [(0 2) nil "SourcePawn major mode for emacs" tar ((:url . "https://github.com/agrif/sourcepawn-mode") (:commit . "00a2170d267b5d3db71c3c00502871c138c1d5dd") (:revdesc . "v0.2-0-g00a2170d267b") (:authors ("Aaron Griffith" . "aargri@gmail.com")) (:maintainers ("Aaron Griffith" . "aargri@gmail.com")) (:maintainer "Aaron Griffith" . "aargri@gmail.com"))])
 (spaceline . [(2 0 1) ((emacs (24 3)) (cl-lib (0 5)) (powerline (2 3)) (dash (2 11 0)) (s (1 10 0))) "Modeline configuration library for powerline" tar ((:url . "https://github.com/TheBB/spaceline") (:commit . "2d1a7bfb5bdaf24958f50b4bf93182847916af85") (:revdesc . "2d1a7bfb5bda") (:keywords "mode-line" "powerline" "spacemacs") (:authors ("Eivind Fonn" . "evfonn@gmail.com")) (:maintainers ("Eivind Fonn" . "evfonn@gmail.com")) (:maintainer "Eivind Fonn" . "evfonn@gmail.com"))])
 (spaceline-all-the-icons . [(1 4 0) ((emacs (24 4)) (all-the-icons (2 6 0)) (spaceline (2 0 0)) (memoize (1 0 1))) "A Spaceline theme using All The Icons" tar ((:url . "https://github.com/domtronn/spaceline-all-the-icons.el") (:commit . "7eafe2d7a81f8d10e03498bdcc3bec0ea50f905d") (:revdesc . "7eafe2d7a81f") (:keywords "convenience" "lisp" "tools") (:authors ("Dominic Charlesworth" . "dgc336@gmail.com")) (:maintainers ("Dominic Charlesworth" . "dgc336@gmail.com")) (:maintainer "Dominic Charlesworth" . "dgc336@gmail.com"))])
 (spacemacs-theme . [(0 3) nil "Color theme with a dark and light versions" tar ((:url . "https://github.com/nashamri/spacemacs-theme") (:commit . "e04d1f21107a1565861625209bb9c46a7aa43cc5") (:revdesc . "e04d1f21107a"))])
 (sparkline . [(1 0 2) ((cl-lib (0 3))) "Make sparkline images from a list of numbers" tar ((:url . "https://github.com/woudshoo/sparkline") (:commit . "e44498cf1a58fb165991198fe5104d51c92ea904") (:revdesc . "e44498cf1a58") (:keywords "extensions") (:authors ("Willem Rein Oudshoorn" . "woudshoo@xs4all.nl")) (:maintainers ("Willem Rein Oudshoorn" . "woudshoo@xs4all.nl")) (:maintainer "Willem Rein Oudshoorn" . "woudshoo@xs4all.nl"))])
 (sparql-mode . [(4 0 2) ((cl-lib (0 5)) (emacs (24 3))) "Edit and interactively evaluate SPARQL queries" tar ((:url . "https://github.com/ljos/sparql-mode") (:commit . "2837b97244111515c61fb3823c1479bc126a458b") (:revdesc . "2837b9724411") (:authors ("Craig Andera" . "canderaatwangderadotcom")) (:maintainers ("Bjarte Johansen" . "BjartedotJohansenatgmaildotcom")) (:maintainer "Bjarte Johansen" . "BjartedotJohansenatgmaildotcom"))])
 (speech-tagger . [(0 0 0) nil "[No description available]" tar ((:url . "https://github.com/cosmicexplorer/speech-tagger") (:commit . "e6595bd0eea93ede1534c536c1746c9cf763b73c") (:revdesc . "e6595bd0eea9"))])
 (speechd-el . [(2 12) nil "Client to speech synthesizers and Braille displays" tar ((:url . "https://github.com/brailcom/speechd-el") (:commit . "ac7497e394bf7d46e0b2c27570f5507f6a50a157") (:revdesc . "ac7497e394bf") (:authors ("Milan Zamazal" . "pdm@zamazal.org")) (:maintainers ("Milan Zamazal" . "pdm@zamazal.org")) (:maintainer "Milan Zamazal" . "pdm@zamazal.org"))])
 (speed-type . [(1 3) ((emacs (25 1))) "Practice touch and speed typing" tar ((:url . "https://github.com/dakra/speed-type") (:commit . "657946280a540587831494415b16df3194ae7c52") (:revdesc . "657946280a54") (:keywords "games") (:maintainers ("Daniel Kraus" . "daniel@kraus.my")) (:maintainer "Daniel Kraus" . "daniel@kraus.my"))])
 (speedbar-git-respect . [(0 1 1) ((f (0 8 0)) (emacs (25 1))) "Particular respect git repo in speedbar" tar ((:url . "https://github.com/ukari/speedbar-git-respect") (:commit . "9663b7d71385041fdd7488d74d54cb6c4e05b74a") (:revdesc . "0.1.1-0-g9663b7d71385") (:authors ("Muromi Ukari" . "chendianbuji@gmail.com")) (:maintainers ("Muromi Ukari" . "chendianbuji@gmail.com")) (:maintainer "Muromi Ukari" . "chendianbuji@gmail.com"))])
 (sphinx-doc . [(0 1 0) ((s (1 9 0)) (cl-lib (0 5))) "Sphinx friendly docstrings for Python functions" tar ((:url . "https://github.com/naiquevin/sphinx-doc.el") (:commit . "b3459ecb9e6d3fffdee3cb7342563a56a32ce666") (:revdesc . "b3459ecb9e6d") (:keywords "sphinx" "python") (:authors ("Vineet Naik" . "naikvin@gmail.com")) (:maintainers ("Vineet Naik" . "naikvin@gmail.com")) (:maintainer "Vineet Naik" . "naikvin@gmail.com"))])
 (sphinx-mode . [(1 0 0) ((f (0 20 0)) (dash (2 14 1))) "Minor mode providing sphinx support" tar ((:url . "https://github.com/Fuco1/sphinx-mode") (:commit . "9d4075c106fc837006394c4c803281383f2ec6f3") (:revdesc . "9d4075c106fc") (:keywords "languages") (:authors ("Matúš Goljer" . "matus.goljer@gmail.com")) (:maintainers ("Matúš Goljer" . "matus.goljer@gmail.com")) (:maintainer "Matúš Goljer" . "matus.goljer@gmail.com"))])
 (splitjoin . [(0 1) ((cl-lib (0 5))) "Splitjoin" tar ((:url . "https://github.com/emacsorphanage/splitjoin") (:commit . "0eb91e7beec915065cd6c00ceaca180a64d85cda") (:revdesc . "0eb91e7beec9") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (splunk-mode . [(1 1 0) ((emacs (27 1))) "Major Mode for editing Splunk SPL source code" tar ((:url . "https://github.com/jakewilliami/splunk-mode") (:commit . "fbc0b5faa2f33a3656f7c549ed9f064a01530dc9") (:revdesc . "1.1.0-0-gfbc0b5faa2f3") (:keywords "languages" "splunk" "mode") (:authors ("Jake Ireland" . "jakewilliami@icloud.com")) (:maintainers ("Jake Ireland" . "jakewilliami@icloud.com")) (:maintainer "Jake Ireland" . "jakewilliami@icloud.com"))])
 (spotify . [(0 3 4) ((cl-lib (0 5))) "Control the spotify application from emacs" tar ((:url . "https://github.com/remvee/spotify-el") (:commit . "29577cf1188161f98b8358c149aaf47b2c137902") (:revdesc . "0.3.4-0-g29577cf11881") (:keywords "convenience"))])
 (sprintly-mode . [(0 0 4) ((furl (0 0 2))) "Major mode for dealing with sprint.ly" tar ((:url . "https://github.com/sprintly/sprintly-mode") (:commit . "6695892bae5860b5268bf3ae62be990ee9b63c11") (:revdesc . "6695892bae58") (:authors ("Justin Lilly" . "justin@justinlilly.com")) (:maintainers ("Justin Lilly" . "justin@justinlilly.com")) (:maintainer "Justin Lilly" . "justin@justinlilly.com"))])
 (sprunge . [(0 1 1) ((request (0 2 0)) (cl-lib (0 5))) "Upload pastes to sprunge.us" tar ((:url . "https://github.com/tomjakubowski/sprunge.el") (:commit . "0fd386b8b29c4175022a04ad70ea5643185b6726") (:revdesc . "0fd386b8b29c") (:keywords "tools"))])
 (sq . [(0 2 0) ((emacs (24 1))) "Bindings for Sequoia PGP's cli" tar ((:url . "https://gitlab.com/sequoia-pgp/sqel") (:commit . "096c641fe2ac1efeb8ba09d1244ef95bf25ae1bb") (:revdesc . "v0.2.0-0-g096c641fe2ac") (:keywords "tools" "data" "mail") (:authors ("Justus Winter" . "justus@sequoia-pgp.org")) (:maintainers ("Justus Winter" . "justus@sequoia-pgp.org")) (:maintainer "Justus Winter" . "justus@sequoia-pgp.org"))])
 (sql-impala . [(1 1) nil "Comint support for Cloudera Impala" tar ((:url . "https://github.com/jterk/sql-impala") (:commit . "466e7c0c789ec3e5e8a276c8f6754f91bb584c3e") (:revdesc . "466e7c0c789e") (:keywords "sql" "impala") (:authors ("Jason Terk" . "jason@goterkyourself.com")) (:maintainers ("Jason Terk" . "jason@goterkyourself.com")) (:maintainer "Jason Terk" . "jason@goterkyourself.com"))])
 (sql-presto . [(1 0 4) ((emacs (24 4))) "[No description available]" tar ((:url . "https://github.com/kat-co/sql-prestodb") (:commit . "bcda455e300a1af75c7bb805882329bc844703b2") (:revdesc . "bcda455e300a") (:keywords "sql" "presto" "database") (:authors ("Katherine Cox-Buday" . "cox.katherine.e@gmail.com")) (:maintainers ("Katherine Cox-Buday" . "cox.katherine.e@gmail.com")) (:maintainer "Katherine Cox-Buday" . "cox.katherine.e@gmail.com"))])
 (sqlformat . [(0 2) ((emacs (24 3)) (reformatter (0 3))) "Reformat SQL using sqlformat or pgformatter" tar ((:url . "https://github.com/purcell/sqlformat") (:commit . "0cdb882874ba0853f4f831a07a85b511258472b2") (:revdesc . "0cdb882874ba") (:keywords "languages") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (sqlite3 . [(0 18) ((emacs (25 1))) "Direct access to the core SQLite3 API" tar ((:url . "https://github.com/pekingduck/emacs-sqlite3-api") (:commit . "a601c9965e4d0178705a64b7d4f88709ca9aea66") (:revdesc . "a601c9965e4d") (:keywords "comm" "data" "sql") (:authors ("Y. N. Lo" . "elisp@fastmail.com")) (:maintainers ("Y. N. Lo" . "elisp@fastmail.com")) (:maintainer "Y. N. Lo" . "elisp@fastmail.com"))])
 (sqlup-mode . [(0 8 0) nil "Upcase SQL words for you" tar ((:url . "https://github.com/Trevoke/sqlup-mode.el") (:commit . "04970977b4abb4d44301651618bbf1cdb0b263dd") (:revdesc . "04970977b4ab") (:keywords "sql" "tools" "redis" "upcase") (:authors ("Aldric Giacomoni" . "trevoke@gmail.com")) (:maintainers ("Aldric Giacomoni" . "trevoke@gmail.com")) (:maintainer "Aldric Giacomoni" . "trevoke@gmail.com"))])
 (sr-speedbar . [(20140914 2339) nil "Same frame speedbar" tar ((:url . "https://github.com/emacsorphanage/sr-speedbar") (:commit . "4f816528a32eb421197a768d6dcf3a05de83f642") (:revdesc . "4f816528a32e") (:keywords "speedbar" "sr-speedbar.el") (:authors ("Sebastian Rose" . "sebastian_rose@gmx.de")) (:maintainers ("Sebastian Rose" . "sebastian_rose@gmx.de") ("Peter Lunicks" . "plunix@users.sourceforge.net")) (:maintainer "Sebastian Rose" . "sebastian_rose@gmx.de"))])
 (srefactor . [(0 5) ((emacs (24 4))) "A refactoring tool based on Semantic parser framework" tar ((:url . "https://github.com/tuhdo/semantic-refactor") (:commit . "ecd40713f736b243285c07f4cfd77113794d4f9f") (:revdesc . "ecd40713f736") (:keywords "c" "languages" "tools") (:authors ("Do Hoang" . "tuhdo1710@gmail.com")))])
 (srfi . [(0 3) ((emacs (25 1)) (cl-lib (0 5))) "Scheme Requests for Implementation browser" tar ((:url . "https://github.com/srfi-explorations/emacs-srfi") (:commit . "98b8b1f9edd4ce6a05eeef49bed0d1966bd7c528") (:revdesc . "0.3-0-g98b8b1f9edd4") (:keywords "languages" "util") (:authors ("Lassi Kortela" . "lassi@lassi.io")) (:maintainers ("Lassi Kortela" . "lassi@lassi.io")) (:maintainer "Lassi Kortela" . "lassi@lassi.io"))])
 (srv . [(0 2) ((emacs (24 3))) "Perform SRV DNS requests" tar ((:url . "https://github.com/legoscia/srv.el") (:commit . "714387d5a5cf34d8d8cd96bdb1f9cb8ded823ff7") (:revdesc . "714387d5a5cf") (:keywords "comm") (:authors ("Magnus Henoch" . "magnus.henoch@gmail.com")) (:maintainers ("Magnus Henoch" . "magnus.henoch@gmail.com")) (:maintainer "Magnus Henoch" . "magnus.henoch@gmail.com"))])
 (ssass-mode . [(0 2) ((emacs (24 3))) "Edit Sass without a Turing Machine" tar ((:url . "https://github.com/AdamNiederer/ssass-mode") (:commit . "5f36a169a1ad497f1d7a465be386ffb5e1f80bcf") (:revdesc . "0.2-0-g5f36a169a1ad") (:keywords "languages" "sass") (:authors ("Adam Niederer" . "adam.niederer@gmail.com")) (:maintainers ("Adam Niederer" . "adam.niederer@gmail.com")) (:maintainer "Adam Niederer" . "adam.niederer@gmail.com"))])
 (ssh-agency . [(0 4 1) ((emacs (24 4)) (dash (2 10 0))) "Manage ssh-agent from Emacs" tar ((:url . "https://github.com/magit/ssh-agency") (:commit . "a5377e4317365a3d5442e06d5c255d4a7c7618db") (:revdesc . "0.4.1-0-ga5377e431736") (:authors ("Noam Postavsky" . "npostavs@user.sourceforge.net")) (:maintainers ("Noam Postavsky" . "npostavs@user.sourceforge.net")) (:maintainer "Noam Postavsky" . "npostavs@user.sourceforge.net"))])
 (ssh-deploy . [(3 1 16) ((emacs (25))) "Deployment via Tramp, global or per directory" tar ((:url . "https://github.com/cjohansson/emacs-ssh-deploy") (:commit . "95fb076c9b657c5f1bfad3ee5bf1f8691c50d428") (:revdesc . "v3.1.16-0-g95fb076c9b65") (:keywords "tools" "convenience") (:authors ("Christian Johansson" . "christian@cvj.se")) (:maintainers ("Christian Johansson" . "christian@cvj.se")) (:maintainer "Christian Johansson" . "christian@cvj.se"))])
 (stan-mode . [(10 2 0) ((emacs (24 4))) "Major mode for editing Stan files" tar ((:url . "https://github.com/stan-dev/stan-mode") (:commit . "2dd330604563d143031fc8ffd516266217aa1f9b") (:revdesc . "2dd330604563") (:keywords "languages" "c") (:authors ("Jeffrey Arnold" . "jeffrey.arnold@gmail.com") ("Daniel Lee" . "bearlee@alum.mit.edu") ("Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu")) (:maintainers ("Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu")) (:maintainer "Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu"))])
 (stan-snippets . [(10 2 0) ((emacs (24 3)) (stan-mode (10 1 0)) (yasnippet (0 8 0))) "Yasnippets for Stan" tar ((:url . "https://github.com/stan-dev/stan-mode") (:commit . "2dd330604563d143031fc8ffd516266217aa1f9b") (:revdesc . "2dd330604563") (:keywords "languages" "tools") (:authors ("Jeffrey Arnold" . "jeffrey.arnold@gmail.com") ("Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu")) (:maintainers ("Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu")) (:maintainer "Kazuki Yoshida" . "kazukiyoshida@mail.harvard.edu"))])
 (standard-dirs . [(2 0 0) ((emacs (26 1)) (f (0 20 0)) (s (1 7 0))) "Platform-specific paths for config, cache, and other data" tar ((:url . "https://github.com/lafrenierejm/standard-dirs.el") (:commit . "e37b7e1c714c7798cd8e3a6569e4d71b96718a60") (:revdesc . "e37b7e1c714c") (:keywords "files") (:authors ("Joseph M LaFreniere" . "joseph@lafreniere.xyz")) (:maintainers ("Joseph M LaFreniere" . "joseph@lafreniere.xyz")) (:maintainer "Joseph M LaFreniere" . "joseph@lafreniere.xyz"))])
 (starhugger . [(0 5 0) ((emacs (28 2)) (compat (29 1 4 0)) (dash (2 18 0)) (s (1 13 1)) (spinner (1 7 4)) (request (0 3 2))) "Hugging Face/AI-powered text & code completion client" tar ((:url . "https://gitlab.com/daanturo/starhugger.el") (:commit . "22eceb806947edc1ad35e10fb99bdfc65fe26ca3") (:revdesc . "v0.5.0-0-g22eceb806947") (:keywords "completion" "convenience" "languages"))])
 (stash . [(0 4 1) nil "Lightweight persistent caching" tar ((:url . "https://github.com/vermiculus/stash.el") (:commit . "638ae8a4f6d33af54fe77d57c2c0eb1800dd2e19") (:revdesc . "638ae8a4f6d3") (:keywords "extensions" "data" "internal" "lisp") (:authors ("Sean Allred" . "code@seanallred.com")) (:maintainers ("Sean Allred" . "code@seanallred.com")) (:maintainer "Sean Allred" . "code@seanallred.com"))])
 (status . [(0 3) nil "This package adds support for status icons to Emacs" tar ((:url . "https://github.com/tromey/emacs-status") (:commit . "b62c74bf272566f82a68622f29fb9edafea0f241") (:revdesc . "b62c74bf2725") (:keywords "frames" "multimedia") (:authors ("Tom Tromey" . "tom@tromey.com")) (:maintainers ("Tom Tromey" . "tom@tromey.com")) (:maintainer "Tom Tromey" . "tom@tromey.com"))])
 (stgit . [(2 4 12) nil "Major mode for StGit interaction" tar ((:url . "https://github.com/stacked-git/stgit") (:commit . "b691c04d4237394977b603867a063778668cbab3") (:revdesc . "v2.4.12-0-gb691c04d4237") (:authors ("David Kågedal" . "davidk@lysator.liu.se")) (:maintainers ("David Kågedal" . "davidk@lysator.liu.se")) (:maintainer "David Kågedal" . "davidk@lysator.liu.se"))])
 (sticky-scroll-mode . [(1 0 1) ((emacs (29 4))) "Sticky scrolling" tar ((:url . "https://github.com/jclasley/sticky-scroll-mode") (:commit . "4c8cad80f63ce23eb35c9955824b7f07812ee0fc") (:revdesc . "4c8cad80f63c") (:keywords "convenience" "extensions" "tools") (:authors ("Jon Lasley" . "jon.lasley+sticky@gmail.com")) (:maintainers ("Jon Lasley" . "jon.lasley+sticky@gmail.com")) (:maintainer "Jon Lasley" . "jon.lasley+sticky@gmail.com"))])
 (stock-tracker . [(0 1 6) ((emacs (27 1)) (dash (2 16 0)) (async (1 9 5))) "Track stock price" tar ((:url . "https://github.com/beacoder/stock-tracker") (:commit . "58018a1747273df23dec08ec5d318da1960428c1") (:revdesc . "58018a174727") (:keywords "convenience" "stock" "finance") (:authors ("Huming Chen" . "chenhuming@gmail.com")) (:maintainers ("Huming Chen" . "chenhuming@gmail.com")) (:maintainer "Huming Chen" . "chenhuming@gmail.com"))])
 (streak . [(3 0 0) ((emacs (27 1))) "Track a daily streak in your Mode Line" tar ((:url . "https://github.com/fosskers/streak") (:commit . "61723ebe656bc681fc87ad6d86fb9dfca2b2730a") (:revdesc . "61723ebe656b") (:keywords "calendar") (:authors ("Colin Woodbury" . "https://www.fosskers.ca")) (:maintainers ("Colin Woodbury" . "colin@fosskers.ca")) (:maintainer "Colin Woodbury" . "colin@fosskers.ca"))])
 (string-edit-at-point . [(1 0 0) ((dash (1 2 0))) "Avoid escape nightmares by editing string in separate buffer" tar ((:url . "https://github.com/magnars/string-edit.el") (:commit . "87936d816ae24184dd83688136531b6b6f1943fe") (:revdesc . "87936d816ae2") (:authors ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (string-inflection . [(1 0 16) nil "Underscore -> UPCASE -> CamelCase -> lowerCamelCase conversion of names" tar ((:url . "https://github.com/akicho8/string-inflection") (:commit . "fd7926ac17293e9124b31f706a4e8f38f6a9b855") (:revdesc . "fd7926ac1729") (:keywords "elisp") (:authors ("akicho8" . "akicho8@gmail.com")) (:maintainers ("akicho8" . "akicho8@gmail.com")) (:maintainer "akicho8" . "akicho8@gmail.com"))])
 (string-utils . [(0 3 2) ((list-utils (0 4 2))) "String-manipulation utilities" tar ((:url . "https://github.com/rolandwalker/string-utils") (:commit . "3ae530143899f533a9ef5e1f26f28b577ebe72ee") (:revdesc . "v0.3.2-0-g3ae530143899") (:keywords "extensions") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (stripe-buffer . [(0 2 5) ((cl-lib (1 0))) "Use a different background for even and odd lines" tar ((:url . "https://github.com/sabof/stripe-buffer") (:commit . "d9f009b92cf16fe2c40cd92b8f842a3872e6c190") (:revdesc . "d9f009b92cf1") (:authors ("Andy Stewart" . "lazycat.manatee@gmail.com")) (:maintainers ("sabof" . "esabof@gmail.com")) (:maintainer "sabof" . "esabof@gmail.com"))])
 (stylus-mode . [(1 0 0) ((sws-mode (0))) "Major mode for editing .jade files" tar ((:url . "https://github.com/brianc/jade-mode") (:commit . "4e7a20db492719062f40b225ed730ed50be5db56") (:revdesc . "v1.0.0-0-g4e7a20db4927"))])
 (subatomic-theme . [(1 8 1) nil "Low contrast bluish color theme" tar ((:url . "https://github.com/cryon/subatomic-theme") (:commit . "6a4086af748b1ecb27f6ba2aa2614988db16d594") (:revdesc . "1.8.1-0-g6a4086af748b") (:keywords "color-theme" "blue" "low contrast") (:authors ("John Olsson" . "john@cryon.se")) (:maintainers ("John Olsson" . "john@cryon.se")) (:maintainer "John Olsson" . "john@cryon.se"))])
 (subemacs . [(1 0) nil "Evaluating expressions in a fresh Emacs subprocess" tar ((:url . "https://github.com/kbauer/subemacs") (:commit . "24f0896f1995a3ea42a58b0452d250dcc6802944") (:revdesc . "24f0896f1995") (:keywords "extensions" "lisp" "multiprocessing") (:authors ("Klaus-Dieter Bauer" . "bauer.klaus.dieter@gmail.com")) (:maintainers ("Klaus-Dieter Bauer" . "bauer.klaus.dieter@gmail.com")) (:maintainer "Klaus-Dieter Bauer" . "bauer.klaus.dieter@gmail.com"))])
 (sublimity . [(20160629) nil "Smooth-scrolling, minimap and distraction-free mode" tar ((:url . "https://github.com/zk-phi/sublimity") (:commit . "ee9c9fbb92b8fc0c191e5e8640477e251b602bf9") (:revdesc . "ee9c9fbb92b8"))])
 (subsonic . [(0 4 1) ((emacs (27 1)) (transient (0 2))) "Browse and play music from subsonic servers with mpv" tar ((:url . "https://git.sr.ht/~amk/subsonic.el") (:commit . "011e58d434ed707a06a2cfa20509629ebb339c04") (:revdesc . "v0.4.1-0-g011e58d434ed") (:keywords "multimedia") (:authors ("Alex McGrath" . "amk@amk.ie")) (:maintainers ("Alex McGrath" . "amk@amk.ie")) (:maintainer "Alex McGrath" . "amk@amk.ie"))])
 (sudo-edit . [(0 1 1) ((emacs (24)) (cl-lib (0 5))) "Open files as another user" tar ((:url . "https://github.com/nflath/sudo-edit") (:commit . "a7ae1713bb659988bb1465a13b837fbc2d699504") (:revdesc . "a7ae1713bb65") (:keywords "convenience") (:authors ("Nathaniel Flath" . "flat0103@gmail.com")) (:maintainers ("Nathaniel Flath" . "flat0103@gmail.com")) (:maintainer "Nathaniel Flath" . "flat0103@gmail.com"))])
 (sudo-utils . [(3 0 1) ((emacs (25 1))) "Sudo utilities" tar ((:url . "https://github.com/alpha-catharsis/sudo-utils") (:commit . "089f7833fa256f293284a6286bf9cb2b78eff40d") (:revdesc . "089f7833fa25") (:keywords "processes" "unix") (:authors ("Alpha Catharsis" . "alpha.catharsis@gmail.com")) (:maintainers ("Alpha Catharsis" . "alpha.catharsis@gmail.com")) (:maintainer "Alpha Catharsis" . "alpha.catharsis@gmail.com"))])
 (suggest . [(0 7) ((emacs (24 4)) (loop (1 3)) (dash (2 13 0)) (s (1 11 0)) (f (0 18 2)) (spinner (1 7 3))) "Suggest elisp functions that give the output requested" tar ((:url . "https://github.com/Wilfred/suggest.el") (:commit . "31ab6c956d17176affbbe9ca53c416920180ddbd") (:revdesc . "31ab6c956d17") (:keywords "convenience") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk"))])
 (sumibi . [(2 0 0) ((emacs (28 1)) (popup (0 5 9)) (unicode-escape (1 1)) (deferred (0 5 1))) "Japanese input method powered by ChatGPT API" tar ((:url . "https://github.com/kiyoka/Sumibi") (:commit . "d6bbc65b71f0c59a471fffe13797d1ab6cac80f8") (:revdesc . "2.0.0-0-gd6bbc65b71f0") (:keywords "lisp" "ime" "japanese") (:authors ("Kiyoka Nishiyama" . "kiyoka@sumibi.org")) (:maintainers ("Kiyoka Nishiyama" . "kiyoka@sumibi.org")) (:maintainer "Kiyoka Nishiyama" . "kiyoka@sumibi.org"))])
 (suomalainen-kalenteri . [(2023 1 2) nil "Finnish national and Christian holidays for calendar" tar ((:url . "https://github.com/tlikonen/suomalainen-kalenteri") (:commit . "95d8b7f9b404c749831d7b4e0e396c76bd822015") (:revdesc . "2023.1.2-0-g95d8b7f9b404") (:keywords "calendar" "holidays" "finnish") (:authors ("Teemu Likonen" . "tlikonen@iki.fi")) (:maintainers ("Teemu Likonen" . "tlikonen@iki.fi")) (:maintainer "Teemu Likonen" . "tlikonen@iki.fi"))])
 (super-save . [(0 4 0) ((emacs (25 1))) "Auto-save buffers, based on your activity" tar ((:url . "https://github.com/bbatsov/super-save") (:commit . "103d7a4b9f04754e140b34166a1e983cf0f82693") (:revdesc . "103d7a4b9f04") (:keywords "convenience") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainers ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com"))])
 (svg-mode-line-themes . [(0 1 3) ((xmlgen (0 4))) "SVG-based themes for mode-line" tar ((:url . "https://github.com/sabof/svg-mode-line-themes") (:commit . "80a0e01839cafbd66899202e7764c33231974259") (:revdesc . "80a0e01839ca"))])
 (svgo . [(1 0 3) ((emacs (26 2))) "SVG optimization with SVGO" tar ((:url . "https://github.com/hupf/svgo.el") (:commit . "9b01cc9eb1fdf2731cd2b931a7dfe1f601b70786") (:revdesc . "9b01cc9eb1fd") (:keywords "tools") (:authors ("Mathis Hofer" . "mathis@fsfe.org")) (:maintainers ("Mathis Hofer" . "mathis@fsfe.org")) (:maintainer "Mathis Hofer" . "mathis@fsfe.org"))])
 (swagg . [(0 3 2) ((emacs (27 1)) (compat (29 1 4 0)) (request (0 3 3)) (dash (2 19 1)) (yaml (0 5 1)) (s (1 13 1))) "Swagger UI" tar ((:url . "https://github.com/isamert/swagg.el") (:commit . "747102ae3448e8dcd5209308447375fd0fee4f89") (:revdesc . "v0.3.2-0-g747102ae3448") (:keywords "tools" "convenience") (:authors ("Isa Mert Gurbuz" . "isamertgurbuz@gmail.com")) (:maintainers ("Isa Mert Gurbuz" . "isamertgurbuz@gmail.com")) (:maintainer "Isa Mert Gurbuz" . "isamertgurbuz@gmail.com"))])
 (swagger-to-org . [(0 0 2) ((emacs (24)) (cl-lib (0 5)) (json (1 4))) "Convert a swagger.json file into an org-mode file" tar ((:url . "https://github.com/ahungry/swagger-to-org") (:commit . "181357c71ea24bede263f5706d8781ad65e16877") (:revdesc . "181357c71ea2") (:keywords "ahungry" "emacs" "swagger" "openapi" "orgmode" "org" "export") (:authors ("Matthew Carter" . "m@ahungry.com")) (:maintainers ("Matthew Carter" . "m@ahungry.com")) (:maintainer "Matthew Carter" . "m@ahungry.com"))])
 (sway . [(0 7) ((emacs (28 1))) "Communication with the Sway window manager" tar ((:url . "https://github.com/thblt/sway.el") (:commit . "425005713af1e9269f1d5b5221fb4ea3046f52e4") (:revdesc . "0.7-0-g425005713af1") (:keywords "frames") (:authors ("Thibault Polge" . "thibault@thb.lt")) (:maintainers ("Thibault Polge" . "thibault@thb.lt")) (:maintainer "Thibault Polge" . "thibault@thb.lt"))])
 (sway-lang-mode . [(0 1 0) ((emacs (25 1)) (lsp-mode (6 0)) (rust-mode (1 0 5))) "Major mode for sway" tar ((:url . "https://github.com/hhamud/sway-mode") (:commit . "7823f801c4b7c57f63adfa0cc5ecfd60321de1a6") (:revdesc . "7823f801c4b7") (:keywords "languages"))])
 (sweetgreen . [(0 5) ((dash (2 12 1)) (helm (1 5 6)) (request (0 2 0)) (cl-lib (0 5))) "Order Salads from sweetgreen.com" tar ((:url . "https://github.com/CestDiego/sweetgreen.el") (:commit . "e40d2821ff941695e50a9b003a8c96d32c19bfdc") (:revdesc . "v0.5-0-ge40d2821ff94") (:keywords "salad" "food" "sweetgreen" "request") (:authors ("Diego Berrocal" . "cestdiego@gmail.com")) (:maintainers ("Diego Berrocal" . "cestdiego@gmail.com")) (:maintainer "Diego Berrocal" . "cestdiego@gmail.com"))])
 (swift-helpful . [(0 3) ((emacs (25 1)) (dash (2 12 0)) (lsp-mode (6 0)) (swift-mode (8 0 0))) "Show documentation for Swift programs" tar ((:url . "https://github.com/danielmartin/swift-helpful") (:commit . "ed36ea3d8cd80159f7f90b144c4503411b74ae3e") (:revdesc . "ed36ea3d8cd8") (:keywords "help" "swift") (:authors ("Daniel Martín" . "mardani29@yahoo.es")) (:maintainers ("Daniel Martín" . "mardani29@yahoo.es")) (:maintainer "Daniel Martín" . "mardani29@yahoo.es"))])
 (swift-mode . [(9 2 0) ((emacs (24 4)) (seq (2 3))) "Major-mode for Apple's Swift programming language" tar ((:url . "https://github.com/swift-emacs/swift-mode") (:commit . "ab189d6e89ac4c0f776d691a41ddeaf9730260d1") (:revdesc . "ab189d6e89ac") (:keywords "languages" "swift") (:authors ("taku0" . "mxxouy6x3m_github@tatapa.org") ("Chris Barrett" . "chris.d.barrett@me.com") ("Bozhidar Batsov" . "bozhidar@batsov.com") ("Arthur Evstifeev" . "lod@pisem.net")) (:maintainers ("taku0" . "mxxouy6x3m_github@tatapa.org")) (:maintainer "taku0" . "mxxouy6x3m_github@tatapa.org"))])
 (swift3-mode . [(2 1 1) ((emacs (24 4))) "Major-mode for Apple's Swift programming language" tar ((:url . "https://github.com/taku0/swift3-mode") (:commit . "ea34d46bf9a4293e75ffdac9500d34989316d9e9") (:revdesc . "ea34d46bf9a4") (:keywords "languages" "swift"))])
 (swiper . [(0 14 2) ((emacs (24 5)) (ivy (0 14 2))) "Isearch with an overview.  Oh, man!" tar ((:url . "https://github.com/abo-abo/swiper") (:commit . "8c30f4cab5948aa8d942a3b2bbf5fb6a94d9441d") (:revdesc . "0.14.2-0-g8c30f4cab594") (:keywords "matching") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Basil L. Contovounesios" . "contovob@tcd.ie")) (:maintainer "Basil L. Contovounesios" . "contovob@tcd.ie"))])
 (swiper-helm . [(0 2 0) ((emacs (24 1)) (swiper (0 1 0)) (helm (1 5 3))) "Helm version of Swiper" tar ((:url . "https://github.com/abo-abo/swiper-helm") (:commit . "93fb6db87bc6a5967898b5fd3286954cc72a0008") (:revdesc . "93fb6db87bc6") (:keywords "matching") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com"))])
 (switch-buffer-functions . [(0 0 1) nil "Hook run when current buffer changed" tar ((:url . "https://github.com/10sr/switch-buffer-functions-el") (:commit . "e1bccfff2d123b6218efab16c486215cedb9a108") (:revdesc . "e1bccfff2d12") (:keywords "hook" "utility") (:authors ("10sr" . "8slashes+el[at]gmail[dot]com")) (:maintainers ("10sr" . "8slashes+el[at]gmail[dot]com")) (:maintainer "10sr" . "8slashes+el[at]gmail[dot]com"))])
 (switch-window . [(1 6 2) ((emacs (24))) "A *visual* way to switch window" tar ((:url . "https://github.com/dimitri/switch-window") (:commit . "204f9fc1a39868a2d16ab9370a142c8c9c7a0943") (:revdesc . "204f9fc1a398") (:keywords "convenience") (:authors ("Dimitri Fontaine" . "dim@tapoueh.org") ("Feng Shu" . "tumashu@163.com")) (:maintainers ("Dimitri Fontaine" . "dim@tapoueh.org") ("Feng Shu" . "tumashu@163.com")) (:maintainer "Dimitri Fontaine" . "dim@tapoueh.org"))])
 (swoop . [(1 0) ((emacs (24 3)) (ht (2 0)) (pcre2el (1 5)) (async (1 1))) "Peculiar buffer navigation" tar ((:url . "https://github.com/emacsorphanage/swoop") (:commit . "de2d29eb45edab802cf8b275aa1c25a24050122e") (:revdesc . "de2d29eb45ed") (:keywords "tools" "swoop" "inner" "buffer" "search" "navigation"))])
 (sws-mode . [(1 0 0) nil "(S)ignificant (W)hite(S)pace mode" tar ((:url . "https://github.com/brianc/jade-mode") (:commit . "4e7a20db492719062f40b225ed730ed50be5db56") (:revdesc . "v1.0.0-0-g4e7a20db4927"))])
 (sx . [(0 4) ((emacs (24 1)) (cl-lib (0 5)) (json (1 3)) (markdown-mode (2 0)) (let-alist (1 0 3))) "StackExchange client. Ask and answer questions on Stack Overflow, Super User, and the likes" tar ((:url . "https://github.com/vermiculus/sx.el") (:commit . "4892f45746fb217d059f4fa074a237c5bac7dd6c") (:revdesc . "4892f45746fb") (:keywords "help" "hypermedia" "tools") (:authors ("Sean Allred" . "code@seanallred.com")) (:maintainers ("Sean Allred" . "code@seanallred.com")) (:maintainer "Sean Allred" . "code@seanallred.com"))])
 (sxiv . [(0 4 1) ((dash (2 16 0)) (emacs (25 1))) "Run the sxiv image viewer" tar ((:url . "https://codeberg.org/contrapunctus/sxiv.el") (:commit . "a531a7596e307a218beb8ff77893eeae61284f6e") (:revdesc . "a531a7596e30") (:keywords "multimedia") (:authors ("contrapunctus" . "xmpp:contrapunctus@jabber.fr")) (:maintainers ("contrapunctus" . "xmpp:contrapunctus@jabber.fr")) (:maintainer "contrapunctus" . "xmpp:contrapunctus@jabber.fr"))])
 (symbol-overlay . [(4 3) ((emacs (24 3)) (seq (2 2))) "Highlight symbols with keymap-enabled overlays" tar ((:url . "https://github.com/wolray/symbol-overlay") (:commit . "6151f4279bd94b5960149596b202cdcb45cacec2") (:revdesc . "6151f4279bd9") (:keywords "faces" "matching") (:authors ("wolray" . "wolray@foxmail.com")) (:maintainers ("wolray" . "wolray@foxmail.com")) (:maintainer "wolray" . "wolray@foxmail.com"))])
 (symbolword-mode . [(1 0) nil "[No description available]" tar ((:url . "https://github.com/ncaq/symbolword-mode") (:commit . "273dece5b04f7abc4c35048b2f64f04b33774b87") (:revdesc . "273dece5b04f"))])
 (symex . [(1 0) ((emacs (24 4)) (lispy (0 26 0)) (paredit (24)) (evil-cleverparens (20170718 413)) (evil (1 2 14)) (smartparens (1 11 0)) (evil-surround (1 0 4)) (hydra (0 15 0)) (seq (2 22)) (undo-tree (0 7 5))) "An evil way to edit Lisp symbolic expressions as trees" tar ((:url . "https://github.com/drym-org/symex.el") (:commit . "d37532a9dcff8ec5a2fdc54f27b517890f972bfb") (:revdesc . "1.0-0-gd37532a9dcff") (:keywords "lisp" "evil") (:authors ("Siddhartha Kasivajhula" . "sid@countvajhula.com")) (:maintainers ("Siddhartha Kasivajhula" . "sid@countvajhula.com")) (:maintainer "Siddhartha Kasivajhula" . "sid@countvajhula.com"))])
 (symon . [(20160630) nil "Tiny graphical system monitor" tar ((:url . "https://github.com/zk-phi/symon") (:commit . "7beeedd70dc37f5904c781fb697c8df056196ee9") (:revdesc . "7beeedd70dc3"))])
 (syncthing . [(3 0 1) ((emacs (27 1))) "Client for Syncthing" tar ((:url . "https://github.com/KeyWeeUsr/emacs-syncthing") (:commit . "5dbb9516f346c390bd9488da52cb4c4b6dda470d") (:revdesc . "3.0.1-0-g5dbb9516f346") (:keywords "convenience" "syncthing" "sync" "client" "view") (:authors ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainers ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainer "Peter Badida" . "keyweeusr@gmail.com"))])
 (synosaurus . [(0 2 0) ((cl-lib (0 5))) "An extensible thesaurus supporting lookup and substitution" tar ((:url . "https://github.com/hpdeifel/synosaurus") (:commit . "14d34fc92a77c3a916b4d58400424c44ae99cd81") (:revdesc . "v0.2.0-0-g14d34fc92a77") (:keywords "wp") (:authors ("Hans-Peter Deifel" . "hpd@hpdeifel.de")) (:maintainers ("Hans-Peter Deifel" . "hpd@hpdeifel.de")) (:maintainer "Hans-Peter Deifel" . "hpd@hpdeifel.de"))])
 (syntactic-sugar . [(0 9 4) nil "Effect-free forms such as if/then/else" tar ((:url . "https://github.com/rolandwalker/syntactic-sugar") (:commit . "06d943c6ad9507603bb6ab6d37be2d359d0763a9") (:revdesc . "v0.9.4-0-g06d943c6ad95") (:keywords "extensions") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (syntax-subword . [(0 2) nil "Make operations on words more fine-grained" tar ((:url . "https://github.com/jpkotta/syntax-subword") (:commit . "01b27feac37eb60cf73ff80374004d9e847e637d") (:revdesc . "01b27feac37e") (:authors ("Jonathan Kotta" . "jpkotta@gmail.com")) (:maintainers ("Jonathan Kotta" . "jpkotta@gmail.com")) (:maintainer "Jonathan Kotta" . "jpkotta@gmail.com"))])
 (syntree . [(1 2 0) ((emacs (27 1)) (org (9 2))) "Draw plain text constituency trees" tar ((:url . "https://github.com/enricoflor/syntree") (:commit . "7bbbd4904b0ffe452ec39630042dbc85a7a0b233") (:revdesc . "7bbbd4904b0f") (:authors ("Enrico Flor" . "enrico@eflor.net")) (:maintainers ("Enrico Flor" . "enrico@eflor.net")) (:maintainer "Enrico Flor" . "enrico@eflor.net"))])
 (syslog-mode . [(3 0) ((hide-lines (20130623)) (ov (20150311))) "Major-mode for viewing log files & strace output" tar ((:url . "https://github.com/vapniks/syslog-mode") (:commit . "014d78269daa99937fb4fa8f5d34e2b3eb368a5f") (:revdesc . "3.0-0-g014d78269daa") (:keywords "unix") (:authors ("Harley Gorrell" . "harley@panix.com")) (:maintainers ("Joe Bloggs" . "vapniks@yahoo.com")) (:maintainer "Joe Bloggs" . "vapniks@yahoo.com"))])
 (system-specific-settings . [(0 2) nil "Apply settings only on certain systems" tar ((:url . "https://github.com/DarwinAwardWinner/emacs-system-specific-settings") (:commit . "0050d85b2175095aa5ecf580a2fe43c069b0eef3") (:revdesc . "0050d85b2175") (:keywords "configuration"))])
 (systemd . [(1 6) ((emacs (24 4))) "Major mode for editing systemd units" tar ((:url . "https://github.com/holomorph/systemd-mode") (:commit . "1e7567a9973bf80cab0d7e0355656a84bee7ca96") (:revdesc . "v1.6-0-g1e7567a9973b") (:keywords "tools" "unix") (:authors ("Mark Oteiza" . "mvoteiza@udel.edu")) (:maintainers ("Mark Oteiza" . "mvoteiza@udel.edu")) (:maintainer "Mark Oteiza" . "mvoteiza@udel.edu"))])
 (ta . [(1 5) ((emacs (24 3)) (cl-lib (0 5))) "A tool to deal with Chinese homophonic characters" tar ((:url . "https://github.com/kuanyui/ta.el") (:commit . "9226afbe7abbefb825844ef3ba4ca15f1934cfc2") (:revdesc . "9226afbe7abb") (:keywords "tools") (:authors ("kuanyui" . "azazabc123@gmail.com")) (:maintainers ("kuanyui" . "azazabc123@gmail.com")) (:maintainer "kuanyui" . "azazabc123@gmail.com"))])
 (tab-bar-notch . [(0 0 6) ((emacs (27 1))) "Adjust tab-bar height for MacBook Pro notch" tar ((:url . "https://github.com/jimeh/tab-bar-notch") (:commit . "6d1101d8156e336f45122c04889327a4c5be253c") (:revdesc . "6d1101d8156e") (:keywords "convenience" "hardware") (:authors ("Jim Myhrberg" . "contact@jimeh.me")) (:maintainers ("Jim Myhrberg" . "contact@jimeh.me")) (:maintainer "Jim Myhrberg" . "contact@jimeh.me"))])
 (tab-line-nerd-icons . [(0 1) ((emacs (28 1)) (nerd-icons (0 1))) "Add icons to tab-line tabs" tar ((:url . "https://github.com/lucius-martius/tab-line-nerd-icons") (:commit . "7a49880f3ae39a8709d6887b26ec84ba2b92360c") (:revdesc . "7a49880f3ae3") (:keywords "lisp") (:authors ("Lucius Martius" . "lucius-martius@dorsai.eu")) (:maintainers ("Lucius Martius" . "lucius-martius@dorsai.eu")) (:maintainer "Lucius Martius" . "lucius-martius@dorsai.eu"))])
 (tabbar . [(2 2) nil "Display a tab bar in the header line" tar ((:url . "https://github.com/dholm/tabbar") (:commit . "82bbda31cbe8ef367dd6501c3aa14b7f2c835910") (:revdesc . "82bbda31cbe8") (:keywords "convenience") (:authors ("David Ponce" . "david@dponce.com")) (:maintainers ("David Ponce" . "david@dponce.com")) (:maintainer "David Ponce" . "david@dponce.com"))])
 (tabbar-ruler . [(0 45) ((tabbar (2 0 1))) "Pretty tabbar, autohide, use both tabbar/ruler" tar ((:url . "https://github.com/mattfidler/tabbar-ruler.el") (:commit . "7df2e4814018e84ef9261d04a2ade8168a44e3d7") (:revdesc . "7df2e4814018") (:keywords "tabbar" "ruler mode" "menu" "tool bar."))])
 (tablist . [(1 1) ((emacs (24 3))) "Extended tabulated-list-mode" tar ((:url . "https://github.com/emacsorphanage/tablist") (:commit . "5f7b71a92bfb25418d7da86ad9c45f14b149496f") (:revdesc . "5f7b71a92bfb") (:keywords "extensions" "lisp") (:authors ("Andreas Politz" . "politza@fh-trier.de")) (:maintainers ("Andreas Politz" . "politza@fh-trier.de")) (:maintainer "Andreas Politz" . "politza@fh-trier.de"))])
 (tabnine . [(0 1 0) ((emacs (27 1)) (dash (2 16 0)) (s (1 12 0)) (editorconfig (0 9 1)) (language-id (0 5 1)) (transient (0 4 0))) "An unofficial TabNine package with TabNine Chat supported" tar ((:url . "https://github.com/shuxiao9058/tabnine") (:commit . "64b1556e5acd165112827e4219d29cb0f5d24c7b") (:revdesc . "64b1556e5acd") (:keywords "convenience") (:authors ("Aaron Ji" . "shuxiao9058@gmail.com") ("Tommy Xiang" . "tommyx058@gmail.com") ("John Gong" . "gjtzone@hotmail.com")) (:maintainers ("Aaron Ji" . "shuxiao9058@gmail.com") ("Tommy Xiang" . "tommyx058@gmail.com") ("John Gong" . "gjtzone@hotmail.com")) (:maintainer "Aaron Ji" . "shuxiao9058@gmail.com"))])
 (tagedit . [(1 4 0) ((s (1 3 1)) (dash (1 0 3))) "Some paredit-like features for html-mode" tar ((:url . "https://github.com/magnars/tagedit") (:commit . "3fcf54b824b75c5ad68f5438d5638103049a389f") (:revdesc . "1.4.0-0-g3fcf54b824b7") (:keywords "convenience") (:authors ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (talonscript-mode . [(1 0 0) ((emacs (24 3))) "Major mode for Talon Voice's .talon files" tar ((:url . "https://github.com/jcaw/talonscript-mode") (:commit . "b6eb61f56349e0d47276270163ec611c2d5b188e") (:revdesc . "b6eb61f56349") (:keywords "languages") (:authors ("Jcaw" . "toastedjcaw@gmail.com")) (:maintainers ("Jcaw" . "toastedjcaw@gmail.com")) (:maintainer "Jcaw" . "toastedjcaw@gmail.com"))])
 (tao-theme . [(1 1 1) nil "This package provides two parametrized uncoloured color themes for Emacs: tao-yin and tao-yang" tar ((:url . "https://github.com/11111000000/tao-theme-emacs") (:commit . "af142b423536b47bce67afda5108dbf3a9317521") (:revdesc . "af142b423536") (:authors ("Peter Kosov" . "11111000000@email.com")) (:maintainers ("Peter Kosov" . "11111000000@email.com")) (:maintainer "Peter Kosov" . "11111000000@email.com"))])
 (taskpaper-mode . [(1 0) nil "Major mode for working with TaskPaper files" tar ((:url . "https://github.com/saf-dmitry/taskpaper-mode") (:commit . "169dab1eb632e5ac5e34608be2df4e9854368180") (:revdesc . "169dab1eb632") (:keywords "outlines" "notetaking" "task management" "productivity" "taskpaper") (:authors ("Dmitry Safronov" . "saf.dmitry@gmail.com")) (:maintainers ("Dmitry Safronov" . "saf.dmitry@gmail.com")) (:maintainer "Dmitry Safronov" . "saf.dmitry@gmail.com"))])
 (tawny-mode . [(2 3 3) ((cider (0 12)) (emacs (25))) "Ontology Editing with Tawny-OWL" tar ((:url . "https://github.com/phillord/tawny-owl") (:commit . "b2708d693400a2010370df040d7571bc30fa4d75") (:revdesc . "2.3.3-0-gb2708d693400") (:authors ("Phillip Lord" . "phillip.lord@newcastle.ac.uk")) (:maintainers ("Phillip Lord" . "phillip.lord@newcastle.ac.uk")) (:maintainer "Phillip Lord" . "phillip.lord@newcastle.ac.uk"))])
 (telega . [(0 8 3) ((emacs (26 1)) (visual-fill-column (1 9)) (rainbow-identifiers (0 2 2))) "Telegram client (unofficial)" tar ((:url . "https://github.com/zevlg/telega.el") (:commit . "ac3634e2e7efe9c29c4311196e0ed67085d58f11") (:revdesc . "ac3634e2e7ef") (:keywords "comm") (:authors ("Zajcev Evgeny" . "zevlg@yandex.ru")) (:maintainers ("Zajcev Evgeny" . "zevlg@yandex.ru")) (:maintainer "Zajcev Evgeny" . "zevlg@yandex.ru"))])
 (telepathy . [(1 0) nil "Access Telepathy from Emacs" tar ((:url . "https://github.com/NicolasPetton/telepathy.el") (:commit . "211d785b02a29ddc254422fdcc3db45262582f8c") (:revdesc . "211d785b02a2") (:keywords "telepathy" "tools") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:maintainers ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com"))])
 (telephone-line . [(0 6) ((emacs (24 4)) (cl-lib (0 5)) (cl-generic (0 2)) (seq (1 8))) "Rewrite of Powerline" tar ((:url . "https://github.com/dbordak/telephone-line") (:commit . "314187790b5c5e9962c6d8eac9323b5b801e4aef") (:revdesc . "0.6-0-g314187790b5c") (:keywords "mode-line") (:authors ("Daniel Bordak" . "dbordak@fastmail.fm")) (:maintainers ("Daniel Bordak" . "dbordak@fastmail.fm")) (:maintainer "Daniel Bordak" . "dbordak@fastmail.fm"))])
 (tempel . [(1 2) ((emacs (27 1)) (compat (30))) "Tempo templates/snippets with in-buffer field editing" tar ((:url . "https://github.com/minad/tempel") (:commit . "317c0e41d542721db11a7a8a1c6b78762959259b") (:revdesc . "317c0e41d542") (:keywords "abbrev" "languages" "tools" "text") (:authors ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainers ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de"))])
 (templ-ts-mode . [(0 3) ((emacs (29 1))) "Major mode for editing Templ files" tar ((:url . "https://github.com/danderson/templ-ts-mode") (:commit . "f1df396a5db1d9aef9a3f7fb72be1d0c33e32366") (:revdesc . "f1df396a5db1") (:keywords "languages") (:authors ("David Anderson" . "dave@natulte.net")) (:maintainers ("David Anderson" . "dave@natulte.net")) (:maintainer "David Anderson" . "dave@natulte.net"))])
 (templatel . [(0 1 6) ((emacs (25 1))) "Templating language;" tar ((:url . "https://github.com/emacs-love/templatel") (:commit . "8374097a129b2cd13c449568f95ee7380b36b307") (:revdesc . "8374097a129b") (:authors ("Lincoln Clarete" . "lincoln@clarete.li")) (:maintainers ("Lincoln Clarete" . "lincoln@clarete.li")) (:maintainer "Lincoln Clarete" . "lincoln@clarete.li"))])
 (ten-hundred-mode . [(1 0 1) ((cl-lib (0 5))) "Use only the ten hundred most usual words" tar ((:url . "https://github.com/aaron-em/ten-hundred-mode.el") (:commit . "bdcfda49b1819e82d61fe90947e50bb948cf7933") (:revdesc . "1.0.1-0-gbdcfda49b181"))])
 (term-alert . [(1 2) ((emacs (24 0)) (term-cmd (1 1)) (alert (1 1)) (f (0 18 2))) "Notifications when commands complete in term.el" tar ((:url . "https://github.com/calliecameron/term-alert") (:commit . "47af9e6fe483ef0d393098c145f499362a33292a") (:revdesc . "47af9e6fe483") (:keywords "notifications" "processes") (:authors ("Callum J. Cameron" . "cjcameron7@gmail.com")) (:maintainers ("Callum J. Cameron" . "cjcameron7@gmail.com")) (:maintainer "Callum J. Cameron" . "cjcameron7@gmail.com"))])
 (term-cmd . [(1 1) ((emacs (24 0)) (dash (2 12 0)) (f (0 18 2))) "Send commands from programs running in term.el" tar ((:url . "https://github.com/calliecameron/term-cmd") (:commit . "6c9cbc659b70241d2ed1601eea34aeeca0646dac") (:revdesc . "6c9cbc659b70") (:keywords "processes") (:authors ("Callum J. Cameron" . "cjcameron7@gmail.com")) (:maintainers ("Callum J. Cameron" . "cjcameron7@gmail.com")) (:maintainer "Callum J. Cameron" . "cjcameron7@gmail.com"))])
 (term-manager . [(0 2 0) ((dash (2 12 0)) (emacs (24 4))) "Contextual terminal management" tar ((:url . "https://github.com/colonelpanic8/term-manager") (:commit . "31a3d16ba5a4f9e6f4bc52275eaedf55a96154a8") (:revdesc . "31a3d16ba5a4") (:keywords "terminals" "tools") (:authors ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainers ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainer "Ivan Malison" . "IvanMalison@gmail.com"))])
 (term-project . [(0 2 0) ((emacs (28 1)) (term-manager (0 1 0))) "Terminal management for project.el" tar ((:url . "https://github.com/colonelpanic8/term-manager") (:commit . "31a3d16ba5a4f9e6f4bc52275eaedf55a96154a8") (:revdesc . "31a3d16ba5a4") (:keywords "project" "tools" "terminals" "vc") (:authors ("Ivan Malison" . "IvanMalison@gmail.com") ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainers ("Ivan Malison" . "IvanMalison@gmail.com") ("ROCKTAKEY" . "rocktakey@gmail.com")) (:maintainer "Ivan Malison" . "IvanMalison@gmail.com"))])
 (term-projectile . [(0 2 0) ((emacs (24)) (term-manager (0 1 0)) (projectile (0 13 0))) "Projectile terminal management" tar ((:url . "https://github.com/colonelpanic8/term-manager") (:commit . "31a3d16ba5a4f9e6f4bc52275eaedf55a96154a8") (:revdesc . "31a3d16ba5a4") (:keywords "projectile" "tools" "terminals" "vc") (:authors ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainers ("Ivan Malison" . "IvanMalison@gmail.com")) (:maintainer "Ivan Malison" . "IvanMalison@gmail.com"))])
 (term-run . [(0 1 5) nil "Run arbitrary command in terminal buffer" tar ((:url . "https://github.com/10sr/term-run-el") (:commit . "54650dbbabb13cb2a6c0670ff6b24b29717a6a8b") (:revdesc . "54650dbbabb1") (:keywords "utility" "shell" "command" "term-mode") (:authors ("10sr" . "8slashes+el[at]gmail[dot]com")) (:maintainers ("10sr" . "8slashes+el[at]gmail[dot]com")) (:maintainer "10sr" . "8slashes+el[at]gmail[dot]com"))])
 (termbright-theme . [(1 0) ((emacs (24 1))) "A more usable theme for white-on-black terminals" tar ((:url . "https://github.com/bmastenbrook/termbright-theme-el") (:commit . "bec6ab14336c0611e85f45486276004f16d20607") (:revdesc . "bec6ab14336c") (:keywords "themes") (:authors ("Brian Mastenbrook" . "brian@mastenbrook.net")) (:maintainers ("Brian Mastenbrook" . "brian@mastenbrook.net")) (:maintainer "Brian Mastenbrook" . "brian@mastenbrook.net"))])
 (terminal-here . [(2 0) ((emacs (25 1))) "Run an external terminal in current directory" tar ((:url . "https://github.com/davidshepherd7/terminal-here") (:commit . "c16a500926416c09cd2faee6ab9541686b51e34f") (:revdesc . "c16a50092641") (:keywords "tools" "frames") (:authors ("David Shepherd" . "davidshepherd7@gmail.com")) (:maintainers ("David Shepherd" . "davidshepherd7@gmail.com")) (:maintainer "David Shepherd" . "davidshepherd7@gmail.com"))])
 (tern . [(0 24 3) ((json (1 2)) (cl-lib (0 5)) (emacs (24))) "Tern-powered JavaScript integration" tar ((:url . "https://github.com/ternjs/tern") (:commit . "0d19800db70a6348c627a69f444b91d21ad89629") (:revdesc . "0d19800db70a"))])
 (tern-auto-complete . [(0 24 3) ((tern (0 0 1)) (auto-complete (1 4)) (cl-lib (0 5)) (emacs (24))) "Tern Completion by auto-complete.el" tar ((:url . "https://github.com/ternjs/tern") (:commit . "0d19800db70a6348c627a69f444b91d21ad89629") (:revdesc . "0d19800db70a") (:authors (nil . "m.sakuraiatkiwanami.net")) (:maintainers (nil . "m.sakuraiatkiwanami.net")) (:maintainer nil . "m.sakuraiatkiwanami.net"))])
 (tern-context-coloring . [(1 0 1) ((emacs (24 3)) (context-coloring (8 1 0)) (tern (0 0 1))) "Use Tern for context coloring" tar ((:url . "https://github.com/jacksonrayhamilton/tern-context-coloring") (:commit . "3a8e979d6cc83aabcb3dda3f5f31a6422532efba") (:revdesc . "v1.0.1-0-g3a8e979d6cc8") (:keywords "convenience" "faces" "tools") (:authors ("Jackson Ray Hamilton" . "jackson@jacksonrayhamilton.com")) (:maintainers ("Jackson Ray Hamilton" . "jackson@jacksonrayhamilton.com")) (:maintainer "Jackson Ray Hamilton" . "jackson@jacksonrayhamilton.com"))])
 (terraform-doc . [(2 0 1) ((emacs (25 1)) (request (0 3 0)) (promise (1 1)) (org (9 2))) "Look up terraform documentation on the fly" tar ((:url . "https://github.com/TxGVNN/terraform-doc") (:commit . "26a6674fcf6f16e4865ff5e6600bb273fdc77779") (:revdesc . "26a6674fcf6f") (:keywords "comm" "docs" "tools" "terraform") (:authors ("Giap Tran" . "txgvnn@gmail.com")) (:maintainers ("Giap Tran" . "txgvnn@gmail.com")) (:maintainer "Giap Tran" . "txgvnn@gmail.com"))])
 (terraform-mode . [(1 0 1) ((emacs (24 3)) (hcl-mode (0 3)) (dash (2 17 0))) "Major mode for terraform configuration file" tar ((:url . "https://github.com/hcl-emacs/terraform-mode") (:commit . "56f19abae95afb7e13e48ec3e6aeba3820d31307") (:revdesc . "56f19abae95a") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (test-case-mode . [(1 0) ((fringe-helper (0 1 1))) "Unit test front-end" tar ((:url . "https://codeberg.org/emacs-weirdware-abandoned/test-case-mode") (:commit . "26e397c0f930b7eb0be413ef7dd257b1da052bec") (:revdesc . "1.0-0-g26e397c0f930") (:keywords "tools") (:authors ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainers ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainer "Nikolaj Schumacher" . "bugs*nschumde"))])
 (test-simple . [(1 0) nil "Simple Unit Test Framework for Emacs Lisp" tar ((:url . "https://github.com/rocky/emacs-test-simple") (:commit . "75eea25bae04d8e5e3e835a2770f02f0ff4602c4") (:revdesc . "75eea25bae04") (:keywords "unit-test"))])
 (texfrag . [(1 0 1) ((emacs (25)) (auctex (11 90 2))) "Preview LaTeX fragments in alien major modes" tar ((:url . "https://github.com/TobiasZawada/texfrag") (:commit . "270a8a4b5dadddc5b226d9a9c6c7868ea6bfe86f") (:revdesc . "270a8a4b5dad") (:keywords "tex" "languages" "wp") (:authors ("Tobias Zawada" . "i@tn-home.de")) (:maintainers ("Tobias Zawada" . "i@tn-home.de")) (:maintainer "Tobias Zawada" . "i@tn-home.de"))])
 (textmate . [(1) nil "[No description available]" tar ((:url . "https://github.com/defunkt/textmate.el") (:commit . "484845493a3c9b570799aea5195a5435a5a01b76") (:revdesc . "484845493a3c") (:keywords "textmate" "osx" "mac") (:authors ("Chris Wanstrath" . "chris@ozmm.org")) (:maintainers ("Chris Wanstrath" . "chris@ozmm.org")) (:maintainer "Chris Wanstrath" . "chris@ozmm.org"))])
 (textmate-to-yas . [(0 21) nil "Import Textmate macros into yasnippet syntax" tar ((:url . "https://github.com/mattfidler/textmate-to-yas.el") (:commit . "8805e5159329e1b74629b7b584373fc446f57d31") (:revdesc . "v0.21-0-g8805e5159329") (:keywords "yasnippet" "textmate"))])
 (textsize . [(3 0) ((emacs (26 1))) "Configure frame text size automatically" tar ((:url . "https://github.com/WJCFerguson/textsize") (:commit . "df91392c3c928d7841631f5809716b9cf0f7309e") (:revdesc . "3.0-0-gdf91392c3c92") (:keywords "convenience") (:authors ("James Ferguson" . "james@faff.org")) (:maintainers ("James Ferguson" . "james@faff.org")) (:maintainer "James Ferguson" . "james@faff.org"))])
 (textx-mode . [(0 0 2) ((emacs (24 3))) "Major mode for editing TextX files" tar ((:url . "https://github.com/textX/textx-mode") (:commit . "72f9f0c5855b382024f0da8f56833c22a70a5cb3") (:revdesc . "72f9f0c5855b") (:keywords "textx") (:authors ("Novak Boškov" . "gnovak.boskov@gmail.com")) (:maintainers ("Novak Boškov" . "gnovak.boskov@gmail.com")) (:maintainer "Novak Boškov" . "gnovak.boskov@gmail.com"))])
 (theme-changer . [(2 3 0) ((cl-lib (0))) "Sunrise/Sunset Theme Changer for Emacs" tar ((:url . "https://github.com/hadronzoo/theme-changer") (:commit . "2312851b08de2e810c0f51a405b413c039cc8d2f") (:revdesc . "2312851b08de") (:keywords "color-theme" "deftheme" "solar" "sunrise" "sunset") (:authors ("Joshua B. Griffith" . "josh.griffith@gmail.com")) (:maintainers ("Samuel W. Flint" . "swflint@flintfam.org")) (:maintainer "Samuel W. Flint" . "swflint@flintfam.org"))])
 (theme-looper . [(2 7 0) ((emacs (24)) (cl-lib (0 5))) "Loop thru the available color-themes" tar ((:url . "https://github.com/myTerminal/theme-looper") (:commit . "6bc170097f1dfb7ea4db91544c5ab653279e15cd") (:revdesc . "6bc170097f1d") (:keywords "convenience" "color-themes") (:authors ("Mohammed Ismail Ansari" . "team.terminal@gmail.com")) (:maintainers ("Mohammed Ismail Ansari" . "team.terminal@gmail.com")) (:maintainer "Mohammed Ismail Ansari" . "team.terminal@gmail.com"))])
 (thinks . [(1 12) ((cl-lib (0 5))) "Insert text in a think bubble" tar ((:url . "https://github.com/davep/thinks.el") (:commit . "7bdc418ff946d0cc9ea4cc73d38b3c71ffaa838d") (:revdesc . "7bdc418ff946") (:keywords "convenience" "quoting") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (third-time . [(1 3 0) ((emacs (27 1))) "Third Time: A Better Way to Work" tar ((:url . "https://git.sr.ht/~swflint/third-time") (:commit . "d1e0e146c298de0114035b19c9c4f990db7f1ae5") (:revdesc . "v1.3.0-0-gd1e0e146c298") (:authors ("Samuel W. Flint" . "swflint@flintfam.org")) (:maintainers ("Samuel W. Flint" . "swflint@flintfam.org")) (:maintainer "Samuel W. Flint" . "swflint@flintfam.org"))])
 (thrift . [(2024 12 9 0) ((emacs (24))) "Major mode for fbthrift and Apache Thrift files" tar ((:url . "https://github.com/facebook/fbthrift") (:commit . "f63b3d9cc4834b94361133aa84ce6ca3120b1fe6") (:revdesc . "f63b3d9cc483") (:keywords "languages"))])
 (tickscript-mode . [(0 4 1) ((emacs (24 1))) "A major mode for Tickscript files" tar ((:url . "https://github.com/msherry/tickscript-mode") (:commit . "6e7564593d7735acc9f3fa670ec6512991cb73a1") (:revdesc . "0.4.1-0-g6e7564593d77") (:keywords "languages") (:authors ("Marc Sherry" . "msherry@gmail.com")) (:maintainers ("Marc Sherry" . "msherry@gmail.com")) (:maintainer "Marc Sherry" . "msherry@gmail.com"))])
 (tidal . [(1 9 5) ((haskell-mode (16)) (emacs (25 1))) "Interact with TidalCycles for live coding patterns" tar ((:url . "https://github.com/tidalcycles/Tidal") (:commit . "88f09edf6bef2228d5f530dea872b08a9d803066") (:revdesc . "88f09edf6bef") (:keywords "tools") (:authors (nil . "alex@slab.org")) (:maintainers (nil . "alex@slab.org")) (:maintainer nil . "alex@slab.org"))])
 (tide . [(5 1 3) ((emacs (25 1)) (dash (2 10 0)) (s (1 11 0)) (flycheck (27)) (cl-lib (0 5))) "Typescript Interactive Development Environment" tar ((:url . "https://github.com/ananthakumaran/tide") (:commit . "bb09bccf070c1915ca8dbaaaaee4e9e3d7ab2ec7") (:revdesc . "bb09bccf070c") (:keywords "typescript") (:authors ("Anantha kumaran" . "ananthakumaran@gmail.com")) (:maintainers ("Anantha kumaran" . "ananthakumaran@gmail.com")) (:maintainer "Anantha kumaran" . "ananthakumaran@gmail.com"))])
 (tiktoken . [(0 2 1) ((emacs (28 0)) (f (0 20 0))) "Count BPE Tokens" tar ((:url . "https://github.com/zkry/tiktoken.el") (:commit . "1dec1547024c10f32cd49129f937fa1d3ee39d01") (:revdesc . "1dec1547024c") (:keywords "tools"))])
 (time-block . [(1 6 2) ((emacs (25 1)) (ts (0 1))) "Block running commands using time" tar ((:url . "https://git.sr.ht/~swflint/time-block-command") (:commit . "0fdb488c3fa3da2934ee486613f5bf46712b97d6") (:revdesc . "1.6.2-0-g0fdb488c3fa3") (:keywords "tools" "productivity" "convenience") (:authors ("Samuel W. Flint" . "swflint@flintfam.org")) (:maintainers ("Samuel W. Flint" . "swflint@flintfam.org")) (:maintainer "Samuel W. Flint" . "swflint@flintfam.org"))])
 (timer-revert . [(0 1) nil "Minor mode to revert buffer for a given time interval" tar ((:url . "https://github.com/yyr/timer-revert") (:commit . "31ad8d94b85807cd9f63fcba0c90c3e9a9515fa2") (:revdesc . "31ad8d94b858") (:keywords "timer" "revert" "auto-revert.") (:maintainers (nil . "hi@yagnesh.org")) (:maintainer nil . "hi@yagnesh.org"))])
 (timesheet . [(0 5 0) ((s (1)) (org (9))) "Timesheet management add-on for org-mode" tar ((:url . "https://github.com/tmarble/timesheet.el") (:commit . "511751b239c84d7619ec1c61d7f108b732b64442") (:revdesc . "511751b239c8") (:keywords "org" "timesheet"))])
 (timonier . [(0 1 0) ((s (1 11 0)) (dash (2 12 0)) (pkg-info (0 5 0)) (hydra (0 13 6)) (request (0 2 0)) (all-the-icons (2 0 0))) "Timonier, Manage Kubernetes Applications from Emacs" tar ((:url . "https://github.com/nlamirault/timonier") (:commit . "33ca5887a1d1b63349177237e9edfb73546511a5") (:revdesc . "33ca5887a1d1") (:keywords "kubernetes" "docker") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (timu-caribbean-theme . [(1 5) ((emacs (27 1))) "Color theme with cyan as a dominant color" tar ((:url . "https://gitlab.com/aimebertrand/timu-caribbean-theme") (:commit . "af60151fe35bd1c780b7c4a37032699989ee6162") (:revdesc . "af60151fe35b") (:keywords "faces" "themes") (:authors ("Aimé Bertrand" . "aime.bertrand@macowners.club")) (:maintainers ("Aimé Bertrand" . "aime.bertrand@macowners.club")) (:maintainer "Aimé Bertrand" . "aime.bertrand@macowners.club"))])
 (timu-line . [(1 0) ((emacs (28 1))) "Custom and simple mode line" tar ((:url . "https://gitlab.com/aimebertrand/timu-line") (:commit . "9744c8ac9070ca8b744c0207a6f573d8eddf5adc") (:revdesc . "9744c8ac9070") (:keywords "modeline" "frames" "ui") (:authors ("Aimé Bertrand" . "aime.bertrand@macowners.club")) (:maintainers ("Aimé Bertrand" . "aime.bertrand@macowners.club")) (:maintainer "Aimé Bertrand" . "aime.bertrand@macowners.club"))])
 (timu-macos-theme . [(1 4) ((emacs (27 1))) "Color theme inspired by the macOS UI" tar ((:url . "https://gitlab.com/aimebertrand/timu-macos-theme") (:commit . "7734bd7287fa18cad8c146beabd52b52444e9da3") (:revdesc . "7734bd7287fa") (:keywords "faces" "themes") (:authors ("Aimé Bertrand" . "aime.bertrand@macowners.club")) (:maintainers ("Aimé Bertrand" . "aime.bertrand@macowners.club")) (:maintainer "Aimé Bertrand" . "aime.bertrand@macowners.club"))])
 (timu-rouge-theme . [(1 9) ((emacs (27 1))) "Color theme inspired by the Rouge Theme for VSCode" tar ((:url . "https://gitlab.com/aimebertrand/timu-rouge-theme") (:commit . "87117f15ea5fcfacbbad23ea6f345d18c2ff0009") (:revdesc . "87117f15ea5f") (:keywords "faces" "themes") (:authors ("Aimé Bertrand" . "aime.bertrand@macowners.club")) (:maintainers ("Aimé Bertrand" . "aime.bertrand@macowners.club")) (:maintainer "Aimé Bertrand" . "aime.bertrand@macowners.club"))])
 (timu-spacegrey-theme . [(2 9) ((emacs (26 1))) "Color theme inspired by the Spacegray theme in Sublime Text" tar ((:url . "https://gitlab.com/aimebertrand/timu-spacegrey-theme") (:commit . "0505a7c0d306632972f29e584e83e0cd58eba2ce") (:revdesc . "0505a7c0d306") (:keywords "faces" "themes") (:authors ("Aimé Bertrand" . "aime.bertrand@macowners.club")) (:maintainers ("Aimé Bertrand" . "aime.bertrand@macowners.club")) (:maintainer "Aimé Bertrand" . "aime.bertrand@macowners.club"))])
 (titlecase . [(0 4 1) ((emacs (25 1))) "Title-case phrases" tar ((:url . "https://codeberg.org/acdw/titlecase.el") (:commit . "dafaa6ca09fdf1ae8413159cae2b5d74e9713440") (:revdesc . "dafaa6ca09fd") (:authors ("Case Duckworth" . "acdw@acdw.net")) (:maintainers ("Case Duckworth" . "acdw@acdw.net")) (:maintainer "Case Duckworth" . "acdw@acdw.net"))])
 (toc-org . [(1 2 0) nil "Add table of contents to org-mode files (formerly, org-toc)" tar ((:url . "https://github.com/snosov1/toc-org") (:commit . "df4ad6ff15e3b02f6322305638a441a636b9b37e") (:revdesc . "df4ad6ff15e3") (:keywords "org-mode" "org-toc" "toc-org" "org" "toc" "table" "of" "contents") (:authors ("Sergei Nosov" . "sergei.nosov[at]gmail.com")) (:maintainers ("Sergei Nosov" . "sergei.nosov[at]gmail.com")) (:maintainer "Sergei Nosov" . "sergei.nosov[at]gmail.com"))])
 (tokei . [(0 2) ((emacs (27 1)) (magit-section (3 3 0))) "Display codebase statistics" tar ((:url . "https://github.com/nagy/tokei.el") (:commit . "181021cd881eecd604a546d4a717866a81c7a511") (:revdesc . "v0.2-0-g181021cd881e") (:authors ("Daniel Nagy" . "https://github.com/nagy")) (:maintainers ("Daniel Nagy" . "danielnagy@posteo.de")) (:maintainer "Daniel Nagy" . "danielnagy@posteo.de"))])
 (toml . [(0 1 0) nil "TOML (Tom's Obvious, Minimal Language) parser" tar ((:url . "https://github.com/gongo/emacs-toml") (:commit . "9633a6872928e737a2335aae1065768b23d8c3b3") (:revdesc . "9633a6872928") (:keywords "toml" "parser") (:authors ("Wataru MIYAGUNI" . "gonngo@gmail.com")) (:maintainers ("Wataru MIYAGUNI" . "gonngo@gmail.com")) (:maintainer "Wataru MIYAGUNI" . "gonngo@gmail.com"))])
 (tomorrow-night-deepblue-theme . [(1 2 0) ((emacs (26 1))) "The Tomorrow Night Deepblue color theme" tar ((:url . "https://github.com/jamescherti/tomorrow-night-deepblue-theme.el") (:commit . "cebf87c7c19eff0cb7a81225dc052e21861b12ae") (:revdesc . "1.2.0-0-gcebf87c7c19e") (:keywords "faces" "themes"))])
 (topspace . [(0 3 1) ((emacs (25 1))) "Recenter line 1 with scrollable upper margin/padding" tar ((:url . "https://github.com/trevorpogue/topspace") (:commit . "33c2a6f0a11d1d88cdb2065c5a897e33507f4c86") (:revdesc . "33c2a6f0a11d") (:keywords "convenience" "scrolling" "center" "cursor" "margin" "padding") (:authors ("Trevor Edwin Pogue" . "trevor.pogue@gmail.com")) (:maintainers ("Trevor Edwin Pogue" . "trevor.pogue@gmail.com")) (:maintainer "Trevor Edwin Pogue" . "trevor.pogue@gmail.com"))])
 (torus . [(2 2) ((emacs (26)) (duo (0))) "A buffer groups manager" tar ((:url . "https://github.com/chimay/torus") (:commit . "2fa2c92bf2c66d87ddcd519277e469f67c6615a9") (:revdesc . "v2.2-0-g2fa2c92bf2c6") (:keywords "files" "buffers" "groups" "persistent" "history" "layout" "tabs"))])
 (total-lines . [(0 2 0) ((emacs (24 3))) "Keep track of a buffer's total number of lines" tar ((:url . "https://github.com/hinrik/total-lines") (:commit . "58a9fb0ffca63e3dfb3b27c7d91b4630e422903b") (:revdesc . "58a9fb0ffca6") (:keywords "convenience" "mode-line"))])
 (totp-auth . [(1 1) ((emacs (27 1)) (base32 (0 1))) "RFC6238 TOTP" tar ((:url . "https://gitlab.com/fledermaus/totp.el") (:commit . "927257e97a602b6979a75028e8417bf1499582d4") (:revdesc . "927257e97a60") (:keywords "2fa" "two-factor" "totp" "otp" "password" "comm") (:authors ("Vivek Das Mohapatra" . "vivek@etla.org")) (:maintainers ("Vivek Das Mohapatra" . "vivek@etla.org")) (:maintainer "Vivek Das Mohapatra" . "vivek@etla.org"))])
 (tox . [(0 4 0) nil "Launch current python test with tox" tar ((:url . "https://github.com/chmouel/tox.el") (:commit . "7655eb254038d5e34433e8a9d66b3ffc9c72e40c") (:revdesc . "7655eb254038") (:keywords "convenience" "tox" "python" "tests") (:authors ("Chmouel Boudjnah" . "chmouel@chmouel.com")) (:maintainers ("Chmouel Boudjnah" . "chmouel@chmouel.com")) (:maintainer "Chmouel Boudjnah" . "chmouel@chmouel.com"))])
 (toxi-theme . [(0 1 2) ((emacs (24))) "A dark color theme by toxi" tar ((:url . "https://github.com/postspectacular/toxi-theme") (:commit . "9e572c6e149249b96f64722cf6f86c3aaf5f2ede") (:revdesc . "9e572c6e1492") (:authors ("Karsten Schmidt" . "info@postspectacular.com")) (:maintainers ("Karsten Schmidt" . "info@postspectacular.com")) (:maintainer "Karsten Schmidt" . "info@postspectacular.com"))])
 (tp . [(0 6) ((emacs (28 1)) (transient (0 5 0))) "Utilities for transient menus that POST to an API" tar ((:url . "https://codeberg.org/martianh/tp.el") (:commit . "df6490d86f24fff22f5ea4f7d887fc60caed1163") (:revdesc . "df6490d86f24") (:keywords "convenience" "api" "requests") (:authors ("Marty Hiatt" . "mousebot@disroot.org")) (:maintainers ("Marty Hiatt" . "mousebot@disroot.org")) (:maintainer "Marty Hiatt" . "mousebot@disroot.org"))])
 (tr-ime . [(0 5 0) ((emacs (27 1)) (w32-ime (0 0 1))) "Emulator of IME patch for Windows" tar ((:url . "https://github.com/trueroad/tr-emacs-ime-module") (:commit . "87f0677220b755f947fe5f373b6a34e1afb82f3c") (:revdesc . "v0.5.0-0-g87f0677220b7") (:authors ("Masamichi Hosoda" . "trueroad@trueroad.jp")) (:maintainers ("Masamichi Hosoda" . "trueroad@trueroad.jp")) (:maintainer "Masamichi Hosoda" . "trueroad@trueroad.jp"))])
 (traad . [(3 1 1) ((dash (2 13 0)) (deferred (0 3 2)) (popup (0 5 0)) (request (0 2 0)) (request-deferred (0 2 0)) (virtualenvwrapper (20151123))) "Emacs interface to the traad refactoring server" tar ((:url . "https://github.com/abingham/emacs-traad") (:commit . "1f05cb4e5e96a90d2fb2bbc93093084327c40cf2") (:revdesc . "1f05cb4e5e96") (:authors ("Austin Bingham" . "austin.bingham@gmail.com")) (:maintainers ("Austin Bingham" . "austin.bingham@gmail.com")) (:maintainer "Austin Bingham" . "austin.bingham@gmail.com"))])
 (tracking . [(2 13) nil "Buffer modification tracking" tar ((:url . "https://github.com/emacs-circe/circe") (:commit . "6f33a481af6bce68f55b9e25d5c14c1ed46fa9d9") (:revdesc . "6f33a481af6b") (:authors ("Jorgen Schaefer" . "forcer@forcix.cx")) (:maintainers ("Jorgen Schaefer" . "forcer@forcix.cx")) (:maintainer "Jorgen Schaefer" . "forcer@forcix.cx"))])
 (transducers . [(1 1 0) ((emacs (28 1))) "Ergonomic, efficient data processing" tar ((:commit . "7e75ccee58edaf16d98a1b3aef14035daf4a5370") (:authors ("Colin Woodbury" . "colin@fosskers.ca")) (:maintainers ("Colin Woodbury" . "colin@fosskers.ca")) (:maintainer "Colin Woodbury" . "colin@fosskers.ca") (:keywords "lisp") (:url . "https://git.sr.ht/~fosskers/transducers.el"))])
 (transient . [(0 8 1) ((emacs (26 1)) (compat (30 0 0 0)) (seq (2 24))) "Transient commands" tar ((:url . "https://github.com/magit/transient") (:commit . "dbe18e3f5e0812b8d086f92ca776935e41fafc75") (:revdesc . "v0.8.1-0-gdbe18e3f5e08") (:keywords "extensions") (:authors ("Jonas Bernoulli" . "emacs.transient@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.transient@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.transient@jonas.bernoulli.dev"))])
 (translate-mode . [(1 0 2) ((emacs (24 3))) "Paragraph-oriented side-by-side doc translation workflow" tar ((:url . "https://github.com/rayw000/translate-mode") (:commit . "fb73b3d928a8011a21402e2c14aa4aab56bd05ae") (:revdesc . "fb73b3d928a8") (:keywords "translate" "convenience" "editing") (:authors ("Ray Wang" . "rayw.public@gmail.com")) (:maintainers ("Ray Wang" . "rayw.public@gmail.com")) (:maintainer "Ray Wang" . "rayw.public@gmail.com"))])
 (transmission . [(0 12 2) ((emacs (24 4)) (let-alist (1 0 5))) "Interface to a Transmission session" tar ((:url . "https://github.com/holomorph/transmission") (:commit . "deb7090e1e3faf50b691c5b73148be690575c76b") (:revdesc . "0.12.2-0-gdeb7090e1e3f") (:keywords "comm" "tools") (:authors ("Mark Oteiza" . "mvoteiza@udel.edu")) (:maintainers ("Mark Oteiza" . "mvoteiza@udel.edu")) (:maintainer "Mark Oteiza" . "mvoteiza@udel.edu"))])
 (transpose-frame . [(0 2 1) nil "Transpose windows arrangement in a frame" tar ((:url . "https://github.com/emacsorphanage/transpose-frame") (:commit . "7b7f8a1582436749a57ebbba6ead716b5a0edddc") (:revdesc . "v0.2.1-0-g7b7f8a158243") (:keywords "window"))])
 (transwin . [(0 1 4) ((emacs (24 3))) "Make window/frame transparent" tar ((:url . "https://github.com/jcs-elpa/transwin") (:commit . "ed0156a98b6fce94da9045bdffe369f390b70c0c") (:revdesc . "ed0156a98b6f") (:keywords "frames" "window" "transparent") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (trashed . [(2 1 4) ((emacs (25 1))) "Viewing/editing system trash can" tar ((:url . "https://github.com/shingo256/trashed") (:commit . "52a52a363ce53855790e7a59aed6976eec18c9ea") (:revdesc . "52a52a363ce5") (:keywords "files" "convenience" "unix") (:authors ("Shingo Tanaka" . "shingo.fg8@gmail.com")) (:maintainers ("Shingo Tanaka" . "shingo.fg8@gmail.com")) (:maintainer "Shingo Tanaka" . "shingo.fg8@gmail.com"))])
 (travis . [(0 6 0) ((s (1 9 0)) (dash (2 9 0)) (pkg-info (0 5 0)) (request (0 1 0))) "Emacs client for Travis" tar ((:url . "https://github.com/nlamirault/emacs-travis") (:commit . "c8769d3db10ed4604969049e3bd276afa0a0138e") (:revdesc . "0.6.0-0-gc8769d3db10e") (:keywords "travis") (:authors ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainers ("Nicolas Lamirault" . "nicolas.lamirault@gmail.com")) (:maintainer "Nicolas Lamirault" . "nicolas.lamirault@gmail.com"))])
 (tray . [(0 1 5) ((emacs (27 1)) (compat (30 0 0 0)) (transient (0 7 4))) "Various transient menus" tar ((:url . "https://github.com/tarsius/tray") (:commit . "68d6fa2f2cd7d40c82af6c78b7647a585755c1d1") (:revdesc . "v0.1.5-0-g68d6fa2f2cd7") (:keywords "convenience") (:authors ("Jonas Bernoulli" . "emacs.tray@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.tray@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.tray@jonas.bernoulli.dev"))])
 (tree-sitter . [(0 18 0) ((emacs (25 1)) (tsc (0 18 0))) "Incremental parsing system" tar ((:url . "https://github.com/emacs-tree-sitter/elisp-tree-sitter") (:commit . "909717c685ff5a2327fa2ca8fb8a25216129361c") (:revdesc . "0.18.0-0-g909717c685ff") (:keywords "languages" "tools" "parsers" "tree-sitter") (:authors ("Tuấn-Anh Nguyễn" . "ubolonton@gmail.com")) (:maintainers ("Tuấn-Anh Nguyễn" . "ubolonton@gmail.com")) (:maintainer "Tuấn-Anh Nguyễn" . "ubolonton@gmail.com"))])
 (tree-sitter-ess-r . [(1 0) ((emacs (26 1)) (ess (18 10 1)) (tree-sitter (0 12 1)) (tree-sitter-langs (0 12 0))) "R with tree-sitter" tar ((:url . "https://github.com/ShuguangSun/tree-sitter-ess-r") (:commit . "9669c00f3d3463e6769725af74c392891e269eed") (:revdesc . "9669c00f3d34") (:keywords "tools") (:authors ("Shuguang Sun" . "shuguang79@qq.com")) (:maintainers ("Shuguang Sun" . "shuguang79@qq.com")) (:maintainer "Shuguang Sun" . "shuguang79@qq.com"))])
 (tree-sitter-indent . [(0 3) ((emacs (26 1)) (tree-sitter (0 12 1)) (seq (2 20))) "Provide indentation with a Tree-sitter backend" tar ((:url . "https://codeberg.org/FelipeLema/tree-sitter-indent.el") (:commit . "831a48571ccf14b8a8c607504a6e8e9263ff6dd4") (:revdesc . "831a48571ccf") (:keywords "convenience" "internal") (:authors ("Felipe Lema" . "felipelema@mortemale.org")) (:maintainers ("Felipe Lema" . "felipelema@mortemale.org")) (:maintainer "Felipe Lema" . "felipelema@mortemale.org"))])
 (tree-sitter-langs . [(0 12 241) ((emacs (25 1)) (tree-sitter (0 15 0))) "Grammar bundle for tree-sitter" tar ((:url . "https://github.com/emacs-tree-sitter/tree-sitter-langs") (:commit . "a40c676f601c565791568c2966e46a80de0233b7") (:revdesc . "a40c676f601c") (:keywords "languages" "tools" "parsers" "tree-sitter") (:authors ("Tuấn-Anh Nguyễn" . "ubolonton@gmail.com")) (:maintainers ("Tuấn-Anh Nguyễn" . "ubolonton@gmail.com")) (:maintainer "Tuấn-Anh Nguyễn" . "ubolonton@gmail.com"))])
 (treebundel . [(0 3 0) ((emacs (27 1)) (compat (29 1 4 2))) "Bundle related git-worktrees together" tar ((:url . "https://github.com/purplg/treebundel") (:commit . "7b4613878815f8e26aaf17007228aa9063a4e82d") (:revdesc . "7b4613878815") (:keywords "convenience" "vc"))])
 (treefactor . [(3 2 2) ((emacs (26 1)) (dash (2 16 0)) (f (0 20 0)) (org (9 2 6)) (avy (0 5 0))) "Restructure your messy Org documents" tar ((:url . "https://github.com/cyberthal/treefactor") (:commit . "75357757022a4399ab772ff0d92065bd114dabe9") (:revdesc . "75357757022a") (:keywords "outlines" "files" "convenience") (:authors ("Leo Littlebook" . "Leo.Littlebook@gmail.com")) (:maintainers ("Leo Littlebook" . "Leo.Littlebook@gmail.com")) (:maintainer "Leo Littlebook" . "Leo.Littlebook@gmail.com"))])
 (treemacs . [(3 1) ((emacs (26 1)) (cl-lib (0 5)) (dash (2 11 0)) (s (1 12 0)) (ace-window (0 9 0)) (pfuture (1 7)) (hydra (0 13 2)) (ht (2 2)) (cfrs (1 3 2))) "A tree style file explorer package" tar ((:url . "https://github.com/Alexander-Miller/treemacs") (:commit . "127485317a19254ca20ba1910d10edf7dbaa2d97") (:revdesc . "127485317a19") (:authors ("Alexander Miller" . "alexanderm@web.de")) (:maintainers ("Alexander Miller" . "alexanderm@web.de")) (:maintainer "Alexander Miller" . "alexanderm@web.de"))])
 (treemacs-all-the-icons . [(3 1) ((emacs (26 1)) (all-the-icons (4 0 1)) (treemacs (0 0))) "All-the-icons integration for treemacs" tar ((:url . "https://github.com/Alexander-Miller/treemacs") (:commit . "127485317a19254ca20ba1910d10edf7dbaa2d97") (:revdesc . "127485317a19") (:authors ("Eric Dallo" . "ercdll1337@gmail.com")) (:maintainers ("Eric Dallo" . "ercdll1337@gmail.com")) (:maintainer "Eric Dallo" . "ercdll1337@gmail.com"))])
 (treemacs-evil . [(3 1) ((emacs (26 1)) (evil (1 2 12)) (treemacs (0 0))) "Evil mode integration for treemacs" tar ((:url . "https://github.com/Alexander-Miller/treemacs") (:commit . "127485317a19254ca20ba1910d10edf7dbaa2d97") (:revdesc . "127485317a19") (:authors ("Alexander Miller" . "alexanderm@web.de")) (:maintainers ("Alexander Miller" . "alexanderm@web.de")) (:maintainer "Alexander Miller" . "alexanderm@web.de"))])
 (treemacs-icons-dired . [(3 1) ((treemacs (0 0)) (emacs (26 1))) "Treemacs icons for dired" tar ((:url . "https://github.com/Alexander-Miller/treemacs") (:commit . "127485317a19254ca20ba1910d10edf7dbaa2d97") (:revdesc . "127485317a19") (:authors ("Alexander Miller" . "alexanderm@web.de")) (:maintainers ("Alexander Miller" . "alexanderm@web.de")) (:maintainer "Alexander Miller" . "alexanderm@web.de"))])
 (treemacs-magit . [(3 1) ((emacs (26 1)) (treemacs (0 0)) (pfuture (1 3)) (magit (2 90 0))) "Magit integration for treemacs" tar ((:url . "https://github.com/Alexander-Miller/treemacs") (:commit . "127485317a19254ca20ba1910d10edf7dbaa2d97") (:revdesc . "127485317a19") (:authors ("Alexander Miller" . "alexanderm@web.de")) (:maintainers ("Alexander Miller" . "alexanderm@web.de")) (:maintainer "Alexander Miller" . "alexanderm@web.de"))])
 (treemacs-persp . [(3 1) ((emacs (26 1)) (treemacs (0 0)) (persp-mode (2 9 7)) (dash (2 11 0))) "Persp-mode integration for treemacs" tar ((:url . "https://github.com/Alexander-Miller/treemacs") (:commit . "127485317a19254ca20ba1910d10edf7dbaa2d97") (:revdesc . "127485317a19") (:authors ("Alexander Miller" . "alexanderm@web.de")) (:maintainers ("Alexander Miller" . "alexanderm@web.de")) (:maintainer "Alexander Miller" . "alexanderm@web.de"))])
 (treemacs-perspective . [(3 1) ((emacs (26 1)) (treemacs (0 0)) (perspective (2 8)) (dash (2 11 0))) "Perspective integration for treemacs" tar ((:url . "https://github.com/Alexander-Miller/treemacs") (:commit . "127485317a19254ca20ba1910d10edf7dbaa2d97") (:revdesc . "127485317a19") (:authors ("Alexander Miller" . "alexanderm@web.de") ("Jason Dufair" . "jase@dufair.org")) (:maintainers ("Alexander Miller" . "alexanderm@web.de") ("Jason Dufair" . "jase@dufair.org")) (:maintainer "Alexander Miller" . "alexanderm@web.de"))])
 (treemacs-projectile . [(3 1) ((emacs (26 1)) (projectile (0 14 0)) (treemacs (0 0))) "Projectile integration for treemacs" tar ((:url . "https://github.com/Alexander-Miller/treemacs") (:commit . "127485317a19254ca20ba1910d10edf7dbaa2d97") (:revdesc . "127485317a19") (:authors ("Alexander Miller" . "alexanderm@web.de")) (:maintainers ("Alexander Miller" . "alexanderm@web.de")) (:maintainer "Alexander Miller" . "alexanderm@web.de"))])
 (treemacs-tab-bar . [(3 1) ((emacs (27 1)) (treemacs (0 0)) (dash (2 11 0))) "Tab bar integration for treemacs" tar ((:url . "https://github.com/Alexander-Miller/treemacs") (:commit . "127485317a19254ca20ba1910d10edf7dbaa2d97") (:revdesc . "127485317a19") (:authors ("Alexander Miller" . "alexanderm@web.de") ("Jason Dufair" . "jase@dufair.org") ("Aaron Jensen" . "aaronjensen@gmail.com")) (:maintainers ("Alexander Miller" . "alexanderm@web.de") ("Jason Dufair" . "jase@dufair.org") ("Aaron Jensen" . "aaronjensen@gmail.com")) (:maintainer "Alexander Miller" . "alexanderm@web.de"))])
 (treepy . [(0 1 2) ((emacs (25 1))) "Generic tree traversal tools" tar ((:url . "https://github.com/volrath/treepy.el") (:commit . "3ac940e97f3d03e48ca9d7fcd74916a9b01c72f3") (:revdesc . "3ac940e97f3d") (:keywords "lisp" "maint" "tools") (:authors ("Daniel Barreto" . "daniel.barreto.n@gmail.com")) (:maintainers ("Daniel Barreto" . "daniel.barreto.n@gmail.com")) (:maintainer "Daniel Barreto" . "daniel.barreto.n@gmail.com"))])
 (treesit-auto . [(1 0 5) ((emacs (29 0))) "Automatically use tree-sitter enhanced major modes" tar ((:url . "https://github.com/renzmann/treesit-auto") (:commit . "09d1c8c4b5bd981c6d613c95cf0ad859ad1fbc53") (:revdesc . "v1.0.5-0-g09d1c8c4b5bd") (:keywords "treesitter" "auto" "automatic" "major" "mode" "fallback" "convenience") (:authors ("Robb Enzmann" . "robbenzmann@gmail.com")) (:maintainers ("Robb Enzmann" . "robbenzmann@gmail.com")) (:maintainer "Robb Enzmann" . "robbenzmann@gmail.com"))])
 (treeview . [(1 3 0) ((emacs (29 1))) "A generic tree navigation library" tar ((:url . "https://github.com/tilmanrassy/emacs-treeview") (:commit . "f8b678ba1dd52171002585bfc13921a509658af3") (:revdesc . "v1.3.0-0-gf8b678ba1dd5") (:keywords "lisp" "tools" "internal" "convenience") (:authors ("Tilman Rassy" . "tilman.rassy@googlemail.com")) (:maintainers ("Tilman Rassy" . "tilman.rassy@googlemail.com")) (:maintainer "Tilman Rassy" . "tilman.rassy@googlemail.com"))])
 (trimspace-mode . [(1 1) ((emacs (24 3))) "A minor mode to trim trailing whitespace and newlines" tar ((:url . "https://github.com/bkhl/trimspace-mode") (:commit . "ea7dd0d4847e10c77d174f537051db70233ecf6e") (:revdesc . "ea7dd0d4847e") (:keywords "files" "convenience") (:authors ("Björn Lindström" . "bkhl@elektrubadur.se")) (:maintainers ("Björn Lindström" . "bkhl@elektrubadur.se")) (:maintainer "Björn Lindström" . "bkhl@elektrubadur.se"))])
 (trinary . [(1 2 1) ((emacs (24))) "Trinary logic" tar ((:url . "https://github.com/emacs-elsa/trinary-logic") (:commit . "d4869d260f22d13a9a71327a6d40edc6980d022e") (:revdesc . "d4869d260f22") (:keywords "languages") (:authors ("Matúš Goljer" . "matus.goljer@gmail.com")) (:maintainers ("Matúš Goljer" . "matus.goljer@gmail.com")) (:maintainer "Matúš Goljer" . "matus.goljer@gmail.com"))])
 (tron-legacy-theme . [(2 6 0) nil "An original retro-futuristic theme inspired by Tron: Legacy" tar ((:url . "https://github.com/ianyepan/tron-legacy-emacs-theme") (:commit . "74e0cf066392c6fa99327e42b24caf4ed2fc414f") (:revdesc . "74e0cf066392"))])
 (trr . [(2 0 0) nil "A type-writing training program on GNU Emacs" tar ((:url . "https://github.com/kawabata/emacs-trr") (:commit . "7500ae0a05a3e26888949208afcd0185cc1b1404") (:revdesc . "v2.0.0-0-g7500ae0a05a3") (:keywords "games" "faces") (:authors ("YAMAMOTO Hirotaka" . "ymmt@is.s.u-tokyo.ac.jp") ("KATO Kenji" . "kato@suri.co.jp") ("INAMURA You" . "inamura@icot.or.jp")) (:maintainers ("YAMAMOTO Hirotaka" . "ymmt@is.s.u-tokyo.ac.jp") ("KATO Kenji" . "kato@suri.co.jp") ("INAMURA You" . "inamura@icot.or.jp")) (:maintainer "YAMAMOTO Hirotaka" . "ymmt@is.s.u-tokyo.ac.jp"))])
 (truthy . [(0 2 8) ((list-utils (0 4 2))) "Test the content of a value" tar ((:url . "https://github.com/rolandwalker/truthy") (:commit . "276a7e6b13606d28e4f2e423bb1ea30904c5def3") (:revdesc . "v0.2.8-0-g276a7e6b1360") (:keywords "extensions") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (try . [(0 0 1) ((emacs (24))) "Try out Emacs packages" tar ((:url . "https://github.com/larstvei/Try") (:commit . "271b0a362cadf44d0694628b9e213f54516ef913") (:revdesc . "271b0a362cad") (:keywords "packages") (:authors ("Lars Tveito" . "larstvei@ifi.uio.no")) (:maintainers ("Lars Tveito" . "larstvei@ifi.uio.no")) (:maintainer "Lars Tveito" . "larstvei@ifi.uio.no"))])
 (ts . [(0 3) ((emacs (26 1)) (dash (2 14 1)) (s (1 12 0))) "Timestamp and date/time library" tar ((:url . "https://github.com/alphapapa/ts.el") (:commit . "552936017cfdec89f7fc20c254ae6b37c3f22c5b") (:revdesc . "0.3-0-g552936017cfd") (:keywords "calendar" "lisp") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (tsc . [(0 18 0) ((emacs (25 1))) "Core Tree-sitter APIs" tar ((:url . "https://github.com/emacs-tree-sitter/elisp-tree-sitter") (:commit . "909717c685ff5a2327fa2ca8fb8a25216129361c") (:revdesc . "0.18.0-0-g909717c685ff") (:keywords "languages" "tools" "parsers" "dynamic-modules" "tree-sitter") (:authors ("Tuấn-Anh Nguyễn" . "ubolonton@gmail.com") ("Jorge Javier Araya Navarro" . "jorgejavieran@yahoo.com.mx")) (:maintainers ("Tuấn-Anh Nguyễn" . "ubolonton@gmail.com") ("Jorge Javier Araya Navarro" . "jorgejavieran@yahoo.com.mx")) (:maintainer "Tuấn-Anh Nguyễn" . "ubolonton@gmail.com"))])
 (tss . [(0 6 0) ((auto-complete (1 4 0)) (json-mode (1 1 0)) (log4e (0 2 0)) (yaxception (0 1))) "Provide a interface for auto-complete.el/flymake.el on typescript-mode" tar ((:url . "https://github.com/aki2o/emacs-tss") (:commit . "1f302deea3d74462c71a9c62031f48b753e8915f") (:revdesc . "1f302deea3d7") (:keywords "typescript" "completion") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (tuareg . [(3 0 1) ((emacs (26 3)) (caml (4 8))) "OCaml mode" tar ((:url . "https://github.com/ocaml/tuareg") (:commit . "4d94293cc5a7bba6cd043e29968719ce597d65f5") (:revdesc . "4d94293cc5a7") (:keywords "ocaml" "languages") (:authors ("Albert Cohen" . "Albert.Cohen@inria.fr") ("Sam Steingold" . "sds@gnu.org") ("Christophe Troestler" . "Christophe.Troestler@umons.ac.be") ("Till Varoquaux" . "till@pps.jussieu.fr") ("Sean McLaughlin" . "seanmcl@gmail.com") ("Stefan Monnier" . "monnier@iro.umontreal.ca")) (:maintainers ("Christophe Troestler" . "Christophe.Troestler@umons.ac.be") ("Stefan Monnier" . "monnier@iro.umontreal.ca")) (:maintainer "Christophe Troestler" . "Christophe.Troestler@umons.ac.be"))])
 (tumble . [(1 5) nil "An Tumblr mode for Emacs" tar ((:url . "https://github.com/febuiles/tumble") (:commit . "a1db6dac5720b9f468a79e0efce04f77c0a458e3") (:revdesc . "1.5-0-ga1db6dac5720") (:keywords "tumblr") (:authors ("Federico Builes" . "federico.builes@gmail.com")) (:maintainers ("Federico Builes" . "federico.builes@gmail.com")) (:maintainer "Federico Builes" . "federico.builes@gmail.com"))])
 (turing-machine . [(0 2 0) ((emacs (24 4))) "Single-tape Turing machine simulator" tar ((:url . "https://github.com/dieggsy/turing-machine") (:commit . "ad1dccc9c445f9e4465e1c67cbbfea9583153047") (:revdesc . "ad1dccc9c445") (:keywords "turing" "machine" "simulation") (:authors ("Diego A. Mundo" . "diegoamundo@gmail.com")) (:maintainers ("Diego A. Mundo" . "diegoamundo@gmail.com")) (:maintainer "Diego A. Mundo" . "diegoamundo@gmail.com"))])
 (twilight-anti-bright-theme . [(0 3 0) nil "A soothing Emacs 24 light-on-dark theme" tar ((:url . "https://github.com/jimeh/twilight-anti-bright-theme") (:commit . "16d4ff2606789b506f0d2f53d12f02d5b1b64f9b") (:revdesc . "16d4ff260678") (:keywords "themes") (:authors ("Jim Myhrberg" . "contact@jimeh.me")) (:maintainers ("Jim Myhrberg" . "contact@jimeh.me")) (:maintainer "Jim Myhrberg" . "contact@jimeh.me"))])
 (twittering-mode . [(3 0 0) nil "Major mode for Twitter" tar ((:url . "https://github.com/hayamiz/twittering-mode") (:commit . "27e7f3aab238bd0788fd3b471c645c3ceceb0f13") (:revdesc . "v3.0.0-0-g27e7f3aab238") (:keywords "twitter" "web") (:authors ("Y. Hayamizu" . "y.hayamizu@gmail.com") ("Tsuyoshi CHO" . "Tsuyoshi.CHO+develop@Gmail.com") ("Alberto Garcia" . "agarcia@igalia.com")) (:maintainers ("Y. Hayamizu" . "y.hayamizu@gmail.com") ("Tsuyoshi CHO" . "Tsuyoshi.CHO+develop@Gmail.com") ("Alberto Garcia" . "agarcia@igalia.com")) (:maintainer "Y. Hayamizu" . "y.hayamizu@gmail.com"))])
 (typescript-mode . [(0 4) ((emacs (24 3))) "Major mode for editing typescript" tar ((:url . "https://github.com/emacs-typescript/typescript.el") (:commit . "b369d7d2518fa11760ac3908a383405350cd51d2") (:revdesc . "b369d7d2518f") (:keywords "typescript" "languages"))])
 (typewriter-roll-mode . [(1 2 1) ((emacs (24 1))) "Aid for distraction-free writing" tar ((:url . "https://github.com/KeyWeeUsr/typewriter-roll-mode") (:commit . "821a0c6e13e160e9a6f02c6232449c163043f75b") (:revdesc . "1.2.1-0-g821a0c6e13e1") (:keywords "convenience" "line" "carriage" "writing" "distraction" "cr" "rewind") (:authors ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainers ("Peter Badida" . "keyweeusr@gmail.com")) (:maintainer "Peter Badida" . "keyweeusr@gmail.com"))])
 (typit . [(0 3 0) ((emacs (24 4)) (f (0 18)) (mmt (0 1 1))) "Typing game similar to tests on 10 fast fingers" tar ((:url . "https://github.com/mrkkrp/typit") (:commit . "eb67151f0693103bd7ef09a4a121c0f18b53c395") (:revdesc . "eb67151f0693") (:keywords "games") (:authors ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainers ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainer "Mark Karpov" . "markkarpov92@gmail.com"))])
 (typo . [(1 1) nil "Minor mode for typographic editing" tar ((:url . "https://github.com/jorgenschaefer/typoel") (:commit . "e72171e4eb0b9ec80b9dabc3198d137d9fb4f972") (:revdesc . "v1.1-0-ge72171e4eb0b") (:keywords "convenience" "wp") (:authors ("Jorgen Schaefer" . "forcer@forcix.cx")) (:maintainers ("Jorgen Schaefer" . "forcer@forcix.cx")) (:maintainer "Jorgen Schaefer" . "forcer@forcix.cx"))])
 (typo-suggest . [(0 0 4) ((emacs (24 3)) (helm (3 0)) (company (0 9 10)) (s (1 12 0)) (dash (2 13 0))) "Don't make typos with the help of helm and company" tar ((:url . "https://github.com/kadircancetin/typo-suggest") (:commit . "938fdad51d1177627ed9a34da6b937481861bda2") (:revdesc . "938fdad51d11") (:keywords "convenience" "wp") (:authors ("Kadir Can etin" . "kadircancetin@gmail.com")) (:maintainers ("Kadir Can etin" . "kadircancetin@gmail.com")) (:maintainer "Kadir Can etin" . "kadircancetin@gmail.com"))])
 (tzc . [(0 3 0) ((emacs (28 1))) "Converts time between different time zones" tar ((:url . "https://github.com/md-arif-shaikh/tzc") (:commit . "8f425cd6f020b5082445be9547e9308be73c6adf") (:revdesc . "8f425cd6f020") (:keywords "convenience") (:authors ("Md Arif Shaikh" . "arifshaikh.astro@gmail.com")) (:maintainers ("Md Arif Shaikh" . "arifshaikh.astro@gmail.com")) (:maintainer "Md Arif Shaikh" . "arifshaikh.astro@gmail.com"))])
 (ubuntu-theme . [(0 5 2) nil "A theme inspired by the default terminal colors in Ubuntu" tar ((:url . "https://github.com/rocher/ubuntu-theme") (:commit . "4b544f9b38fdfdaa956d3cf510c91573d6a96fd0") (:revdesc . "4b544f9b38fd") (:authors ("Francesc Rocher" . "francesc.rocher@gmail.com")) (:maintainers ("Francesc Rocher" . "francesc.rocher@gmail.com")) (:maintainer "Francesc Rocher" . "francesc.rocher@gmail.com"))])
 (uci-mode . [(0 5 5) ((emacs (25 1))) "Major-mode for chess engine interaction" tar ((:url . "https://github.com/dwcoates/uci-mode") (:commit . "2cdf4de5af96d56108a0a5716416ef3c8ac7bb7c") (:revdesc . "v0.5.5-0-g2cdf4de5af96") (:keywords "data" "games" "chess"))])
 (ucs-utils . [(0 8 4) ((persistent-soft (0 8 8)) (pcache (0 2 3)) (list-utils (0 4 2))) "Utilities for Unicode characters" tar ((:url . "https://github.com/rolandwalker/ucs-utils") (:commit . "cbfd42f822bf5717934fa2d92060e6e24a813433") (:revdesc . "v0.8.4-0-gcbfd42f822bf") (:keywords "i18n" "extensions") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (ue . [(1 0 9) ((emacs (26 1)) (projectile (2 5 0))) "Minor mode for Unreal Engine projects" tar ((:url . "https://gitlab.com/unrealemacs/ue.el") (:commit . "7819d5b78e5b52a09b36c634ce404dc8bc3711ef") (:revdesc . "7819d5b78e5b") (:keywords "unreal engine" "languages" "tools") (:authors ("Oleksandr Manenko" . "seidfzehsd@use.startmail.com")) (:maintainers ("Oleksandr Manenko" . "seidfzehsd@use.startmail.com")) (:maintainer "Oleksandr Manenko" . "seidfzehsd@use.startmail.com"))])
 (uiua-mode . [(0 1 0) ((emacs (27 1)) (reformatter (0 8))) "Uiua integration" tar ((:url . "https://github.com/crmsnbleyd/uiua-mode") (:commit . "5627ac4450d5a5d2c657befc63c7594939c5ff4c") (:revdesc . "5627ac4450d5") (:keywords "languages" "uiua"))])
 (undercover . [(0 8 1) ((emacs (24)) (dash (2 0 0)) (shut-up (0 3 2))) "Test coverage library for Emacs Lisp" tar ((:url . "https://github.com/undercover-el/undercover.el") (:commit . "1d3587f1fad66a747688f36636b67b33b73447d3") (:revdesc . "1d3587f1fad6") (:keywords "lisp" "tests" "coverage" "tools") (:authors ("Sviridov Alexander" . "sviridov.vmi@gmail.com")) (:maintainers ("Sviridov Alexander" . "sviridov.vmi@gmail.com")) (:maintainer "Sviridov Alexander" . "sviridov.vmi@gmail.com"))])
 (underline-with-char . [(3 0 0) ((emacs (24))) "Underline with a char" tar ((:url . "https://gitlab.com/marcowahl/underline-with-char") (:commit . "c2f4870aff70efe70a8d1b089e56d3a2d6d048b9") (:revdesc . "3.0.0-0-gc2f4870aff70") (:keywords "convenience"))])
 (undersea-theme . [(0 3) ((emacs (24 3))) "Theme styled after undersea imagery" tar ((:url . "https://github.com/jcs-legacy/undersea-theme") (:commit . "952d0c14258b0fd2d2e4642c6576708dac35c2f8") (:revdesc . "952d0c14258b") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (underwater-theme . [(1 1 0) nil "A gentle, deep blue color theme" tar ((:url . "https://github.com/jmdeldin/underwater-theme.el") (:commit . "1fbd4ecd4538256c6c46f9638f883072c73ac927") (:revdesc . "1fbd4ecd4538") (:keywords "faces") (:authors ("Jon-Michael Deldin" . "dev@jmdeldin.com")) (:maintainers ("Jon-Michael Deldin" . "dev@jmdeldin.com")) (:maintainer "Jon-Michael Deldin" . "dev@jmdeldin.com"))])
 (undohist . [(0 3 0) ((cl-lib (1 0))) "Persistent undo history for GNU Emacs" tar ((:url . "https://github.com/emacsorphanage/undohist") (:commit . "76338755b8aa710a07d6bc6faa4c03d792e90d82") (:revdesc . "0.3.0-0-g76338755b8aa") (:keywords "convenience") (:authors ("MATSUYAMA Tomohiro" . "m2ym.pub@gmail.com")) (:maintainers ("MATSUYAMA Tomohiro" . "m2ym.pub@gmail.com")) (:maintainer "MATSUYAMA Tomohiro" . "m2ym.pub@gmail.com"))])
 (unfill . [(0 3) ((emacs (24 1))) "Do the opposite of fill-paragraph or fill-region" tar ((:url . "https://github.com/purcell/unfill") (:commit . "8375d87ec184fbe964189e2f9b7263cdb1396694") (:revdesc . "8375d87ec184") (:keywords "convenience") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (unicad . [(1 1 7) ((emacs (24)) (nadvice (0 3))) "An elisp port of Mozilla Universal Charset Auto Detector" tar ((:url . "https://github.com/ukari/unicad") (:commit . "a5fd4e326a0607acc3776c11f41826e60b6486c6") (:revdesc . "1.1.7-0-ga5fd4e326a06") (:keywords "i18n") (:authors ("Qichen Huang" . "unicad.el@gmail.com")) (:maintainers ("Qichen Huang" . "unicad.el@gmail.com")) (:maintainer "Qichen Huang" . "unicad.el@gmail.com"))])
 (unicode-enbox . [(0 1 4) ((string-utils (0 3 2)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Surround a string with box-drawing characters" tar ((:url . "https://github.com/rolandwalker/unicode-enbox") (:commit . "ff313f6778bb96481c0ee3291b07a7db46f21ff5") (:revdesc . "v0.1.4-0-gff313f6778bb") (:keywords "extensions" "interface") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (unicode-escape . [(1 1) ((emacs (24)) (names (20151201 0)) (dash (2 12 1))) "Escape/Unescape unicode notations" tar ((:url . "https://github.com/kosh04/unicode-escape.el") (:commit . "b9cee7af45be62119b97033dc639bd1b5ed858f3") (:revdesc . "1.1-0-gb9cee7af45be") (:keywords "i18n" "unicode") (:authors ("KOBAYASHI Shigeru" . "shigeru.kb@gmail.com")) (:maintainers ("KOBAYASHI Shigeru" . "shigeru.kb@gmail.com")) (:maintainer "KOBAYASHI Shigeru" . "shigeru.kb@gmail.com"))])
 (unicode-fonts . [(0 4 10) ((font-utils (0 7 8)) (ucs-utils (0 8 2)) (list-utils (0 4 2)) (persistent-soft (0 8 10)) (pcache (0 3 1))) "Configure Unicode fonts" tar ((:url . "https://github.com/rolandwalker/unicode-fonts") (:commit . "7b88ae84e589f6c8b9386b2fb5a02ff4ccb91169") (:revdesc . "v0.4.10-0-g7b88ae84e589") (:keywords "i18n" "faces" "frames" "wp" "interface") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (unicode-progress-reporter . [(0 5 4) ((emacs (24 1 0)) (ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Progress-reporter with fancy characters" tar ((:url . "https://github.com/rolandwalker/unicode-progress-reporter") (:commit . "f4705332412b12fc72ca868b77c78465561bda75") (:revdesc . "v0.5.4-0-gf4705332412b") (:keywords "interface") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (unicode-whitespace . [(0 2 4) ((ucs-utils (0 7 6)) (persistent-soft (0 8 8)) (pcache (0 2 3))) "Teach whitespace-mode about fancy characters" tar ((:url . "https://github.com/rolandwalker/unicode-whitespace") (:commit . "6d29f25d46b3344c74ce289fc80b3d4fc17ed6db") (:revdesc . "v0.2.4-0-g6d29f25d46b3") (:keywords "faces" "wp" "interface") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (unify-opening . [(2 2 0) ((emacs (24 4))) "Unify the mechanism to open files" tar ((:url . "https://github.com/DamienCassou/unify-opening") (:commit . "4c6e3447e203a51af116a2117e88d41114950205") (:revdesc . "4c6e3447e203") (:authors ("Damien Cassou" . "damien.cassou@gmail.com")) (:maintainers ("Damien Cassou" . "damien.cassou@gmail.com")) (:maintainer "Damien Cassou" . "damien.cassou@gmail.com"))])
 (unisonlang-mode . [(0 2 0) ((emacs (25 1))) "Simple major mode for editing Unison" tar ((:url . "https://github.com/dariooddenino/unison-mode-emacs") (:commit . "f793430068ade1b0a2d744aaa45f569c9dec9085") (:revdesc . "f793430068ad") (:keywords "languages"))])
 (units-mode . [(0 1 1) ((emacs (24 4))) "Mode for conversion between different units" tar ((:url . "https://github.com/Atreyagaurav/units-mode") (:commit . "86d6a8773403455e39b15e8d09a76564f2ccbd6c") (:revdesc . "86d6a8773403") (:keywords "units" "unit-conversion" "convenience") (:authors ("Gaurav Atreya" . "allmanpride@gmail.com")) (:maintainers ("Gaurav Atreya" . "allmanpride@gmail.com")) (:maintainer "Gaurav Atreya" . "allmanpride@gmail.com"))])
 (universal-sidecar . [(1 6 0) ((emacs (26 1)) (magit-section (3 0 0))) "A universal sidecar buffer" tar ((:url . "https://git.sr.ht/~swflint/emacs-universal-sidecar") (:commit . "4c78015d10caba9c700e6e6b582004ae1c1d5344") (:revdesc . "v1.6.0-0-g4c78015d10ca") (:authors ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainers ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainer "Samuel W. Flint" . "me@samuelwflint.com"))])
 (universal-sidecar-citeproc . [(1 6 0) ((emacs (28 1)) (citeproc (0 9 4))) "Centralise Citeproc Support for Universal Sidecar" tar ((:url . "https://git.sr.ht/~swflint/emacs-universal-sidecar") (:commit . "4c78015d10caba9c700e6e6b582004ae1c1d5344") (:revdesc . "v1.6.0-0-g4c78015d10ca") (:keywords "bib" "convenience") (:authors ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainers ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainer "Samuel W. Flint" . "me@samuelwflint.com"))])
 (universal-sidecar-elfeed-related . [(1 6 0) ((emacs (25 1)) (universal-sidecar (1 0 0)) (bibtex-completion (1 0 0)) (elfeed (3 4 1))) "Related Papers Sidecar Section for Elfeed" tar ((:url . "https://git.sr.ht/~swflint/emacs-universal-sidecar") (:commit . "4c78015d10caba9c700e6e6b582004ae1c1d5344") (:revdesc . "v1.6.0-0-g4c78015d10ca") (:authors ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainers ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainer "Samuel W. Flint" . "me@samuelwflint.com"))])
 (universal-sidecar-elfeed-score . [(1 6 0) ((emacs (25 1)) (universal-sidecar (1 0 0)) (elfeed (3 4 1)) (elfeed-score (1 2 6))) "Show Elfeed Score information in sidecar" tar ((:url . "https://git.sr.ht/~swflint/emacs-universal-sidecar") (:commit . "4c78015d10caba9c700e6e6b582004ae1c1d5344") (:revdesc . "v1.6.0-0-g4c78015d10ca") (:authors ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainers ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainer "Samuel W. Flint" . "me@samuelwflint.com"))])
 (universal-sidecar-roam . [(1 6 0) ((emacs (26 1)) (universal-sidecar (1 0 0)) (org-roam (2 0 0))) "Integrate universal-sidecar and org-roam" tar ((:url . "https://git.sr.ht/~swflint/emacs-universal-sidecar") (:commit . "4c78015d10caba9c700e6e6b582004ae1c1d5344") (:revdesc . "v1.6.0-0-g4c78015d10ca") (:authors ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainers ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainer "Samuel W. Flint" . "me@samuelwflint.com"))])
 (unkillable-scratch . [(1 0 0) ((emacs (24))) "Disallow the \\*scratch\\* buffer from being killed" tar ((:url . "https://github.com/EricCrosson/unkillable-scratch") (:commit . "dac9dbed946a26829e6227ac15c0fa1d07ccd05f") (:revdesc . "dac9dbed946a") (:keywords "convenience") (:authors ("Eric Crosson" . "eric.s.crosson@utexas.com")) (:maintainers ("Eric Crosson" . "eric.s.crosson@utexas.com")) (:maintainer "Eric Crosson" . "eric.s.crosson@utexas.com"))])
 (unmodified-buffer . [(1 1 0) ((emacs (24 1))) "Auto revert modified buffer state" tar ((:url . "https://github.com/arthurcgusmao/unmodified-buffer") (:commit . "9095a3f870aa570804a11d75aba0952294199715") (:revdesc . "9095a3f870aa"))])
 (unobtrusive-magit-theme . [(0 4) ((emacs (24 1))) "An unobtrusive Magit theme" tar ((:url . "https://github.com/tee3/unobtrusive-magit-theme") (:commit . "aede357009655d19d4468320b2b61b0f26a47593") (:revdesc . "0.4-0-gaede35700965") (:keywords "faces" "vc" "magit") (:authors ("Thomas A. Brown" . "tabsoftwareconsulting@gmail.com")) (:maintainers ("Thomas A. Brown" . "tabsoftwareconsulting@gmail.com")) (:maintainer "Thomas A. Brown" . "tabsoftwareconsulting@gmail.com"))])
 (unspecified-theme . [(0 3) ((emacs (25)) (most-faces (0 0 3))) "Theme that unspecifies all attributes of all faces" tar ((:url . "https://codeberg.org/mekeor/unspecified-theme") (:commit . "822f461bb04b4f8751bc2431140197a077d6c4a6") (:revdesc . "822f461bb04b") (:keywords "faces" "theme") (:authors ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainers ("Mekeor Melire" . "mekeor@posteo.de")) (:maintainer "Mekeor Melire" . "mekeor@posteo.de"))])
 (uptimes . [(3 8) ((cl-lib (0 5)) (emacs (24))) "Track and display Emacs session uptimes" tar ((:url . "https://github.com/davep/uptimes.el") (:commit . "29ae6585eeed5a00719b2e52f5ae1082087c1778") (:revdesc . "29ae6585eeed") (:keywords "processes" "uptime") (:authors ("Dave Pearson" . "davep@davep.org")) (:maintainers ("Dave Pearson" . "davep@davep.org")) (:maintainer "Dave Pearson" . "davep@davep.org"))])
 (ursa-ts-mode . [(1 3 11) ((emacs (29 1))) "Major mode for Ursa, using tree-sitter" tar ((:url . "https://github.com/ursalang/ursa-ts-mode") (:commit . "84689fb37dfb6ddbd0a22cc1dcef25203f0689a8") (:revdesc . "84689fb37dfb") (:keywords "ursalang" "languages" "tree-sitter") (:authors ("Reuben Thomas" . "rrt@sc3d.org")) (:maintainers ("Reuben Thomas" . "rrt@sc3d.org")) (:maintainer "Reuben Thomas" . "rrt@sc3d.org"))])
 (urscript-mode . [(0 0 2) ((emacs (24 4))) "Major mode for editing URScript" tar ((:url . "https://github.com/guidoschmidt/urscript-mode") (:commit . "b341f96b129ead8fb74d680cb4f546985bf110a9") (:revdesc . "0.0.2-0-gb341f96b129e") (:keywords "languages") (:authors ("Guido Schmidt" . "(git@guidoschmidt.cc)")) (:maintainers ("Guido Schmidt" . "(git@guidoschmidt.cc)")) (:maintainer "Guido Schmidt" . "(git@guidoschmidt.cc)"))])
 (use-package-chords . [(2 4 4) ((use-package (2 1)) (bind-key (1 0)) (bind-chord (0 2)) (key-chord (0 6))) "Key-chord keyword for use-package" tar ((:url . "https://github.com/jwiegley/use-package") (:commit . "9090080b15486c3e337be254226efe7e5fde4c99") (:revdesc . "2.4.4-0-g9090080b1548") (:keywords "convenience" "tools" "extensions") (:authors ("Justin Talbott" . "justin@waymondo.com")) (:maintainers ("Justin Talbott" . "justin@waymondo.com")) (:maintainer "Justin Talbott" . "justin@waymondo.com"))])
 (use-package-hydra . [(0 2) ((emacs (24 3)) (use-package (2 4))) "Adds :hydra keyword to use-package macro" tar ((:url . "https://gitlab.com/to1ne/use-package-hydra") (:commit . "8cd55a1128fbdf6327bb38a199d206225896d146") (:revdesc . "v0.2-0-g8cd55a1128fb") (:keywords "convenience" "extensions" "tools") (:authors ("Toon Claes" . "toon@iotcl.com")) (:maintainers ("Toon Claes" . "toon@iotcl.com")) (:maintainer "Toon Claes" . "toon@iotcl.com"))])
 (use-proxy . [(1 2 1) ((exec-path-from-shell (1 12)) (emacs (26 2))) "Enable/Disable proxies respecting your HTTP/HTTPS env" tar ((:url . "https://github.com/rayw000/use-proxy") (:commit . "43499194224483b27628fdf99f6f9ff6e731d844") (:revdesc . "434991942244") (:keywords "proxy" "comm") (:authors ("Ray Wang" . "ray.hackmylife@gmail.com")) (:maintainers ("Ray Wang" . "ray.hackmylife@gmail.com")) (:maintainer "Ray Wang" . "ray.hackmylife@gmail.com"))])
 (use-ttf . [(0 1 3) ((emacs (24 4))) "Keep font consistency across different OSs" tar ((:url . "https://github.com/jcs-elpa/use-ttf") (:commit . "3d044b252f48fac5d1f662979b3ac18d80ef27d9") (:revdesc . "3d044b252f48") (:authors ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (ushin-shapes . [(0 3 0) ((emacs (27 1)) (svg-tag-mode (0 3 3)) (svg-lib (0 3)) (compat (30 0 0 0))) "USHIN shapes in org-mode" tar ((:url . "https://git.sr.ht/~ushin/ushin-shapes.el") (:commit . "fd2c4289c7d336528f1f855eb9378615417f4483") (:revdesc . "0.3.0-0-gfd2c4289c7d3") (:keywords "convenience") (:authors ("Joseph Turner" . "joseph@ushin.org")) (:maintainers ("Joseph Turner" . "joseph@ushin.org")) (:maintainer "Joseph Turner" . "joseph@ushin.org"))])
 (utop . [(2 15 0) ((emacs (26)) (tuareg (2 2 0))) "Universal toplevel for OCaml" tar ((:url . "https://github.com/diml/utop") (:commit . "3322adaa5267b1188d14b15e85c802c21fe061cb") (:revdesc . "3322adaa5267") (:keywords "ocaml" "languages") (:authors ("Jeremie Dimino" . "jeremie@dimino.org")) (:maintainers ("Jeremie Dimino" . "jeremie@dimino.org")) (:maintainer "Jeremie Dimino" . "jeremie@dimino.org"))])
 (uuidgen . [(1 0) nil "Provides various UUID generating functions" tar ((:url . "https://github.com/kanru/uuidgen-el") (:commit . "f096f35a6e1f27d2bc9e9093cd61dd97bc33f502") (:revdesc . "f096f35a6e1f") (:keywords "extensions" "lisp" "tools") (:authors ("Kan-Ru Chen" . "kanru@kanru.info")) (:maintainers ("Kan-Ru Chen" . "kanru@kanru.info")) (:maintainer "Kan-Ru Chen" . "kanru@kanru.info"))])
 (uxntal-mode . [(0 3) ((emacs (27 1))) "Major mode for Uxntal assembly" tar ((:url . "https://github.com/non/uxntal-mode") (:commit . "1b114d97069a8c004f0ca58e0c69d61d897cef75") (:revdesc . "1b114d97069a") (:authors ("d_m" . "d_m@plastic-idolatry.com")) (:maintainers ("d_m" . "d_m@plastic-idolatry.com")) (:maintainer "d_m" . "d_m@plastic-idolatry.com"))])
 (v2ex-mode . [(0 2) ((cl-lib (0 5)) (request (0 2)) (let-alist (1 0 3))) "Major mode for visit http://v2ex.com/ site" tar ((:url . "https://github.com/aborn/v2ex-mode") (:commit . "7a59ac3be2b08d873ec271ec7a3d5ace309c1407") (:revdesc . "7a59ac3be2b0") (:keywords "v2ex" "v2ex.com") (:authors ("Aborn Jiang" . "aborn.jiang@gmail.com")) (:maintainers ("Aborn Jiang" . "aborn.jiang@gmail.com")) (:maintainer "Aborn Jiang" . "aborn.jiang@gmail.com"))])
 (vagrant . [(0 6 2) nil "Manage a vagrant box from emacs" tar ((:url . "https://github.com/ottbot/vagrant.el") (:commit . "636ce2f9af32ea199170335a9cf1201b64873440") (:revdesc . "636ce2f9af32") (:keywords "vagrant" "chef") (:authors ("Robert Crim" . "rob@servermilk.com")) (:maintainers ("Robert Crim" . "rob@servermilk.com")) (:maintainer "Robert Crim" . "rob@servermilk.com"))])
 (varuga . [(0 1 0) ((emacs (26 1))) "Send ical calendar invites by email" tar ((:url . "https://git.systemreboot.net/varuga/") (:commit . "acec08c32c4acad306ed67b57d082d9e0d0f284e") (:revdesc . "0.1.0-0-gacec08c32c4a") (:authors ("Arun Isaac" . "arunisaac@systemreboot.net")) (:maintainers ("Arun Isaac" . "arunisaac@systemreboot.net")) (:maintainer "Arun Isaac" . "arunisaac@systemreboot.net"))])
 (vbasense . [(0 1 1) ((auto-complete (1 4 0)) (log4e (0 2 0)) (yaxception (0 1))) "Provide a environment like Visual Basic Editor" tar ((:url . "https://github.com/aki2o/emacs-vbasense") (:commit . "8c61a492d7c15218ae1a96e2aebfe6f78bfff6db") (:revdesc . "8c61a492d7c1") (:keywords "vba" "completion") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (vc-hgcmd . [(1 14 1) ((emacs (25 1))) "VC mercurial backend that uses hg command server" tar ((:url . "https://github.com/muffinmad/emacs-vc-hgcmd") (:commit . "d044448965d31ca8214f8bca48487e4d9b9d9a0f") (:revdesc . "d044448965d3") (:keywords "vc") (:authors ("Andrii Kolomoiets" . "andreyk.mad@gmail.com")) (:maintainers ("Andrii Kolomoiets" . "andreyk.mad@gmail.com")) (:maintainer "Andrii Kolomoiets" . "andreyk.mad@gmail.com"))])
 (vc-msg . [(1 1 1) ((emacs (24 4)) (popup (0 5 0))) "Show commit information of current line" tar ((:url . "https://github.com/redguardtoo/vc-msg") (:commit . "720c6f0e699f25463cd37642ee23adb4e23bc60b") (:revdesc . "720c6f0e699f") (:keywords "git" "vc" "svn" "hg" "messenger") (:authors ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainers ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainer "Chen Bin" . "chenbinDOTshATgmailDOTcom"))])
 (vcomp . [(1 1 0) ((emacs (25 1))) "Compare version strings" tar ((:url . "https://github.com/tarsius/vcomp") (:commit . "99831d234481a61488aca4b96b842b63a79c732a") (:revdesc . "v1.1.0-0-g99831d234481") (:keywords "versions") (:authors ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainers ("Jonas Bernoulli" . "jonas@bernoul.li")) (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li"))])
 (vdf-mode . [(1 1) nil "Major mode for editing Valve VDF files" tar ((:url . "https://github.com/plapadoo/vdf-mode") (:commit . "f474047a35a2779e4ebaf9166f3d54f359cf9f3c") (:revdesc . "f474047a35a2"))])
 (vdiff . [(0 2 2) ((emacs (24 4)) (hydra (0 13 0))) "A diff tool similar to  vimdiff" tar ((:url . "https://github.com/justbur/emacs-vdiff") (:commit . "f55acdbfcbb14e463d0850cfd041614c7002669e") (:revdesc . "f55acdbfcbb1") (:keywords "diff") (:authors ("Justin Burkett" . "justin@burkett.cc")) (:maintainers ("Justin Burkett" . "justin@burkett.cc")) (:maintainer "Justin Burkett" . "justin@burkett.cc"))])
 (vdiff-magit . [(0 3 2) ((emacs (24 4)) (vdiff (0 3)) (magit (2 10 0))) "Magit integration for vdiff" tar ((:url . "https://github.com/justbur/emacs-vdiff-magit") (:commit . "7e841dc7225300dd4d5560faad04e5c44cd8b267") (:revdesc . "7e841dc72253") (:keywords "diff") (:authors ("Justin Burkett" . "justin@burkett.cc")) (:maintainers ("Justin Burkett" . "justin@burkett.cc")) (:maintainer "Justin Burkett" . "justin@burkett.cc"))])
 (vdirel . [(0 2 0) ((emacs (24 4)) (org-vcard (0 1 0)) (helm (1 7 0)) (seq (1 11))) "Manipulate vdir (i.e., vCard) repositories" tar ((:url . "https://github.com/DamienCassou/vdirel") (:commit . "4232676e93ca5ace8e51f6605bec223c3205beea") (:revdesc . "4232676e93ca") (:keywords "vdirsyncer" "vdir" "vcard" "carddav" "contact" "addressbook" "helm") (:authors ("Damien Cassou" . "damien@cassou.me")) (:maintainers ("Damien Cassou" . "damien@cassou.me")) (:maintainer "Damien Cassou" . "damien@cassou.me"))])
 (vdm-comint . [(0 0 4) ((emacs (25)) (vdm-mode (0 0 4))) "REPL support for vdm-mode" tar ((:url . "https://github.com/peterwvj/vdm-mode") (:commit . "e131edb0d35de28bd47d6128dd70d9a6fc46e0fa") (:revdesc . "e131edb0d35d") (:keywords "languages") (:authors ("Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com")) (:maintainers ("Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com")) (:maintainer "Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com"))])
 (vdm-mode . [(0 0 4) ((emacs (25))) "Major mode for the Vienna Development Method" tar ((:url . "https://github.com/peterwvj/vdm-mode") (:commit . "e131edb0d35de28bd47d6128dd70d9a6fc46e0fa") (:revdesc . "e131edb0d35d") (:keywords "languages") (:authors ("Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com")) (:maintainers ("Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com")) (:maintainer "Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com"))])
 (vdm-snippets . [(0 0 4) ((emacs (24)) (yasnippet (0 13 0))) "YASnippets for VDM mode" tar ((:url . "https://github.com/peterwvj/vdm-mode") (:commit . "e131edb0d35de28bd47d6128dd70d9a6fc46e0fa") (:revdesc . "e131edb0d35d") (:keywords "languages") (:authors ("Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com")) (:maintainers ("Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com")) (:maintainer "Peter W. V. Tran-Jørgensen" . "peter.w.v.jorgensen@gmail.com"))])
 (vector-utils . [(0 1 2) nil "Vector-manipulation utility functions" tar ((:url . "https://github.com/rolandwalker/vector-utils") (:commit . "2bd63c8ade1a2b6f8aac403c5f25adda2215a685") (:revdesc . "v0.1.2-0-g2bd63c8ade1a") (:keywords "extensions") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (vegetative-theme . [(1 0 2) ((autothemer (0 2)) (emacs (24))) "A Theme based on green CRT terminals" tar ((:url . "https://github.com/emacsfodder/emacs-theme-vegetative") (:commit . "db60ce0fe327ae7e4371545179ed94483b1132a8") (:revdesc . "db60ce0fe327"))])
 (verb . [(2 16 0) ((emacs (26 3))) "Organize and send HTTP requests" tar ((:url . "https://github.com/federicotdn/verb") (:commit . "442e9ddaa658bc9e8d3e50f930e2024fd88a3aa9") (:revdesc . "442e9ddaa658") (:keywords "tools") (:authors ("Federico Tedin" . "federicotedin@gmail.com")) (:maintainers ("Federico Tedin" . "federicotedin@gmail.com")) (:maintainer "Federico Tedin" . "federicotedin@gmail.com"))])
 (verilog-ext . [(0 6 2) ((emacs (29 1)) (verilog-mode (2024 3 1 121933719)) (verilog-ts-mode (0 3 0)) (lsp-mode (8 0 0)) (ag (0 48)) (ripgrep (0 4 0)) (hydra (0 15 0)) (apheleia (3 1)) (yasnippet (0 14 0)) (flycheck (32)) (outshine (3 0 1)) (async (1 9 7))) "SystemVerilog Extensions" tar ((:url . "https://github.com/gmlarumbe/verilog-ext") (:commit . "f7e70560d817125721aa7e02a2f527fce15bcf30") (:revdesc . "f7e70560d817") (:keywords "verilog" "ide" "tools") (:authors ("Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com")) (:maintainers ("Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com")) (:maintainer "Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com"))])
 (verilog-ts-mode . [(0 3 0) ((emacs (29 1)) (verilog-mode (2024 3 1 121933719))) "Verilog Tree-sitter major mode" tar ((:url . "https://github.com/gmlarumbe/verilog-ts-mode") (:commit . "85153dd3442b88213cb53b4c484b4173f9f040a3") (:revdesc . "85153dd3442b") (:keywords "verilog" "ide" "tools") (:authors ("Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com")) (:maintainers ("Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com")) (:maintainer "Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com"))])
 (vertico . [(1 9) ((emacs (27 1)) (compat (30))) "VERTical Interactive COmpletion" tar ((:url . "https://github.com/minad/vertico") (:commit . "d70fdeb67be9ecc88c438039eefa9ef0e2104005") (:revdesc . "d70fdeb67be9") (:keywords "convenience" "files" "matching" "completion") (:authors ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainers ("Daniel Mendler" . "mail@daniel-mendler.de")) (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de"))])
 (vertico-prescient . [(6 3 1) ((emacs (27 1)) (prescient (6 1 0)) (vertico (0 28)) (compat (29 1))) "Prescient.el + Vertico" tar ((:url . "https://github.com/radian-software/prescient.el") (:commit . "2b8a8b41228bddb2e11eb1c200e98a9edd04797c") (:revdesc . "2b8a8b41228b") (:keywords "extensions") (:authors ("Radian LLC" . "contact+prescient@radian.codes")) (:maintainers ("Radian LLC" . "contact+prescient@radian.codes")) (:maintainer "Radian LLC" . "contact+prescient@radian.codes"))])
 (vertigo . [(1 0) ((dash (2 11 0))) "Jump across lines using the home row" tar ((:url . "https://github.com/noctuid/vertigo.el") (:commit . "ebfa068d9e2fc39ba6d1744618c4e31dad6f629b") (:revdesc . "v1.0-0-gebfa068d9e2f") (:keywords "vim" "vertigo") (:authors ("Fox Kiester" . "noct@openmailbox.org")) (:maintainers ("Fox Kiester" . "noct@openmailbox.org")) (:maintainer "Fox Kiester" . "noct@openmailbox.org"))])
 (vhdl-ext . [(0 5 4) ((emacs (29 1)) (vhdl-ts-mode (0 2 1)) (lsp-mode (8 0 0)) (ag (0 48)) (ripgrep (0 4 0)) (hydra (0 15 0)) (flycheck (32)) (outshine (3 0 1)) (async (1 9 7))) "VHDL Extensions" tar ((:url . "https://github.com/gmlarumbe/vhdl-ext") (:commit . "3f5f0778e87d9d4272903797a2366e603f9f1641") (:revdesc . "3f5f0778e87d") (:keywords "vhdl" "ide" "tools") (:authors ("Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com")) (:maintainers ("Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com")) (:maintainer "Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com"))])
 (vhdl-tools . [(6 2) ((ggtags (0 8 13)) (emacs (26 2)) (helm-rg (0 1)) (outshine (0))) "Utilities for navigating vhdl sources" tar ((:url . "https://gitlab.com/emacs-elisp/vhdl-tools") (:commit . "5202db4c6a511a90a950a723293d11d55ec05264") (:revdesc . "5202db4c6a51") (:keywords "languages" "convenience"))])
 (vhdl-ts-mode . [(0 2 2) ((emacs (29 1))) "VHDL Tree-sitter major mode" tar ((:url . "https://github.com/gmlarumbe/vhdl-ts-mode") (:commit . "0f2e70eddab3bc000ad12625f31c62bea0c5994b") (:revdesc . "0f2e70eddab3") (:keywords "vhdl" "ide" "tools") (:authors ("Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com")) (:maintainers ("Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com")) (:maintainer "Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com"))])
 (vim-region . [(0 3 0) ((expand-region (20140127))) "Select region as vim" tar ((:url . "https://github.com/ongaeshi/emacs-vim-region") (:commit . "e5359cc584a0cfa9270a76866a5eff7d3f44eb3d") (:revdesc . "e5359cc584a0") (:authors ("ongaeshi" . "ongaeshi0621@gmail.com")) (:maintainers ("ongaeshi" . "ongaeshi0621@gmail.com")) (:maintainer "ongaeshi" . "ongaeshi0621@gmail.com"))])
 (vim-tab-bar . [(1 0 7) ((emacs (28 1))) "Vim-like tab bar" tar ((:url . "https://github.com/jamescherti/vim-tab-bar.el") (:commit . "4d101f14bd388ddc6264c276013eac9760559b0f") (:revdesc . "1.0.7-0-g4d101f14bd38") (:keywords "frames"))])
 (vimgolf . [(0 10 3) nil "VimGolf interface for the One True Editor" tar ((:url . "https://github.com/timvisher/vimgolf.el") (:commit . "78e91f810a1b49d68ef19565e1c6513c84855e1e") (:revdesc . "78e91f810a1b") (:keywords "games" "vimgolf" "vim") (:authors ("Tim Visher" . "tim.visher@gmail.com")) (:maintainers ("Tim Visher" . "tim.visher@gmail.com")) (:maintainer "Tim Visher" . "tim.visher@gmail.com"))])
 (vimish-fold . [(0 2 3) ((emacs (24 4)) (cl-lib (0 5)) (f (0 18 0))) "Fold text like in Vim" tar ((:url . "https://github.com/matsievskiysv/vimish-fold") (:commit . "e631352fbf910f692807afe38a2b6a7882a403a8") (:revdesc . "e631352fbf91") (:keywords "convenience") (:authors ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainers ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainer "Mark Karpov" . "markkarpov92@gmail.com"))])
 (virtualenvwrapper . [(0 2 0) ((dash (1 5 0)) (s (1 6 1))) "A featureful virtualenv tool for Emacs" tar ((:url . "https://github.com/porterjamesj/virtualenvwrapper.el") (:commit . "f753e5ad91c2ff5d11bec424aa8cec141efa6925") (:revdesc . "f753e5ad91c2") (:keywords "python" "virtualenv" "virtualenvwrapper") (:authors ("James J Porter" . "porterjamesj@gmail.com")) (:maintainers ("James J Porter" . "porterjamesj@gmail.com")) (:maintainer "James J Porter" . "porterjamesj@gmail.com"))])
 (visual-fill-column . [(2 6 3) ((emacs (25 1))) "Fill-column for visual-line-mode" tar ((:url . "https://codeberg.org/joostkremers/visual-fill-column") (:commit . "e04d3521b6dc2435de4c4a4b9cac5feb194f0d5b") (:revdesc . "e04d3521b6dc") (:authors ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainers ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainer "Joost Kremers" . "joostkremers@fastmail.fm"))])
 (visual-regexp . [(1 1 2) ((cl-lib (0 2))) "A regexp/replace command for Emacs with interactive visual feedback" tar ((:url . "https://github.com/benma/visual-regexp.el") (:commit . "3e3ed81a3cbadef1f1f4cb16f9112a58641d70ca") (:revdesc . "v1.1.2-0-g3e3ed81a3cba") (:keywords "regexp" "replace" "visual" "feedback") (:authors ("Marko Bencun" . "mbencun@gmail.com")) (:maintainers ("Marko Bencun" . "mbencun@gmail.com")) (:maintainer "Marko Bencun" . "mbencun@gmail.com"))])
 (visual-regexp-steroids . [(1 1 0) ((visual-regexp (1 1))) "Extends visual-regexp to support other regexp engines" tar ((:url . "https://github.com/benma/visual-regexp-steroids.el") (:commit . "a6420b25ec0fbba43bf57875827092e1196d8a9e") (:revdesc . "v1.1.0-0-ga6420b25ec0f") (:keywords "external" "foreign" "regexp" "replace" "python" "visual" "feedback") (:authors ("Marko Bencun" . "mbencun@gmail.com")) (:maintainers ("Marko Bencun" . "mbencun@gmail.com")) (:maintainer "Marko Bencun" . "mbencun@gmail.com"))])
 (visual-replace . [(1 1) ((emacs (26 1))) "A prompt for replace-string and query-replace" tar ((:url . "https://github.com/szermatt/visual-replace") (:commit . "d9a89fa02c6170a1b417b3e71e85d481213f318b") (:revdesc . "d9a89fa02c61") (:keywords "convenience" "matching" "replace") (:authors ("Stephane Zermatten" . "szermatt@gmail.com")) (:maintainers ("Stephane Zermatten" . "szermatt@gmail.com")) (:maintainer "Stephane Zermatten" . "szermatt@gmail.com"))])
 (vlf . [(1 7 1) nil "View Large Files" tar ((:url . "https://github.com/m00natic/vlfi") (:commit . "a01e9ed416cd81ccddebebbf05d4ca80060b07dc") (:revdesc . "a01e9ed416cd") (:keywords "large files" "utilities") (:maintainers ("Andrey Kotlarski" . "m00naticus@gmail.com")) (:maintainer "Andrey Kotlarski" . "m00naticus@gmail.com"))])
 (vline . [(1 11) nil "Show vertical line (column highlighting) mode" tar ((:url . "https://github.com/buzztaiki/vline") (:commit . "bc29e08c8e04845fb0e09155fe8f5212862f0a92") (:revdesc . "bc29e08c8e04") (:keywords "faces" "editing" "emulating") (:authors ("Taiki SUGAWARA" . "buzz.taiki@gmail.com")) (:maintainers ("Taiki SUGAWARA" . "buzz.taiki@gmail.com")) (:maintainer "Taiki SUGAWARA" . "buzz.taiki@gmail.com"))])
 (voca-builder . [(0 2 0) ((popup (0 5 2))) "[No description available]" tar ((:url . "https://github.com/yitang/voca-builder") (:commit . "224402532da28e45edd398fda61ecbddb97d22d3") (:revdesc . "224402532da2") (:keywords "english" "vocabulary") (:authors ("Yi Tang" . "yi.tang.uk@me.com")) (:maintainers ("Yi Tang" . "yi.tang.uk@me.com")) (:maintainer "Yi Tang" . "yi.tang.uk@me.com"))])
 (volatile-highlights . [(1 16) nil "Minor mode for visual feedback on some operations" tar ((:url . "https://github.com/k-talo/volatile-highlights.el") (:commit . "afccb5ce83848c3daa937098da83af45b50b71b4") (:revdesc . "afccb5ce8384") (:keywords "emulations" "convenience" "wp") (:authors ("K-talo Miyazaki" . "KeitarodotMiyazakiatgmaildotcom")) (:maintainers ("K-talo Miyazaki" . "KeitarodotMiyazakiatgmaildotcom")) (:maintainer "K-talo Miyazaki" . "KeitarodotMiyazakiatgmaildotcom"))])
 (vs-dark-theme . [(1 0) ((emacs (24 1))) "Visual Studio IDE dark theme" tar ((:url . "https://github.com/emacs-vs/vs-dark-theme") (:commit . "a888af1719d3954892fb659985d4b74637fb6532") (:revdesc . "a888af1719d3"))])
 (vs-light-theme . [(1 0) ((emacs (24 1))) "Visual Studio IDE light theme" tar ((:url . "https://github.com/emacs-vs/vs-light-theme") (:commit . "2ebed00305ff4ae67e8ed18c1fce8de2f169b753") (:revdesc . "2ebed00305ff"))])
 (vscode-dark-plus-theme . [(2 0 0) nil "Default Visual Studio Code Dark+ theme" tar ((:url . "https://github.com/ianyepan/vscode-dark-plus-emacs-theme") (:commit . "41772165b3b1195a7e86747ea5b316b16be4c7ef") (:revdesc . "41772165b3b1"))])
 (vue-html-mode . [(0 2) nil "Major mode for editing Vue.js templates" tar ((:url . "https://github.com/AdamNiederer/vue-html-mode") (:commit . "361a9fa117f044c3072dc5a7344ff7be31725849") (:revdesc . "0.2-0-g361a9fa117f0") (:keywords "languages" "vue" "template") (:authors ("Adam Niederer" . "adam.niederer@gmail.com")) (:maintainers ("Adam Niederer" . "adam.niederer@gmail.com")) (:maintainer "Adam Niederer" . "adam.niederer@gmail.com"))])
 (vue-mode . [(0 4) ((mmm-mode (0 5 5)) (vue-html-mode (0 2)) (ssass-mode (0 2)) (edit-indirect (0 1 4))) "Major mode for vue component based on mmm-mode" tar ((:url . "https://github.com/AdamNiederer/vue-mode") (:commit . "48ff04657613f39848d0e66e9dd367aa2dc19e89") (:revdesc . "0.4-0-g48ff04657613") (:keywords "languages") (:authors ("codefalling" . "code.falling@gmail.com")) (:maintainers ("codefalling" . "code.falling@gmail.com")) (:maintainer "codefalling" . "code.falling@gmail.com"))])
 (vuiet . [(1 0) ((emacs (26 1)) (lastfm (1 1)) (versuri (1 0)) (s (1 12 0)) (bind-key (2 4)) (mpv (0 1 0))) "The music player and explorer for Emacs" tar ((:url . "https://github.com/mihaiolteanu/vuiet") (:commit . "4e15dacd6445d490fefc47070f8e5b98db5e0dc6") (:revdesc . "4e15dacd6445") (:keywords "multimedia") (:authors ("Mihai Olteanu" . "mihai_olteanu@fastmail.fm")) (:maintainers ("Mihai Olteanu" . "mihai_olteanu@fastmail.fm")) (:maintainer "Mihai Olteanu" . "mihai_olteanu@fastmail.fm"))])
 (vulpea . [(0 3 0) ((emacs (27 2)) (org (9 4 4)) (org-roam (2 0 0)) (s (1 12)) (dash (2 19))) "A collection of org-roam note-taking functions" tar ((:url . "https://github.com/d12frosted/vulpea") (:commit . "505ac5e627105b0d05504e10b7796e5499256eaf") (:revdesc . "505ac5e62710") (:authors ("Boris Buliga" . "boris@d12frosted.io")) (:maintainers ("Boris Buliga" . "boris@d12frosted.io")) (:maintainer "Boris Buliga" . "boris@d12frosted.io"))])
 (w32-browser . [(235) nil "Run Windows application associated with a file" tar ((:url . "https://github.com/emacsorphanage/w32-browser") (:commit . "a8126b60bf18193e8e4ec6f699b5694b6f71a062") (:revdesc . "a8126b60bf18") (:keywords "mouse" "dired" "w32" "explorer") (:maintainers ("Drew Adams (concat \"drew.adams\" \"oracle\" \".com\"" . "\"@\" ")) (:maintainer "Drew Adams (concat \"drew.adams\" \"oracle\" \".com\"" . "\"@\" "))])
 (w32-ime . [(0 0 1) ((emacs (24 4))) "Windows IME UI/UX controler" tar ((:url . "https://github.com/trueroad/w32-ime.el") (:commit . "1dbdc056f507172857195b5e14b7550c565018bc") (:revdesc . "v0.0.1-0-g1dbdc056f507") (:authors ("Masamichi Hosoda" . "trueroad@trueroad.jp") ("Naoya Yamashita" . "conao3@gmail.com")) (:maintainers ("Masamichi Hosoda" . "trueroad@trueroad.jp")) (:maintainer "Masamichi Hosoda" . "trueroad@trueroad.jp"))])
 (wacspace . [(0 4 2) ((dash (1 2 0)) (cl-lib (0 2))) "The WACky WorkSPACE manager for emACS" tar ((:url . "https://github.com/shosti/wacspace.el") (:commit . "b951995c204ff23699d2bda515a96221147a725d") (:revdesc . "b951995c204f") (:keywords "workspace") (:authors ("Emanuel Evans" . "emanuel.evans@gmail.com")) (:maintainers ("Emanuel Evans" . "emanuel.evans@gmail.com")) (:maintainer "Emanuel Evans" . "emanuel.evans@gmail.com"))])
 (walkclj . [(0 2 0) ((emacs (25)) (parseclj (0 1 0)) (treepy (0 1 0))) "Manipulate Clojure parse trees" tar ((:url . "https://github.com/corgi-emacs/walkclj") (:commit . "4b4e9fcef2361bdf88ab3c7f905a76672cfd43e4") (:revdesc . "4b4e9fcef236") (:keywords "languages"))])
 (walkman . [(0 2) ((transient (0 1 0)) (org (8 3 5)) (json-mode (1 6 0)) (emacs (26 3))) "Write HTTP requests in Org mode" tar ((:url . "https://github.com/abrochard/walkman") (:commit . "00b4fd5cae7fe27085995dbb178828fb765c7edc") (:revdesc . "00b4fd5cae7f") (:keywords "walkman" "http" "curl" "org" "comm"))])
 (wandbox . [(0 6 4) ((emacs (24)) (request (0 3 0)) (s (1 10 0))) "Wandbox client" tar ((:url . "https://github.com/kosh04/emacs-wandbox") (:commit . "e002fe41f2cd9b4ce2b1dc80b83301176e9117f1") (:revdesc . "e002fe41f2cd") (:keywords "tools") (:authors ("KOBAYASHI Shigeru" . "shigeru.kb@gmail.com")) (:maintainers ("KOBAYASHI Shigeru" . "shigeru.kb@gmail.com")) (:maintainer "KOBAYASHI Shigeru" . "shigeru.kb@gmail.com"))])
 (wavedrom-mode . [(0 1 0) ((emacs (29 1))) "WaveDrom Integration" tar ((:url . "https://github.com/gmlarumbe/wavedrom-mode") (:commit . "b360aa39c87e033b65676d3ac542bc26fd5abd34") (:revdesc . "b360aa39c87e") (:keywords "fpga" "asic" "tools") (:authors ("Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com")) (:maintainers ("Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com")) (:maintainer "Gonzalo Larumbe" . "gonzalomlarumbe@gmail.com"))])
 (wc-goal-mode . [(2 1) nil "Running word count with goals (minor mode)" tar ((:url . "https://github.com/bnbeckwith/wc-goal-mode") (:commit . "a8aa227b1a692dd6399855add84b5e37f6c5d9cb") (:revdesc . "v2.1-0-ga8aa227b1a69"))])
 (wc-mode . [(1 4 1) ((emacs (24 1))) "Running word count with goals (minor mode)" tar ((:url . "https://github.com/bnbeckwith/wc-mode") (:commit . "63be1433b8a63cdc3239cc751e36360429c42b51") (:revdesc . "63be1433b8a6"))])
 (weak-ref . [(2 0) nil "Weak references for Emacs Lisp" tar ((:url . "https://github.com/skeeto/elisp-weak-ref") (:commit . "434e7d7cc84d0813bd06606a04c08fc96cd9eec8") (:revdesc . "2.0-0-g434e7d7cc84d") (:authors ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainers ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainer "Christopher Wellons" . "wellons@nullprogram.com"))])
 (weather-metno . [(0 1 0) ((emacs (24)) (cl-lib (0 3))) "Weather data from met.no in Emacs" tar ((:url . "https://github.com/ruediger/weather-metno-el") (:commit . "b59680c1ab908b32513954034ba894dfb8564dd8") (:revdesc . "b59680c1ab90") (:keywords "comm") (:authors ("Rüdiger Sonderfeld" . "ruediger@c-plusplus.de")) (:maintainers ("Rüdiger Sonderfeld" . "ruediger@c-plusplus.de")) (:maintainer "Rüdiger Sonderfeld" . "ruediger@c-plusplus.de"))])
 (web-beautify . [(0 3 2) nil "Format HTML, CSS and JavaScript/JSON by js-beautify" tar ((:url . "https://github.com/yasuyk/web-beautify") (:commit . "aa95055224c24f38736716809fec487cd817c38d") (:revdesc . "aa95055224c2") (:authors ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainers ("Yasuyuki Oka" . "yasuyk@gmail.com")) (:maintainer "Yasuyuki Oka" . "yasuyk@gmail.com"))])
 (web-completion-data . [(0 2) nil "Shared completion data for ac-html and company-web" tar ((:url . "https://github.com/osv/web-completion-data") (:commit . "c272c94e8a71b779c29653a532f619acad433a4f") (:revdesc . "c272c94e8a71") (:keywords "html" "auto-complete" "company") (:authors ("Olexandr Sydorchuk" . "olexandr.syd@gmail.com")) (:maintainers ("Olexandr Sydorchuk" . "olexandr.syd@gmail.com")) (:maintainer "Olexandr Sydorchuk" . "olexandr.syd@gmail.com"))])
 (web-mode . [(17 3 20) ((emacs (23 1))) "Major mode for editing web templates" tar ((:url . "https://github.com/fxbois/web-mode") (:commit . "0c83581d1e93d1d802c730a1d5e90cd1c740e1b2") (:revdesc . "0c83581d1e93") (:keywords "languages") (:maintainers ("François-Xavier Bois" . "fxbois@gmail.com")) (:maintainer "François-Xavier Bois" . "fxbois@gmail.com"))])
 (web-mode-edit-element . [(2 3) ((emacs (24 4)) (web-mode (14))) "Helper-functions for attribute- and element-handling" tar ((:url . "https://github.com/jtkDvlp/web-mode-edit-element") (:commit . "ad5d7e4dc2420bdd00ce65d9adffbd38a5904afa") (:revdesc . "v2.3-0-gad5d7e4dc242") (:keywords "languages" "convenience") (:authors ("Julian T. Knabenschuh" . "jtkdevelopments@gmail.com")) (:maintainers ("Julian T. Knabenschuh" . "jtkdevelopments@gmail.com")) (:maintainer "Julian T. Knabenschuh" . "jtkdevelopments@gmail.com"))])
 (web-search . [(0 1 2) ((emacs (24 3))) "Open a web search" tar ((:url . "https://github.com/xuchunyang/web-search.el") (:commit . "a22cbdc663a1895d5a5b69de91e1e3b9eb64b92f") (:revdesc . "a22cbdc663a1") (:keywords "web" "search") (:authors ("Xu Chunyang" . "mail@xuchunyang.me")) (:maintainers ("Xu Chunyang" . "mail@xuchunyang.me")) (:maintainer "Xu Chunyang" . "mail@xuchunyang.me"))])
 (weblio . [(0 4 0) ((request (0 3 3)) (emacs (25 1))) "Look up Japanese words on Weblio.jp" tar ((:url . "https://github.com/pzel/weblio") (:commit . "952d085fd814b139562ef947c7dcabc31f92341d") (:revdesc . "952d085fd814") (:keywords "langauges" "i18n"))])
 (weblorg . [(0 1 2) ((templatel (0 1 6)) (emacs (26 1))) "Static Site Generator for org-mode" tar ((:url . "https://github.com/emacs-love/weblorg") (:commit . "0f8ec7e9065b2962c93209ee30b46f91843e2815") (:revdesc . "0f8ec7e9065b") (:authors ("Lincoln Clarete" . "lincoln@clarete.li")) (:maintainers ("Lincoln Clarete" . "lincoln@clarete.li")) (:maintainer "Lincoln Clarete" . "lincoln@clarete.li"))])
 (webpaste . [(3 2 2) ((emacs (24 4)) (request (0 2 0)) (cl-lib (0 5))) "Paste to pastebin-like services" tar ((:url . "https://github.com/etu/webpaste.el") (:commit . "78272662e6992b8614e79a571ff2395fa9630357") (:revdesc . "3.2.2-0-g78272662e699") (:keywords "convenience" "comm" "paste") (:authors ("Elis etu Hirwing" . "elis@hirwing.se")) (:maintainers ("Elis etu Hirwing" . "elis@hirwing.se")) (:maintainer "Elis etu Hirwing" . "elis@hirwing.se"))])
 (websearch . [(2 1 1) ((emacs (24 4))) "Query search engines" tar ((:url . "https://gitlab.com/xgqt/emacs-websearch") (:commit . "5120cec3c36ddcdaceb5235c0b52eecbc3b37fcb") (:revdesc . "2.1.1-0-g5120cec3c36d") (:keywords "convenience" "hypermedia") (:authors ("Maciej Barć" . "xgqt@riseup.net")) (:maintainers ("Maciej Barć" . "xgqt@riseup.net")) (:maintainer "Maciej Barć" . "xgqt@riseup.net"))])
 (websocket . [(1 15) ((cl-lib (0 5))) "Emacs WebSocket client and server" tar ((:url . "https://github.com/ahyatt/emacs-websocket") (:commit . "40c208eaab99999d7c1e4bea883648da24c03be3") (:revdesc . "40c208eaab99") (:keywords "communication" "websocket" "server") (:authors ("Andrew Hyatt" . "ahyatt@gmail.com")) (:maintainers ("Andrew Hyatt" . "ahyatt@gmail.com")) (:maintainer "Andrew Hyatt" . "ahyatt@gmail.com"))])
 (weechat . [(0 5 0) ((s (1 3 1)) (cl-lib (0 2)) (emacs (24)) (tracking (1 2))) "Chat via WeeChat's relay protocol in Emacs" tar ((:url . "https://github.com/the-kenny/weechat.el") (:commit . "8cbda2738149b070c09288df550781b6c604beb2") (:revdesc . "8cbda2738149") (:keywords "irc" "chat" "network" "weechat") (:authors ("Moritz Ulrich" . "moritz@tarn-vedra.de") ("Rüdiger Sonderfeld" . "ruediger@c-plusplus.de") ("Aristid Breitkreuz" . "aristidb@gmail.com")) (:maintainers ("Moritz Ulrich" . "moritz@tarn-vedra.de") ("Rüdiger Sonderfeld" . "ruediger@c-plusplus.de") ("Aristid Breitkreuz" . "aristidb@gmail.com")) (:maintainer "Moritz Ulrich" . "moritz@tarn-vedra.de"))])
 (weibo . [(1 0) nil "[No description available]" tar ((:url . "https://github.com/austin-----/weibo.emacs") (:commit . "a8af467e5660a35342029c2796de99cd551454b2") (:revdesc . "v1.0-0-ga8af467e5660"))])
 (wfnames . [(1 2) ((emacs (24 4))) "Edit filenames" tar ((:url . "https://github.com/thierryvolpiatto/wfnames") (:commit . "2f014c48fde0979da4ce3c0dbda81389c61a26bc") (:revdesc . "v1.2-0-g2f014c48fde0") (:authors ("Thierry Volpiatto" . "thievol@posteo.net")) (:maintainers ("Thierry Volpiatto" . "thievol@posteo.net")) (:maintainer "Thierry Volpiatto" . "thievol@posteo.net"))])
 (wgrep . [(3 0 0) ((emacs (25 1))) "Writable grep buffer" tar ((:url . "https://github.com/mhayashi1120/Emacs-wgrep") (:commit . "b4d69280d8a6a5ded1597e02afbaa811a160383b") (:revdesc . "b4d69280d8a6") (:keywords "grep" "edit" "extensions") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (wgrep-ack . [(1 0 0) ((emacs (25 1)) (wgrep (3 0 0))) "Writable ack-and-a-half buffer" tar ((:url . "https://github.com/mhayashi1120/Emacs-wgrep") (:commit . "ff3cf631b6842432daa59bf604049ca916cce73b") (:revdesc . "ff3cf631b684") (:keywords "grep" "edit" "extensions") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (wgrep-ag . [(3 0 0) ((emacs (25 1)) (wgrep (3 0 0))) "Writable ag buffer" tar ((:url . "https://github.com/mhayashi1120/Emacs-wgrep") (:commit . "ff3cf631b6842432daa59bf604049ca916cce73b") (:revdesc . "ff3cf631b684") (:keywords "grep" "edit" "extensions") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (wgrep-deadgrep . [(2 3 0) ((wgrep (2 3 0))) "Writable deadgrep buffer and apply the changes to files" tar ((:url . "https://github.com/mhayashi1120/Emacs-wgrep") (:commit . "3584e9ba43287d712e0c17df5328211c174e9c60") (:revdesc . "3584e9ba4328") (:keywords "grep" "edit" "extensions") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com") ("Iku Iwasa" . "iku.iwasa@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com") ("Iku Iwasa" . "iku.iwasa@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (wgrep-helm . [(3 0 0) ((emacs (25 1)) (wgrep (3 0 0))) "Writable helm-grep-mode buffer" tar ((:url . "https://github.com/mhayashi1120/Emacs-wgrep") (:commit . "ff3cf631b6842432daa59bf604049ca916cce73b") (:revdesc . "ff3cf631b684") (:keywords "grep" "edit" "extensions") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (wgrep-pt . [(1 0 0) ((emacs (25 1)) (wgrep (3 0 0))) "Writable pt buffer" tar ((:url . "https://github.com/mhayashi1120/Emacs-wgrep") (:commit . "ff3cf631b6842432daa59bf604049ca916cce73b") (:revdesc . "ff3cf631b684") (:keywords "grep" "edit" "extensions") (:authors ("Masahiro Hayashi" . "mhayashi1120@gmail.com") ("Bailey Ling" . "bling@live.ca")) (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com") ("Bailey Ling" . "bling@live.ca")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (which-key . [(3 6 0) ((emacs (24 4))) "Display available keybindings in popup" tar ((:url . "https://github.com/justbur/emacs-which-key") (:commit . "1217db8c6356659e67b35dedd9f5f260c06f6e99") (:revdesc . "1217db8c6356") (:authors ("Justin Burkett" . "justin@burkett.cc")) (:maintainers ("Justin Burkett" . "justin@burkett.cc")) (:maintainer "Justin Burkett" . "justin@burkett.cc"))])
 (which-key-posframe . [(0 2 0) ((emacs (26 0)) (posframe (0 4 3)) (which-key (3 3 2))) "Using posframe to show which-key" tar ((:url . "https://github.com/emacsorphanage/which-key-posframe") (:commit . "75e73e187da78d823a5dc01c21e09e808e4fb938") (:revdesc . "v0.2.0-0-g75e73e187da7") (:keywords "convenience" "bindings" "tooltip") (:maintainers ("Yanghao Xie" . "yhaoxie@gmail.com")) (:maintainer "Yanghao Xie" . "yhaoxie@gmail.com"))])
 (whiley-mode . [(1 0 1) ((emacs (24 1))) "Major mode for Whiley language" tar ((:url . "https://github.com/Whiley/WhileyEmacsMode") (:commit . "e7cc4759d46be589d421a2235af6771bcde9ae33") (:revdesc . "v1.0.1-0-ge7cc4759d46b") (:keywords "languages") (:authors ("David J. Pearce" . "dave01001110@gmail.com")) (:maintainers ("David J. Pearce" . "dave01001110@gmail.com")) (:maintainer "David J. Pearce" . "dave01001110@gmail.com"))])
 (whitaker . [(0 3) ((dash (2 10 0))) "Comint interface for Whitaker's Words" tar ((:url . "https://github.com/Fuco1/whitaker") (:commit . "28172edce0f727f0f7f17d8ba71d5510d877bb45") (:revdesc . "28172edce0f7") (:keywords "processes") (:authors ("Matus Goljer" . "matus.goljer@gmail.com")) (:maintainers ("Matus Goljer" . "matus.goljer@gmail.com")) (:maintainer "Matus Goljer" . "matus.goljer@gmail.com"))])
 (whitespace-cleanup-mode . [(0 10) nil "Intelligently call whitespace-cleanup on save" tar ((:url . "https://github.com/purcell/whitespace-cleanup-mode") (:commit . "e1e250aa6f5b1a526778c7a501cdec98ba29c0a4") (:revdesc . "e1e250aa6f5b") (:keywords "convenience") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (whizzml-mode . [(0 35 1) ((emacs (24 4))) "Programming mode for editing WhizzML files" tar ((:url . "https://github.com/whizzml/whizzml-mode") (:commit . "65fa17f8c1dc50dcb90277b64019c2846a317293") (:revdesc . "65fa17f8c1dc") (:keywords "languages" "lisp") (:authors ("Jose Antonio Ortega Ruiz" . "jao@bigml.com")) (:maintainers ("Jose Antonio Ortega Ruiz" . "jao@bigml.com")) (:maintainer "Jose Antonio Ortega Ruiz" . "jao@bigml.com"))])
 (whois . [(0 4 1) ((emacs (24))) "Syntax highlighted domain name queries using system whois" tar ((:url . "https://github.com/lassik/emacs-whois") (:commit . "d4466b296721fa94b2ceab1c51bc9bfd8bbf4e0a") (:revdesc . "d4466b296721") (:keywords "network" "comm") (:authors ("Lassi Kortela" . "lassi@lassi.io")) (:maintainers ("Lassi Kortela" . "lassi@lassi.io")) (:maintainer "Lassi Kortela" . "lassi@lassi.io"))])
 (whole-line-or-region . [(2 0) ((emacs (24 1)) (cl-lib (0 6))) "Operate on current line if region undefined" tar ((:url . "https://github.com/purcell/whole-line-or-region") (:commit . "4189d03cfda752f04364e2abc0117080ed4112cd") (:revdesc . "4189d03cfda7") (:keywords "convenience" "wp") (:authors ("Joe Casadonte" . "emacs@northbound-train.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (widget-mvc . [(0 0 2) nil "MVC framework for the emacs widgets" tar ((:url . "https://github.com/kiwanami/emacs-widget-mvc") (:commit . "2576e6f0c35d8dedfa9c2cd6ea4fb4c14cb72b63") (:revdesc . "2576e6f0c35d") (:keywords "lisp" "widget") (:authors ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatkiwanami.net"))])
 (wiki-nav . [(1 0 2) ((button-lock (1 0 2)) (nav-flash (1 0 0))) "Simple file navigation using [[WikiStrings]]" tar ((:url . "https://github.com/rolandwalker/button-lock") (:commit . "cd0bf4a3c2f224d851e6ed8a54a6e80c129b225f") (:revdesc . "v1.0.2-0-gcd0bf4a3c2f2") (:keywords "mouse" "button" "hypermedia" "navigation") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (wildcharm-light-theme . [(0 7) ((emacs (24 1))) "Port of vim-wildcharm (light) colorscheme" tar ((:url . "https://github.com/habamax/wildcharm-theme") (:commit . "ab0ed9cc5b4a285cddef52b193c26a979e1dcd08") (:revdesc . "ab0ed9cc5b4a") (:authors ("Maxim Kim" . "habamax@gmail.com")) (:maintainers ("Maxim Kim" . "habamax@gmail.com")) (:maintainer "Maxim Kim" . "habamax@gmail.com"))])
 (wildcharm-theme . [(0 7) ((emacs (24 1))) "Port of vim-wildcharm colorscheme" tar ((:url . "https://github.com/habamax/wildcharm-theme") (:commit . "ab0ed9cc5b4a285cddef52b193c26a979e1dcd08") (:revdesc . "ab0ed9cc5b4a") (:authors ("Maxim Kim" . "habamax@gmail.com")) (:maintainers ("Maxim Kim" . "habamax@gmail.com")) (:maintainer "Maxim Kim" . "habamax@gmail.com"))])
 (win-switch . [(1 1 4) nil "Fast, dynamic bindings for window-switching/resizing" tar ((:url . "https://github.com/genovese/win-switch") (:commit . "954eb5e4c5737f0c06368c42a7f1c3dd374d782f") (:revdesc . "v1.1.4-0-g954eb5e4c573") (:keywords "window" "switch" "key bindings" "ergonomic" "efficient") (:authors ("Christopher Genovese" . "genovese@cmu.edu")) (:maintainers ("Christopher R. Genovese" . "genovese@cmu.edu")) (:maintainer "Christopher R. Genovese" . "genovese@cmu.edu"))])
 (window-end-visible . [(0 1 0) nil "Find the last visible point in a window" tar ((:url . "https://github.com/rolandwalker/window-end-visible") (:commit . "bdc3d182e5f76e75f1b8cc49357194b36e48b67c") (:revdesc . "v0.1.0-0-gbdc3d182e5f7") (:keywords "extensions") (:authors ("Roland Walker" . "walker@pobox.com")) (:maintainers ("Roland Walker" . "walker@pobox.com")) (:maintainer "Roland Walker" . "walker@pobox.com"))])
 (window-layout . [(1 4) nil "Window layout manager" tar ((:url . "https://github.com/kiwanami/emacs-window-layout") (:commit . "cd2e4f967b610c2bbef53182829e47250d027056") (:revdesc . "cd2e4f967b61") (:keywords "window" "layout") (:authors ("SAKURAI Masashi" . "m.sakuraiatmarkkiwanami.net")) (:maintainers ("SAKURAI Masashi" . "m.sakuraiatmarkkiwanami.net")) (:maintainer "SAKURAI Masashi" . "m.sakuraiatmarkkiwanami.net"))])
 (window-numbering . [(1 1 2) nil "[No description available]" tar ((:url . "https://github.com/nschum/window-numbering.el") (:commit . "653afce73854d629c2b9d63dad73126032d6a24c") (:revdesc . "1.1.2-0-g653afce73854") (:keywords "faces" "matching") (:authors ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainers ("Nikolaj Schumacher" . "bugs*nschumde")) (:maintainer "Nikolaj Schumacher" . "bugs*nschumde"))])
 (window-purpose . [(1 8 1) ((emacs (24 4)) (let-alist (1 0 3)) (imenu-list (0 1))) "Purpose-based window management for Emacs" tar ((:url . "https://github.com/bmag/emacs-purpose") (:commit . "bb462f12f836414425edac32ebd069b4fd5b98d4") (:revdesc . "bb462f12f836") (:keywords "frames"))])
 (windsize . [(0 1) nil "Simple, intuitive window resizing" tar ((:url . "https://github.com/grammati/windsize") (:commit . "014b0836f9ffe45fa7e0ccc84576fbef74815a59") (:revdesc . "014b0836f9ff") (:keywords "window" "resizing" "convenience") (:authors ("Chris Perkins" . "chrisperkins99@gmail.com")) (:maintainers ("Chris Perkins" . "chrisperkins99@gmail.com")) (:maintainer "Chris Perkins" . "chrisperkins99@gmail.com"))])
 (windswap . [(0 1) ((emacs (24 3))) "Like windmove, but swaps buffers while moving point" tar ((:url . "https://github.com/purcell/windswap") (:commit . "33d59d371843d5a72a4327e318382ff27ee15674") (:revdesc . "33d59d371843") (:keywords "frames" "convenience") (:authors ("Steve Purcell" . "steve@sanityinc.com")) (:maintainers ("Steve Purcell" . "steve@sanityinc.com")) (:maintainer "Steve Purcell" . "steve@sanityinc.com"))])
 (winring . [(5 2) nil "Window configuration rings" tar ((:url . "https://gitlab.com/warsaw/winring") (:commit . "5a5e496364ecdb3245e396fab6c9e2fe25dd943c") (:revdesc . "5a5e496364ec") (:keywords "frames" "tools"))])
 (winum . [(2 1 0) ((cl-lib (0 5)) (dash (2 13 0))) "Navigate windows and frames using numbers" tar ((:url . "https://github.com/deb0ch/emacs-winum") (:commit . "efcb14fd306afbc738666e6b2e5a8a1bb5904392") (:revdesc . "efcb14fd306a") (:keywords "convenience" "frames" "windows" "multi-screen") (:authors ("Thomas de Beauchêne" . "thomas.de.beauchene@gmail.com")) (:maintainers ("Thomas de Beauchêne" . "thomas.de.beauchene@gmail.com")) (:maintainer "Thomas de Beauchêne" . "thomas.de.beauchene@gmail.com"))])
 (wisp-mode . [(1 0 12) ((emacs (24 4))) "Tools for wisp: the Whitespace-to-Lisp preprocessor" tar ((:url . "https://hg.sr.ht/~arnebab/wisp") (:commit . "7c6239a779656cd55225ad24e15cc29bc896f834") (:revdesc . "7c6239a779656cd55225ad24e15cc29bc896f834") (:keywords "languages" "lisp" "scheme") (:authors ("Arne Babenhauserheide" . "arne_bab@web.de")) (:maintainers ("Arne Babenhauserheide" . "arne_bab@web.de")) (:maintainer "Arne Babenhauserheide" . "arne_bab@web.de"))])
 (wispjs-mode . [(0 2 0) ((clojure-mode (0))) "Major mode for Wisp code" tar ((:url . "https://github.com/krisajenkins/wispjs-mode") (:commit . "be094c3c3223c07b26b5d8bb8fa7aa6866369b3f") (:revdesc . "be094c3c3223") (:authors ("Kris Jenkins" . "krisajenkins@gmail.com")) (:maintainers ("Kris Jenkins" . "krisajenkins@gmail.com")) (:maintainer "Kris Jenkins" . "krisajenkins@gmail.com"))])
 (with-editor . [(3 4 3) ((emacs (26 1)) (compat (30 0 0 0))) "Use the Emacsclient as $EDITOR" tar ((:url . "https://github.com/magit/with-editor") (:commit . "ca902ae02972bdd6919a902be2593d8cb6bd991b") (:revdesc . "v3.4.3-0-gca902ae02972") (:keywords "processes" "terminals") (:authors ("Jonas Bernoulli" . "emacs.with-editor@jonas.bernoulli.dev")) (:maintainers ("Jonas Bernoulli" . "emacs.with-editor@jonas.bernoulli.dev")) (:maintainer "Jonas Bernoulli" . "emacs.with-editor@jonas.bernoulli.dev"))])
 (with-shell-interpreter . [(0 2 5) ((emacs (25 1)) (cl-lib (0 6 1))) "Helper for shell command APIs" tar ((:url . "https://github.com/p3r7/with-shell-interpreter") (:commit . "bef977d8058d26d82ab11a7227c88b3011edd127") (:revdesc . "bef977d8058d") (:keywords "processes" "terminals"))])
 (with-simulated-input . [(3 0) ((emacs (24 4))) "A macro to simulate user input non-interactively" tar ((:url . "https://github.com/DarwinAwardWinner/with-simulated-input") (:commit . "ee4d2b75fd99bac3de40675b0a0e03529718f59f") (:revdesc . "ee4d2b75fd99") (:keywords "lisp" "tools" "extensions") (:authors ("Ryan C. Thompson" . "rct@thompsonclan.org") ("Nikita Bloshchanevich" . "nikblos@outlook.com")) (:maintainers ("Ryan C Thompson" . "rct@thompsonclan.org")) (:maintainer "Ryan C Thompson" . "rct@thompsonclan.org"))])
 (with-venv . [(0 0 2) ((cl-lib (0 5)) (emacs (24 4))) "Execute with Python virtual environment activated" tar ((:url . "https://github.com/10sr/with-venv-el") (:commit . "c34979519278a6e17312e8c47a19eb7bc94e5002") (:revdesc . "c34979519278") (:keywords "processes" "python" "venv") (:authors ("10sr" . "8.slashes[at]gmail[dot]com")) (:maintainers ("10sr" . "8.slashes[at]gmail[dot]com")) (:maintainer "10sr" . "8.slashes[at]gmail[dot]com"))])
 (wiz . [(0 0 5) ((emacs (29 1)) (exec-path-from-shell (2 1))) "Macros to simplify startup initialization" tar ((:url . "https://github.com/zonuexe/emacs-wiz") (:commit . "2c88a65205b11f97d20c3de907ccb19aa5830175") (:revdesc . "2c88a65205b1") (:keywords "convenience" "lisp") (:authors ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainers ("USAMI Kenta" . "tadsan@zonu.me")) (:maintainer "USAMI Kenta" . "tadsan@zonu.me"))])
 (wn-mode . [(1 4) ((emacs (24))) "Numeric window switching shortcuts" tar ((:url . "https://github.com/luismbo/wn-mode") (:commit . "6e7029b0d5773a79914a289937be068784931cad") (:revdesc . "6e7029b0d577") (:keywords "buffers" "windows" "switching-windows") (:maintainers ("Luís Oliveira" . "luismbo@gmail.com")) (:maintainer "Luís Oliveira" . "luismbo@gmail.com"))])
 (wolfram . [(1 2) nil "Wolfram Alpha Integration" tar ((:url . "https://github.com/hsjunnesson/wolfram.el") (:commit . "a172712d5045834f5434cca2843a7c3506805db8") (:revdesc . "a172712d5045") (:keywords "math") (:authors ("Hans Sjunnesson" . "hans.sjunnesson@gmail.com")) (:maintainers ("Hans Sjunnesson" . "hans.sjunnesson@gmail.com")) (:maintainer "Hans Sjunnesson" . "hans.sjunnesson@gmail.com"))])
 (wonderland . [(0 1 1) ((dash (2 0 0)) (dash-functional (1 0 0)) (multi (2 0 0)) (emacs (24))) "Declarative configuration for Emacsen" tar ((:url . "https://github.com/kurisuwhyte/emacs-wonderland") (:commit . "28cf6b37000c395ece9519db53147fb826a42bc4") (:revdesc . "28cf6b37000c") (:keywords "configuration" "profile" "wonderland") (:authors ("Christina Whyte" . "kurisu.whyte@gmail.com")) (:maintainers ("Christina Whyte" . "kurisu.whyte@gmail.com")) (:maintainer "Christina Whyte" . "kurisu.whyte@gmail.com"))])
 (wordcount-section . [(1 6 0) ((emacs (28 1)) (compat (29 1)) (universal-sidecar (1 5 1))) "Universal Sidecar Section to show Word Counts" tar ((:url . "https://git.sr.ht/~swflint/emacs-universal-sidecar") (:commit . "4c78015d10caba9c700e6e6b582004ae1c1d5344") (:revdesc . "v1.6.0-0-g4c78015d10ca") (:keywords "text" "convenience") (:authors ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainers ("Samuel W. Flint" . "me@samuelwflint.com")) (:maintainer "Samuel W. Flint" . "me@samuelwflint.com"))])
 (wordgen . [(0 1 4) ((emacs (24)) (cl-lib (0 5))) "Random word generator" tar ((:url . "https://github.com/Fanael/wordgen.el") (:commit . "aacad928ae99a953e034a831dfd0ebdf7d52ac1d") (:revdesc . "aacad928ae99") (:authors ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainers ("Fanael Linithien" . "fanael4@gmail.com")) (:maintainer "Fanael Linithien" . "fanael4@gmail.com"))])
 (wordsmith-mode . [(1 0 0) nil "Syntax analysis and NLP text-processing in Emacs (OSX-only)" tar ((:url . "https://github.com/istib/wordsmith-mode") (:commit . "41b10f2fe3589da9812395cb417c3dcf906f0969") (:revdesc . "1.0.0-0-g41b10f2fe358") (:authors ("istib" . "istib@thebati.net")) (:maintainers ("istib" . "istib@thebati.net")) (:maintainer "istib" . "istib@thebati.net"))])
 (worf . [(0 1 0) ((swiper (0 7 0)) (ace-link (0 1 0)) (hydra (0 13 0))) "A warrior does not press so many keys! (in org-mode)" tar ((:url . "https://github.com/abo-abo/worf") (:commit . "f36755447b588b739b2bf6ab0fb5eb5f4d8db3df") (:revdesc . "f36755447b58") (:keywords "lisp") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com"))])
 (workgroups2 . [(1 2 1) ((emacs (25 1)) (dash (2 8 0))) "New workspaces for Emacs" tar ((:url . "https://github.com/pashinin/workgroups2") (:commit . "737306531f6834227eee2f63b197a23401003d23") (:revdesc . "737306531f68") (:keywords "session" "management" "window-configuration" "persistence") (:authors ("Sergey Pashinin" . "sergeyatpashinindotcom")) (:maintainers ("Sergey Pashinin" . "sergeyatpashinindotcom")) (:maintainer "Sergey Pashinin" . "sergeyatpashinindotcom"))])
 (wrap-region . [(0 7 3) ((dash (1 0 3))) "Wrap text with punctation or tag" tar ((:url . "https://github.com/rejeep/wrap-region.el") (:commit . "5a910ad23ebb0649e644bf62ad042587341da5da") (:revdesc . "5a910ad23ebb") (:keywords "speed" "convenience") (:authors ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainers ("Johan Andersson" . "johan.rejeep@gmail.com")) (:maintainer "Johan Andersson" . "johan.rejeep@gmail.com"))])
 (writegood-mode . [(2 2 0) nil "Polish up poor writing on the fly" tar ((:url . "https://github.com/bnbeckwith/writegood-mode") (:commit . "d54eadeedb8bf3aa0e0a584c0a7373c69644f4b8") (:revdesc . "d54eadeedb8b") (:keywords "writing" "weasel-words" "grammar"))])
 (writeroom-mode . [(3 11) ((emacs (25 1)) (visual-fill-column (1 9))) "Minor mode for distraction-free writing" tar ((:url . "https://github.com/joostkremers/writeroom-mode") (:commit . "b508843b04e1adc4e2cc9a04ca3ad53d8b1bbbb4") (:revdesc . "b508843b04e1") (:keywords "text") (:authors ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainers ("Joost Kremers" . "joostkremers@fastmail.fm")) (:maintainer "Joost Kremers" . "joostkremers@fastmail.fm"))])
 (ws-butler . [(0 7) nil "Unobtrusively remove trailing whitespace" tar ((:url . "https://github.com/lewang/ws-butler") (:commit . "d3927f6131f215e9cd3e1f747be5a91e5be8ca9a") (:revdesc . "v0.7-0-gd3927f6131f2"))])
 (wsd-mode . [(0 5 0) nil "Emacs major-mode for www.websequencediagrams.com" tar ((:url . "https://github.com/josteink/wsd-mode") (:commit . "b5e8ea0daeaa52f2ea6349e09902bd3216e96258") (:revdesc . "b5e8ea0daeaa") (:keywords "wsd" "diagrams" "design" "process" "modelling" "uml") (:authors ("Jostein Kjønigsen" . "jostein@gmail.com")) (:maintainers ("Jostein Kjønigsen" . "jostein@gmail.com")) (:maintainer "Jostein Kjønigsen" . "jostein@gmail.com"))])
 (wttrin . [(0 2 4) ((emacs (24 4)) (xterm-color (1 0))) "Emacs Frontend for Service wttr.in" tar ((:url . "https://github.com/cjennings/emacs-wttrin") (:commit . "9b98fedc44b1ddcebaa48df2975493b37797c2fb") (:revdesc . "9b98fedc44b1") (:keywords "weather" "wttrin" "games") (:maintainers ("Craig Jennings" . "c@cjennings.net")) (:maintainer "Craig Jennings" . "c@cjennings.net"))])
 (wucuo . [(0 3 2) ((emacs (25 1))) "Fastest solution to spell check camel case code or plain text" tar ((:url . "https://github.com/redguardtoo/wucuo") (:commit . "351997d1cfa02375ce8efd3414802a3507a73b76") (:revdesc . "351997d1cfa0") (:keywords "convenience") (:authors ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainers ("Chen Bin" . "chenbinDOTshATgmailDOTcom")) (:maintainer "Chen Bin" . "chenbinDOTshATgmailDOTcom"))])
 (x86-lookup . [(1 2 1) ((emacs (24 3)) (cl-lib (0 3))) "Jump to x86 instruction documentation" tar ((:url . "https://github.com/skeeto/x86-lookup") (:commit . "1573d61cc4457737b94624598a891c837fb52c16") (:revdesc . "1.2.1-0-g1573d61cc445") (:authors ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainers ("Christopher Wellons" . "wellons@nullprogram.com")) (:maintainer "Christopher Wellons" . "wellons@nullprogram.com"))])
 (xcode-project . [(1 0 0) ((emacs (25))) "A package for reading Xcode project files" tar ((:url . "https://github.com/nhojb/xcode-project") (:commit . "f5548a26a1afc0b0d873556c25f6d8b6b9c2aa8c") (:revdesc . "f5548a26a1af") (:keywords "languages" "tools") (:authors ("John Buckley" . "john@olivetoast.com")) (:maintainers ("John Buckley" . "john@olivetoast.com")) (:maintainer "John Buckley" . "john@olivetoast.com"))])
 (xcscope . [(1 5) nil "Cscope interface for (X)Emacs" tar ((:url . "https://github.com/dkogan/xcscope.el") (:commit . "f3e2c84bd92f5a78182cc8d81f5358979a6c241c") (:revdesc . "f3e2c84bd92f") (:keywords "languages" "c") (:authors ("Darryl Okahata" . "darrylo@sonic.net") ("Dima Kogan" . "dima@secretsauce.net")) (:maintainers ("Dima Kogan" . "dima@secretsauce.net")) (:maintainer "Dima Kogan" . "dima@secretsauce.net"))])
 (xkb-mode . [(0 2 0) ((emacs (25 1))) "Major mode for editing X Keyboard Extension (XKB) files" tar ((:url . "https://github.com/captainflasmr/xkb-mode") (:commit . "b1de5233dc12749a97ad6a63d86b921bf1e33d3b") (:revdesc . "b1de5233dc12") (:keywords "convenience") (:authors ("James Dyer" . "captainflasmr@gmail.com")) (:maintainers ("James Dyer" . "captainflasmr@gmail.com")) (:maintainer "James Dyer" . "captainflasmr@gmail.com"))])
 (xkcd . [(1 1) ((json (1 3))) "View xkcd from Emacs" tar ((:url . "https://github.com/vibhavp/emacs-xkcd") (:commit . "2c538d41a9728939cc5e8292faa78ed50997877d") (:revdesc . "2c538d41a972") (:keywords "xkcd" "webcomic") (:authors ("Vibhav Pant" . "vibhavp@gmail.com")) (:maintainers ("Vibhav Pant" . "vibhavp@gmail.com")) (:maintainer "Vibhav Pant" . "vibhavp@gmail.com"))])
 (xmind-org . [(0 1 1) ((emacs (27 1)) (org-ml (5 3)) (dash (2 12))) "Import XMind mindmaps into Org" tar ((:url . "https://github.com/akirak/xmind-org-el") (:commit . "01055f0b9a53d40c9ce6a7b1c259a3a73b4ff413") (:revdesc . "01055f0b9a53") (:keywords "outlines" "wp" "files") (:authors ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainers ("Akira Komamura" . "akira.komamura@gmail.com")) (:maintainer "Akira Komamura" . "akira.komamura@gmail.com"))])
 (xml-format . [(1 0 0) ((emacs (25)) (reformatter (0 4))) "XML reformatter using xmllint" tar ((:url . "https://github.com/wbolster/emacs-xml-format") (:commit . "2861c4e33e18b077112efa072316b031bca4236c") (:revdesc . "1.0.0-0-g2861c4e33e18") (:keywords "languages") (:authors ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainers ("wouter bolsterlee" . "wouter@bolsterl.ee")) (:maintainer "wouter bolsterlee" . "wouter@bolsterl.ee"))])
 (xml-rpc . [(1 6 15) nil "An elisp implementation of clientside XML-RPC" tar ((:url . "https://github.com/xml-rpc-el/xml-rpc-el") (:commit . "8020ccd176986d8e49e0bb5dd9f4e756cf12eafc") (:revdesc . "8020ccd17698") (:keywords "xml" "rpc" "network") (:maintainers ("Mark A. Hershberger" . "mah@everybody.org")) (:maintainer "Mark A. Hershberger" . "mah@everybody.org"))])
 (xmlgen . [(0 5) nil "A DSL for generating XML" tar ((:url . "https://github.com/philjackson/xmlgen") (:commit . "dba66681f0c5e621a9e70e8afb34903c9ffe93c4") (:revdesc . "dba66681f0c5") (:authors ("Philip Jackson" . "phil@shellarchive.co.uk")) (:maintainers ("Philip Jackson" . "phil@shellarchive.co.uk")) (:maintainer "Philip Jackson" . "phil@shellarchive.co.uk"))])
 (xmlunicode . [(1 26) nil "Unicode support for XML" tar ((:url . "https://github.com/ndw/xmlunicode") (:commit . "5f1c3e48b90588eb56cec67d3efc869a4e95b03a") (:revdesc . "1.26-0-g5f1c3e48b905") (:keywords "utf-8" "unicode" "xml" "characters") (:authors ("Norman Walsh" . "ndw@nwalsh.com")) (:maintainers ("Norman Walsh" . "ndw@nwalsh.com")) (:maintainer "Norman Walsh" . "ndw@nwalsh.com"))])
 (xquery-tool . [(0 2 0) nil "A simple interface to saxonb's xquery" tar ((:url . "https://github.com/paddymcall/xquery-tool.el") (:commit . "bd48e0f56b58e36309f7966dcf67db69d65100a4") (:revdesc . "bd48e0f56b58") (:keywords "xml" "xquery" "emacs") (:authors ("Patrick McAllister" . "pma@rdorte.org")) (:maintainers ("Patrick McAllister" . "pma@rdorte.org")) (:maintainer "Patrick McAllister" . "pma@rdorte.org"))])
 (xref-js2 . [(1 6) ((emacs (25)) (js2-mode (20150909))) "Jump to references/definitions using ag & js2-mode's AST" tar ((:url . "https://github.com/js-emacs/xref-js2") (:commit . "d48253bf1999815329a294d09f0b1b744a6272ae") (:revdesc . "d48253bf1999") (:keywords "javascript" "convenience" "tools") (:authors ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainers ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainer "Nicolas Petton" . "nicolas@petton.fr"))])
 (xresources-theme . [(1 0 0) nil "Use your .Xresources as your emacs theme" tar ((:url . "https://github.com/martenlienen/xresources-theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:revdesc . "5239acb51aa2") (:keywords "xresources" "theme") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainers ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com"))])
 (xterm-color . [(2 0) ((emacs (24 4))) "ANSI, XTERM 256 and Truecolor support" tar ((:url . "https://github.com/atomontage/xterm-color") (:commit . "137dfecedfdf6aff69b0f9b1c299aa0ae868fca0") (:revdesc . "137dfecedfdf") (:keywords "faces") (:authors ("xristos" . "xristos@sdf.org")) (:maintainers ("xristos" . "xristos@sdf.org")) (:maintainer "xristos" . "xristos@sdf.org"))])
 (xtest . [(1 1 0) ((cl-lib (0 5))) "Simple Testing with Emacs & ERT" tar ((:url . "https://github.com/promethial/xtest") (:commit . "b227414d714e7baddef79bd306a43024b9a34d45") (:revdesc . "b227414d714e") (:keywords "testing" "ert"))])
 (xwidgets-reuse . [(0 3) ((emacs (26 1))) "Reuse xwidgets sessions to reduce resource consumption" tar ((:url . "https://github.com/lordpretzel/xwidgets-reuse") (:commit . "5653c8a3ac13615d171599b3ada87512bd1a6fb9") (:revdesc . "5653c8a3ac13") (:keywords "hypermedia") (:authors ("Boris Glavic" . "lordpretzel@gmail.com")) (:maintainers ("Boris Glavic" . "lordpretzel@gmail.com")) (:maintainer "Boris Glavic" . "lordpretzel@gmail.com"))])
 (yabaki-theme . [(2 0 1) ((emacs (27 1))) "Yabaki, the cast shadow" tar ((:url . "https://codeberg.org/seahorse/yabaki-theme") (:commit . "209f2be321509dac00631fff1b0f7ea01ba382de") (:revdesc . "209f2be32150") (:authors ("David Goudou" . "david.goudou@gmail.com")) (:maintainers ("David Goudou" . "david.goudou@gmail.com")) (:maintainer "David Goudou" . "david.goudou@gmail.com"))])
 (yafolding . [(0 4 1) nil "Folding code blocks based on indentation" tar ((:url . "https://github.com/emacsorphanage/yafolding") (:commit . "4c1888ae45f9241516519ae0ae3a899f2efa05ba") (:revdesc . "v0.4.1-0-g4c1888ae45f9") (:keywords "folding") (:authors ("Zeno Zeng" . "zenoofzeng@gmail.com")) (:maintainers ("Zeno Zeng" . "zenoofzeng@gmail.com")) (:maintainer "Zeno Zeng" . "zenoofzeng@gmail.com"))])
 (yagist . [(0 8 12) ((cl-lib (0 3))) "Yet Another Emacs integration for gist.github.com" tar ((:url . "https://github.com/mhayashi1120/yagist.el") (:commit . "97723a34750ccab5439eb9f6a2f67e4e0e234167") (:revdesc . "97723a34750c") (:keywords "tools") (:maintainers ("Masahiro Hayashi" . "mhayashi1120@gmail.com")) (:maintainer "Masahiro Hayashi" . "mhayashi1120@gmail.com"))])
 (yaml . [(0 5 5) ((emacs (25 1))) "YAML parser for Elisp" tar ((:url . "https://github.com/zkry/yaml.el") (:commit . "70c4fcead97e9bd6594e418c922ae769818f4245") (:revdesc . "70c4fcead97e") (:keywords "tools") (:authors ("Zachary Romero" . "zkry@posteo.org")) (:maintainers ("Zachary Romero" . "zkry@posteo.org")) (:maintainer "Zachary Romero" . "zkry@posteo.org"))])
 (yaml-imenu . [(1 0 3) ((emacs (24 4)) (yaml-mode (0))) "Enhancement of the imenu support in yaml-mode" tar ((:url . "https://github.com/knu/yaml-imenu.el") (:commit . "01741205fb33d2ed511502d1cd65a711e07a3117") (:revdesc . "01741205fb33") (:keywords "outlining" "convenience" "imenu") (:authors ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainers ("Akinori MUSHA" . "knu@iDaemons.org")) (:maintainer "Akinori MUSHA" . "knu@iDaemons.org"))])
 (yaml-mode . [(0 0 16) ((emacs (24 1))) "Major mode for editing YAML files" tar ((:url . "https://github.com/yoshiki/yaml-mode") (:commit . "6bb9e7f6e1c9224f743a8a68bc210d10eb8cb788") (:revdesc . "6bb9e7f6e1c9") (:keywords "data" "yaml") (:authors ("Yoshiki Kurihara" . "clouder@gmail.com") ("Marshall T. Vandegrift" . "llasram@gmail.com")) (:maintainers ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainer "Vasilij Schneidermann" . "mail@vasilij.de"))])
 (yaml-pro . [(1 2 0) ((emacs (26 1)) (yaml (0 5 1))) "Parser-aided YAML editing features" tar ((:url . "https://github.com/zkry/yaml-pro") (:commit . "5f06949e92dc19dcc48dc31662b2aa958fe33726") (:revdesc . "5f06949e92dc") (:keywords "tools"))])
 (yang-mode . [(0 9 9) nil "Major mode for editing YANG files" tar ((:url . "https://github.com/mbj4668/yang-mode") (:commit . "4b4ab4d4a79d37d6c31c6ea7cccbc425e0b1eded") (:revdesc . "4b4ab4d4a79d") (:authors ("Martin Bjorklund" . "mbj4668@gmail.com")) (:maintainers ("Martin Bjorklund" . "mbj4668@gmail.com")) (:maintainer "Martin Bjorklund" . "mbj4668@gmail.com"))])
 (yankpad . [(1 6) nil "Paste snippets from an org-mode file" tar ((:url . "https://github.com/Kungsgeten/yankpad") (:commit . "d2ea6920a2444f1ce6f53947640446b8e16f84b7") (:revdesc . "d2ea6920a244") (:keywords "abbrev" "convenience"))])
 (yapfify . [(0 0 6) nil "(automatically) format python buffers using YAPF" tar ((:url . "https://github.com/JorisE/yapfify") (:commit . "9e63a9135bd8dbfbee55819837a3aa0d119c5e6f") (:revdesc . "9e63a9135bd8") (:authors ("Joris Engbers" . "info@jorisengbers.nl")) (:maintainers ("Joris Engbers" . "info@jorisengbers.nl")) (:maintainer "Joris Engbers" . "info@jorisengbers.nl"))])
 (yard-mode . [(0 1) nil "Minor mode for Ruby YARD comments" tar ((:url . "https://github.com/pd/yard-mode.el") (:commit . "78792f6a6fbff4f1bc955f494fdb11378e7f8095") (:revdesc . "78792f6a6fbf"))])
 (yarn-mode . [(1 0) ((emacs (24 3))) "Major mode for yarn.lock files" tar ((:url . "https://github.com/anachronic/yarn-mode") (:commit . "99891000efe31214b065fa9446cd5e68c5c42ed8") (:revdesc . "v1.0-0-g99891000efe3") (:keywords "convenience") (:authors ("Nicolás Salas V." . "nikosalas@gmail.com")) (:maintainers ("Nicolás Salas V." . "nikosalas@gmail.com")) (:maintainer "Nicolás Salas V." . "nikosalas@gmail.com"))])
 (yascroll . [(0 2 0) ((emacs (26 1))) "Yet Another Scroll Bar Mode" tar ((:url . "https://github.com/emacsorphanage/yascroll") (:commit . "cd66d81c5d4ba39da3c385d12d22f7103ecd67c5") (:revdesc . "cd66d81c5d4b") (:keywords "convenience") (:authors ("Tomohiro Matsuyama" . "m2ym.pub@gmail.com")) (:maintainers ("Jen-Chieh" . "jcs090218@gmail.com")) (:maintainer "Jen-Chieh" . "jcs090218@gmail.com"))])
 (yasnippet . [(0 14 0) ((cl-lib (0 5))) "Yet another snippet extension for Emacs" tar ((:url . "https://github.com/joaotavora/yasnippet") (:commit . "3bf9a3b1af37174a004798b7195826af0123fa6a") (:revdesc . "0.14.0-0-g3bf9a3b1af37") (:keywords "convenience" "emulation") (:maintainers ("Noam Postavsky" . "npostavs@gmail.com")) (:maintainer "Noam Postavsky" . "npostavs@gmail.com"))])
 (yasnippet-snippets . [(1 1) ((yasnippet (0 8 0))) "Collection of yasnippet snippets" tar ((:url . "https://github.com/AndreaCrotti/yasnippet-snippets") (:commit . "6fafad13bb4689600285d9e38c61958dd63c356d") (:revdesc . "6fafad13bb46") (:keywords "snippets") (:authors ("Andrea Crotti" . "andrea.crotti.0@gmail.com")) (:maintainers ("Andrea Crotti" . "andrea.crotti.0@gmail.com")) (:maintainer "Andrea Crotti" . "andrea.crotti.0@gmail.com"))])
 (yatemplate . [(5 0) ((yasnippet (0 8 1)) (emacs (24 3))) "File templates with yasnippet" tar ((:url . "https://github.com/mineo/yatemplate") (:commit . "275745ce1482edc08efb0b7807bc86d832bcc734") (:revdesc . "5.0-0-g275745ce1482") (:keywords "files" "convenience") (:authors ("Wieland Hoffmann" . "themineo+yatemplate@gmail.com")) (:maintainers ("Wieland Hoffmann" . "themineo+yatemplate@gmail.com")) (:maintainer "Wieland Hoffmann" . "themineo+yatemplate@gmail.com"))])
 (yatex . [(1 83) nil "Yet Another tex-mode for emacs //野鳥//" tar ((:url . "https://www.yatex.org/hgrepos/yatex") (:commit . "157aa7974191bbb4707d26b05ce830282ad70ef5") (:revdesc . "157aa7974191bbb4707d26b05ce830282ad70ef5"))])
 (yaxception . [(1 0 0) ((emacs (28)) (dash (2 19 1))) "Provide framework about exception like Java for Elisp" tar ((:url . "https://github.com/aki2o/yaxception") (:commit . "5941de88b19752c14e0dce0d2bf562b1288055a0") (:revdesc . "5941de88b197") (:keywords "exception" "error" "signal") (:authors ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainers ("Hiroaki Otsu" . "ootsuhiroaki@gmail.com")) (:maintainer "Hiroaki Otsu" . "ootsuhiroaki@gmail.com"))])
 (ycmd . [(1 2) ((emacs (24 4)) (dash (2 13 0)) (s (1 11 0)) (deferred (0 5 1)) (cl-lib (0 6 1)) (let-alist (1 0 5)) (request (0 3 0)) (request-deferred (0 3 0)) (pkg-info (0 6))) "Emacs bindings to the ycmd completion server" tar ((:url . "https://github.com/abingham/emacs-ycmd") (:commit . "d042a673b4d717c3ca9d641f120bfe16c994c740") (:revdesc . "d042a673b4d7"))])
 (ydk-mode . [(1 0 0) nil "Language support for Yu-Gi-Oh! deck files" tar ((:url . "https://github.com/jacksonrayhamilton/ydk-mode") (:commit . "f3f125b29408e0b0a34fec27dcb7c02c5dbfd04e") (:revdesc . "v1.0.0-0-gf3f125b29408") (:keywords "faces" "games" "languages" "ydk" "yugioh" "yu-gi-oh") (:authors ("Jackson Ray Hamilton" . "jackson@jacksonrayhamilton.com")) (:maintainers ("Jackson Ray Hamilton" . "jackson@jacksonrayhamilton.com")) (:maintainer "Jackson Ray Hamilton" . "jackson@jacksonrayhamilton.com"))])
 (yeetube . [(2 1 7) ((emacs (27 2)) (compat (29 1 4 2))) "Scrape YouTube - Play with mpv & Download with yt-dlp |" tar ((:url . "https://git.thanosapollo.org/yeetube") (:commit . "5c0a3efd2fb5cc25a6a90741ad198e31fdb15640") (:revdesc . "5c0a3efd2fb5") (:keywords "extensions" "youtube" "videos") (:authors ("Thanos Apollo" . "public@thanosapollo.org")) (:maintainers ("Thanos Apollo" . "public@thanosapollo.org")) (:maintainer "Thanos Apollo" . "public@thanosapollo.org"))])
 (yequake . [(0 1) ((emacs (25 2)) (dash (2 14 1))) "Drop-down frames, like Yakuake" tar ((:url . "https://github.com/alphapapa/yequake") (:commit . "d18166e597414350117d0b82a29e509fc53c636d") (:revdesc . "0.1-0-gd18166e59741") (:keywords "convenience" "window-system" "frames") (:authors ("Adam Porter" . "adam@alphapapa.net")) (:maintainers ("Adam Porter" . "adam@alphapapa.net")) (:maintainer "Adam Porter" . "adam@alphapapa.net"))])
 (yesql-ghosts . [(0 1 0) ((s (1 9 0)) (dash (2 10 0)) (cider (0 8 0))) "Display ghostly yesql defqueries inline" tar ((:url . "https://github.com/magnars/yesql-ghosts") (:commit . "bd834e97f263f9f981758c1462bc6297a83ca852") (:revdesc . "0.1.0-0-gbd834e97f263") (:authors ("Magnar Sveen" . "magnars@gmail.com")) (:maintainers ("Magnar Sveen" . "magnars@gmail.com")) (:maintainer "Magnar Sveen" . "magnars@gmail.com"))])
 (yoshi-theme . [(7 0 0) nil "Theme named after my cat" tar ((:url . "https://github.com/ryuslash/yoshi-theme") (:commit . "11c37ef4ef68b55c7ce8ad058abb0b678411b299") (:revdesc . "7.0.0-0-g11c37ef4ef68") (:keywords "faces") (:authors ("Tom Willemse" . "tom@ryuslash.org")) (:maintainers ("Tom Willemse" . "tom@ryuslash.org")) (:maintainer "Tom Willemse" . "tom@ryuslash.org"))])
 (youdao-dictionary . [(0 5 3) ((popup (0 5 0)) (pos-tip (0 4 6)) (chinese-word-at-point (0 2)) (names (0 5)) (emacs (24))) "Youdao Dictionary interface for Emacs" tar ((:url . "https://github.com/xuchunyang/youdao-dictionary.el") (:commit . "eae8efb1efd3fc82cfe87a357fe8f764116d94ef") (:revdesc . "eae8efb1efd3") (:keywords "convenience" "chinese" "dictionary") (:authors ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainers ("Chunyang Xu" . "xuchunyang56@gmail.com")) (:maintainer "Chunyang Xu" . "xuchunyang56@gmail.com"))])
 (ytdl . [(1 3 6) ((emacs (26 1)) (async (1 9 4)) (transient (0 2 0)) (dash (2 17 0))) "Emacs Interface for youtube-dl" tar ((:url . "https://gitlab.com/tuedachu/ytdl") (:commit . "23da64f5c38b8cb83dbbadf704171b86cc0fa937") (:revdesc . "23da64f5c38b") (:keywords "comm" "multimedia") (:authors ("Arnaud Hoffmann" . "tuedachu@gmail.com")) (:maintainers ("Arnaud Hoffmann" . "tuedachu@gmail.com")) (:maintainer "Arnaud Hoffmann" . "tuedachu@gmail.com"))])
 (zen-mode . [(0 8 20200609) ((emacs (24 3))) "A major mode for the Zen programming language" tar ((:url . "https://github.com/zenlang/zen-mode") (:commit . "c1b1806358f3cce6c04b30699987d82dc7d42559") (:revdesc . "0.8.20200609-0-gc1b1806358f3") (:keywords "zen" "languages") (:authors ("Andrea Orru" . "andreaorru1991@gmail.com") ("Andrew Kelley" . "superjoe30@gmail.com") ("kristopher tate" . "kt@connectfree.co.jp") ("Yoshitaka Takemoto" . "yt.3b8@connectfree.co.jp")) (:maintainers ("Andrea Orru" . "andreaorru1991@gmail.com") ("Andrew Kelley" . "superjoe30@gmail.com") ("kristopher tate" . "kt@connectfree.co.jp") ("Yoshitaka Takemoto" . "yt.3b8@connectfree.co.jp")) (:maintainer "Andrea Orru" . "andreaorru1991@gmail.com"))])
 (zenburn-theme . [(2 8 0) nil "A low contrast color theme for Emacs" tar ((:url . "https://github.com/bbatsov/zenburn-emacs") (:commit . "8a1f9d28f503615e5d9b3eac59a2f3c14e75fc20") (:revdesc . "8a1f9d28f503") (:authors ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainers ("Bozhidar Batsov" . "bozhidar@batsov.com")) (:maintainer "Bozhidar Batsov" . "bozhidar@batsov.com"))])
 (zenscript-mode . [(1 2 1) ((emacs (25 1))) "Major mode for ZenScript" tar ((:url . "https://github.com/eutro/zenscript-mode") (:commit . "c33b4525502459fe60dd76b383e19919d450aeb8") (:revdesc . "c33b45255024"))])
 (zephir-mode . [(0 6 0) ((cl-lib (0 5)) (pkg-info (0 4)) (emacs (25 1))) "Major mode for editing Zephir code" tar ((:url . "https://github.com/zephir-lang/zephir-mode") (:commit . "9adc5cf07a9117d25eaab41867ddde914c6d2f5a") (:revdesc . "0.6.0-0-g9adc5cf07a91") (:keywords "languages") (:authors ("Serghei Iakovlev" . "egrep@protonmail.ch")) (:maintainers ("Serghei Iakovlev" . "egrep@protonmail.ch")) (:maintainer "Serghei Iakovlev" . "egrep@protonmail.ch"))])
 (zero-input . [(2 10 3) ((emacs (24 4)) (s (1 2 0))) "Zero Chinese input method framework" tar ((:url . "https://gitlab.emacsos.com/sylecn/zero-el") (:commit . "e87bbf24c1475a784ad9d1ba8447e038824d796b") (:revdesc . "e87bbf24c147"))])
 (zero-input-panel-posframe . [(1 0 1) ((emacs (24 4)) (zero-input (2 9 0)) (posframe (1 4 3))) "Posframe based zero-input panel implementation" tar ((:url . "https://gitlab.emacsos.com/sylecn/zero-input-panel-posframe.git") (:commit . "01d5a8f94b7936152ae719e25ffc19574f7b0cc5") (:revdesc . "01d5a8f94b79"))])
 (zerodark-theme . [(4 7) ((all-the-icons (2 0 0))) "A dark, medium contrast theme for Emacs" tar ((:url . "https://github.com/NicolasPetton/zerodark-theme") (:commit . "342055346446bb8306ac2d3d2ac1f4236c84a404") (:revdesc . "342055346446") (:keywords "themes") (:authors ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainers ("Nicolas Petton" . "nicolas@petton.fr")) (:maintainer "Nicolas Petton" . "nicolas@petton.fr"))])
 (zetteldeft . [(0 3) ((emacs (25 1)) (deft (0 8))) "Turn deft into a zettelkasten system" tar ((:url . "https://github.com/EFLS/zetteldeft") (:commit . "271ea573b0a4f265d16108db2ec7c928f3e9aa31") (:revdesc . "271ea573b0a4") (:keywords "deft" "zettelkasten" "zetteldeft" "wp" "files") (:authors ("EFLS" . "EliasStorms")) (:maintainers ("EFLS" . "EliasStorms")) (:maintainer "EFLS" . "EliasStorms"))])
 (zetteldesk . [(1 2 0) ((emacs (27 1)) (org-roam (2 0))) "A revision and outlining tool for org-roam" tar ((:url . "https://github.com/Vidianos-Giannitsis/zetteldesk.el") (:commit . "73f691989c094ec196bb614318ae51b60209a8de") (:revdesc . "73f691989c09") (:authors ("Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com")) (:maintainers ("Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com")) (:maintainer "Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com"))])
 (zetteldesk-info . [(1 2 0) ((zetteldesk (0 4)) (emacs (27 1))) "A zetteldesk extension for interacting with the info program" tar ((:url . "https://github.com/Vidianos-Giannitsis/zetteldesk.el") (:commit . "73f691989c094ec196bb614318ae51b60209a8de") (:revdesc . "73f691989c09") (:authors ("Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com")) (:maintainers ("Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com")) (:maintainer "Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com"))])
 (zetteldesk-kb . [(1 2 0) ((zetteldesk (1 0 1)) (hydra (0 15)) (major-mode-hydra (0 2)) (emacs (24 1))) "Keybindings for zetteldesk.el" tar ((:url . "https://github.com/Vidianos-Giannitsis/zetteldesk.el") (:commit . "73f691989c094ec196bb614318ae51b60209a8de") (:revdesc . "73f691989c09") (:authors ("Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com")) (:maintainers ("Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com")) (:maintainer "Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com"))])
 (zetteldesk-ref . [(1 2 0) ((zetteldesk (1 0)) (bibtex-completion (1 0)) (emacs (26 1))) "A zetteldesk extension for interfacing with literature nodes" tar ((:url . "https://github.com/Vidianos-Giannitsis/zetteldesk.el") (:commit . "73f691989c094ec196bb614318ae51b60209a8de") (:revdesc . "73f691989c09") (:authors ("Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com")) (:maintainers ("Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com")) (:maintainer "Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com"))])
 (zetteldesk-remark . [(1 2 0) ((zetteldesk (1 0)) (org-remark (1 0)) (emacs (27 2))) "Org-Remark integration for zetteldesk.el" tar ((:url . "https://github.com/Vidianos-Giannitsis/zetteldesk.el") (:commit . "73f691989c094ec196bb614318ae51b60209a8de") (:revdesc . "73f691989c09") (:authors ("Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com")) (:maintainers ("Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com")) (:maintainer "Vidianos Giannitsis" . "vidianosgiannitsis@gmail.com"))])
 (zettelkasten . [(0 5 0) ((emacs (25 1)) (s (1 10 0))) "Helper functions to organise notes in a Zettelkasten style" tar ((:url . "https://github.com/ymherklotz/emacs-zettelkasten") (:commit . "f470db20ad0a7e591daa73c903524ac267ae7236") (:revdesc . "f470db20ad0a") (:keywords "files" "hypermedia" "notes") (:authors ("Yann Herklotz" . "yann@ymhg.org")) (:maintainers ("Yann Herklotz" . "yann@ymhg.org")) (:maintainer "Yann Herklotz" . "yann@ymhg.org"))])
 (zetz-mode . [(0 1 0) ((emacs (25 1)) (dash (2 17 0)) (hydra (0 15 0))) "A major mode for the ZetZ programming language" tar ((:url . "https://github.com/damon-kwok/zetz-mode") (:commit . "03a566b213e52da540818559f1b7bbb8400abb88") (:revdesc . "03a566b213e5") (:keywords "languages" "programming"))])
 (zk . [(0 7) ((emacs (25 1))) "Functions for working with Zettelkasten-style linked notes" tar ((:url . "https://github.com/localauthor/zk") (:commit . "599be69ae1c1283935f98f9aca4ccda47063d82c") (:revdesc . "599be69ae1c1") (:authors ("Grant Rosson" . "https://github.com/localauthor")) (:maintainers ("Grant Rosson" . "https://github.com/localauthor")) (:maintainer "Grant Rosson" . "https://github.com/localauthor"))])
 (zk-desktop . [(0 7) ((emacs (27 1)) (zk (0 6)) (zk-index (0 9))) "Desktop environment for zk" tar ((:url . "https://github.com/localauthor/zk") (:commit . "599be69ae1c1283935f98f9aca4ccda47063d82c") (:revdesc . "599be69ae1c1") (:authors ("Grant Rosson" . "https://github.com/localauthor")) (:maintainers ("Grant Rosson" . "https://github.com/localauthor")) (:maintainer "Grant Rosson" . "https://github.com/localauthor"))])
 (zk-index . [(0 7) ((emacs (27 1)) (zk (0 7))) "Index for zk" tar ((:url . "https://github.com/localauthor/zk") (:commit . "599be69ae1c1283935f98f9aca4ccda47063d82c") (:revdesc . "599be69ae1c1") (:authors ("Grant Rosson" . "https://github.com/localauthor")) (:maintainers ("Grant Rosson" . "https://github.com/localauthor")) (:maintainer "Grant Rosson" . "https://github.com/localauthor"))])
 (zmq . [(1 0 2) ((cl-lib (0 5)) (emacs (26))) "ZMQ bindings in Emacs-Lisp" tar ((:url . "https://github.com/nnicandro/emacs-zmq") (:commit . "fe856c43286674aa6770d95a81d915363f5df399") (:revdesc . "v1.0.2-0-gfe856c432866") (:keywords "comm") (:authors ("Nathaniel Nicandro" . "nathanielnicandro@gmail.com")) (:maintainers ("Nathaniel Nicandro" . "nathanielnicandro@gmail.com")) (:maintainer "Nathaniel Nicandro" . "nathanielnicandro@gmail.com"))])
 (znc . [(0 4) ((cl-lib (0 2))) "ZNC + ERC" tar ((:url . "https://github.com/sshirokov/ZNC.el") (:commit . "2605f78e37a8a759067dc14fa25a82824ba1bacc") (:revdesc . "2605f78e37a8"))])
 (zombie-trellys-mode . [(0 2 1) ((emacs (24)) (cl-lib (0 5)) (haskell-mode (1 5))) "A minor mode for interaction with Zombie Trellys" tar ((:url . "https://github.com/david-christiansen/zombie-trellys-mode") (:commit . "9e99d444a387dd1634cab62ef802683f5bf5d907") (:revdesc . "9e99d444a387") (:keywords "languages") (:authors ("David Raymond Christiansen" . "david@davidchristiansen.dk")) (:maintainers ("David Raymond Christiansen" . "david@davidchristiansen.dk")) (:maintainer "David Raymond Christiansen" . "david@davidchristiansen.dk"))])
 (zone-tmux-clock . [(0 0 1) ((emacs (24 3))) "Zone out with a tmux style clock" tar ((:url . "https://depp.brause.cc/zone-tmux-clock.git") (:commit . "f8158aad57730e1611a3994cf921037770753d72") (:revdesc . "f8158aad5773") (:keywords "games") (:authors ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainers ("Vasilij Schneidermann" . "mail@vasilij.de")) (:maintainer "Vasilij Schneidermann" . "mail@vasilij.de"))])
 (zoom . [(0 3 0) ((emacs (24 4))) "Fixed and automatic balanced window layout" tar ((:url . "https://github.com/cyrus-and/zoom") (:commit . "f5f635e1fc5a8f606b7386286546bb6439e7124c") (:revdesc . "f5f635e1fc5a") (:keywords "frames") (:authors ("Andrea Cardaci" . "cyrus.and@gmail.com")) (:maintainers ("Andrea Cardaci" . "cyrus.and@gmail.com")) (:maintainer "Andrea Cardaci" . "cyrus.and@gmail.com"))])
 (zoom-window . [(0 6) ((emacs (24 3))) "Zoom window like tmux" tar ((:url . "https://github.com/emacsorphanage/zoom-window") (:commit . "ab14a365f3e496b07f5efc20992f9094ec166f06") (:revdesc . "ab14a365f3e4") (:authors ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainers ("Syohei YOSHIDA" . "syohex@gmail.com")) (:maintainer "Syohei YOSHIDA" . "syohex@gmail.com"))])
 (zop-to-char . [(1 1) ((cl-lib (0 5))) "A replacement of zap-to-char" tar ((:url . "https://github.com/thierryvolpiatto/zop-to-char") (:commit . "816ea90337db0545a2f0a5079f4d7b3a2822af7d") (:revdesc . "v1.1-0-g816ea90337db") (:authors ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainers ("Thierry Volpiatto" . "thierry.volpiatto@gmail.com")) (:maintainer "Thierry Volpiatto" . "thierry.volpiatto@gmail.com"))])
 (zotelo . [(1 3) nil "Manage Zotero collections from emacs" tar ((:url . "https://github.com/vspinu/zotelo") (:commit . "56eaaa76f80bd15710e68af4a1e585394af987d3") (:revdesc . "56eaaa76f80b") (:keywords "zotero" "emacs" "reftex" "bibtex" "mozrepl" "bibliography manager"))])
 (zotero . [(0 2 7) ((emacs (27 1)) (ht (2 2)) (oauth (1 11)) (s (1 12 0))) "Library for the Zotero API" tar ((:url . "https://gitlab.com/fvdbeek/emacs-zotero") (:commit . "eef5080e6a2ed0cae12c3d21580864f4b394cd5f") (:revdesc . "eef5080e6a2e") (:keywords "zotero" "hypermedia") (:authors ("Folkert van der Beek" . "folkertvanderbeek@gmail.com")) (:maintainers ("Folkert van der Beek" . "folkertvanderbeek@gmail.com")) (:maintainer "Folkert van der Beek" . "folkertvanderbeek@gmail.com"))])
 (zotxt . [(5 0 5) ((request (0 3 2)) (deferred (0 5 1))) "Tools to integrate emacs with Zotero via the zotxt plugin" tar ((:url . "https://gitlab.com/egh/zotxt-emacs") (:commit . "98323098c37a444de49cfef44f1506e9386e8c5f") (:revdesc . "v5.0.5-0-g98323098c37a") (:keywords "bib") (:authors ("Erik Hetzner" . "egh@e6h.org")) (:maintainers ("Erik Hetzner" . "egh@e6h.org")) (:maintainer "Erik Hetzner" . "egh@e6h.org"))])
 (zoutline . [(0 2 0) nil "Simple outline library" tar ((:url . "https://github.com/abo-abo/zoutline") (:commit . "63756846f8540b6faf89d885438186e4fe1c7d8a") (:revdesc . "63756846f854") (:keywords "outline") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainers ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com"))])
 (zoxide . [(1 2 3) ((emacs (25 1))) "Find file by zoxide" tar ((:url . "https://git.sr.ht/~vonfry/zoxide.el") (:commit . "b412457d9dc0802db6dcc304976c80aa3773597d") (:revdesc . "1.2.3-0-gb412457d9dc0") (:keywords "converience" "matching") (:authors ("Ruoyu Feng" . "emacs@vonfry.name")) (:maintainers ("Ruoyu Feng" . "emacs@vonfry.name")) (:maintainer "Ruoyu Feng" . "emacs@vonfry.name"))])
 (zygospore . [(0 0 3) nil "Reversible C-x 1 (delete-other-windows)" tar ((:url . "https://github.com/LouisKottmann/zygospore.el") (:commit . "1af5ee663f5a7aa08d96a77cacff834dcdf55ea8") (:revdesc . "0.0.3-0-g1af5ee663f5a") (:authors ("Louis Kottmann" . "louis.kottmann@gmail.com")) (:maintainers ("Louis Kottmann" . "louis.kottmann@gmail.com")) (:maintainer "Louis Kottmann" . "louis.kottmann@gmail.com"))])
 (zzz-to-char . [(1 0 0) ((emacs (24 4)) (avy (0 3 0))) "Fancy version of `zap-to-char' command" tar ((:url . "https://github.com/mrkkrp/zzz-to-char") (:commit . "3bc8e0b3b34f511be2ae663785e3cad758361ba2") (:revdesc . "3bc8e0b3b34f") (:keywords "convenience") (:authors ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainers ("Mark Karpov" . "markkarpov92@gmail.com")) (:maintainer "Mark Karpov" . "markkarpov92@gmail.com"))]))
